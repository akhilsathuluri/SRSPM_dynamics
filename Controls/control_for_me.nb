(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 11.2' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[   1921227,      38449]
NotebookOptionsPosition[   1889140,      37984]
NotebookOutlinePosition[   1889708,      38005]
CellTagsIndexPosition[   1889617,      38000]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{
Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{"Dynamics", " ", "group"}], "*)"}]], "Input",
 CellChangeTimes->{{3.762151042097691*^9, 
  3.762151048555006*^9}},ExpressionUUID->"92a9b902-e3e9-4881-b566-\
77b6d7b6d611"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"SetDirectory", "[", 
   RowBox[{"NotebookDirectory", "[", "]"}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"<<", "\"\<rotationtools.wl\>\""}], "\[IndentingNewLine]", 
 RowBox[{"<<", "\"\<kinematic_utils.m\>\""}], "\[IndentingNewLine]", 
 RowBox[{"<<", "\"\<qtools.wl\>\""}], "\[IndentingNewLine]", 
 RowBox[{"<<", "\"\<MaTeX`\>\""}], "\[IndentingNewLine]", 
 RowBox[{"<<", "\"\<mainfuncs1.m\>\""}]}], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{{3.7440339346881943`*^9, 3.7440339597479963`*^9}, {
   3.74403399319891*^9, 3.7440339933180037`*^9}, {3.7440340240381017`*^9, 
   3.7440340240971594`*^9}, {3.7475645375107303`*^9, 3.747564544369439*^9}, 
   3.7475645745930204`*^9, {3.7571260383822145`*^9, 3.757126057914612*^9}, 
   3.7624792462687125`*^9, {3.7648637294711175`*^9, 3.764863730132722*^9}, {
   3.765378647413498*^9, 3.765378648078148*^9}, {3.7660692149649787`*^9, 
   3.766069231921256*^9}},ExpressionUUID->"06a65a6e-ab8a-4932-8383-\
567663e564b7"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"T", "[", "x_", "]"}], ":=", 
   RowBox[{"Transpose", "[", "x", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"mf", "[", "x_", "]"}], ":=", 
   RowBox[{"MatrixForm", "[", "x", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"dim", "[", "x_", "]"}], ":=", 
   RowBox[{"Dimensions", "[", "x", "]"}]}], ";"}]}], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{{3.744454965231685*^9, 3.7444549752710743`*^9}, {
   3.7444567247666273`*^9, 3.7444567348777943`*^9}, {3.744683843240882*^9, 
   3.7446838510010023`*^9}, 
   3.7624792462687125`*^9},ExpressionUUID->"38b6a305-f7aa-4194-a938-\
f55d0d8ce82d"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
   "Assuming", " ", "all", " ", "the", " ", "legs", " ", "are", " ", "made", 
    " ", "of", " ", "steel"}], "*)"}], "\n", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{
    "Similar", " ", "set", " ", "of", " ", "data", " ", "for", " ", "6"}], 
    "-", 
    RowBox[{
    "RSS", " ", "has", " ", "shown", " ", "that", " ", "these", " ", "values",
      " ", "are", " ", "too", " ", "high"}]}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"leglparam", " ", "=", " ", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"ro", "\[Rule]", 
        RowBox[{"0.04", "/", "2"}]}], ",", " ", 
       RowBox[{"ri", "\[Rule]", 
        RowBox[{"0.035", "/", "2"}]}], ",", " ", 
       RowBox[{"\[Rho]", "\[Rule]", " ", "7858"}], ",", " ", 
       RowBox[{"lb", "\[Rule]", "0.5"}], ",", " ", 
       RowBox[{"la", "\[Rule]", "1.5"}]}], "}"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"legmparam", " ", "=", " ", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"ma", "\[Rule]", 
         RowBox[{"\[Rho]", "*", "\[Pi]", "*", 
          SuperscriptBox["ri", "2"], "*", "la"}]}], ",", " ", 
        RowBox[{"mb", "\[Rule]", " ", 
         RowBox[{"\[Rho]", "*", "\[Pi]", "*", 
          RowBox[{"(", 
           RowBox[{
            SuperscriptBox["ro", "2"], "-", 
            SuperscriptBox["ri", "2"]}], ")"}], "*", "lb"}]}], ",", " ", 
        RowBox[{"g", "\[Rule]", "9.8"}]}], "}"}], "/.", "leglparam"}]}], 
    ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"ibzi", " ", "=", "  ", 
     RowBox[{"mb", "*", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         SuperscriptBox["ri", "2"], "+", 
         SuperscriptBox["ro", "2"]}], ")"}], "/", "2"}]}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"ibxi", " ", "=", " ", 
     RowBox[{"mb", "*", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"3", "*", 
          RowBox[{"(", 
           RowBox[{
            SuperscriptBox["ro", "2"], "+", 
            SuperscriptBox["ri", "2"]}], ")"}]}], "+", 
         SuperscriptBox["lb", "2"]}], ")"}], "/", "12"}]}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"ibyi", " ", "=", " ", 
     RowBox[{"mb", "*", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"3", "*", 
          RowBox[{"(", 
           RowBox[{
            SuperscriptBox["ro", "2"], "+", 
            SuperscriptBox["ri", "2"]}], ")"}]}], "+", 
         SuperscriptBox["lb", "2"]}], ")"}], "/", "12"}]}]}], ";"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"iazi", " ", "=", "  ", 
     RowBox[{"ma", "*", 
      RowBox[{
       SuperscriptBox["ri", "2"], "/", "2"}]}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"iaxi", " ", "=", " ", 
     RowBox[{"ma", "*", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"3", "*", 
          SuperscriptBox["ri", "2"]}], "+", 
         SuperscriptBox["la", "2"]}], ")"}], "/", "12"}]}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"iayi", " ", "=", " ", 
     RowBox[{"ma", "*", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"3", "*", 
          SuperscriptBox["ri", "2"]}], "+", 
         SuperscriptBox["la", "2"]}], ")"}], "/", "12"}]}]}], 
    ";"}]}]}]], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{{3.745662339393239*^9, 3.745662389483305*^9}, {
   3.7456624464933014`*^9, 3.7456624519435987`*^9}, {3.7456624884565277`*^9, 
   3.745662686276664*^9}, {3.745662781756605*^9, 3.7456627869966135`*^9}, {
   3.745662851236352*^9, 3.7456628605955467`*^9}, {3.7456631280158477`*^9, 
   3.745663186675682*^9}, {3.745663217142953*^9, 3.7456632212825327`*^9}, {
   3.745665516328931*^9, 3.7456655601653976`*^9}, {3.74566565098532*^9, 
   3.745665723590929*^9}, 3.7456657645713625`*^9, {3.7456658329311876`*^9, 
   3.7456659809098773`*^9}, {3.745666066381027*^9, 3.7456661594109073`*^9}, {
   3.7456662615312424`*^9, 3.7456663052754602`*^9}, {3.7456666441055813`*^9, 
   3.7456666465250664`*^9}, {3.7456672077139435`*^9, 3.745667208490451*^9}, {
   3.7456698025015535`*^9, 3.7456698051264143`*^9}, {3.7610269214604583`*^9, 
   3.7610269402009544`*^9}, {3.761026979760614*^9, 3.761027004383917*^9}, 
   3.7621510333736763`*^9, 3.7622297682771616`*^9, {3.7660201083236103`*^9, 
   3.7660201090271873`*^9}},ExpressionUUID->"7bd91fb4-b00c-4d96-a45d-\
c90fe31931cd"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
   "Mass", " ", "and", " ", "inertial", " ", "values", " ", "are", " ", 
    "from", " ", "the", " ", "CAD", " ", "model"}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"datap", " ", "=", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"rb", "\[Rule]", "1"}], ",", " ", 
       RowBox[{"rt", "\[Rule]", "0.5803"}], ",", " ", 
       RowBox[{"\[Gamma]t", "\[Rule]", "0.6573"}], ",", " ", 
       RowBox[{"\[Gamma]b", "\[Rule]", "0.2985"}]}], "}"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"tplparam", " ", "=", " ", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"\[Rho]", "\[Rule]", "2810"}], ",", " ", 
        RowBox[{"t", "\[Rule]", "0.01"}]}], "}"}], "/.", "datap"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"tpmparam", " ", "=", " ", 
     RowBox[{"mtp", "\[Rule]", " ", "0.20339"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"itpz", " ", "=", " ", "2.343101"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"itpx", " ", "=", " ", "1.17172"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"itpy", " ", "=", "  ", "1.17172"}], ";"}]}]}]], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{{3.7456666835653777`*^9, 3.7456667698257303`*^9}, {
   3.745666813615514*^9, 3.745666911624019*^9}, {3.7456669873539715`*^9, 
   3.745667026906665*^9}, {3.7456670943138857`*^9, 3.7456671494104743`*^9}, {
   3.7456671893006945`*^9, 3.7456673179841604`*^9}, {3.7456673880806427`*^9, 
   3.7456673935804777`*^9}, {3.7456698111848717`*^9, 3.745669811787133*^9}, 
   3.76215103337466*^9, {3.762229779832541*^9, 3.7622298079558105`*^9}, {
   3.766020092769501*^9, 
   3.766020103657771*^9}},ExpressionUUID->"d5e0cae4-0357-4de3-88a0-\
8396c9678c03"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
   "Assuming", " ", "manipulator", " ", "is", " ", "symmetric", " ", "in", 
    " ", "construction"}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"Ibi", " ", "=", " ", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"ibxi", ",", " ", "0", ",", " ", "0"}], "}"}], ",", " ", 
       RowBox[{"{", 
        RowBox[{"0", ",", "ibyi", ",", " ", "0"}], "}"}], ",", " ", 
       RowBox[{"{", 
        RowBox[{"0", ",", " ", "0", ",", "ibzi"}], "}"}]}], "}"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Iai", " ", "=", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"iaxi", ",", "0", ",", "0"}], "}"}], ",", " ", 
       RowBox[{"{", 
        RowBox[{"0", ",", "iayi", ",", "0"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"0", ",", "0", ",", "iazi"}], "}"}]}], "}"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Itp", " ", "=", " ", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"itpx", ",", " ", "0", ",", " ", "0"}], "}"}], ",", " ", 
       RowBox[{"{", 
        RowBox[{"0", ",", " ", "itpy", ",", " ", "0"}], "}"}], ",", " ", 
       RowBox[{"{", 
        RowBox[{"0", ",", " ", "0", ",", " ", "itpz"}], "}"}]}], "}"}]}], 
    ";"}]}]}]], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{{3.7456674707248*^9, 3.745667479090352*^9}, {
   3.7456675202549305`*^9, 3.7456675456080585`*^9}, {3.7456677398879447`*^9, 
   3.745667765117893*^9}, {3.745667802197711*^9, 3.745667833617165*^9}, {
   3.745667959542883*^9, 3.745667983683123*^9}, {3.7610261299817963`*^9, 
   3.7610261368821197`*^9}, 3.7624792462687125`*^9, {3.766020088971698*^9, 
   3.766020089655286*^9}},ExpressionUUID->"4a1b36c2-3ff3-4229-a486-\
20ff7217a218"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
   "Assuming", " ", "that", " ", "the", " ", "center", " ", "of", " ", "the", 
    " ", "global", " ", "axis", " ", "is", " ", "in", " ", "the", " ", 
    "center", " ", "of", " ", "the", " ", "bottom", " ", "plate", " ", "and", 
    " ", "hence", " ", "all", " ", "the", " ", "ground", " ", "joints", " ", 
    "are", " ", "denoted", " ", "by", " ", "bi", " ", "and", " ", "the", " ", 
    "top", " ", "plate", " ", "edges", " ", "by", " ", "ai"}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
   "Locations", " ", "of", " ", "all", " ", "the", " ", "known", " ", 
    "ground", " ", "joints"}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"b1", " ", "=", " ", 
     RowBox[{"{", 
      RowBox[{"rb", ",", " ", "0", ",", " ", "0"}], "}"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"b2", " ", "=", " ", 
     RowBox[{
      RowBox[{"rotZ", "[", 
       RowBox[{"2", "*", "\[Gamma]b"}], "]"}], ".", "b1"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"b3", " ", "=", " ", 
     RowBox[{
      RowBox[{"rotZ", "[", 
       RowBox[{"2", 
        RowBox[{"\[Pi]", "/", "3"}]}], "]"}], ".", "b1"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"b4", " ", "=", " ", 
     RowBox[{
      RowBox[{"rotZ", "[", 
       RowBox[{"2", 
        RowBox[{"\[Pi]", "/", "3"}]}], "]"}], ".", "b2"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"b5", " ", "=", " ", 
     RowBox[{
      RowBox[{"rotZ", "[", 
       RowBox[{"4", 
        RowBox[{"\[Pi]", "/", "3"}]}], "]"}], ".", "b1"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"b6", " ", "=", " ", 
     RowBox[{
      RowBox[{"rotZ", "[", 
       RowBox[{"4", 
        RowBox[{"\[Pi]", "/", "3"}]}], "]"}], ".", "b2"}]}], ";"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"tempb", " ", "=", " ", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"Symbol", "[", 
        RowBox[{"\"\<b\>\"", "<>", 
         RowBox[{"ToString", "[", "i", "]"}]}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", " ", "6"}], "}"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"b", " ", "=", " ", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"rotZ", "[", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"2", 
             RowBox[{"\[Pi]", "/", "3"}]}], "-", 
            RowBox[{"2", "*", "\[Gamma]b"}]}], ")"}], "/", "2"}], "]"}], ".", 
        RowBox[{"tempb", "[", 
         RowBox[{"[", "i", "]"}], "]"}]}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", " ", 
         RowBox[{"Length", "[", "tempb", "]"}]}], "}"}]}], "]"}]}], 
    ";"}]}]}]], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{{3.7446182545448155`*^9, 3.744618282368169*^9}, {
   3.744618329154706*^9, 3.744618349374852*^9}, {3.7446183942519007`*^9, 
   3.7446183986916113`*^9}, {3.7446185147448273`*^9, 
   3.7446185181219606`*^9}, {3.7446185486717253`*^9, 3.7446186682513876`*^9}, 
   3.7624792462687125`*^9, {3.7660200853241568`*^9, 3.7660200859999523`*^9}, {
   3.766020122968255*^9, 
   3.7660201252661448`*^9}},ExpressionUUID->"ef841645-0755-44b9-88d8-\
76f8aa8b25a4"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"al1", " ", "=", " ", 
   RowBox[{"{", 
    RowBox[{"rt", ",", " ", "0", ",", " ", "0"}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"al2", " ", "=", " ", 
   RowBox[{
    RowBox[{"rotZ", "[", 
     RowBox[{"2", "*", "\[Gamma]t"}], "]"}], ".", "al1"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"al3", " ", "=", " ", 
   RowBox[{
    RowBox[{"rotZ", "[", 
     RowBox[{"2", 
      RowBox[{"\[Pi]", "/", "3"}]}], "]"}], ".", "al1"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"al4", " ", "=", " ", 
   RowBox[{
    RowBox[{"rotZ", "[", 
     RowBox[{"2", 
      RowBox[{"\[Pi]", "/", "3"}]}], "]"}], ".", "al2"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"al5", " ", "=", " ", 
   RowBox[{
    RowBox[{"rotZ", "[", 
     RowBox[{"4", 
      RowBox[{"\[Pi]", "/", "3"}]}], "]"}], ".", "al1"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"al6", " ", "=", " ", 
    RowBox[{
     RowBox[{"rotZ", "[", 
      RowBox[{"4", 
       RowBox[{"\[Pi]", "/", "3"}]}], "]"}], ".", "al2"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"tempal", " ", "=", " ", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"Symbol", "[", 
      RowBox[{"\"\<al\>\"", "<>", 
       RowBox[{"ToString", "[", "i", "]"}]}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", " ", "6"}], "}"}]}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"al", " ", "=", " ", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"rotZ", "[", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"2", 
           RowBox[{"\[Pi]", "/", "3"}]}], "-", 
          RowBox[{"2", "\[Gamma]t"}]}], ")"}], "/", "2"}], "]"}], ".", 
      RowBox[{"tempal", "[", 
       RowBox[{"[", "i", "]"}], "]"}]}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", " ", 
       RowBox[{"Length", "[", "tempal", "]"}]}], "}"}]}], "]"}]}], 
  ";"}]}], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{{3.7446182545448155`*^9, 3.744618282368169*^9}, {
   3.744618329154706*^9, 3.744618349374852*^9}, {3.7446183942519007`*^9, 
   3.7446183986916113`*^9}, {3.7446185147448273`*^9, 
   3.7446185181219606`*^9}, {3.7446185486717253`*^9, 
   3.7446186682513876`*^9}, {3.7469412603175697`*^9, 
   3.7469413207466545`*^9}, {3.746950123925105*^9, 3.74695018549267*^9}, 
   3.7624792462687125`*^9, {3.76602019091623*^9, 
   3.7660201915628586`*^9}},ExpressionUUID->"1ee31f9d-a8d3-4368-b2e3-\
96e2b2963128"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", "Variables", "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"\[Phi]", " ", "=", " ", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"Symbol", "[", 
        RowBox[{"\"\<\[Phi]\>\"", "<>", 
         RowBox[{"ToString", "[", "i", "]"}]}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "6"}], "}"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"\[Psi]", " ", "=", " ", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"Symbol", "[", 
        RowBox[{"\"\<\[Psi]\>\"", "<>", 
         RowBox[{"ToString", "[", "i", "]"}]}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "6"}], "}"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"l", " ", "=", " ", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"Symbol", "[", 
        RowBox[{"\"\<l\>\"", "<>", 
         RowBox[{"ToString", "[", "i", "]"}]}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "6"}], "}"}]}], "]"}]}], ";"}]}]}]], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{{3.761026385106249*^9, 3.7610263893963614`*^9}, 
   3.7624792462687125`*^9, {3.7660201970816994`*^9, 
   3.7660201977303286`*^9}},ExpressionUUID->"f921a5db-2bbc-44e6-b373-\
b9dccc258d95"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
   "Assume", " ", "the", " ", "center", " ", "of", " ", "the", " ", "top", 
    " ", "plate", " ", "and", " ", "the", " ", "orientation", " ", "as", " ", 
    "p", " ", "and", " ", "R"}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"pc", " ", "=", " ", 
     RowBox[{"{", 
      RowBox[{"x", ",", " ", "y", ",", " ", "z"}], "}"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"qq", " ", "=", " ", 
     RowBox[{"Join", "[", 
      RowBox[{"\[Phi]", ",", " ", "\[Psi]", ",", " ", "l"}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"qx", " ", "=", " ", 
     RowBox[{"Join", "[", 
      RowBox[{"pc", ",", " ", 
       RowBox[{"{", 
        RowBox[{"c1", ",", " ", "c2", ",", " ", "c3"}], "}"}]}], "]"}]}], 
    ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"q", " ", "=", " ", 
     RowBox[{"Join", "[", 
      RowBox[{"qx", ",", " ", "qq"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Arp", " ", "=", " ", 
     RowBox[{"vec2SkewMat", "[", 
      RowBox[{"{", 
       RowBox[{"c1", ",", " ", "c2", ",", " ", "c3"}], "}"}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Rtp", " ", "=", " ", 
     RowBox[{"Simplify", "[", 
      RowBox[{
       RowBox[{"Inverse", "[", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"IdentityMatrix", "[", "3", "]"}], "-", "Arp"}], ")"}], 
        "]"}], ".", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"IdentityMatrix", "[", "3", "]"}], "+", "Arp"}], ")"}]}], 
      "]"}]}], ";"}], "\n", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Jvtp", " ", "=", " ", 
     RowBox[{"D", "[", 
      RowBox[{"pc", ",", " ", 
       RowBox[{"{", "q", "}"}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"J\[Omega]tp", " ", "=", " ", 
     RowBox[{"SkewMat2vec", "[", 
      RowBox[{"Simplify", "[", 
       RowBox[{
        RowBox[{"T", "[", "Rtp", "]"}], ".", 
        RowBox[{"D", "[", 
         RowBox[{"Rtp", ",", 
          RowBox[{"{", "q", "}"}]}], "]"}]}], "]"}], "]"}]}], 
    ";"}]}]}]], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{{3.757673095110244*^9, 3.7576731115972443`*^9}, {
   3.757673220363268*^9, 3.757673239189595*^9}, {3.757673381250266*^9, 
   3.7576733905364704`*^9}, {3.7579460052840905`*^9, 
   3.7579460340425625`*^9}, {3.761026430196143*^9, 3.761026434975943*^9}, 
   3.7624792462687125`*^9, {3.7660201998800745`*^9, 
   3.766020207845379*^9}},ExpressionUUID->"d81531fc-353a-452c-9788-\
dd2886d1efb3"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
   "Formulating", " ", "the", " ", "dynamics", " ", "equations", " ", "of", 
    " ", "the", " ", "manipulator"}], "*)"}], "\n", 
  RowBox[{"(*", 
   RowBox[{
   "Finding", " ", "the", " ", "Jvp", " ", "for", " ", "the", " ", "ai", " ", 
    "parts", " ", "of", " ", "the", " ", "links"}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"pa", "  ", "=", " ", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"b", "[", 
         RowBox[{"[", "i", "]"}], "]"}], "+", 
        RowBox[{
         RowBox[{"rotY", "[", 
          RowBox[{"\[Phi]", "[", 
           RowBox[{"[", "i", "]"}], "]"}], "]"}], ".", 
         RowBox[{"rotX", "[", 
          RowBox[{"\[Psi]", "[", 
           RowBox[{"[", "i", "]"}], "]"}], "]"}], ".", 
         RowBox[{"{", 
          RowBox[{"0", ",", "0", ",", " ", 
           RowBox[{
            RowBox[{"l", "[", 
             RowBox[{"[", "i", "]"}], "]"}], "-", 
            RowBox[{"la", "/", "2"}]}]}], "}"}]}]}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", " ", "6"}], "}"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"pb", "  ", "=", " ", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"b", "[", 
         RowBox[{"[", "i", "]"}], "]"}], "+", 
        RowBox[{
         RowBox[{"rotY", "[", 
          RowBox[{"\[Phi]", "[", 
           RowBox[{"[", "i", "]"}], "]"}], "]"}], ".", 
         RowBox[{"rotX", "[", 
          RowBox[{"\[Psi]", "[", 
           RowBox[{"[", "i", "]"}], "]"}], "]"}], ".", 
         RowBox[{"{", 
          RowBox[{"0", ",", "0", ",", " ", 
           RowBox[{"lb", "/", "2"}]}], "}"}]}]}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", " ", "6"}], "}"}]}], "]"}]}], ";"}]}]}]], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{{3.7454182520853305`*^9, 3.7454182807190237`*^9}, 
   3.745418327797369*^9, {3.74541872352588*^9, 3.7454187264990005`*^9}, {
   3.7454189795747333`*^9, 3.7454190033215036`*^9}, {3.745459834845077*^9, 
   3.7454598482324815`*^9}, {3.745659598059082*^9, 3.7456596286594276`*^9}, {
   3.7577284875068016`*^9, 3.7577284876382837`*^9}, {3.7610265397683587`*^9, 
   3.761026542548708*^9}, 3.7624792462687125`*^9, {3.766020210993884*^9, 
   3.7660202116565065`*^9}},ExpressionUUID->"9da52488-b30b-448f-a180-\
a9e43a9cd81f"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"First", " ", "case", " ", "where", " ", "\[Phi]i"}], ",", " ", 
    RowBox[{"\[Psi]i", " ", "and", " ", 
     RowBox[{"li", "'"}], "s", " ", "are", " ", 
     RowBox[{"given", ".", " ", "Contains"}], " ", "all", " ", "the", " ", 
     "Jacobians"}]}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"Jpai", " ", "=", " ", 
     RowBox[{"D", "[", 
      RowBox[{"pa", ",", " ", 
       RowBox[{"{", "q", "}"}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Jpbi", " ", "=", " ", 
     RowBox[{"D", "[", 
      RowBox[{"pb", ",", " ", 
       RowBox[{"{", "q", "}"}]}], "]"}]}], ";"}]}]}]], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{{3.7454183879912777`*^9, 3.7454183906008577`*^9}, {
   3.7454184344115915`*^9, 3.7454184719063854`*^9}, {3.745418548493289*^9, 
   3.7454185532473145`*^9}, {3.7454190340155287`*^9, 3.745419034100259*^9}, {
   3.7454191329105635`*^9, 3.7454191477638073`*^9}, {3.7454197351930757`*^9, 
   3.7454197412508836`*^9}, {3.7454208356154337`*^9, 3.74542083745949*^9}, {
   3.7454598433023567`*^9, 3.745459844882506*^9}, {3.7578154678295484`*^9, 
   3.7578154925583773`*^9}, {3.757946071065834*^9, 3.757946072354289*^9}, 
   3.7624792462687125`*^9, {3.7660202138382564`*^9, 
   3.766020214497385*^9}},ExpressionUUID->"09d72c21-7eab-45e5-9d63-\
d60476a217ac"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
   "To", " ", "generate", " ", "the", " ", "test", " ", "data", " ", "for", 
    " ", "this", " ", "system"}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"qqrule", " ", "=", 
     RowBox[{"Flatten", "[", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{
           RowBox[{"\[Phi]", "[", 
            RowBox[{"[", "i", "]"}], "]"}], "\[Rule]", " ", 
           RowBox[{
            RowBox[{"\[Phi]", "[", 
             RowBox[{"[", "i", "]"}], "]"}], "[", "t", "]"}]}], ",", " ", 
          RowBox[{
           RowBox[{"\[Psi]", "[", 
            RowBox[{"[", "i", "]"}], "]"}], "\[Rule]", 
           RowBox[{
            RowBox[{"\[Psi]", "[", 
             RowBox[{"[", "i", "]"}], "]"}], "[", "t", "]"}]}], ",", " ", 
          RowBox[{
           RowBox[{"l", "[", 
            RowBox[{"[", "i", "]"}], "]"}], "\[Rule]", 
           RowBox[{
            RowBox[{"l", "[", 
             RowBox[{"[", "i", "]"}], "]"}], "[", "t", "]"}]}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", " ", "6"}], "}"}]}], "]"}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"qxrule", " ", "=", " ", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"x", "\[Rule]", 
        RowBox[{"x", "[", "t", "]"}]}], ",", " ", 
       RowBox[{"y", "\[Rule]", 
        RowBox[{"y", "[", "t", "]"}]}], ",", " ", 
       RowBox[{"z", "\[Rule]", 
        RowBox[{"z", "[", "t", "]"}]}], ",", " ", 
       RowBox[{"c1", "\[Rule]", 
        RowBox[{"c1", "[", "t", "]"}]}], ",", " ", 
       RowBox[{"c2", "\[Rule]", 
        RowBox[{"c2", "[", "t", "]"}]}], ",", " ", 
       RowBox[{"c3", "\[Rule]", 
        RowBox[{"c3", "[", "t", "]"}]}]}], "}"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"qrule", " ", "=", " ", 
     RowBox[{"Join", "[", 
      RowBox[{"qxrule", ",", "qqrule"}], "]"}]}], ";"}]}]}]], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{{3.7579461012021737`*^9, 3.7579461015656385`*^9}, {
   3.7579462983761816`*^9, 3.757946345065563*^9}, {3.7610265714380054`*^9, 
   3.7610265919783945`*^9}, 3.7624792462687125`*^9, {3.7660202172747955`*^9, 
   3.766020217866457*^9}},ExpressionUUID->"e574c488-37e1-4272-9dd1-\
766dc9d25ee5"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
   "Angular", " ", "velocity", " ", "of", " ", "any", " ", "leg", " ", "li"}],
    "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"Rl", " ", "=", " ", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"rotY", "[", 
         RowBox[{"\[Phi]", "[", 
          RowBox[{"[", "i", "]"}], "]"}], "]"}], ".", 
        RowBox[{"rotX", "[", 
         RowBox[{"\[Psi]", "[", 
          RowBox[{"[", "i", "]"}], "]"}], "]"}]}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", " ", "6"}], "}"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"J\[Omega]l", " ", "=", " ", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"SkewMat2vec", "[", 
        RowBox[{
         RowBox[{"T", "[", 
          RowBox[{"Rl", "[", 
           RowBox[{"[", "i", "]"}], "]"}], "]"}], ".", 
         RowBox[{"D", "[", 
          RowBox[{
           RowBox[{"Rl", "[", 
            RowBox[{"[", "i", "]"}], "]"}], ",", 
           RowBox[{"{", "q", "}"}]}], "]"}]}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", " ", "6"}], "}"}]}], "]"}]}], ";"}]}]}]], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{{3.7444660387788954`*^9, 3.7444660658162656`*^9}, {
   3.7444661243428636`*^9, 3.744466145597618*^9}, {3.7444661979822054`*^9, 
   3.7444662012948503`*^9}, {3.74446624791263*^9, 3.744466250959775*^9}, {
   3.7444667382625923`*^9, 3.7444667630962734`*^9}, {3.7446251250902166`*^9, 
   3.7446251694809074`*^9}, {3.744625266704352*^9, 3.7446252698130803`*^9}, {
   3.7578156856306696`*^9, 3.7578157033399053`*^9}, {3.7578162449007487`*^9, 
   3.7578162456032763`*^9}, {3.757816278535477*^9, 3.757816294860135*^9}, 
   3.757816929742077*^9, 3.757946112927583*^9, {3.761026612908399*^9, 
   3.761026613468506*^9}, 3.7624792462687125`*^9, {3.766020220107174*^9, 
   3.7660202208357563`*^9}},ExpressionUUID->"a612bb32-05fe-484c-ba39-\
27f741dc0f7d"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"Mass", " ", "Matrix"}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"tempM", " ", "=", " ", 
     RowBox[{"Append", "[", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{"T", "[", 
              RowBox[{"Jpai", "[", 
               RowBox[{"[", "i", "]"}], "]"}], "]"}], ".", 
             RowBox[{"Jpai", "[", 
              RowBox[{"[", "i", "]"}], "]"}]}], "*", "ma"}], "+", 
           RowBox[{
            RowBox[{
             RowBox[{"T", "[", 
              RowBox[{"Jpbi", "[", 
               RowBox[{"[", "i", "]"}], "]"}], "]"}], ".", 
             RowBox[{"Jpbi", "[", 
              RowBox[{"[", "i", "]"}], "]"}]}], "*", "mb"}], "+", 
           RowBox[{
            RowBox[{"T", "[", 
             RowBox[{"J\[Omega]l", "[", 
              RowBox[{"[", "i", "]"}], "]"}], "]"}], ".", "Ibi", ".", 
            RowBox[{"J\[Omega]l", "[", 
             RowBox[{"[", "i", "]"}], "]"}]}], "+", 
           RowBox[{
            RowBox[{"T", "[", 
             RowBox[{"J\[Omega]l", "[", 
              RowBox[{"[", "i", "]"}], "]"}], "]"}], ".", "Iai", ".", 
            RowBox[{"J\[Omega]l", "[", 
             RowBox[{"[", "i", "]"}], "]"}]}]}], ",", 
          RowBox[{"{", 
           RowBox[{"i", ",", " ", "6"}], "}"}]}], "]"}], ")"}], ",", " ", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"T", "[", "Jvtp", "]"}], ".", "Jvtp"}], "*", "mtp"}], "+", 
        RowBox[{
         RowBox[{"T", "[", "J\[Omega]tp", "]"}], ".", "Itp", ".", 
         "J\[Omega]tp"}]}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"tempM2", " ", "=", " ", 
     RowBox[{"Total", "[", 
      RowBox[{"tempM", ",", " ", 
       RowBox[{"{", "1", "}"}]}], "]"}]}], ";"}], "\n", 
   RowBox[{
    RowBox[{"Mmat", " ", "=", " ", 
     RowBox[{"Simplify", "[", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"tempM2", "/.", "qrule"}], "/.", "datap"}], "/.", 
         "leglparam"}], "/.", "legmparam"}], "/.", "tpmparam"}], "]"}]}], 
    ";"}]}]}]], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{{3.7454191774287214`*^9, 3.74541924221436*^9}, {
   3.745419300738152*^9, 3.7454193021271815`*^9}, {3.745419745929166*^9, 
   3.745419862375971*^9}, {3.7454198943351502`*^9, 3.745419939161339*^9}, {
   3.745420658385211*^9, 3.7454206638735247`*^9}, {3.7454206966065235`*^9, 
   3.7454207109037094`*^9}, {3.7454207410801144`*^9, 3.7454208101144*^9}, {
   3.7454211181688547`*^9, 3.7454211813895817`*^9}, {3.745421214051894*^9, 
   3.7454212384473615`*^9}, {3.745667573257765*^9, 3.7456675843578253`*^9}, {
   3.745667895767716*^9, 3.745667896457967*^9}, {3.757682687502181*^9, 
   3.7576826981679893`*^9}, {3.757818179231868*^9, 3.7578181879928093`*^9}, 
   3.757818305731694*^9, {3.7578183773959184`*^9, 3.75781839974761*^9}, {
   3.761026643019744*^9, 3.7610266577482805`*^9}, 3.7624792462687125`*^9, {
   3.766020024790803*^9, 3.766020025214542*^9}, {3.766020223806056*^9, 
   3.766020230371314*^9}},ExpressionUUID->"55d3129e-9673-4de7-8067-\
8d3345ea5dcc"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"qt", " ", "=", " ", 
   RowBox[{"q", "/.", "qrule"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"tic", "[", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"n", " ", "=", " ", 
   RowBox[{"Length", "[", "qt", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"tempC", " ", "=", " ", 
   RowBox[{"Table", "[", 
    RowBox[{"0", ",", " ", 
     RowBox[{"{", 
      RowBox[{"ii", ",", " ", "1", ",", "n"}], "}"}], ",", " ", 
     RowBox[{"{", 
      RowBox[{"jj", ",", " ", "1", ",", "n"}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"For", " ", "[", 
   RowBox[{
    RowBox[{"ii", "=", " ", "1"}], ",", " ", 
    RowBox[{"ii", "\[LessEqual]", " ", "n"}], ",", " ", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"For", "[", 
      RowBox[{
       RowBox[{"jj", " ", "=", " ", "1"}], ",", " ", 
       RowBox[{"jj", " ", "\[LessEqual]", " ", "n"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"For", "[", 
         RowBox[{
          RowBox[{"kk", " ", "=", " ", "1"}], ",", " ", 
          RowBox[{"kk", "\[LessEqual]", " ", "n"}], ",", " ", 
          "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{
            RowBox[{"tempC", "[", 
             RowBox[{"[", 
              RowBox[{"ii", ",", "jj"}], "]"}], "]"}], " ", "+=", 
            RowBox[{
             RowBox[{"1", "/", "2"}], "*", 
             RowBox[{"(", " ", 
              RowBox[{
               RowBox[{"D", "[", 
                RowBox[{
                 RowBox[{"Mmat", "[", 
                  RowBox[{"[", 
                   RowBox[{"ii", ",", "jj"}], "]"}], "]"}], ",", " ", 
                 RowBox[{"qt", "[", 
                  RowBox[{"[", "kk", "]"}], "]"}]}], "]"}], " ", "+", " ", 
               RowBox[{"D", "[", 
                RowBox[{
                 RowBox[{"Mmat", "[", 
                  RowBox[{"[", 
                   RowBox[{"ii", ",", "kk"}], "]"}], "]"}], ",", " ", 
                 RowBox[{"qt", "[", 
                  RowBox[{"[", "jj", "]"}], "]"}]}], "]"}], " ", "-", " ", 
               RowBox[{"D", "[", 
                RowBox[{
                 RowBox[{"Mmat", "[", 
                  RowBox[{"[", 
                   RowBox[{"jj", ",", " ", "kk"}], "]"}], "]"}], ",", " ", 
                 RowBox[{"qt", "[", 
                  RowBox[{"[", "ii", "]"}], "]"}]}], "]"}]}], ")"}], "*", 
             RowBox[{"D", "[", 
              RowBox[{
               RowBox[{"qt", "[", 
                RowBox[{"[", "kk", "]"}], "]"}], ",", "t"}], "]"}]}]}], " ", 
           ";", "\[IndentingNewLine]", 
           RowBox[{"kk", "++"}]}]}], "]"}], ";", "\[IndentingNewLine]", 
        RowBox[{"jj", "++"}]}]}], "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{"ii", "++"}]}]}], "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"toc", "[", "]"}]}], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{
  3.48085080775*^9, {3.48085084428125*^9, 3.48085098521875*^9}, {
   3.4808510505625*^9, 3.480851104046875*^9}, {3.48085131953125*^9, 
   3.48085150890625*^9}, {3.4808521858125*^9, 3.4808521969375*^9}, {
   3.48085305128125*^9, 3.480853067421875*^9}, {3.5731782839757833`*^9, 
   3.5731783418231287`*^9}, {3.573178411791875*^9, 3.573178424409545*^9}, {
   3.573195194901503*^9, 3.5731951953328457`*^9}, {3.5903173113028393`*^9, 
   3.5903173166528397`*^9}, {3.590317361637232*^9, 3.59031739811821*^9}, {
   3.631578921065929*^9, 3.631578973219524*^9}, {3.714612041472092*^9, 
   3.7146120454916945`*^9}, {3.7454213959032803`*^9, 
   3.7454214005043125`*^9}, {3.745422037108448*^9, 3.7454220463251677`*^9}, {
   3.747671101270411*^9, 3.7476711075215197`*^9}, {3.757251695900351*^9, 
   3.757251704311482*^9}, {3.7572517800442657`*^9, 3.7572517821732516`*^9}, {
   3.75725183120992*^9, 3.7572519412728896`*^9}, 3.757819407458436*^9, {
   3.7578194434600115`*^9, 3.7578194499275846`*^9}, {3.7578250695968175`*^9, 
   3.7578250782263403`*^9}, {3.7578251115045223`*^9, 
   3.7578251318882256`*^9}, {3.757946454936669*^9, 3.7579465005042343`*^9}, 
   3.7579469200395117`*^9, {3.7579476477617817`*^9, 3.7579476676274796`*^9}, 
   3.7624792462687125`*^9, {3.7660200339485598`*^9, 3.76602003477007*^9}, {
   3.766020233293641*^9, 
   3.7660202339202824`*^9}},ExpressionUUID->"7746af0b-3c4b-40bd-ac5f-\
2359bed73e43"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Actual time consumed: \"\>", "\[InvisibleSpace]", 
   "0.3747863`6.724298705066015", "\[InvisibleSpace]", "\<\" seconds.\"\>"}],
  SequenceForm[
  "Actual time consumed: ", 0.3747863`6.724298705066015, " seconds."],
  Editable->False]], "Print",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{{3.757946473366941*^9, 3.7579465011283875`*^9}, 
   3.7579469223311987`*^9, 3.7579472399422145`*^9, 3.7579476697184525`*^9, 
   3.757952226830962*^9, 3.7579548983874407`*^9, 3.7579549869558153`*^9, 
   3.757955420479269*^9, 3.7579557414443293`*^9, 3.7587879105045524`*^9, 
   3.758889688263734*^9, 3.7590715872805967`*^9, 3.760024019672656*^9, 
   3.7610271661516223`*^9, 3.7610458167151265`*^9, 3.7612682644607162`*^9, 
   3.7612683163104677`*^9, 3.761275275378913*^9, 3.7612767423920145`*^9, 
   3.7612999781101494`*^9, 3.7613049371143675`*^9, 3.76132229998827*^9, 
   3.7613521690583878`*^9, 3.761358956903396*^9, 3.761378488736163*^9, 
   3.7613786927676296`*^9, 3.761382466165635*^9, 3.7620433879220753`*^9, 
   3.762071953107856*^9, 3.762075835681546*^9, 3.762086924820592*^9, 
   3.7621301205037584`*^9, 3.7621555591913357`*^9, 3.762236076937868*^9, 
   3.76231327822735*^9, 3.7624792462687125`*^9, 3.7624793389446735`*^9, 
   3.762510351774783*^9, 3.7633006257014894`*^9, 3.7648637541030164`*^9, 
   3.7653727807254777`*^9, 3.7653743387557573`*^9, 3.765374573954178*^9, 
   3.766019630013425*^9, 3.76602023471183*^9, 3.7660432982822576`*^9, 
   3.7660506835762014`*^9, 3.7660523879732656`*^9, 3.7660544990236816`*^9, 
   3.7661025597323713`*^9, 3.766104901614809*^9, 3.7661512251937866`*^9, 
   3.7661567034053955`*^9, 3.766215043966052*^9, 3.7662680616629467`*^9, 
   3.766291693842868*^9},ExpressionUUID->"6de564ea-ccfd-4efa-8717-\
a0e928490e87"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"CPU time consumed: \"\>", "\[InvisibleSpace]", 
   "0.3120000000000003`", "\[InvisibleSpace]", "\<\" seconds.\"\>"}],
  SequenceForm["CPU time consumed: ", 0.3120000000000003, " seconds."],
  Editable->False]], "Print",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{{3.757946473366941*^9, 3.7579465011283875`*^9}, 
   3.7579469223311987`*^9, 3.7579472399422145`*^9, 3.7579476697184525`*^9, 
   3.757952226830962*^9, 3.7579548983874407`*^9, 3.7579549869558153`*^9, 
   3.757955420479269*^9, 3.7579557414443293`*^9, 3.7587879105045524`*^9, 
   3.758889688263734*^9, 3.7590715872805967`*^9, 3.760024019672656*^9, 
   3.7610271661516223`*^9, 3.7610458167151265`*^9, 3.7612682644607162`*^9, 
   3.7612683163104677`*^9, 3.761275275378913*^9, 3.7612767423920145`*^9, 
   3.7612999781101494`*^9, 3.7613049371143675`*^9, 3.76132229998827*^9, 
   3.7613521690583878`*^9, 3.761358956903396*^9, 3.761378488736163*^9, 
   3.7613786927676296`*^9, 3.761382466165635*^9, 3.7620433879220753`*^9, 
   3.762071953107856*^9, 3.762075835681546*^9, 3.762086924820592*^9, 
   3.7621301205037584`*^9, 3.7621555591913357`*^9, 3.762236076937868*^9, 
   3.76231327822735*^9, 3.7624792462687125`*^9, 3.7624793389446735`*^9, 
   3.762510351774783*^9, 3.7633006257014894`*^9, 3.7648637541030164`*^9, 
   3.7653727807254777`*^9, 3.7653743387557573`*^9, 3.765374573954178*^9, 
   3.766019630013425*^9, 3.76602023471183*^9, 3.7660432982822576`*^9, 
   3.7660506835762014`*^9, 3.7660523879732656`*^9, 3.7660544990236816`*^9, 
   3.7661025597323713`*^9, 3.766104901614809*^9, 3.7661512251937866`*^9, 
   3.7661567034053955`*^9, 3.766215043966052*^9, 3.7662680616629467`*^9, 
   3.766291693852862*^9},ExpressionUUID->"9829a61a-b511-4f24-a66d-\
b1a584c82cb8"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"sampledat", " ", "=", " ", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"\[Phi]1", "[", "t", "]"}], "\[Rule]", 
      RowBox[{"-", "0.4120776809584599`"}]}], ",", 
     RowBox[{
      RowBox[{"\[Phi]2", "[", "t", "]"}], "\[Rule]", 
      RowBox[{"-", "0.5171397464399574`"}]}], ",", 
     RowBox[{
      RowBox[{"\[Phi]3", "[", "t", "]"}], "\[Rule]", "0.17764187369764603`"}],
      ",", 
     RowBox[{
      RowBox[{"\[Phi]4", "[", "t", "]"}], "\[Rule]", "0.28736859806179627`"}],
      ",", 
     RowBox[{
      RowBox[{"\[Phi]5", "[", "t", "]"}], "\[Rule]", "0.19195198975076458`"}],
      ",", 
     RowBox[{
      RowBox[{"\[Phi]6", "[", "t", "]"}], "\[Rule]", "0.3314663928113124`"}], 
     ",", 
     RowBox[{
      RowBox[{"\[Psi]1", "[", "t", "]"}], "\[Rule]", 
      RowBox[{"-", "0.010571279864228872`"}]}], ",", 
     RowBox[{
      RowBox[{"\[Psi]2", "[", "t", "]"}], "\[Rule]", "0.00656986783518712`"}],
      ",", 
     RowBox[{
      RowBox[{"\[Psi]3", "[", "t", "]"}], "\[Rule]", "0.2888385292898862`"}], 
     ",", 
     RowBox[{
      RowBox[{"\[Psi]4", "[", "t", "]"}], "\[Rule]", "0.45146664507018724`"}],
      ",", 
     RowBox[{
      RowBox[{"\[Psi]5", "[", "t", "]"}], "\[Rule]", 
      RowBox[{"-", "0.32862234369207344`"}]}], ",", 
     RowBox[{
      RowBox[{"\[Psi]6", "[", "t", "]"}], "\[Rule]", 
      RowBox[{"-", "0.5474095601531795`"}]}], ",", 
     RowBox[{
      RowBox[{"l1", "[", "t", "]"}], "\[Rule]", "1.0763732914509816`"}], ",", 
     RowBox[{
      RowBox[{"l2", "[", "t", "]"}], "\[Rule]", "1.3589653226424672`"}], ",", 
     RowBox[{
      RowBox[{"l3", "[", "t", "]"}], "\[Rule]", "1.3306253991320864`"}], ",", 
     RowBox[{
      RowBox[{"l4", "[", "t", "]"}], "\[Rule]", "1.3670902994040683`"}], ",", 
     RowBox[{
      RowBox[{"l5", "[", "t", "]"}], "\[Rule]", "1.1391099344974789`"}], ",", 
     RowBox[{
      RowBox[{"l6", "[", "t", "]"}], "\[Rule]", "1.163106217592093`"}]}], 
    "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"initvel", " ", "=", " ", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{
       SuperscriptBox["\[Phi]1", "\[Prime]",
        MultilineFunction->None], "[", "t", "]"}], "\[Rule]", 
      "0.04819125830959889`"}], ",", 
     RowBox[{
      RowBox[{
       SuperscriptBox["\[Phi]2", "\[Prime]",
        MultilineFunction->None], "[", "t", "]"}], "\[Rule]", 
      "0.03427428403166`"}], ",", 
     RowBox[{
      RowBox[{
       SuperscriptBox["\[Phi]3", "\[Prime]",
        MultilineFunction->None], "[", "t", "]"}], "\[Rule]", 
      "0.022537110420045366`"}], ",", 
     RowBox[{
      RowBox[{
       SuperscriptBox["\[Phi]4", "\[Prime]",
        MultilineFunction->None], "[", "t", "]"}], "\[Rule]", 
      RowBox[{"-", "0.02504333390626954`"}]}], ",", 
     RowBox[{
      RowBox[{
       SuperscriptBox["\[Phi]5", "\[Prime]",
        MultilineFunction->None], "[", "t", "]"}], "\[Rule]", 
      RowBox[{"-", "0.06015570745871055`"}]}], ",", 
     RowBox[{
      RowBox[{
       SuperscriptBox["\[Phi]6", "\[Prime]",
        MultilineFunction->None], "[", "t", "]"}], "\[Rule]", 
      RowBox[{"-", "0.06962346394226754`"}]}], ",", 
     RowBox[{
      RowBox[{
       SuperscriptBox["\[Psi]1", "\[Prime]",
        MultilineFunction->None], "[", "t", "]"}], "\[Rule]", 
      "0.17522543152669445`"}], ",", 
     RowBox[{
      RowBox[{
       SuperscriptBox["\[Psi]2", "\[Prime]",
        MultilineFunction->None], "[", "t", "]"}], "\[Rule]", 
      "0.09442759444255354`"}], ",", 
     RowBox[{
      RowBox[{
       SuperscriptBox["\[Psi]3", "\[Prime]",
        MultilineFunction->None], "[", "t", "]"}], "\[Rule]", 
      "0.05971195202706652`"}], ",", 
     RowBox[{
      RowBox[{
       SuperscriptBox["\[Psi]4", "\[Prime]",
        MultilineFunction->None], "[", "t", "]"}], "\[Rule]", 
      "0.04189876317323693`"}], ",", 
     RowBox[{
      RowBox[{
       SuperscriptBox["\[Psi]5", "\[Prime]",
        MultilineFunction->None], "[", "t", "]"}], "\[Rule]", 
      "0.08197436457283205`"}], ",", 
     RowBox[{
      RowBox[{
       SuperscriptBox["\[Psi]6", "\[Prime]",
        MultilineFunction->None], "[", "t", "]"}], "\[Rule]", 
      "0.1734108446847269`"}], ",", 
     RowBox[{
      RowBox[{
       SuperscriptBox["l1", "\[Prime]",
        MultilineFunction->None], "[", "t", "]"}], "\[Rule]", "0.1`"}], ",", 
     RowBox[{
      RowBox[{
       SuperscriptBox["l2", "\[Prime]",
        MultilineFunction->None], "[", "t", "]"}], "\[Rule]", "0"}], ",", 
     RowBox[{
      RowBox[{
       SuperscriptBox["l3", "\[Prime]",
        MultilineFunction->None], "[", "t", "]"}], "\[Rule]", "0"}], ",", 
     RowBox[{
      RowBox[{
       SuperscriptBox["l4", "\[Prime]",
        MultilineFunction->None], "[", "t", "]"}], "\[Rule]", "0"}], ",", 
     RowBox[{
      RowBox[{
       SuperscriptBox["l5", "\[Prime]",
        MultilineFunction->None], "[", "t", "]"}], "\[Rule]", "0"}], ",", 
     RowBox[{
      RowBox[{
       SuperscriptBox["l6", "\[Prime]",
        MultilineFunction->None], "[", "t", "]"}], "\[Rule]", "0"}]}], 
    "}"}]}], ";"}]}], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{{3.757946520421876*^9, 3.757946549164997*^9}, 
   3.757946718292102*^9, 3.7624792462687125`*^9, {3.766020241956682*^9, 
   3.7660202425413465`*^9}},ExpressionUUID->"6a051558-810b-42df-89b7-\
122f219f8668"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"Formulating", " ", "the", " ", "potential", " ", "term"}], "*)"}],
   "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"tempV", " ", "=", " ", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"ma", "*", "g", "*", 
          RowBox[{
           RowBox[{"pa", "[", 
            RowBox[{"[", "i", "]"}], "]"}], "[", 
           RowBox[{"[", "3", "]"}], "]"}]}], ",", " ", 
         RowBox[{"mb", "*", "g", "*", 
          RowBox[{
           RowBox[{"pb", "[", 
            RowBox[{"[", "i", "]"}], "]"}], "[", 
           RowBox[{"[", "3", "]"}], "]"}]}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", " ", "6"}], "}"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"V", " ", "=", " ", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"Total", "[", 
          RowBox[{"Append", "[", 
           RowBox[{
            RowBox[{"Flatten", "[", "tempV", "]"}], ",", " ", 
            RowBox[{"mtp", "*", "g", "*", 
             RowBox[{"pc", "[", 
              RowBox[{"[", "3", "]"}], "]"}]}]}], "]"}], "]"}], "/.", 
         "datap"}], "/.", "leglparam"}], "/.", "legmparam"}], "/.", 
      "tpmparam"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"G", " ", "=", " ", 
     RowBox[{"D", "[", 
      RowBox[{"V", ",", " ", 
       RowBox[{"{", "q", "}"}]}], "]"}]}], ";"}]}]}]], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{{3.7454595450583167`*^9, 3.7454595762684193`*^9}, {
   3.7454596191881123`*^9, 3.7454596301979017`*^9}, {3.745459665148035*^9, 
   3.745459713629176*^9}, {3.7454599165365868`*^9, 3.7454599403821373`*^9}, {
   3.7610271812578344`*^9, 3.761027186747899*^9}, 3.7624792462687125`*^9, {
   3.766020238414709*^9, 
   3.766020246899851*^9}},ExpressionUUID->"6e589bc6-b69e-4afc-a85e-\
d2f08128a9bb"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
   "Now", " ", "we", " ", "have", " ", "dynamics", " ", "in", " ", "the", " ",
     "extended", " ", "configuration", " ", 
    RowBox[{"space", ".", " ", "We"}], " ", "need", " ", "to", " ", "map", 
    " ", "it", " ", "back", " ", "to", " ", "the", " ", "task", " ", "space", 
    " ", "of", " ", "the", " ", "manipulator"}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"aj", "  ", "=", " ", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"b", "[", 
         RowBox[{"[", "i", "]"}], "]"}], "+", 
        RowBox[{
         RowBox[{"Rl", "[", 
          RowBox[{"[", "i", "]"}], "]"}], ".", 
         RowBox[{"{", 
          RowBox[{"0", ",", "0", ",", " ", 
           RowBox[{"l", "[", 
            RowBox[{"[", "i", "]"}], "]"}]}], "}"}]}]}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", " ", 
         RowBox[{"Length", "[", "b", "]"}]}], "}"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"atp", " ", "=", " ", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"pc", "+", 
        RowBox[{"Rtp", ".", 
         RowBox[{"al", "[", 
          RowBox[{"[", "i", "]"}], "]"}]}]}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", " ", 
         RowBox[{"Length", "[", "al", "]"}]}], "}"}]}], "]"}]}], 
    ";"}]}]}]], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{{3.7610274137553053`*^9, 3.7610274370217843`*^9}, {
   3.7610278835752964`*^9, 3.761027885580029*^9}, 3.7624792462687125`*^9, {
   3.766020248994652*^9, 
   3.766020249637284*^9}},ExpressionUUID->"ec753bbb-cb88-4647-9159-\
c5a75b4292e4"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
   "Formulating", " ", "the", " ", "simple", " ", "constraint", " ", 
    "equations", " ", 
    RowBox[{"(", 
     RowBox[{
     "not", " ", "the", " ", "rigidity", " ", "of", " ", "the", " ", "top", 
      " ", "platform", " ", "constraint"}], ")"}]}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"\[Eta]", " ", "=", " ", 
    RowBox[{
     RowBox[{
      RowBox[{"Flatten", "[", 
       RowBox[{"(", 
        RowBox[{"aj", "-", "atp"}], ")"}], "]"}], "/.", "datap"}], "/.", 
     "leglparam"}]}], ";"}]}]], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{{3.7610274580912676`*^9, 3.7610275170877457`*^9}, {
   3.76102782648505*^9, 3.761027828085224*^9}, 3.7624792462687125`*^9, {
   3.766020252989366*^9, 3.7660202537119513`*^9}, 3.7661519857570615`*^9, {
   3.766152267716894*^9, 
   3.766152286248783*^9}},ExpressionUUID->"09c8a8d9-f987-4428-aefa-\
dc5816c0f77e"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData["leglparam"], "Input",
 CellChangeTimes->{{3.7661523086938696`*^9, 3.766152309173809*^9}, {
  3.7661523552345486`*^9, 
  3.7661523565789375`*^9}},ExpressionUUID->"b17d7583-69e3-4ab6-bf9e-\
04ef0036c589"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"ro", "\[Rule]", "0.02`"}], ",", 
   RowBox[{"ri", "\[Rule]", "0.0175`"}], ",", 
   RowBox[{"\[Rho]", "\[Rule]", "7858"}], ",", 
   RowBox[{"lb", "\[Rule]", "0.5`"}], ",", 
   RowBox[{"la", "\[Rule]", "1.5`"}]}], "}"}]], "Output",
 CellChangeTimes->{3.76615670357028*^9, 3.7662150441119685`*^9, 
  3.7662680618698263`*^9, 
  3.766291694004776*^9},ExpressionUUID->"58db2347-485d-45e9-8e49-\
2e4f86da43a7"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"leglparam2", " ", "=", " ", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"ro", "\[Rule]", 
      RowBox[{"2", "/", "100"}]}], ",", 
     RowBox[{"ri", "\[Rule]", 
      RowBox[{"175", "/", "10000"}]}], ",", 
     RowBox[{"\[Rho]", "\[Rule]", "7858"}], ",", 
     RowBox[{"lb", "\[Rule]", 
      RowBox[{"1", "/", "2"}]}], ",", 
     RowBox[{"la", "\[Rule]", 
      RowBox[{"3", "/", "2"}]}]}], "}"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.766152361194974*^9, 
  3.766152385524171*^9}},ExpressionUUID->"ae2a19d2-9c36-4087-8f4b-\
b93e894ec5d8"],

Cell[BoxData[
 RowBox[{
  RowBox[{"datap2", " ", "=", " ", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"rb", "\[Rule]", "1"}], ",", 
     RowBox[{"rt", "\[Rule]", 
      RowBox[{"1", "/", "2"}]}], ",", 
     RowBox[{"\[Gamma]t", "\[Rule]", 
      RowBox[{"1", "/", "5"}]}], ",", 
     RowBox[{"\[Gamma]b", "\[Rule]", 
      RowBox[{"1", "/", "3"}]}]}], "}"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.7661523146344104`*^9, 3.766152350537893*^9}, 
   3.7661523885046244`*^9},ExpressionUUID->"d2845782-574e-4e1c-a216-\
0a5bd9d8c24d"],

Cell[BoxData[
 RowBox[{
  RowBox[{"\[Eta]2", " ", "=", " ", 
   RowBox[{"Simplify", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"Flatten", "[", 
       RowBox[{"(", 
        RowBox[{"aj", "-", "atp"}], ")"}], "]"}], "/.", "leglparam2"}], "/.", 
     "datap2"}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.7661523903128414`*^9, 3.7661524301124077`*^9}, {
  3.7661525037101135`*^9, 
  3.7661525068155775`*^9}},ExpressionUUID->"f62905a3-5d18-4f7d-9552-\
24ea44777d77"],

Cell[BoxData[
 RowBox[{
  RowBox[{"tempJ", " ", "=", " ", 
   RowBox[{"D", "[", 
    RowBox[{"\[Eta]2", ",", " ", 
     RowBox[{"{", 
      RowBox[{"Join", "[", 
       RowBox[{"qx", ",", " ", "\[Phi]", ",", " ", "\[Psi]"}], "]"}], "}"}]}],
     "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.766152418634246*^9, 
  3.766152463310376*^9}},ExpressionUUID->"e34d5a76-0ba2-435f-9df3-\
58431b51ff43"],

Cell[BoxData[
 RowBox[{
  RowBox[{"tempJ2", " ", "=", " ", 
   RowBox[{"tempJ", "/.", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"1", "+", 
       SuperscriptBox["c1", "2"], "+", 
       SuperscriptBox["c2", "2"], "+", 
       SuperscriptBox["c3", "2"]}], ")"}], "\[Rule]", "\[CapitalDelta]"}]}]}],
   ";"}]], "Input",
 CellChangeTimes->{{3.766152525380314*^9, 
  3.766152566616601*^9}},ExpressionUUID->"67583ddf-193f-4a6e-94e5-\
be946bc91d2e"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"test", " ", "=", " ", 
  RowBox[{"Inner", "[", 
   RowBox[{"Rule", ",", " ", "q", ",", " ", 
    RowBox[{"ConstantArray", "[", 
     RowBox[{
      RowBox[{"415", "/", "532"}], ",", 
      RowBox[{"{", "24", "}"}]}], "]"}], ",", " ", "List"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.7661528365300846`*^9, 
  3.7661528764450436`*^9}},ExpressionUUID->"bd984697-db2e-47b8-8a3d-\
3a89e267f839"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"x", "\[Rule]", 
    FractionBox["415", "532"]}], ",", 
   RowBox[{"y", "\[Rule]", 
    FractionBox["415", "532"]}], ",", 
   RowBox[{"z", "\[Rule]", 
    FractionBox["415", "532"]}], ",", 
   RowBox[{"c1", "\[Rule]", 
    FractionBox["415", "532"]}], ",", 
   RowBox[{"c2", "\[Rule]", 
    FractionBox["415", "532"]}], ",", 
   RowBox[{"c3", "\[Rule]", 
    FractionBox["415", "532"]}], ",", 
   RowBox[{"\[Phi]1", "\[Rule]", 
    FractionBox["415", "532"]}], ",", 
   RowBox[{"\[Phi]2", "\[Rule]", 
    FractionBox["415", "532"]}], ",", 
   RowBox[{"\[Phi]3", "\[Rule]", 
    FractionBox["415", "532"]}], ",", 
   RowBox[{"\[Phi]4", "\[Rule]", 
    FractionBox["415", "532"]}], ",", 
   RowBox[{"\[Phi]5", "\[Rule]", 
    FractionBox["415", "532"]}], ",", 
   RowBox[{"\[Phi]6", "\[Rule]", 
    FractionBox["415", "532"]}], ",", 
   RowBox[{"\[Psi]1", "\[Rule]", 
    FractionBox["415", "532"]}], ",", 
   RowBox[{"\[Psi]2", "\[Rule]", 
    FractionBox["415", "532"]}], ",", 
   RowBox[{"\[Psi]3", "\[Rule]", 
    FractionBox["415", "532"]}], ",", 
   RowBox[{"\[Psi]4", "\[Rule]", 
    FractionBox["415", "532"]}], ",", 
   RowBox[{"\[Psi]5", "\[Rule]", 
    FractionBox["415", "532"]}], ",", 
   RowBox[{"\[Psi]6", "\[Rule]", 
    FractionBox["415", "532"]}], ",", 
   RowBox[{"l1", "\[Rule]", 
    FractionBox["415", "532"]}], ",", 
   RowBox[{"l2", "\[Rule]", 
    FractionBox["415", "532"]}], ",", 
   RowBox[{"l3", "\[Rule]", 
    FractionBox["415", "532"]}], ",", 
   RowBox[{"l4", "\[Rule]", 
    FractionBox["415", "532"]}], ",", 
   RowBox[{"l5", "\[Rule]", 
    FractionBox["415", "532"]}], ",", 
   RowBox[{"l6", "\[Rule]", 
    FractionBox["415", "532"]}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.766152836754034*^9, {3.766152872400318*^9, 3.766152877769144*^9}, 
   3.7661567112239013`*^9, 3.766215055918352*^9, 3.7662680734602118`*^9, 
   3.7662917061939898`*^9},ExpressionUUID->"89678549-f50c-48f1-822b-\
751897f3024e"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"tempJ", "//", "MatrixPlot"}]], "Input",
 CellChangeTimes->{{3.7661530062893715`*^9, 3.7661530101184196`*^9}, {
  3.766153043719326*^9, 3.7661530451229663`*^9}, {3.7661530759613924`*^9, 
  3.7661531058693686`*^9}},ExpressionUUID->"d43e423d-4748-4c62-9d4f-\
e037a4369c75"],

Cell[BoxData[
 GraphicsBox[RasterBox[CompressedData["
1:eJxTTMoPSmVmYGAQgmIQGwI+2BNLa8k3rbq4+oJ9kkCE5ZYT1+xvC6ts293+
Bir/wJ4BKyBVnHj3UJceuu7BHy+kmj9U4muw0ZjhQ168DNf4Gn7uGR7l4UiL
l+GavwZ/fI3M8nCwpRPauWdolYej8UKeewZb/hq68TW8y8PBlh7o757BWR6O
xstoeUgJPdjqqcEWX4Mt3gePewa2PBw84TDY3DNaHhJDD5V6aqDia7DF72Bz
z0CVh4MtHAabe0bLQ/z04HHn4CwPB0/4DDb3AAAeSkik
   "], {{0, 0}, {18, 18}}, {0, 1}],
  Frame->True,
  FrameLabel->{None, None},
  FrameTicks->{{{{17.5, 
       FormBox["1", TraditionalForm]}, {13.5, 
       FormBox["5", TraditionalForm]}, {8.5, 
       FormBox["10", TraditionalForm]}, {3.5, 
       FormBox["15", TraditionalForm]}, {0.5, 
       FormBox["18", TraditionalForm]}}, {{17.5, 
       FormBox["1", TraditionalForm]}, {13.5, 
       FormBox["5", TraditionalForm]}, {8.5, 
       FormBox["10", TraditionalForm]}, {3.5, 
       FormBox["15", TraditionalForm]}, {0.5, 
       FormBox["18", TraditionalForm]}}}, {{{0.5, 
       FormBox["1", TraditionalForm]}, {4.5, 
       FormBox["5", TraditionalForm]}, {9.5, 
       FormBox["10", TraditionalForm]}, {14.5, 
       FormBox["15", TraditionalForm]}, {17.5, 
       FormBox["18", TraditionalForm]}}, {{0.5, 
       FormBox["1", TraditionalForm]}, {4.5, 
       FormBox["5", TraditionalForm]}, {9.5, 
       FormBox["10", TraditionalForm]}, {14.5, 
       FormBox["15", TraditionalForm]}, {17.5, 
       FormBox["18", TraditionalForm]}}}},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "AxisPadding" -> Scaled[0.02], "DefaultBoundaryStyle" -> Automatic, 
    "DefaultPlotStyle" -> Automatic, "DomainPadding" -> Scaled[0.02], 
    "RangePadding" -> Scaled[0.05]}]], "Output",
 CellChangeTimes->{{3.766153099767321*^9, 3.766153106465997*^9}, 
   3.7661567117166543`*^9, 3.766215056285144*^9, 3.766268073748029*^9, 
   3.7662917070315094`*^9},ImageCache->GraphicsData["CompressedBitmap", "\<\
eJztnU1u3DYYhqn5yzh1azi71ClgwCs7WRXNAcZI7EXjqZ20aIGujKCCvSha
pNl1kTlALzCbXqGLOUH3c4zOOVTxRxJJfZTIkSYZ2S9gaySKfL6XFEWRlEhe
XL+/+eXX6/e3b68Pz99d/35z+/aPw7Pf3qVO/Yix6Cb9vz1kfD9hLNsk6V9y
yzfcpX7/K/HTT7crtpjN2TI9OhVuA7acxyyO5f9ssXpNeO2VvM7YYpV85+VV
UJ8K55HhNRH//DjuCX99Nl9mzgl77JY+yWjLOYfnQVaLGUdciYOHZWOp93i2
YCtzf+rSJuk9JUDBxdGxwwL3Uwhasnkszn3pjsrLzE2LymUYfUpghwS2SnQ8
X0rsasFmtaL19I9jk1SR/noKauemVZerTD+pyHUySJxd2QMZBfkzlCEWSyIq
Q5meszR9VZ7lCSKvwy4ZruJ6vBIOnzmDUaaO68Lw66Jn3TSMit0TO+5SxcRI
JnG/sjeZFdNr1c3BLsTZMR2mYD9bA13KYXkSqsJpaBQjqtRhV4T/2hLK9kqj
T/zRB/6lr2t/j/8kSQr9lm/2NFfW5y55wbZLuL0g3L4n3H4g3L72tPE5JDWT
JLbn2xlmwLdHPAfuJ6c///c8+cDYT/LQ2HsA7B3CyuIsqCbWa1mJj4SIK4i4
c6Tr9q4U9Tei2du8h2iiyiVED7ndnqfUIsQgzJQh0KsyNdhIinqZls4ssH7U
XPAXZhnrbzsTLJ8WAXWi5tl2z9IcZJ6VskVtPWhz2aLWdK+L5e8dwe7z0I84
VuwJ9r8ggggiiCB2hJjCjnJYe48GYIEFFlhgPwbWquGf8cNHfO/HfE88McC+
F+yqfhXrraxv2z1IRoD9nq6Y6A90v4D17ZJcQ3m1jojLKDon6eSm3r4Kf86+
PadOu4OPMBRxOxE3VNPr6Hih6tvntEZaemtQygPfmraUfz27+coCsm6+HS1q
zjekImO1oHbXr4OvMDywM6rfu9ANZgt/EVG3y2KwGzZw/wEWWGCBBfbeY43G
c8tPHrDBBhtssLvItlolz+XhB71j9QhssMEGG2yw22JTTZ2/gQUWWGCB7Q7W
aJq0/IgAu2Nsvw8Yqgc/NJERYN/4gMJ7wLvzzW5z1d4aGozqKj6i8NXrN0pq
vWFcxID2j5q+Dg3ZBxXBo9dbEm8PQwrSwHT1SSvjp5qpD9LQ5iCqdsqRxiOp
trzEBnv9BrE4tDpivwEbbLDBBvt+sakG9l/AAgsssMDee6zRKmn5yQM22GCD
DXYX2VarZD8nFj1WZ2CDDTbYYIPdFptq6vwJ7N3FjhTImkpi2Nja0AjL/7mJ
bD5cfZkBKUHN8jByrUJQ8U53PUXKDDUdhlK0o07pikqfTNQaL0KMCB4ReWI+
h+aR3ylFnjCj5stRauhZ/JvnjLGVM0o2xroKc8p9KieHWR9Z1nP2Q/2GoKdP
aD0PWndFZkfLGN0qTe4M1mjZtfyEBRtssMEGG2yTXbTsznJi0aMIIoggggji
NhOpJsktsMACCyyw3cFm1fz2HgwgflKiOsWIqaXbsEKNMx1vrWVq1Cdlr3rC
7E8ev+JNRXlEZCMF9kuKEl4JGGVYc0Bjq7YTm15K9mJE4kaSvcCPu3O7g5jn
Hr49DwuzhYv/QlJXJJUW4RZe1lzWW98v1jYvivlTdddYXzC8JrzWLmteu8TG
U+E8YqVpGdzL/T52S59kNPqTB7kyu/ccEFOXNve6H8cOC46JBEorzBehXmZu
WlQuw+hTAkst/VElmliat0K0nv7E5xCu9HfMETGtulxl+klFrrMW7D2QUZA/
dGVnkp8rf7Jxmd+0QdNGvBIOYUuIHNeFIRYWVrF7YsddqpgYySS/j3iTWQmY
ReJCnB3Xre7xbA10KYcV9aVTdVmor0muCP+1JZTfOh8n/ugD/9KXRf8D+8zq
gg==\
\>"],ExpressionUUID->"96d5b629-f525-48cc-ac7d-05257bcf9f73"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"?", "Rationalize"}]], "Input",
 CellChangeTimes->{{3.766153375635877*^9, 
  3.766153378965807*^9}},ExpressionUUID->"85a31e1e-5e47-4e53-a854-\
32478e24c272"],

Cell[BoxData[
 RowBox[{"\<\"\\!\\(\\*RowBox[{\\\"Rationalize\\\", \\\"[\\\", StyleBox[\\\"x\
\\\", \\\"TI\\\"], \\\"]\\\"}]\\) converts an approximate number \
\\!\\(\\*StyleBox[\\\"x\\\", \\\"TI\\\"]\\) to a nearby rational with small \
denominator. \\n\\!\\(\\*RowBox[{\\\"Rationalize\\\", \\\"[\\\", \
RowBox[{StyleBox[\\\"x\\\", \\\"TI\\\"], \\\",\\\", StyleBox[\\\"dx\\\", \
\\\"TI\\\"]}], \\\"]\\\"}]\\) yields the rational number with smallest \
denominator that lies within \\!\\(\\*StyleBox[\\\"dx\\\", \\\"TI\\\"]\\) of \
\\!\\(\\*StyleBox[\\\"x\\\", \\\"TI\\\"]\\).\"\>", "\[NonBreakingSpace]", 
  ButtonBox[
   StyleBox["\[RightSkeleton]", "SR"],
   Active->True,
   BaseStyle->"Link",
   ButtonData->"paclet:ref/Rationalize"]}]], "Print", "PrintUsage",
 CellChangeTimes->{3.7662917074482927`*^9},
 CellTags->
  "Info893766311507-6810499",ExpressionUUID->"611c6a84-d008-4de1-8fcc-\
323648b55c57"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"qnew", " ", "=", " ", 
  RowBox[{"SetPrecision", "[", 
   RowBox[{
    RowBox[{"qecdat", "[", 
     RowBox[{"[", "1", "]"}], "]"}], ",", "20"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.766153444265284*^9, 3.766153463697833*^9}, {
  3.7661535147304*^9, 
  3.766153533664051*^9}},ExpressionUUID->"9377ddff-38f4-4d58-9b22-\
ca14582b7ca3"],

Cell[BoxData[
 TemplateBox[{
  "Part","partd",
   "\"Part specification \\!\\(\\*RowBox[{\\\"qecdat\\\", \\\"\
\[LeftDoubleBracket]\\\", \\\"1\\\", \\\"\[RightDoubleBracket]\\\"}]\\) is \
longer than depth of object.\"",2,90,1,25993525642924664479,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.7662680745855484`*^9, 
  3.7662917077910748`*^9},ExpressionUUID->"2cffe3fd-dcb4-4900-91b9-\
a0f0e3bb0778"],

Cell[BoxData[
 RowBox[{"qecdat", "\[LeftDoubleBracket]", "1", 
  "\[RightDoubleBracket]"}]], "Output",
 CellChangeTimes->{{3.7661534591803675`*^9, 3.7661534644780197`*^9}, {
   3.7661535151503124`*^9, 3.766153534223911*^9}, 3.766156712412219*^9, 
   3.766156825987946*^9, 3.7662150568338313`*^9, 3.7662151092534575`*^9, 
   3.7662680746744986`*^9, 
   3.766291707914032*^9},ExpressionUUID->"9030d555-5d43-4a44-9c82-\
28163116dae1"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(", 
   RowBox[{
    RowBox[{"Inverse", "[", 
     RowBox[{"tempJ", "/.", "qnewlist"}], "]"}], "-", 
    RowBox[{"Inverse", "[", 
     RowBox[{"tempJ", "/.", "qnewlist"}], "]"}]}], ")"}], "//", 
  "MatrixForm"}]], "Input",
 CellChangeTimes->{{3.7662151646414757`*^9, 
  3.7662151892438245`*^9}},ExpressionUUID->"b81275da-7b2f-4de0-99c9-\
d3f5db365dd5"],

Cell[BoxData[
 TemplateBox[{
  "ReplaceAll","reps",
   "\"\\!\\(\\*RowBox[{\\\"{\\\", \\\"qnewlist\\\", \\\"}\\\"}]\\) is neither \
a list of replacement rules nor a valid dispatch table, and so cannot be used \
for replacing.\"",2,91,2,25993525642924664479,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.7662680747134943`*^9, 
  3.7662917079679947`*^9},ExpressionUUID->"b23e7c48-5615-49fc-ac20-\
7664051cf886"],

Cell[BoxData[
 TemplateBox[{
  "ReplaceAll","reps",
   "\"\\!\\(\\*RowBox[{\\\"{\\\", \\\"qnewlist\\\", \\\"}\\\"}]\\) is neither \
a list of replacement rules nor a valid dispatch table, and so cannot be used \
for replacing.\"",2,91,3,25993525642924664479,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.7662680747134943`*^9, 
  3.766291708004978*^9},ExpressionUUID->"fd90cd89-ce8d-47a5-bc50-\
6c98e5dd2c1a"],

Cell[BoxData[
 TagBox["0",
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{3.766215189549667*^9, 3.766268074783455*^9, 
  3.7662917080439315`*^9},ExpressionUUID->"a84ad113-9b4e-46d7-8437-\
e10646b86ff9"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"PseudoInverse", "[", 
   RowBox[{"tempJ", "/.", "qnewlist"}], "]"}], "//", "MatrixForm"}]], "Input",
 CellChangeTimes->{{3.7662151441816454`*^9, 
  3.7662151517079215`*^9}},ExpressionUUID->"49ce4038-0e4f-4649-82f7-\
c7e6ccb0083f"],

Cell[BoxData[
 TemplateBox[{
  "ReplaceAll","reps",
   "\"\\!\\(\\*RowBox[{\\\"{\\\", \\\"qnewlist\\\", \\\"}\\\"}]\\) is neither \
a list of replacement rules nor a valid dispatch table, and so cannot be used \
for replacing.\"",2,92,4,25993525642924664479,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.7662680748224134`*^9, 
  3.7662917081288815`*^9},ExpressionUUID->"2353c90d-6e9a-45d3-a945-\
2a33c2b7f4b2"],

Cell[BoxData[
 TagBox[
  RowBox[{"PseudoInverse", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "1"}], ",", "0", ",", "0", ",", 
        RowBox[{
         FractionBox[
          RowBox[{"2", " ", "c1", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"c1", " ", "c2"}], "-", "c3"}], ")"}], " ", 
           RowBox[{"Cos", "[", 
            RowBox[{
             FractionBox["1", "5"], "+", 
             FractionBox["\[Pi]", "6"]}], "]"}]}], 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"1", "+", 
             SuperscriptBox["c1", "2"], "+", 
             SuperscriptBox["c2", "2"], "+", 
             SuperscriptBox["c3", "2"]}], ")"}], "2"]], "-", 
         FractionBox[
          RowBox[{"c2", " ", 
           RowBox[{"Cos", "[", 
            RowBox[{
             FractionBox["1", "5"], "+", 
             FractionBox["\[Pi]", "6"]}], "]"}]}], 
          RowBox[{"1", "+", 
           SuperscriptBox["c1", "2"], "+", 
           SuperscriptBox["c2", "2"], "+", 
           SuperscriptBox["c3", "2"]}]], "+", 
         FractionBox[
          RowBox[{"c1", " ", 
           RowBox[{"(", 
            RowBox[{"1", "+", 
             SuperscriptBox["c1", "2"], "-", 
             SuperscriptBox["c2", "2"], "-", 
             SuperscriptBox["c3", "2"]}], ")"}], " ", 
           RowBox[{"Sin", "[", 
            RowBox[{
             FractionBox["1", "5"], "+", 
             FractionBox["\[Pi]", "6"]}], "]"}]}], 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"1", "+", 
             SuperscriptBox["c1", "2"], "+", 
             SuperscriptBox["c2", "2"], "+", 
             SuperscriptBox["c3", "2"]}], ")"}], "2"]], "-", 
         FractionBox[
          RowBox[{"c1", " ", 
           RowBox[{"Sin", "[", 
            RowBox[{
             FractionBox["1", "5"], "+", 
             FractionBox["\[Pi]", "6"]}], "]"}]}], 
          RowBox[{"1", "+", 
           SuperscriptBox["c1", "2"], "+", 
           SuperscriptBox["c2", "2"], "+", 
           SuperscriptBox["c3", "2"]}]]}], ",", 
        RowBox[{
         FractionBox[
          RowBox[{"2", " ", "c2", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"c1", " ", "c2"}], "-", "c3"}], ")"}], " ", 
           RowBox[{"Cos", "[", 
            RowBox[{
             FractionBox["1", "5"], "+", 
             FractionBox["\[Pi]", "6"]}], "]"}]}], 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"1", "+", 
             SuperscriptBox["c1", "2"], "+", 
             SuperscriptBox["c2", "2"], "+", 
             SuperscriptBox["c3", "2"]}], ")"}], "2"]], "-", 
         FractionBox[
          RowBox[{"c1", " ", 
           RowBox[{"Cos", "[", 
            RowBox[{
             FractionBox["1", "5"], "+", 
             FractionBox["\[Pi]", "6"]}], "]"}]}], 
          RowBox[{"1", "+", 
           SuperscriptBox["c1", "2"], "+", 
           SuperscriptBox["c2", "2"], "+", 
           SuperscriptBox["c3", "2"]}]], "+", 
         FractionBox[
          RowBox[{"c2", " ", 
           RowBox[{"(", 
            RowBox[{"1", "+", 
             SuperscriptBox["c1", "2"], "-", 
             SuperscriptBox["c2", "2"], "-", 
             SuperscriptBox["c3", "2"]}], ")"}], " ", 
           RowBox[{"Sin", "[", 
            RowBox[{
             FractionBox["1", "5"], "+", 
             FractionBox["\[Pi]", "6"]}], "]"}]}], 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"1", "+", 
             SuperscriptBox["c1", "2"], "+", 
             SuperscriptBox["c2", "2"], "+", 
             SuperscriptBox["c3", "2"]}], ")"}], "2"]], "+", 
         FractionBox[
          RowBox[{"c2", " ", 
           RowBox[{"Sin", "[", 
            RowBox[{
             FractionBox["1", "5"], "+", 
             FractionBox["\[Pi]", "6"]}], "]"}]}], 
          RowBox[{"1", "+", 
           SuperscriptBox["c1", "2"], "+", 
           SuperscriptBox["c2", "2"], "+", 
           SuperscriptBox["c3", "2"]}]]}], ",", 
        RowBox[{
         FractionBox[
          RowBox[{"2", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"c1", " ", "c2"}], "-", "c3"}], ")"}], " ", "c3", " ", 
           RowBox[{"Cos", "[", 
            RowBox[{
             FractionBox["1", "5"], "+", 
             FractionBox["\[Pi]", "6"]}], "]"}]}], 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"1", "+", 
             SuperscriptBox["c1", "2"], "+", 
             SuperscriptBox["c2", "2"], "+", 
             SuperscriptBox["c3", "2"]}], ")"}], "2"]], "+", 
         FractionBox[
          RowBox[{"Cos", "[", 
           RowBox[{
            FractionBox["1", "5"], "+", 
            FractionBox["\[Pi]", "6"]}], "]"}], 
          RowBox[{"1", "+", 
           SuperscriptBox["c1", "2"], "+", 
           SuperscriptBox["c2", "2"], "+", 
           SuperscriptBox["c3", "2"]}]], "+", 
         FractionBox[
          RowBox[{"c3", " ", 
           RowBox[{"(", 
            RowBox[{"1", "+", 
             SuperscriptBox["c1", "2"], "-", 
             SuperscriptBox["c2", "2"], "-", 
             SuperscriptBox["c3", "2"]}], ")"}], " ", 
           RowBox[{"Sin", "[", 
            RowBox[{
             FractionBox["1", "5"], "+", 
             FractionBox["\[Pi]", "6"]}], "]"}]}], 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"1", "+", 
             SuperscriptBox["c1", "2"], "+", 
             SuperscriptBox["c2", "2"], "+", 
             SuperscriptBox["c3", "2"]}], ")"}], "2"]], "+", 
         FractionBox[
          RowBox[{"c3", " ", 
           RowBox[{"Sin", "[", 
            RowBox[{
             FractionBox["1", "5"], "+", 
             FractionBox["\[Pi]", "6"]}], "]"}]}], 
          RowBox[{"1", "+", 
           SuperscriptBox["c1", "2"], "+", 
           SuperscriptBox["c2", "2"], "+", 
           SuperscriptBox["c3", "2"]}]]}], ",", 
        RowBox[{"l1", " ", 
         RowBox[{"Cos", "[", "\[Phi]1", "]"}], " ", 
         RowBox[{"Cos", "[", "\[Psi]1", "]"}]}], ",", "0", ",", "0", ",", "0",
         ",", "0", ",", "0", ",", 
        RowBox[{
         RowBox[{"-", "l1"}], " ", 
         RowBox[{"Sin", "[", "\[Phi]1", "]"}], " ", 
         RowBox[{"Sin", "[", "\[Psi]1", "]"}]}], ",", "0", ",", "0", ",", "0",
         ",", "0", ",", "0"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0", ",", 
        RowBox[{"-", "1"}], ",", "0", ",", 
        RowBox[{
         RowBox[{"-", 
          FractionBox[
           RowBox[{"c1", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "+", 
              SuperscriptBox["c1", "2"], "-", 
              SuperscriptBox["c2", "2"], "+", 
              SuperscriptBox["c3", "2"]}], ")"}], " ", 
            RowBox[{"Cos", "[", 
             RowBox[{
              FractionBox["1", "5"], "+", 
              FractionBox["\[Pi]", "6"]}], "]"}]}], 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{"1", "+", 
              SuperscriptBox["c1", "2"], "+", 
              SuperscriptBox["c2", "2"], "+", 
              SuperscriptBox["c3", "2"]}], ")"}], "2"]]}], "+", 
         FractionBox[
          RowBox[{"c1", " ", 
           RowBox[{"Cos", "[", 
            RowBox[{
             FractionBox["1", "5"], "+", 
             FractionBox["\[Pi]", "6"]}], "]"}]}], 
          RowBox[{"1", "+", 
           SuperscriptBox["c1", "2"], "+", 
           SuperscriptBox["c2", "2"], "+", 
           SuperscriptBox["c3", "2"]}]], "+", 
         FractionBox[
          RowBox[{"2", " ", "c1", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"c1", " ", "c2"}], "+", "c3"}], ")"}], " ", 
           RowBox[{"Sin", "[", 
            RowBox[{
             FractionBox["1", "5"], "+", 
             FractionBox["\[Pi]", "6"]}], "]"}]}], 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"1", "+", 
             SuperscriptBox["c1", "2"], "+", 
             SuperscriptBox["c2", "2"], "+", 
             SuperscriptBox["c3", "2"]}], ")"}], "2"]], "-", 
         FractionBox[
          RowBox[{"c2", " ", 
           RowBox[{"Sin", "[", 
            RowBox[{
             FractionBox["1", "5"], "+", 
             FractionBox["\[Pi]", "6"]}], "]"}]}], 
          RowBox[{"1", "+", 
           SuperscriptBox["c1", "2"], "+", 
           SuperscriptBox["c2", "2"], "+", 
           SuperscriptBox["c3", "2"]}]]}], ",", 
        RowBox[{
         RowBox[{"-", 
          FractionBox[
           RowBox[{"c2", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "+", 
              SuperscriptBox["c1", "2"], "-", 
              SuperscriptBox["c2", "2"], "+", 
              SuperscriptBox["c3", "2"]}], ")"}], " ", 
            RowBox[{"Cos", "[", 
             RowBox[{
              FractionBox["1", "5"], "+", 
              FractionBox["\[Pi]", "6"]}], "]"}]}], 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{"1", "+", 
              SuperscriptBox["c1", "2"], "+", 
              SuperscriptBox["c2", "2"], "+", 
              SuperscriptBox["c3", "2"]}], ")"}], "2"]]}], "-", 
         FractionBox[
          RowBox[{"c2", " ", 
           RowBox[{"Cos", "[", 
            RowBox[{
             FractionBox["1", "5"], "+", 
             FractionBox["\[Pi]", "6"]}], "]"}]}], 
          RowBox[{"1", "+", 
           SuperscriptBox["c1", "2"], "+", 
           SuperscriptBox["c2", "2"], "+", 
           SuperscriptBox["c3", "2"]}]], "+", 
         FractionBox[
          RowBox[{"2", " ", "c2", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"c1", " ", "c2"}], "+", "c3"}], ")"}], " ", 
           RowBox[{"Sin", "[", 
            RowBox[{
             FractionBox["1", "5"], "+", 
             FractionBox["\[Pi]", "6"]}], "]"}]}], 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"1", "+", 
             SuperscriptBox["c1", "2"], "+", 
             SuperscriptBox["c2", "2"], "+", 
             SuperscriptBox["c3", "2"]}], ")"}], "2"]], "-", 
         FractionBox[
          RowBox[{"c1", " ", 
           RowBox[{"Sin", "[", 
            RowBox[{
             FractionBox["1", "5"], "+", 
             FractionBox["\[Pi]", "6"]}], "]"}]}], 
          RowBox[{"1", "+", 
           SuperscriptBox["c1", "2"], "+", 
           SuperscriptBox["c2", "2"], "+", 
           SuperscriptBox["c3", "2"]}]]}], ",", 
        RowBox[{
         RowBox[{"-", 
          FractionBox[
           RowBox[{"c3", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "+", 
              SuperscriptBox["c1", "2"], "-", 
              SuperscriptBox["c2", "2"], "+", 
              SuperscriptBox["c3", "2"]}], ")"}], " ", 
            RowBox[{"Cos", "[", 
             RowBox[{
              FractionBox["1", "5"], "+", 
              FractionBox["\[Pi]", "6"]}], "]"}]}], 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{"1", "+", 
              SuperscriptBox["c1", "2"], "+", 
              SuperscriptBox["c2", "2"], "+", 
              SuperscriptBox["c3", "2"]}], ")"}], "2"]]}], "+", 
         FractionBox[
          RowBox[{"c3", " ", 
           RowBox[{"Cos", "[", 
            RowBox[{
             FractionBox["1", "5"], "+", 
             FractionBox["\[Pi]", "6"]}], "]"}]}], 
          RowBox[{"1", "+", 
           SuperscriptBox["c1", "2"], "+", 
           SuperscriptBox["c2", "2"], "+", 
           SuperscriptBox["c3", "2"]}]], "+", 
         FractionBox[
          RowBox[{"2", " ", "c3", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"c1", " ", "c2"}], "+", "c3"}], ")"}], " ", 
           RowBox[{"Sin", "[", 
            RowBox[{
             FractionBox["1", "5"], "+", 
             FractionBox["\[Pi]", "6"]}], "]"}]}], 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"1", "+", 
             SuperscriptBox["c1", "2"], "+", 
             SuperscriptBox["c2", "2"], "+", 
             SuperscriptBox["c3", "2"]}], ")"}], "2"]], "-", 
         FractionBox[
          RowBox[{"Sin", "[", 
           RowBox[{
            FractionBox["1", "5"], "+", 
            FractionBox["\[Pi]", "6"]}], "]"}], 
          RowBox[{"1", "+", 
           SuperscriptBox["c1", "2"], "+", 
           SuperscriptBox["c2", "2"], "+", 
           SuperscriptBox["c3", "2"]}]]}], ",", "0", ",", "0", ",", "0", ",", 
        "0", ",", "0", ",", "0", ",", 
        RowBox[{
         RowBox[{"-", "l1"}], " ", 
         RowBox[{"Cos", "[", "\[Psi]1", "]"}]}], ",", "0", ",", "0", ",", "0",
         ",", "0", ",", "0"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0", ",", "0", ",", 
        RowBox[{"-", "1"}], ",", 
        RowBox[{
         FractionBox[
          RowBox[{"2", " ", "c1", " ", 
           RowBox[{"(", 
            RowBox[{"c1", "+", 
             RowBox[{"c2", " ", "c3"}]}], ")"}], " ", 
           RowBox[{"Cos", "[", 
            RowBox[{
             FractionBox["1", "5"], "+", 
             FractionBox["\[Pi]", "6"]}], "]"}]}], 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"1", "+", 
             SuperscriptBox["c1", "2"], "+", 
             SuperscriptBox["c2", "2"], "+", 
             SuperscriptBox["c3", "2"]}], ")"}], "2"]], "-", 
         FractionBox[
          RowBox[{"Cos", "[", 
           RowBox[{
            FractionBox["1", "5"], "+", 
            FractionBox["\[Pi]", "6"]}], "]"}], 
          RowBox[{"1", "+", 
           SuperscriptBox["c1", "2"], "+", 
           SuperscriptBox["c2", "2"], "+", 
           SuperscriptBox["c3", "2"]}]], "-", 
         FractionBox[
          RowBox[{"2", " ", "c1", " ", 
           RowBox[{"(", 
            RowBox[{"c2", "-", 
             RowBox[{"c1", " ", "c3"}]}], ")"}], " ", 
           RowBox[{"Sin", "[", 
            RowBox[{
             FractionBox["1", "5"], "+", 
             FractionBox["\[Pi]", "6"]}], "]"}]}], 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"1", "+", 
             SuperscriptBox["c1", "2"], "+", 
             SuperscriptBox["c2", "2"], "+", 
             SuperscriptBox["c3", "2"]}], ")"}], "2"]], "-", 
         FractionBox[
          RowBox[{"c3", " ", 
           RowBox[{"Sin", "[", 
            RowBox[{
             FractionBox["1", "5"], "+", 
             FractionBox["\[Pi]", "6"]}], "]"}]}], 
          RowBox[{"1", "+", 
           SuperscriptBox["c1", "2"], "+", 
           SuperscriptBox["c2", "2"], "+", 
           SuperscriptBox["c3", "2"]}]]}], ",", 
        RowBox[{
         FractionBox[
          RowBox[{"2", " ", "c2", " ", 
           RowBox[{"(", 
            RowBox[{"c1", "+", 
             RowBox[{"c2", " ", "c3"}]}], ")"}], " ", 
           RowBox[{"Cos", "[", 
            RowBox[{
             FractionBox["1", "5"], "+", 
             FractionBox["\[Pi]", "6"]}], "]"}]}], 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"1", "+", 
             SuperscriptBox["c1", "2"], "+", 
             SuperscriptBox["c2", "2"], "+", 
             SuperscriptBox["c3", "2"]}], ")"}], "2"]], "-", 
         FractionBox[
          RowBox[{"c3", " ", 
           RowBox[{"Cos", "[", 
            RowBox[{
             FractionBox["1", "5"], "+", 
             FractionBox["\[Pi]", "6"]}], "]"}]}], 
          RowBox[{"1", "+", 
           SuperscriptBox["c1", "2"], "+", 
           SuperscriptBox["c2", "2"], "+", 
           SuperscriptBox["c3", "2"]}]], "-", 
         FractionBox[
          RowBox[{"2", " ", "c2", " ", 
           RowBox[{"(", 
            RowBox[{"c2", "-", 
             RowBox[{"c1", " ", "c3"}]}], ")"}], " ", 
           RowBox[{"Sin", "[", 
            RowBox[{
             FractionBox["1", "5"], "+", 
             FractionBox["\[Pi]", "6"]}], "]"}]}], 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"1", "+", 
             SuperscriptBox["c1", "2"], "+", 
             SuperscriptBox["c2", "2"], "+", 
             SuperscriptBox["c3", "2"]}], ")"}], "2"]], "+", 
         FractionBox[
          RowBox[{"Sin", "[", 
           RowBox[{
            FractionBox["1", "5"], "+", 
            FractionBox["\[Pi]", "6"]}], "]"}], 
          RowBox[{"1", "+", 
           SuperscriptBox["c1", "2"], "+", 
           SuperscriptBox["c2", "2"], "+", 
           SuperscriptBox["c3", "2"]}]]}], ",", 
        RowBox[{
         FractionBox[
          RowBox[{"2", " ", "c3", " ", 
           RowBox[{"(", 
            RowBox[{"c1", "+", 
             RowBox[{"c2", " ", "c3"}]}], ")"}], " ", 
           RowBox[{"Cos", "[", 
            RowBox[{
             FractionBox["1", "5"], "+", 
             FractionBox["\[Pi]", "6"]}], "]"}]}], 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"1", "+", 
             SuperscriptBox["c1", "2"], "+", 
             SuperscriptBox["c2", "2"], "+", 
             SuperscriptBox["c3", "2"]}], ")"}], "2"]], "-", 
         FractionBox[
          RowBox[{"c2", " ", 
           RowBox[{"Cos", "[", 
            RowBox[{
             FractionBox["1", "5"], "+", 
             FractionBox["\[Pi]", "6"]}], "]"}]}], 
          RowBox[{"1", "+", 
           SuperscriptBox["c1", "2"], "+", 
           SuperscriptBox["c2", "2"], "+", 
           SuperscriptBox["c3", "2"]}]], "-", 
         FractionBox[
          RowBox[{"2", " ", "c3", " ", 
           RowBox[{"(", 
            RowBox[{"c2", "-", 
             RowBox[{"c1", " ", "c3"}]}], ")"}], " ", 
           RowBox[{"Sin", "[", 
            RowBox[{
             FractionBox["1", "5"], "+", 
             FractionBox["\[Pi]", "6"]}], "]"}]}], 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"1", "+", 
             SuperscriptBox["c1", "2"], "+", 
             SuperscriptBox["c2", "2"], "+", 
             SuperscriptBox["c3", "2"]}], ")"}], "2"]], "-", 
         FractionBox[
          RowBox[{"c1", " ", 
           RowBox[{"Sin", "[", 
            RowBox[{
             FractionBox["1", "5"], "+", 
             FractionBox["\[Pi]", "6"]}], "]"}]}], 
          RowBox[{"1", "+", 
           SuperscriptBox["c1", "2"], "+", 
           SuperscriptBox["c2", "2"], "+", 
           SuperscriptBox["c3", "2"]}]]}], ",", 
        RowBox[{
         RowBox[{"-", "l1"}], " ", 
         RowBox[{"Cos", "[", "\[Psi]1", "]"}], " ", 
         RowBox[{"Sin", "[", "\[Phi]1", "]"}]}], ",", "0", ",", "0", ",", "0",
         ",", "0", ",", "0", ",", 
        RowBox[{
         RowBox[{"-", "l1"}], " ", 
         RowBox[{"Cos", "[", "\[Phi]1", "]"}], " ", 
         RowBox[{"Sin", "[", "\[Psi]1", "]"}]}], ",", "0", ",", "0", ",", "0",
         ",", "0", ",", "0"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "1"}], ",", "0", ",", "0", ",", 
        RowBox[{
         FractionBox[
          RowBox[{"c1", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"c1", " ", "c2"}], "-", "c3"}], ")"}], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              SqrtBox["3"], " ", 
              RowBox[{"Cos", "[", 
               FractionBox["1", "5"], "]"}]}], "+", 
             RowBox[{"Sin", "[", 
              FractionBox["1", "5"], "]"}]}], ")"}]}], 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"1", "+", 
             SuperscriptBox["c1", "2"], "+", 
             SuperscriptBox["c2", "2"], "+", 
             SuperscriptBox["c3", "2"]}], ")"}], "2"]], "-", 
         FractionBox[
          RowBox[{"c2", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              SqrtBox["3"], " ", 
              RowBox[{"Cos", "[", 
               FractionBox["1", "5"], "]"}]}], "+", 
             RowBox[{"Sin", "[", 
              FractionBox["1", "5"], "]"}]}], ")"}]}], 
          RowBox[{"2", " ", 
           RowBox[{"(", 
            RowBox[{"1", "+", 
             SuperscriptBox["c1", "2"], "+", 
             SuperscriptBox["c2", "2"], "+", 
             SuperscriptBox["c3", "2"]}], ")"}]}]], "-", 
         FractionBox[
          RowBox[{"c1", " ", 
           RowBox[{"(", 
            RowBox[{"1", "+", 
             SuperscriptBox["c1", "2"], "-", 
             SuperscriptBox["c2", "2"], "-", 
             SuperscriptBox["c3", "2"]}], ")"}], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", 
              RowBox[{"Cos", "[", 
               FractionBox["1", "5"], "]"}]}], "+", 
             RowBox[{
              SqrtBox["3"], " ", 
              RowBox[{"Sin", "[", 
               FractionBox["1", "5"], "]"}]}]}], ")"}]}], 
          RowBox[{"2", " ", 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{"1", "+", 
              SuperscriptBox["c1", "2"], "+", 
              SuperscriptBox["c2", "2"], "+", 
              SuperscriptBox["c3", "2"]}], ")"}], "2"]}]], "+", 
         FractionBox[
          RowBox[{"c1", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", 
              RowBox[{"Cos", "[", 
               FractionBox["1", "5"], "]"}]}], "+", 
             RowBox[{
              SqrtBox["3"], " ", 
              RowBox[{"Sin", "[", 
               FractionBox["1", "5"], "]"}]}]}], ")"}]}], 
          RowBox[{"2", " ", 
           RowBox[{"(", 
            RowBox[{"1", "+", 
             SuperscriptBox["c1", "2"], "+", 
             SuperscriptBox["c2", "2"], "+", 
             SuperscriptBox["c3", "2"]}], ")"}]}]]}], ",", 
        RowBox[{
         FractionBox[
          RowBox[{"c2", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"c1", " ", "c2"}], "-", "c3"}], ")"}], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              SqrtBox["3"], " ", 
              RowBox[{"Cos", "[", 
               FractionBox["1", "5"], "]"}]}], "+", 
             RowBox[{"Sin", "[", 
              FractionBox["1", "5"], "]"}]}], ")"}]}], 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"1", "+", 
             SuperscriptBox["c1", "2"], "+", 
             SuperscriptBox["c2", "2"], "+", 
             SuperscriptBox["c3", "2"]}], ")"}], "2"]], "-", 
         FractionBox[
          RowBox[{"c1", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              SqrtBox["3"], " ", 
              RowBox[{"Cos", "[", 
               FractionBox["1", "5"], "]"}]}], "+", 
             RowBox[{"Sin", "[", 
              FractionBox["1", "5"], "]"}]}], ")"}]}], 
          RowBox[{"2", " ", 
           RowBox[{"(", 
            RowBox[{"1", "+", 
             SuperscriptBox["c1", "2"], "+", 
             SuperscriptBox["c2", "2"], "+", 
             SuperscriptBox["c3", "2"]}], ")"}]}]], "-", 
         FractionBox[
          RowBox[{"c2", " ", 
           RowBox[{"(", 
            RowBox[{"1", "+", 
             SuperscriptBox["c1", "2"], "-", 
             SuperscriptBox["c2", "2"], "-", 
             SuperscriptBox["c3", "2"]}], ")"}], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", 
              RowBox[{"Cos", "[", 
               FractionBox["1", "5"], "]"}]}], "+", 
             RowBox[{
              SqrtBox["3"], " ", 
              RowBox[{"Sin", "[", 
               FractionBox["1", "5"], "]"}]}]}], ")"}]}], 
          RowBox[{"2", " ", 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{"1", "+", 
              SuperscriptBox["c1", "2"], "+", 
              SuperscriptBox["c2", "2"], "+", 
              SuperscriptBox["c3", "2"]}], ")"}], "2"]}]], "-", 
         FractionBox[
          RowBox[{"c2", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", 
              RowBox[{"Cos", "[", 
               FractionBox["1", "5"], "]"}]}], "+", 
             RowBox[{
              SqrtBox["3"], " ", 
              RowBox[{"Sin", "[", 
               FractionBox["1", "5"], "]"}]}]}], ")"}]}], 
          RowBox[{"2", " ", 
           RowBox[{"(", 
            RowBox[{"1", "+", 
             SuperscriptBox["c1", "2"], "+", 
             SuperscriptBox["c2", "2"], "+", 
             SuperscriptBox["c3", "2"]}], ")"}]}]]}], ",", 
        RowBox[{
         FractionBox[
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"c1", " ", "c2"}], "-", "c3"}], ")"}], " ", "c3", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              SqrtBox["3"], " ", 
              RowBox[{"Cos", "[", 
               FractionBox["1", "5"], "]"}]}], "+", 
             RowBox[{"Sin", "[", 
              FractionBox["1", "5"], "]"}]}], ")"}]}], 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"1", "+", 
             SuperscriptBox["c1", "2"], "+", 
             SuperscriptBox["c2", "2"], "+", 
             SuperscriptBox["c3", "2"]}], ")"}], "2"]], "+", 
         FractionBox[
          RowBox[{
           RowBox[{
            SqrtBox["3"], " ", 
            RowBox[{"Cos", "[", 
             FractionBox["1", "5"], "]"}]}], "+", 
           RowBox[{"Sin", "[", 
            FractionBox["1", "5"], "]"}]}], 
          RowBox[{"2", " ", 
           RowBox[{"(", 
            RowBox[{"1", "+", 
             SuperscriptBox["c1", "2"], "+", 
             SuperscriptBox["c2", "2"], "+", 
             SuperscriptBox["c3", "2"]}], ")"}]}]], "-", 
         FractionBox[
          RowBox[{"c3", " ", 
           RowBox[{"(", 
            RowBox[{"1", "+", 
             SuperscriptBox["c1", "2"], "-", 
             SuperscriptBox["c2", "2"], "-", 
             SuperscriptBox["c3", "2"]}], ")"}], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", 
              RowBox[{"Cos", "[", 
               FractionBox["1", "5"], "]"}]}], "+", 
             RowBox[{
              SqrtBox["3"], " ", 
              RowBox[{"Sin", "[", 
               FractionBox["1", "5"], "]"}]}]}], ")"}]}], 
          RowBox[{"2", " ", 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{"1", "+", 
              SuperscriptBox["c1", "2"], "+", 
              SuperscriptBox["c2", "2"], "+", 
              SuperscriptBox["c3", "2"]}], ")"}], "2"]}]], "-", 
         FractionBox[
          RowBox[{"c3", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", 
              RowBox[{"Cos", "[", 
               FractionBox["1", "5"], "]"}]}], "+", 
             RowBox[{
              SqrtBox["3"], " ", 
              RowBox[{"Sin", "[", 
               FractionBox["1", "5"], "]"}]}]}], ")"}]}], 
          RowBox[{"2", " ", 
           RowBox[{"(", 
            RowBox[{"1", "+", 
             SuperscriptBox["c1", "2"], "+", 
             SuperscriptBox["c2", "2"], "+", 
             SuperscriptBox["c3", "2"]}], ")"}]}]]}], ",", "0", ",", 
        RowBox[{"l2", " ", 
         RowBox[{"Cos", "[", "\[Phi]2", "]"}], " ", 
         RowBox[{"Cos", "[", "\[Psi]2", "]"}]}], ",", "0", ",", "0", ",", "0",
         ",", "0", ",", "0", ",", 
        RowBox[{
         RowBox[{"-", "l2"}], " ", 
         RowBox[{"Sin", "[", "\[Phi]2", "]"}], " ", 
         RowBox[{"Sin", "[", "\[Psi]2", "]"}]}], ",", "0", ",", "0", ",", "0",
         ",", "0"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0", ",", 
        RowBox[{"-", "1"}], ",", "0", ",", 
        RowBox[{
         RowBox[{"-", 
          FractionBox[
           RowBox[{"c1", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "+", 
              SuperscriptBox["c1", "2"], "-", 
              SuperscriptBox["c2", "2"], "+", 
              SuperscriptBox["c3", "2"]}], ")"}], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               SqrtBox["3"], " ", 
               RowBox[{"Cos", "[", 
                FractionBox["1", "5"], "]"}]}], "+", 
              RowBox[{"Sin", "[", 
               FractionBox["1", "5"], "]"}]}], ")"}]}], 
           RowBox[{"2", " ", 
            SuperscriptBox[
             RowBox[{"(", 
              RowBox[{"1", "+", 
               SuperscriptBox["c1", "2"], "+", 
               SuperscriptBox["c2", "2"], "+", 
               SuperscriptBox["c3", "2"]}], ")"}], "2"]}]]}], "+", 
         FractionBox[
          RowBox[{"c1", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              SqrtBox["3"], " ", 
              RowBox[{"Cos", "[", 
               FractionBox["1", "5"], "]"}]}], "+", 
             RowBox[{"Sin", "[", 
              FractionBox["1", "5"], "]"}]}], ")"}]}], 
          RowBox[{"2", " ", 
           RowBox[{"(", 
            RowBox[{"1", "+", 
             SuperscriptBox["c1", "2"], "+", 
             SuperscriptBox["c2", "2"], "+", 
             SuperscriptBox["c3", "2"]}], ")"}]}]], "-", 
         FractionBox[
          RowBox[{"c1", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"c1", " ", "c2"}], "+", "c3"}], ")"}], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", 
              RowBox[{"Cos", "[", 
               FractionBox["1", "5"], "]"}]}], "+", 
             RowBox[{
              SqrtBox["3"], " ", 
              RowBox[{"Sin", "[", 
               FractionBox["1", "5"], "]"}]}]}], ")"}]}], 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"1", "+", 
             SuperscriptBox["c1", "2"], "+", 
             SuperscriptBox["c2", "2"], "+", 
             SuperscriptBox["c3", "2"]}], ")"}], "2"]], "+", 
         FractionBox[
          RowBox[{"c2", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", 
              RowBox[{"Cos", "[", 
               FractionBox["1", "5"], "]"}]}], "+", 
             RowBox[{
              SqrtBox["3"], " ", 
              RowBox[{"Sin", "[", 
               FractionBox["1", "5"], "]"}]}]}], ")"}]}], 
          RowBox[{"2", " ", 
           RowBox[{"(", 
            RowBox[{"1", "+", 
             SuperscriptBox["c1", "2"], "+", 
             SuperscriptBox["c2", "2"], "+", 
             SuperscriptBox["c3", "2"]}], ")"}]}]]}], ",", 
        RowBox[{
         RowBox[{"-", 
          FractionBox[
           RowBox[{"c2", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "+", 
              SuperscriptBox["c1", "2"], "-", 
              SuperscriptBox["c2", "2"], "+", 
              SuperscriptBox["c3", "2"]}], ")"}], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               SqrtBox["3"], " ", 
               RowBox[{"Cos", "[", 
                FractionBox["1", "5"], "]"}]}], "+", 
              RowBox[{"Sin", "[", 
               FractionBox["1", "5"], "]"}]}], ")"}]}], 
           RowBox[{"2", " ", 
            SuperscriptBox[
             RowBox[{"(", 
              RowBox[{"1", "+", 
               SuperscriptBox["c1", "2"], "+", 
               SuperscriptBox["c2", "2"], "+", 
               SuperscriptBox["c3", "2"]}], ")"}], "2"]}]]}], "-", 
         FractionBox[
          RowBox[{"c2", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              SqrtBox["3"], " ", 
              RowBox[{"Cos", "[", 
               FractionBox["1", "5"], "]"}]}], "+", 
             RowBox[{"Sin", "[", 
              FractionBox["1", "5"], "]"}]}], ")"}]}], 
          RowBox[{"2", " ", 
           RowBox[{"(", 
            RowBox[{"1", "+", 
             SuperscriptBox["c1", "2"], "+", 
             SuperscriptBox["c2", "2"], "+", 
             SuperscriptBox["c3", "2"]}], ")"}]}]], "-", 
         FractionBox[
          RowBox[{"c2", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"c1", " ", "c2"}], "+", "c3"}], ")"}], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", 
              RowBox[{"Cos", "[", 
               FractionBox["1", "5"], "]"}]}], "+", 
             RowBox[{
              SqrtBox["3"], " ", 
              RowBox[{"Sin", "[", 
               FractionBox["1", "5"], "]"}]}]}], ")"}]}], 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"1", "+", 
             SuperscriptBox["c1", "2"], "+", 
             SuperscriptBox["c2", "2"], "+", 
             SuperscriptBox["c3", "2"]}], ")"}], "2"]], "+", 
         FractionBox[
          RowBox[{"c1", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", 
              RowBox[{"Cos", "[", 
               FractionBox["1", "5"], "]"}]}], "+", 
             RowBox[{
              SqrtBox["3"], " ", 
              RowBox[{"Sin", "[", 
               FractionBox["1", "5"], "]"}]}]}], ")"}]}], 
          RowBox[{"2", " ", 
           RowBox[{"(", 
            RowBox[{"1", "+", 
             SuperscriptBox["c1", "2"], "+", 
             SuperscriptBox["c2", "2"], "+", 
             SuperscriptBox["c3", "2"]}], ")"}]}]]}], ",", 
        RowBox[{
         RowBox[{"-", 
          FractionBox[
           RowBox[{"c3", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "+", 
              SuperscriptBox["c1", "2"], "-", 
              SuperscriptBox["c2", "2"], "+", 
              SuperscriptBox["c3", "2"]}], ")"}], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               SqrtBox["3"], " ", 
               RowBox[{"Cos", "[", 
                FractionBox["1", "5"], "]"}]}], "+", 
              RowBox[{"Sin", "[", 
               FractionBox["1", "5"], "]"}]}], ")"}]}], 
           RowBox[{"2", " ", 
            SuperscriptBox[
             RowBox[{"(", 
              RowBox[{"1", "+", 
               SuperscriptBox["c1", "2"], "+", 
               SuperscriptBox["c2", "2"], "+", 
               SuperscriptBox["c3", "2"]}], ")"}], "2"]}]]}], "+", 
         FractionBox[
          RowBox[{"c3", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              SqrtBox["3"], " ", 
              RowBox[{"Cos", "[", 
               FractionBox["1", "5"], "]"}]}], "+", 
             RowBox[{"Sin", "[", 
              FractionBox["1", "5"], "]"}]}], ")"}]}], 
          RowBox[{"2", " ", 
           RowBox[{"(", 
            RowBox[{"1", "+", 
             SuperscriptBox["c1", "2"], "+", 
             SuperscriptBox["c2", "2"], "+", 
             SuperscriptBox["c3", "2"]}], ")"}]}]], "-", 
         FractionBox[
          RowBox[{"c3", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"c1", " ", "c2"}], "+", "c3"}], ")"}], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", 
              RowBox[{"Cos", "[", 
               FractionBox["1", "5"], "]"}]}], "+", 
             RowBox[{
              SqrtBox["3"], " ", 
              RowBox[{"Sin", "[", 
               FractionBox["1", "5"], "]"}]}]}], ")"}]}], 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"1", "+", 
             SuperscriptBox["c1", "2"], "+", 
             SuperscriptBox["c2", "2"], "+", 
             SuperscriptBox["c3", "2"]}], ")"}], "2"]], "+", 
         FractionBox[
          RowBox[{
           RowBox[{"-", 
            RowBox[{"Cos", "[", 
             FractionBox["1", "5"], "]"}]}], "+", 
           RowBox[{
            SqrtBox["3"], " ", 
            RowBox[{"Sin", "[", 
             FractionBox["1", "5"], "]"}]}]}], 
          RowBox[{"2", " ", 
           RowBox[{"(", 
            RowBox[{"1", "+", 
             SuperscriptBox["c1", "2"], "+", 
             SuperscriptBox["c2", "2"], "+", 
             SuperscriptBox["c3", "2"]}], ")"}]}]]}], ",", "0", ",", "0", ",",
         "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", 
        RowBox[{
         RowBox[{"-", "l2"}], " ", 
         RowBox[{"Cos", "[", "\[Psi]2", "]"}]}], ",", "0", ",", "0", ",", "0",
         ",", "0"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0", ",", "0", ",", 
        RowBox[{"-", "1"}], ",", 
        RowBox[{
         RowBox[{"-", 
          FractionBox[
           RowBox[{
            RowBox[{"4", " ", "c1", " ", "z"}], "+", 
            RowBox[{
             SqrtBox["3"], " ", 
             RowBox[{"Cos", "[", 
              FractionBox["1", "5"], "]"}]}], "+", 
            RowBox[{"c3", " ", 
             RowBox[{"Cos", "[", 
              FractionBox["1", "5"], "]"}]}], "-", 
            RowBox[{"4", " ", "c1", " ", "l2", " ", 
             RowBox[{"Cos", "[", "\[Phi]2", "]"}], " ", 
             RowBox[{"Cos", "[", "\[Psi]2", "]"}]}], "+", 
            RowBox[{"Sin", "[", 
             FractionBox["1", "5"], "]"}], "-", 
            RowBox[{
             SqrtBox["3"], " ", "c3", " ", 
             RowBox[{"Sin", "[", 
              FractionBox["1", "5"], "]"}]}]}], 
           RowBox[{"2", " ", 
            RowBox[{"(", 
             RowBox[{"1", "+", 
              SuperscriptBox["c1", "2"], "+", 
              SuperscriptBox["c2", "2"], "+", 
              SuperscriptBox["c3", "2"]}], ")"}]}]]}], "+", 
         RowBox[{
          FractionBox["1", 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{"1", "+", 
              SuperscriptBox["c1", "2"], "+", 
              SuperscriptBox["c2", "2"], "+", 
              SuperscriptBox["c3", "2"]}], ")"}], "2"]], 
          RowBox[{"c1", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"2", " ", 
              RowBox[{"(", 
               RowBox[{"1", "+", 
                SuperscriptBox["c1", "2"], "+", 
                SuperscriptBox["c2", "2"], "+", 
                SuperscriptBox["c3", "2"]}], ")"}], " ", "z"}], "+", 
             RowBox[{
              SqrtBox["3"], " ", "c1", " ", 
              RowBox[{"Cos", "[", 
               FractionBox["1", "5"], "]"}]}], "-", 
             RowBox[{"c2", " ", 
              RowBox[{"Cos", "[", 
               FractionBox["1", "5"], "]"}]}], "+", 
             RowBox[{"c1", " ", "c3", " ", 
              RowBox[{"Cos", "[", 
               FractionBox["1", "5"], "]"}]}], "+", 
             RowBox[{
              SqrtBox["3"], " ", "c2", " ", "c3", " ", 
              RowBox[{"Cos", "[", 
               FractionBox["1", "5"], "]"}]}], "-", 
             RowBox[{"2", " ", 
              RowBox[{"(", 
               RowBox[{"1", "+", 
                SuperscriptBox["c1", "2"], "+", 
                SuperscriptBox["c2", "2"], "+", 
                SuperscriptBox["c3", "2"]}], ")"}], " ", "l2", " ", 
              RowBox[{"Cos", "[", "\[Phi]2", "]"}], " ", 
              RowBox[{"Cos", "[", "\[Psi]2", "]"}]}], "+", 
             RowBox[{"c1", " ", 
              RowBox[{"Sin", "[", 
               FractionBox["1", "5"], "]"}]}], "+", 
             RowBox[{
              SqrtBox["3"], " ", "c2", " ", 
              RowBox[{"Sin", "[", 
               FractionBox["1", "5"], "]"}]}], "-", 
             RowBox[{
              SqrtBox["3"], " ", "c1", " ", "c3", " ", 
              RowBox[{"Sin", "[", 
               FractionBox["1", "5"], "]"}]}], "+", 
             RowBox[{"c2", " ", "c3", " ", 
              RowBox[{"Sin", "[", 
               FractionBox["1", "5"], "]"}]}]}], ")"}]}]}]}], ",", 
        RowBox[{
         RowBox[{"-", 
          FractionBox[
           RowBox[{
            RowBox[{"4", " ", "c2", " ", "z"}], "-", 
            RowBox[{"Cos", "[", 
             FractionBox["1", "5"], "]"}], "+", 
            RowBox[{
             SqrtBox["3"], " ", "c3", " ", 
             RowBox[{"Cos", "[", 
              FractionBox["1", "5"], "]"}]}], "-", 
            RowBox[{"4", " ", "c2", " ", "l2", " ", 
             RowBox[{"Cos", "[", "\[Phi]2", "]"}], " ", 
             RowBox[{"Cos", "[", "\[Psi]2", "]"}]}], "+", 
            RowBox[{
             SqrtBox["3"], " ", 
             RowBox[{"Sin", "[", 
              FractionBox["1", "5"], "]"}]}], "+", 
            RowBox[{"c3", " ", 
             RowBox[{"Sin", "[", 
              FractionBox["1", "5"], "]"}]}]}], 
           RowBox[{"2", " ", 
            RowBox[{"(", 
             RowBox[{"1", "+", 
              SuperscriptBox["c1", "2"], "+", 
              SuperscriptBox["c2", "2"], "+", 
              SuperscriptBox["c3", "2"]}], ")"}]}]]}], "+", 
         RowBox[{
          FractionBox["1", 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{"1", "+", 
              SuperscriptBox["c1", "2"], "+", 
              SuperscriptBox["c2", "2"], "+", 
              SuperscriptBox["c3", "2"]}], ")"}], "2"]], 
          RowBox[{"c2", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"2", " ", 
              RowBox[{"(", 
               RowBox[{"1", "+", 
                SuperscriptBox["c1", "2"], "+", 
                SuperscriptBox["c2", "2"], "+", 
                SuperscriptBox["c3", "2"]}], ")"}], " ", "z"}], "+", 
             RowBox[{
              SqrtBox["3"], " ", "c1", " ", 
              RowBox[{"Cos", "[", 
               FractionBox["1", "5"], "]"}]}], "-", 
             RowBox[{"c2", " ", 
              RowBox[{"Cos", "[", 
               FractionBox["1", "5"], "]"}]}], "+", 
             RowBox[{"c1", " ", "c3", " ", 
              RowBox[{"Cos", "[", 
               FractionBox["1", "5"], "]"}]}], "+", 
             RowBox[{
              SqrtBox["3"], " ", "c2", " ", "c3", " ", 
              RowBox[{"Cos", "[", 
               FractionBox["1", "5"], "]"}]}], "-", 
             RowBox[{"2", " ", 
              RowBox[{"(", 
               RowBox[{"1", "+", 
                SuperscriptBox["c1", "2"], "+", 
                SuperscriptBox["c2", "2"], "+", 
                SuperscriptBox["c3", "2"]}], ")"}], " ", "l2", " ", 
              RowBox[{"Cos", "[", "\[Phi]2", "]"}], " ", 
              RowBox[{"Cos", "[", "\[Psi]2", "]"}]}], "+", 
             RowBox[{"c1", " ", 
              RowBox[{"Sin", "[", 
               FractionBox["1", "5"], "]"}]}], "+", 
             RowBox[{
              SqrtBox["3"], " ", "c2", " ", 
              RowBox[{"Sin", "[", 
               FractionBox["1", "5"], "]"}]}], "-", 
             RowBox[{
              SqrtBox["3"], " ", "c1", " ", "c3", " ", 
              RowBox[{"Sin", "[", 
               FractionBox["1", "5"], "]"}]}], "+", 
             RowBox[{"c2", " ", "c3", " ", 
              RowBox[{"Sin", "[", 
               FractionBox["1", "5"], "]"}]}]}], ")"}]}]}]}], ",", 
        RowBox[{
         RowBox[{"-", 
          FractionBox[
           RowBox[{
            RowBox[{"4", " ", "c3", " ", "z"}], "+", 
            RowBox[{"c1", " ", 
             RowBox[{"Cos", "[", 
              FractionBox["1", "5"], "]"}]}], "+", 
            RowBox[{
             SqrtBox["3"], " ", "c2", " ", 
             RowBox[{"Cos", "[", 
              FractionBox["1", "5"], "]"}]}], "-", 
            RowBox[{"4", " ", "c3", " ", "l2", " ", 
             RowBox[{"Cos", "[", "\[Phi]2", "]"}], " ", 
             RowBox[{"Cos", "[", "\[Psi]2", "]"}]}], "-", 
            RowBox[{
             SqrtBox["3"], " ", "c1", " ", 
             RowBox[{"Sin", "[", 
              FractionBox["1", "5"], "]"}]}], "+", 
            RowBox[{"c2", " ", 
             RowBox[{"Sin", "[", 
              FractionBox["1", "5"], "]"}]}]}], 
           RowBox[{"2", " ", 
            RowBox[{"(", 
             RowBox[{"1", "+", 
              SuperscriptBox["c1", "2"], "+", 
              SuperscriptBox["c2", "2"], "+", 
              SuperscriptBox["c3", "2"]}], ")"}]}]]}], "+", 
         RowBox[{
          FractionBox["1", 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{"1", "+", 
              SuperscriptBox["c1", "2"], "+", 
              SuperscriptBox["c2", "2"], "+", 
              SuperscriptBox["c3", "2"]}], ")"}], "2"]], 
          RowBox[{"c3", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"2", " ", 
              RowBox[{"(", 
               RowBox[{"1", "+", 
                SuperscriptBox["c1", "2"], "+", 
                SuperscriptBox["c2", "2"], "+", 
                SuperscriptBox["c3", "2"]}], ")"}], " ", "z"}], "+", 
             RowBox[{
              SqrtBox["3"], " ", "c1", " ", 
              RowBox[{"Cos", "[", 
               FractionBox["1", "5"], "]"}]}], "-", 
             RowBox[{"c2", " ", 
              RowBox[{"Cos", "[", 
               FractionBox["1", "5"], "]"}]}], "+", 
             RowBox[{"c1", " ", "c3", " ", 
              RowBox[{"Cos", "[", 
               FractionBox["1", "5"], "]"}]}], "+", 
             RowBox[{
              SqrtBox["3"], " ", "c2", " ", "c3", " ", 
              RowBox[{"Cos", "[", 
               FractionBox["1", "5"], "]"}]}], "-", 
             RowBox[{"2", " ", 
              RowBox[{"(", 
               RowBox[{"1", "+", 
                SuperscriptBox["c1", "2"], "+", 
                SuperscriptBox["c2", "2"], "+", 
                SuperscriptBox["c3", "2"]}], ")"}], " ", "l2", " ", 
              RowBox[{"Cos", "[", "\[Phi]2", "]"}], " ", 
              RowBox[{"Cos", "[", "\[Psi]2", "]"}]}], "+", 
             RowBox[{"c1", " ", 
              RowBox[{"Sin", "[", 
               FractionBox["1", "5"], "]"}]}], "+", 
             RowBox[{
              SqrtBox["3"], " ", "c2", " ", 
              RowBox[{"Sin", "[", 
               FractionBox["1", "5"], "]"}]}], "-", 
             RowBox[{
              SqrtBox["3"], " ", "c1", " ", "c3", " ", 
              RowBox[{"Sin", "[", 
               FractionBox["1", "5"], "]"}]}], "+", 
             RowBox[{"c2", " ", "c3", " ", 
              RowBox[{"Sin", "[", 
               FractionBox["1", "5"], "]"}]}]}], ")"}]}]}]}], ",", "0", ",", 
        RowBox[{
         RowBox[{"-", "l2"}], " ", 
         RowBox[{"Cos", "[", "\[Psi]2", "]"}], " ", 
         RowBox[{"Sin", "[", "\[Phi]2", "]"}]}], ",", "0", ",", "0", ",", "0",
         ",", "0", ",", "0", ",", 
        RowBox[{
         RowBox[{"-", "l2"}], " ", 
         RowBox[{"Cos", "[", "\[Phi]2", "]"}], " ", 
         RowBox[{"Sin", "[", "\[Psi]2", "]"}]}], ",", "0", ",", "0", ",", "0",
         ",", "0"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "1"}], ",", "0", ",", "0", ",", 
        RowBox[{
         FractionBox["1", "2"], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", 
            FractionBox[
             RowBox[{"2", " ", "c1", " ", 
              RowBox[{"(", 
               RowBox[{"1", "+", 
                SuperscriptBox["c1", "2"], "-", 
                SuperscriptBox["c2", "2"], "-", 
                SuperscriptBox["c3", "2"]}], ")"}], " ", 
              RowBox[{"Cos", "[", 
               FractionBox["1", "5"], "]"}]}], 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "+", 
                SuperscriptBox["c1", "2"], "+", 
                SuperscriptBox["c2", "2"], "+", 
                SuperscriptBox["c3", "2"]}], ")"}], "2"]]}], "+", 
           FractionBox[
            RowBox[{"2", " ", "c1", " ", 
             RowBox[{"Cos", "[", 
              FractionBox["1", "5"], "]"}]}], 
            RowBox[{"1", "+", 
             SuperscriptBox["c1", "2"], "+", 
             SuperscriptBox["c2", "2"], "+", 
             SuperscriptBox["c3", "2"]}]], "-", 
           FractionBox[
            RowBox[{"4", " ", "c1", " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"-", "c1"}], " ", "c2"}], "+", "c3"}], ")"}], " ", 
             RowBox[{"Sin", "[", 
              FractionBox["1", "5"], "]"}]}], 
            SuperscriptBox[
             RowBox[{"(", 
              RowBox[{"1", "+", 
               SuperscriptBox["c1", "2"], "+", 
               SuperscriptBox["c2", "2"], "+", 
               SuperscriptBox["c3", "2"]}], ")"}], "2"]], "-", 
           FractionBox[
            RowBox[{"2", " ", "c2", " ", 
             RowBox[{"Sin", "[", 
              FractionBox["1", "5"], "]"}]}], 
            RowBox[{"1", "+", 
             SuperscriptBox["c1", "2"], "+", 
             SuperscriptBox["c2", "2"], "+", 
             SuperscriptBox["c3", "2"]}]]}], ")"}]}], ",", 
        RowBox[{
         FractionBox["1", "2"], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", 
            FractionBox[
             RowBox[{"2", " ", "c2", " ", 
              RowBox[{"(", 
               RowBox[{"1", "+", 
                SuperscriptBox["c1", "2"], "-", 
                SuperscriptBox["c2", "2"], "-", 
                SuperscriptBox["c3", "2"]}], ")"}], " ", 
              RowBox[{"Cos", "[", 
               FractionBox["1", "5"], "]"}]}], 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "+", 
                SuperscriptBox["c1", "2"], "+", 
                SuperscriptBox["c2", "2"], "+", 
                SuperscriptBox["c3", "2"]}], ")"}], "2"]]}], "-", 
           FractionBox[
            RowBox[{"2", " ", "c2", " ", 
             RowBox[{"Cos", "[", 
              FractionBox["1", "5"], "]"}]}], 
            RowBox[{"1", "+", 
             SuperscriptBox["c1", "2"], "+", 
             SuperscriptBox["c2", "2"], "+", 
             SuperscriptBox["c3", "2"]}]], "-", 
           FractionBox[
            RowBox[{"4", " ", "c2", " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"-", "c1"}], " ", "c2"}], "+", "c3"}], ")"}], " ", 
             RowBox[{"Sin", "[", 
              FractionBox["1", "5"], "]"}]}], 
            SuperscriptBox[
             RowBox[{"(", 
              RowBox[{"1", "+", 
               SuperscriptBox["c1", "2"], "+", 
               SuperscriptBox["c2", "2"], "+", 
               SuperscriptBox["c3", "2"]}], ")"}], "2"]], "-", 
           FractionBox[
            RowBox[{"2", " ", "c1", " ", 
             RowBox[{"Sin", "[", 
              FractionBox["1", "5"], "]"}]}], 
            RowBox[{"1", "+", 
             SuperscriptBox["c1", "2"], "+", 
             SuperscriptBox["c2", "2"], "+", 
             SuperscriptBox["c3", "2"]}]]}], ")"}]}], ",", 
        RowBox[{
         FractionBox["1", "2"], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", 
            FractionBox[
             RowBox[{"2", " ", "c3", " ", 
              RowBox[{"(", 
               RowBox[{"1", "+", 
                SuperscriptBox["c1", "2"], "-", 
                SuperscriptBox["c2", "2"], "-", 
                SuperscriptBox["c3", "2"]}], ")"}], " ", 
              RowBox[{"Cos", "[", 
               FractionBox["1", "5"], "]"}]}], 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "+", 
                SuperscriptBox["c1", "2"], "+", 
                SuperscriptBox["c2", "2"], "+", 
                SuperscriptBox["c3", "2"]}], ")"}], "2"]]}], "-", 
           FractionBox[
            RowBox[{"2", " ", "c3", " ", 
             RowBox[{"Cos", "[", 
              FractionBox["1", "5"], "]"}]}], 
            RowBox[{"1", "+", 
             SuperscriptBox["c1", "2"], "+", 
             SuperscriptBox["c2", "2"], "+", 
             SuperscriptBox["c3", "2"]}]], "-", 
           FractionBox[
            RowBox[{"4", " ", "c3", " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"-", "c1"}], " ", "c2"}], "+", "c3"}], ")"}], " ", 
             RowBox[{"Sin", "[", 
              FractionBox["1", "5"], "]"}]}], 
            SuperscriptBox[
             RowBox[{"(", 
              RowBox[{"1", "+", 
               SuperscriptBox["c1", "2"], "+", 
               SuperscriptBox["c2", "2"], "+", 
               SuperscriptBox["c3", "2"]}], ")"}], "2"]], "+", 
           FractionBox[
            RowBox[{"2", " ", 
             RowBox[{"Sin", "[", 
              FractionBox["1", "5"], "]"}]}], 
            RowBox[{"1", "+", 
             SuperscriptBox["c1", "2"], "+", 
             SuperscriptBox["c2", "2"], "+", 
             SuperscriptBox["c3", "2"]}]]}], ")"}]}], ",", "0", ",", "0", ",", 
        RowBox[{"l3", " ", 
         RowBox[{"Cos", "[", "\[Phi]3", "]"}], " ", 
         RowBox[{"Cos", "[", "\[Psi]3", "]"}]}], ",", "0", ",", "0", ",", "0",
         ",", "0", ",", "0", ",", 
        RowBox[{
         RowBox[{"-", "l3"}], " ", 
         RowBox[{"Sin", "[", "\[Phi]3", "]"}], " ", 
         RowBox[{"Sin", "[", "\[Psi]3", "]"}]}], ",", "0", ",", "0", ",", 
        "0"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0", ",", 
        RowBox[{"-", "1"}], ",", "0", ",", 
        RowBox[{
         FractionBox["1", "2"], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", 
            FractionBox[
             RowBox[{"4", " ", "c1", " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"c1", " ", "c2"}], "+", "c3"}], ")"}], " ", 
              RowBox[{"Cos", "[", 
               FractionBox["1", "5"], "]"}]}], 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "+", 
                SuperscriptBox["c1", "2"], "+", 
                SuperscriptBox["c2", "2"], "+", 
                SuperscriptBox["c3", "2"]}], ")"}], "2"]]}], "+", 
           FractionBox[
            RowBox[{"2", " ", "c2", " ", 
             RowBox[{"Cos", "[", 
              FractionBox["1", "5"], "]"}]}], 
            RowBox[{"1", "+", 
             SuperscriptBox["c1", "2"], "+", 
             SuperscriptBox["c2", "2"], "+", 
             SuperscriptBox["c3", "2"]}]], "-", 
           FractionBox[
            RowBox[{"2", " ", "c1", " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "1"}], "+", 
               SuperscriptBox["c1", "2"], "-", 
               SuperscriptBox["c2", "2"], "+", 
               SuperscriptBox["c3", "2"]}], ")"}], " ", 
             RowBox[{"Sin", "[", 
              FractionBox["1", "5"], "]"}]}], 
            SuperscriptBox[
             RowBox[{"(", 
              RowBox[{"1", "+", 
               SuperscriptBox["c1", "2"], "+", 
               SuperscriptBox["c2", "2"], "+", 
               SuperscriptBox["c3", "2"]}], ")"}], "2"]], "+", 
           FractionBox[
            RowBox[{"2", " ", "c1", " ", 
             RowBox[{"Sin", "[", 
              FractionBox["1", "5"], "]"}]}], 
            RowBox[{"1", "+", 
             SuperscriptBox["c1", "2"], "+", 
             SuperscriptBox["c2", "2"], "+", 
             SuperscriptBox["c3", "2"]}]]}], ")"}]}], ",", 
        RowBox[{
         FractionBox["1", "2"], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", 
            FractionBox[
             RowBox[{"4", " ", "c2", " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"c1", " ", "c2"}], "+", "c3"}], ")"}], " ", 
              RowBox[{"Cos", "[", 
               FractionBox["1", "5"], "]"}]}], 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "+", 
                SuperscriptBox["c1", "2"], "+", 
                SuperscriptBox["c2", "2"], "+", 
                SuperscriptBox["c3", "2"]}], ")"}], "2"]]}], "+", 
           FractionBox[
            RowBox[{"2", " ", "c1", " ", 
             RowBox[{"Cos", "[", 
              FractionBox["1", "5"], "]"}]}], 
            RowBox[{"1", "+", 
             SuperscriptBox["c1", "2"], "+", 
             SuperscriptBox["c2", "2"], "+", 
             SuperscriptBox["c3", "2"]}]], "-", 
           FractionBox[
            RowBox[{"2", " ", "c2", " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "1"}], "+", 
               SuperscriptBox["c1", "2"], "-", 
               SuperscriptBox["c2", "2"], "+", 
               SuperscriptBox["c3", "2"]}], ")"}], " ", 
             RowBox[{"Sin", "[", 
              FractionBox["1", "5"], "]"}]}], 
            SuperscriptBox[
             RowBox[{"(", 
              RowBox[{"1", "+", 
               SuperscriptBox["c1", "2"], "+", 
               SuperscriptBox["c2", "2"], "+", 
               SuperscriptBox["c3", "2"]}], ")"}], "2"]], "-", 
           FractionBox[
            RowBox[{"2", " ", "c2", " ", 
             RowBox[{"Sin", "[", 
              FractionBox["1", "5"], "]"}]}], 
            RowBox[{"1", "+", 
             SuperscriptBox["c1", "2"], "+", 
             SuperscriptBox["c2", "2"], "+", 
             SuperscriptBox["c3", "2"]}]]}], ")"}]}], ",", 
        RowBox[{
         FractionBox["1", "2"], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", 
            FractionBox[
             RowBox[{"4", " ", "c3", " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"c1", " ", "c2"}], "+", "c3"}], ")"}], " ", 
              RowBox[{"Cos", "[", 
               FractionBox["1", "5"], "]"}]}], 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "+", 
                SuperscriptBox["c1", "2"], "+", 
                SuperscriptBox["c2", "2"], "+", 
                SuperscriptBox["c3", "2"]}], ")"}], "2"]]}], "+", 
           FractionBox[
            RowBox[{"2", " ", 
             RowBox[{"Cos", "[", 
              FractionBox["1", "5"], "]"}]}], 
            RowBox[{"1", "+", 
             SuperscriptBox["c1", "2"], "+", 
             SuperscriptBox["c2", "2"], "+", 
             SuperscriptBox["c3", "2"]}]], "-", 
           FractionBox[
            RowBox[{"2", " ", "c3", " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "1"}], "+", 
               SuperscriptBox["c1", "2"], "-", 
               SuperscriptBox["c2", "2"], "+", 
               SuperscriptBox["c3", "2"]}], ")"}], " ", 
             RowBox[{"Sin", "[", 
              FractionBox["1", "5"], "]"}]}], 
            SuperscriptBox[
             RowBox[{"(", 
              RowBox[{"1", "+", 
               SuperscriptBox["c1", "2"], "+", 
               SuperscriptBox["c2", "2"], "+", 
               SuperscriptBox["c3", "2"]}], ")"}], "2"]], "+", 
           FractionBox[
            RowBox[{"2", " ", "c3", " ", 
             RowBox[{"Sin", "[", 
              FractionBox["1", "5"], "]"}]}], 
            RowBox[{"1", "+", 
             SuperscriptBox["c1", "2"], "+", 
             SuperscriptBox["c2", "2"], "+", 
             SuperscriptBox["c3", "2"]}]]}], ")"}]}], ",", "0", ",", "0", ",",
         "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", 
        RowBox[{
         RowBox[{"-", "l3"}], " ", 
         RowBox[{"Cos", "[", "\[Psi]3", "]"}]}], ",", "0", ",", "0", ",", 
        "0"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0", ",", "0", ",", 
        RowBox[{"-", "1"}], ",", 
        RowBox[{
         RowBox[{"-", 
          FractionBox[
           RowBox[{
            RowBox[{"2", " ", "c1", " ", "z"}], "-", 
            RowBox[{"c3", " ", 
             RowBox[{"Cos", "[", 
              FractionBox["1", "5"], "]"}]}], "-", 
            RowBox[{"2", " ", "c1", " ", "l3", " ", 
             RowBox[{"Cos", "[", "\[Phi]3", "]"}], " ", 
             RowBox[{"Cos", "[", "\[Psi]3", "]"}]}], "+", 
            RowBox[{"Sin", "[", 
             FractionBox["1", "5"], "]"}]}], 
           RowBox[{"1", "+", 
            SuperscriptBox["c1", "2"], "+", 
            SuperscriptBox["c2", "2"], "+", 
            SuperscriptBox["c3", "2"]}]]}], "+", 
         FractionBox[
          RowBox[{"2", " ", "c1", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              RowBox[{"(", 
               RowBox[{"1", "+", 
                SuperscriptBox["c1", "2"], "+", 
                SuperscriptBox["c2", "2"], "+", 
                SuperscriptBox["c3", "2"]}], ")"}], " ", "z"}], "+", 
             RowBox[{"c2", " ", 
              RowBox[{"Cos", "[", 
               FractionBox["1", "5"], "]"}]}], "-", 
             RowBox[{"c1", " ", "c3", " ", 
              RowBox[{"Cos", "[", 
               FractionBox["1", "5"], "]"}]}], "-", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{"1", "+", 
                SuperscriptBox["c1", "2"], "+", 
                SuperscriptBox["c2", "2"], "+", 
                SuperscriptBox["c3", "2"]}], ")"}], " ", "l3", " ", 
              RowBox[{"Cos", "[", "\[Phi]3", "]"}], " ", 
              RowBox[{"Cos", "[", "\[Psi]3", "]"}]}], "+", 
             RowBox[{"c1", " ", 
              RowBox[{"Sin", "[", 
               FractionBox["1", "5"], "]"}]}], "+", 
             RowBox[{"c2", " ", "c3", " ", 
              RowBox[{"Sin", "[", 
               FractionBox["1", "5"], "]"}]}]}], ")"}]}], 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"1", "+", 
             SuperscriptBox["c1", "2"], "+", 
             SuperscriptBox["c2", "2"], "+", 
             SuperscriptBox["c3", "2"]}], ")"}], "2"]]}], ",", 
        RowBox[{
         RowBox[{"-", 
          FractionBox[
           RowBox[{
            RowBox[{"2", " ", "c2", " ", "z"}], "+", 
            RowBox[{"Cos", "[", 
             FractionBox["1", "5"], "]"}], "-", 
            RowBox[{"2", " ", "c2", " ", "l3", " ", 
             RowBox[{"Cos", "[", "\[Phi]3", "]"}], " ", 
             RowBox[{"Cos", "[", "\[Psi]3", "]"}]}], "+", 
            RowBox[{"c3", " ", 
             RowBox[{"Sin", "[", 
              FractionBox["1", "5"], "]"}]}]}], 
           RowBox[{"1", "+", 
            SuperscriptBox["c1", "2"], "+", 
            SuperscriptBox["c2", "2"], "+", 
            SuperscriptBox["c3", "2"]}]]}], "+", 
         FractionBox[
          RowBox[{"2", " ", "c2", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              RowBox[{"(", 
               RowBox[{"1", "+", 
                SuperscriptBox["c1", "2"], "+", 
                SuperscriptBox["c2", "2"], "+", 
                SuperscriptBox["c3", "2"]}], ")"}], " ", "z"}], "+", 
             RowBox[{"c2", " ", 
              RowBox[{"Cos", "[", 
               FractionBox["1", "5"], "]"}]}], "-", 
             RowBox[{"c1", " ", "c3", " ", 
              RowBox[{"Cos", "[", 
               FractionBox["1", "5"], "]"}]}], "-", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{"1", "+", 
                SuperscriptBox["c1", "2"], "+", 
                SuperscriptBox["c2", "2"], "+", 
                SuperscriptBox["c3", "2"]}], ")"}], " ", "l3", " ", 
              RowBox[{"Cos", "[", "\[Phi]3", "]"}], " ", 
              RowBox[{"Cos", "[", "\[Psi]3", "]"}]}], "+", 
             RowBox[{"c1", " ", 
              RowBox[{"Sin", "[", 
               FractionBox["1", "5"], "]"}]}], "+", 
             RowBox[{"c2", " ", "c3", " ", 
              RowBox[{"Sin", "[", 
               FractionBox["1", "5"], "]"}]}]}], ")"}]}], 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"1", "+", 
             SuperscriptBox["c1", "2"], "+", 
             SuperscriptBox["c2", "2"], "+", 
             SuperscriptBox["c3", "2"]}], ")"}], "2"]]}], ",", 
        RowBox[{
         RowBox[{"-", 
          FractionBox[
           RowBox[{
            RowBox[{"2", " ", "c3", " ", "z"}], "-", 
            RowBox[{"c1", " ", 
             RowBox[{"Cos", "[", 
              FractionBox["1", "5"], "]"}]}], "-", 
            RowBox[{"2", " ", "c3", " ", "l3", " ", 
             RowBox[{"Cos", "[", "\[Phi]3", "]"}], " ", 
             RowBox[{"Cos", "[", "\[Psi]3", "]"}]}], "+", 
            RowBox[{"c2", " ", 
             RowBox[{"Sin", "[", 
              FractionBox["1", "5"], "]"}]}]}], 
           RowBox[{"1", "+", 
            SuperscriptBox["c1", "2"], "+", 
            SuperscriptBox["c2", "2"], "+", 
            SuperscriptBox["c3", "2"]}]]}], "+", 
         FractionBox[
          RowBox[{"2", " ", "c3", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              RowBox[{"(", 
               RowBox[{"1", "+", 
                SuperscriptBox["c1", "2"], "+", 
                SuperscriptBox["c2", "2"], "+", 
                SuperscriptBox["c3", "2"]}], ")"}], " ", "z"}], "+", 
             RowBox[{"c2", " ", 
              RowBox[{"Cos", "[", 
               FractionBox["1", "5"], "]"}]}], "-", 
             RowBox[{"c1", " ", "c3", " ", 
              RowBox[{"Cos", "[", 
               FractionBox["1", "5"], "]"}]}], "-", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{"1", "+", 
                SuperscriptBox["c1", "2"], "+", 
                SuperscriptBox["c2", "2"], "+", 
                SuperscriptBox["c3", "2"]}], ")"}], " ", "l3", " ", 
              RowBox[{"Cos", "[", "\[Phi]3", "]"}], " ", 
              RowBox[{"Cos", "[", "\[Psi]3", "]"}]}], "+", 
             RowBox[{"c1", " ", 
              RowBox[{"Sin", "[", 
               FractionBox["1", "5"], "]"}]}], "+", 
             RowBox[{"c2", " ", "c3", " ", 
              RowBox[{"Sin", "[", 
               FractionBox["1", "5"], "]"}]}]}], ")"}]}], 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"1", "+", 
             SuperscriptBox["c1", "2"], "+", 
             SuperscriptBox["c2", "2"], "+", 
             SuperscriptBox["c3", "2"]}], ")"}], "2"]]}], ",", "0", ",", "0", 
        ",", 
        RowBox[{
         RowBox[{"-", "l3"}], " ", 
         RowBox[{"Cos", "[", "\[Psi]3", "]"}], " ", 
         RowBox[{"Sin", "[", "\[Phi]3", "]"}]}], ",", "0", ",", "0", ",", "0",
         ",", "0", ",", "0", ",", 
        RowBox[{
         RowBox[{"-", "l3"}], " ", 
         RowBox[{"Cos", "[", "\[Phi]3", "]"}], " ", 
         RowBox[{"Sin", "[", "\[Psi]3", "]"}]}], ",", "0", ",", "0", ",", 
        "0"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "1"}], ",", "0", ",", "0", ",", 
        RowBox[{
         RowBox[{"-", 
          FractionBox[
           RowBox[{
            RowBox[{"4", " ", "c1", " ", "x"}], "+", 
            RowBox[{"2", " ", "c1", " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", 
                RowBox[{"Cos", "[", 
                 FractionBox["1", "5"], "]"}]}], "+", 
               RowBox[{"2", " ", 
                RowBox[{"Cos", "[", 
                 FractionBox["1", "3"], "]"}]}]}], ")"}]}], "-", 
            RowBox[{"2", " ", "c2", " ", 
             RowBox[{"Sin", "[", 
              FractionBox["1", "5"], "]"}]}]}], 
           RowBox[{"2", " ", 
            RowBox[{"(", 
             RowBox[{"1", "+", 
              SuperscriptBox["c1", "2"], "+", 
              SuperscriptBox["c2", "2"], "+", 
              SuperscriptBox["c3", "2"]}], ")"}]}]]}], "+", 
         FractionBox[
          RowBox[{"c1", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"2", " ", 
              RowBox[{"(", 
               RowBox[{"1", "+", 
                SuperscriptBox["c1", "2"], "+", 
                SuperscriptBox["c2", "2"], "+", 
                SuperscriptBox["c3", "2"]}], ")"}], " ", "x"}], "-", 
             RowBox[{"Cos", "[", 
              FractionBox["1", "5"], "]"}], "+", 
             RowBox[{
              SuperscriptBox["c2", "2"], " ", 
              RowBox[{"Cos", "[", 
               FractionBox["1", "5"], "]"}]}], "+", 
             RowBox[{
              SuperscriptBox["c3", "2"], " ", 
              RowBox[{"Cos", "[", 
               FractionBox["1", "5"], "]"}]}], "+", 
             RowBox[{"2", " ", 
              RowBox[{"Cos", "[", 
               FractionBox["1", "3"], "]"}]}], "+", 
             RowBox[{"2", " ", 
              SuperscriptBox["c2", "2"], " ", 
              RowBox[{"Cos", "[", 
               FractionBox["1", "3"], "]"}]}], "+", 
             RowBox[{"2", " ", 
              SuperscriptBox["c3", "2"], " ", 
              RowBox[{"Cos", "[", 
               FractionBox["1", "3"], "]"}]}], "+", 
             RowBox[{
              SuperscriptBox["c1", "2"], " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", 
                 RowBox[{"Cos", "[", 
                  FractionBox["1", "5"], "]"}]}], "+", 
                RowBox[{"2", " ", 
                 RowBox[{"Cos", "[", 
                  FractionBox["1", "3"], "]"}]}]}], ")"}]}], "-", 
             RowBox[{"2", " ", "c1", " ", "c2", " ", 
              RowBox[{"Sin", "[", 
               FractionBox["1", "5"], "]"}]}], "+", 
             RowBox[{"2", " ", "c3", " ", 
              RowBox[{"Sin", "[", 
               FractionBox["1", "5"], "]"}]}]}], ")"}]}], 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"1", "+", 
             SuperscriptBox["c1", "2"], "+", 
             SuperscriptBox["c2", "2"], "+", 
             SuperscriptBox["c3", "2"]}], ")"}], "2"]]}], ",", 
        RowBox[{
         RowBox[{"-", 
          FractionBox[
           RowBox[{
            RowBox[{"4", " ", "c2", " ", "x"}], "+", 
            RowBox[{"2", " ", "c2", " ", 
             RowBox[{"Cos", "[", 
              FractionBox["1", "5"], "]"}]}], "+", 
            RowBox[{"4", " ", "c2", " ", 
             RowBox[{"Cos", "[", 
              FractionBox["1", "3"], "]"}]}], "-", 
            RowBox[{"2", " ", "c1", " ", 
             RowBox[{"Sin", "[", 
              FractionBox["1", "5"], "]"}]}]}], 
           RowBox[{"2", " ", 
            RowBox[{"(", 
             RowBox[{"1", "+", 
              SuperscriptBox["c1", "2"], "+", 
              SuperscriptBox["c2", "2"], "+", 
              SuperscriptBox["c3", "2"]}], ")"}]}]]}], "+", 
         FractionBox[
          RowBox[{"c2", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"2", " ", 
              RowBox[{"(", 
               RowBox[{"1", "+", 
                SuperscriptBox["c1", "2"], "+", 
                SuperscriptBox["c2", "2"], "+", 
                SuperscriptBox["c3", "2"]}], ")"}], " ", "x"}], "-", 
             RowBox[{"Cos", "[", 
              FractionBox["1", "5"], "]"}], "+", 
             RowBox[{
              SuperscriptBox["c2", "2"], " ", 
              RowBox[{"Cos", "[", 
               FractionBox["1", "5"], "]"}]}], "+", 
             RowBox[{
              SuperscriptBox["c3", "2"], " ", 
              RowBox[{"Cos", "[", 
               FractionBox["1", "5"], "]"}]}], "+", 
             RowBox[{"2", " ", 
              RowBox[{"Cos", "[", 
               FractionBox["1", "3"], "]"}]}], "+", 
             RowBox[{"2", " ", 
              SuperscriptBox["c2", "2"], " ", 
              RowBox[{"Cos", "[", 
               FractionBox["1", "3"], "]"}]}], "+", 
             RowBox[{"2", " ", 
              SuperscriptBox["c3", "2"], " ", 
              RowBox[{"Cos", "[", 
               FractionBox["1", "3"], "]"}]}], "+", 
             RowBox[{
              SuperscriptBox["c1", "2"], " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", 
                 RowBox[{"Cos", "[", 
                  FractionBox["1", "5"], "]"}]}], "+", 
                RowBox[{"2", " ", 
                 RowBox[{"Cos", "[", 
                  FractionBox["1", "3"], "]"}]}]}], ")"}]}], "-", 
             RowBox[{"2", " ", "c1", " ", "c2", " ", 
              RowBox[{"Sin", "[", 
               FractionBox["1", "5"], "]"}]}], "+", 
             RowBox[{"2", " ", "c3", " ", 
              RowBox[{"Sin", "[", 
               FractionBox["1", "5"], "]"}]}]}], ")"}]}], 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"1", "+", 
             SuperscriptBox["c1", "2"], "+", 
             SuperscriptBox["c2", "2"], "+", 
             SuperscriptBox["c3", "2"]}], ")"}], "2"]]}], ",", 
        RowBox[{
         RowBox[{"-", 
          FractionBox[
           RowBox[{
            RowBox[{"4", " ", "c3", " ", "x"}], "+", 
            RowBox[{"2", " ", "c3", " ", 
             RowBox[{"Cos", "[", 
              FractionBox["1", "5"], "]"}]}], "+", 
            RowBox[{"4", " ", "c3", " ", 
             RowBox[{"Cos", "[", 
              FractionBox["1", "3"], "]"}]}], "+", 
            RowBox[{"2", " ", 
             RowBox[{"Sin", "[", 
              FractionBox["1", "5"], "]"}]}]}], 
           RowBox[{"2", " ", 
            RowBox[{"(", 
             RowBox[{"1", "+", 
              SuperscriptBox["c1", "2"], "+", 
              SuperscriptBox["c2", "2"], "+", 
              SuperscriptBox["c3", "2"]}], ")"}]}]]}], "+", 
         FractionBox[
          RowBox[{"c3", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"2", " ", 
              RowBox[{"(", 
               RowBox[{"1", "+", 
                SuperscriptBox["c1", "2"], "+", 
                SuperscriptBox["c2", "2"], "+", 
                SuperscriptBox["c3", "2"]}], ")"}], " ", "x"}], "-", 
             RowBox[{"Cos", "[", 
              FractionBox["1", "5"], "]"}], "+", 
             RowBox[{
              SuperscriptBox["c2", "2"], " ", 
              RowBox[{"Cos", "[", 
               FractionBox["1", "5"], "]"}]}], "+", 
             RowBox[{
              SuperscriptBox["c3", "2"], " ", 
              RowBox[{"Cos", "[", 
               FractionBox["1", "5"], "]"}]}], "+", 
             RowBox[{"2", " ", 
              RowBox[{"Cos", "[", 
               FractionBox["1", "3"], "]"}]}], "+", 
             RowBox[{"2", " ", 
              SuperscriptBox["c2", "2"], " ", 
              RowBox[{"Cos", "[", 
               FractionBox["1", "3"], "]"}]}], "+", 
             RowBox[{"2", " ", 
              SuperscriptBox["c3", "2"], " ", 
              RowBox[{"Cos", "[", 
               FractionBox["1", "3"], "]"}]}], "+", 
             RowBox[{
              SuperscriptBox["c1", "2"], " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", 
                 RowBox[{"Cos", "[", 
                  FractionBox["1", "5"], "]"}]}], "+", 
                RowBox[{"2", " ", 
                 RowBox[{"Cos", "[", 
                  FractionBox["1", "3"], "]"}]}]}], ")"}]}], "-", 
             RowBox[{"2", " ", "c1", " ", "c2", " ", 
              RowBox[{"Sin", "[", 
               FractionBox["1", "5"], "]"}]}], "+", 
             RowBox[{"2", " ", "c3", " ", 
              RowBox[{"Sin", "[", 
               FractionBox["1", "5"], "]"}]}]}], ")"}]}], 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"1", "+", 
             SuperscriptBox["c1", "2"], "+", 
             SuperscriptBox["c2", "2"], "+", 
             SuperscriptBox["c3", "2"]}], ")"}], "2"]]}], ",", "0", ",", "0", 
        ",", "0", ",", 
        RowBox[{"l4", " ", 
         RowBox[{"Cos", "[", "\[Phi]4", "]"}], " ", 
         RowBox[{"Cos", "[", "\[Psi]4", "]"}]}], ",", "0", ",", "0", ",", "0",
         ",", "0", ",", "0", ",", 
        RowBox[{
         RowBox[{"-", "l4"}], " ", 
         RowBox[{"Sin", "[", "\[Phi]4", "]"}], " ", 
         RowBox[{"Sin", "[", "\[Psi]4", "]"}]}], ",", "0", ",", "0"}], "}"}], 
      ",", 
      RowBox[{"{", 
       RowBox[{"0", ",", 
        RowBox[{"-", "1"}], ",", "0", ",", 
        RowBox[{
         FractionBox[
          RowBox[{
           RowBox[{
            RowBox[{"-", "4"}], " ", "c1", " ", "y"}], "+", 
           RowBox[{"2", " ", "c2", " ", 
            RowBox[{"Cos", "[", 
             FractionBox["1", "5"], "]"}]}], "-", 
           RowBox[{"2", " ", "c1", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"Sin", "[", 
               FractionBox["1", "5"], "]"}], "+", 
              RowBox[{"2", " ", 
               RowBox[{"Sin", "[", 
                FractionBox["1", "3"], "]"}]}]}], ")"}]}]}], 
          RowBox[{"2", " ", 
           RowBox[{"(", 
            RowBox[{"1", "+", 
             SuperscriptBox["c1", "2"], "+", 
             SuperscriptBox["c2", "2"], "+", 
             SuperscriptBox["c3", "2"]}], ")"}]}]], "-", 
         FractionBox[
          RowBox[{"c1", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              RowBox[{"-", "2"}], " ", 
              RowBox[{"(", 
               RowBox[{"1", "+", 
                SuperscriptBox["c1", "2"], "+", 
                SuperscriptBox["c2", "2"], "+", 
                SuperscriptBox["c3", "2"]}], ")"}], " ", "y"}], "+", 
             RowBox[{"2", " ", "c1", " ", "c2", " ", 
              RowBox[{"Cos", "[", 
               FractionBox["1", "5"], "]"}]}], "+", 
             RowBox[{"2", " ", "c3", " ", 
              RowBox[{"Cos", "[", 
               FractionBox["1", "5"], "]"}]}], "+", 
             RowBox[{"Sin", "[", 
              FractionBox["1", "5"], "]"}], "+", 
             RowBox[{
              SuperscriptBox["c2", "2"], " ", 
              RowBox[{"Sin", "[", 
               FractionBox["1", "5"], "]"}]}], "-", 
             RowBox[{
              SuperscriptBox["c3", "2"], " ", 
              RowBox[{"Sin", "[", 
               FractionBox["1", "5"], "]"}]}], "-", 
             RowBox[{"2", " ", 
              RowBox[{"Sin", "[", 
               FractionBox["1", "3"], "]"}]}], "-", 
             RowBox[{"2", " ", 
              SuperscriptBox["c2", "2"], " ", 
              RowBox[{"Sin", "[", 
               FractionBox["1", "3"], "]"}]}], "-", 
             RowBox[{"2", " ", 
              SuperscriptBox["c3", "2"], " ", 
              RowBox[{"Sin", "[", 
               FractionBox["1", "3"], "]"}]}], "-", 
             RowBox[{
              SuperscriptBox["c1", "2"], " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"Sin", "[", 
                 FractionBox["1", "5"], "]"}], "+", 
                RowBox[{"2", " ", 
                 RowBox[{"Sin", "[", 
                  FractionBox["1", "3"], "]"}]}]}], ")"}]}]}], ")"}]}], 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"1", "+", 
             SuperscriptBox["c1", "2"], "+", 
             SuperscriptBox["c2", "2"], "+", 
             SuperscriptBox["c3", "2"]}], ")"}], "2"]]}], ",", 
        RowBox[{
         FractionBox[
          RowBox[{
           RowBox[{
            RowBox[{"-", "4"}], " ", "c2", " ", "y"}], "+", 
           RowBox[{"2", " ", "c1", " ", 
            RowBox[{"Cos", "[", 
             FractionBox["1", "5"], "]"}]}], "+", 
           RowBox[{"2", " ", "c2", " ", 
            RowBox[{"Sin", "[", 
             FractionBox["1", "5"], "]"}]}], "-", 
           RowBox[{"4", " ", "c2", " ", 
            RowBox[{"Sin", "[", 
             FractionBox["1", "3"], "]"}]}]}], 
          RowBox[{"2", " ", 
           RowBox[{"(", 
            RowBox[{"1", "+", 
             SuperscriptBox["c1", "2"], "+", 
             SuperscriptBox["c2", "2"], "+", 
             SuperscriptBox["c3", "2"]}], ")"}]}]], "-", 
         FractionBox[
          RowBox[{"c2", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              RowBox[{"-", "2"}], " ", 
              RowBox[{"(", 
               RowBox[{"1", "+", 
                SuperscriptBox["c1", "2"], "+", 
                SuperscriptBox["c2", "2"], "+", 
                SuperscriptBox["c3", "2"]}], ")"}], " ", "y"}], "+", 
             RowBox[{"2", " ", "c1", " ", "c2", " ", 
              RowBox[{"Cos", "[", 
               FractionBox["1", "5"], "]"}]}], "+", 
             RowBox[{"2", " ", "c3", " ", 
              RowBox[{"Cos", "[", 
               FractionBox["1", "5"], "]"}]}], "+", 
             RowBox[{"Sin", "[", 
              FractionBox["1", "5"], "]"}], "+", 
             RowBox[{
              SuperscriptBox["c2", "2"], " ", 
              RowBox[{"Sin", "[", 
               FractionBox["1", "5"], "]"}]}], "-", 
             RowBox[{
              SuperscriptBox["c3", "2"], " ", 
              RowBox[{"Sin", "[", 
               FractionBox["1", "5"], "]"}]}], "-", 
             RowBox[{"2", " ", 
              RowBox[{"Sin", "[", 
               FractionBox["1", "3"], "]"}]}], "-", 
             RowBox[{"2", " ", 
              SuperscriptBox["c2", "2"], " ", 
              RowBox[{"Sin", "[", 
               FractionBox["1", "3"], "]"}]}], "-", 
             RowBox[{"2", " ", 
              SuperscriptBox["c3", "2"], " ", 
              RowBox[{"Sin", "[", 
               FractionBox["1", "3"], "]"}]}], "-", 
             RowBox[{
              SuperscriptBox["c1", "2"], " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"Sin", "[", 
                 FractionBox["1", "5"], "]"}], "+", 
                RowBox[{"2", " ", 
                 RowBox[{"Sin", "[", 
                  FractionBox["1", "3"], "]"}]}]}], ")"}]}]}], ")"}]}], 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"1", "+", 
             SuperscriptBox["c1", "2"], "+", 
             SuperscriptBox["c2", "2"], "+", 
             SuperscriptBox["c3", "2"]}], ")"}], "2"]]}], ",", 
        RowBox[{
         FractionBox[
          RowBox[{
           RowBox[{
            RowBox[{"-", "4"}], " ", "c3", " ", "y"}], "+", 
           RowBox[{"2", " ", 
            RowBox[{"Cos", "[", 
             FractionBox["1", "5"], "]"}]}], "-", 
           RowBox[{"2", " ", "c3", " ", 
            RowBox[{"Sin", "[", 
             FractionBox["1", "5"], "]"}]}], "-", 
           RowBox[{"4", " ", "c3", " ", 
            RowBox[{"Sin", "[", 
             FractionBox["1", "3"], "]"}]}]}], 
          RowBox[{"2", " ", 
           RowBox[{"(", 
            RowBox[{"1", "+", 
             SuperscriptBox["c1", "2"], "+", 
             SuperscriptBox["c2", "2"], "+", 
             SuperscriptBox["c3", "2"]}], ")"}]}]], "-", 
         FractionBox[
          RowBox[{"c3", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              RowBox[{"-", "2"}], " ", 
              RowBox[{"(", 
               RowBox[{"1", "+", 
                SuperscriptBox["c1", "2"], "+", 
                SuperscriptBox["c2", "2"], "+", 
                SuperscriptBox["c3", "2"]}], ")"}], " ", "y"}], "+", 
             RowBox[{"2", " ", "c1", " ", "c2", " ", 
              RowBox[{"Cos", "[", 
               FractionBox["1", "5"], "]"}]}], "+", 
             RowBox[{"2", " ", "c3", " ", 
              RowBox[{"Cos", "[", 
               FractionBox["1", "5"], "]"}]}], "+", 
             RowBox[{"Sin", "[", 
              FractionBox["1", "5"], "]"}], "+", 
             RowBox[{
              SuperscriptBox["c2", "2"], " ", 
              RowBox[{"Sin", "[", 
               FractionBox["1", "5"], "]"}]}], "-", 
             RowBox[{
              SuperscriptBox["c3", "2"], " ", 
              RowBox[{"Sin", "[", 
               FractionBox["1", "5"], "]"}]}], "-", 
             RowBox[{"2", " ", 
              RowBox[{"Sin", "[", 
               FractionBox["1", "3"], "]"}]}], "-", 
             RowBox[{"2", " ", 
              SuperscriptBox["c2", "2"], " ", 
              RowBox[{"Sin", "[", 
               FractionBox["1", "3"], "]"}]}], "-", 
             RowBox[{"2", " ", 
              SuperscriptBox["c3", "2"], " ", 
              RowBox[{"Sin", "[", 
               FractionBox["1", "3"], "]"}]}], "-", 
             RowBox[{
              SuperscriptBox["c1", "2"], " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"Sin", "[", 
                 FractionBox["1", "5"], "]"}], "+", 
                RowBox[{"2", " ", 
                 RowBox[{"Sin", "[", 
                  FractionBox["1", "3"], "]"}]}]}], ")"}]}]}], ")"}]}], 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"1", "+", 
             SuperscriptBox["c1", "2"], "+", 
             SuperscriptBox["c2", "2"], "+", 
             SuperscriptBox["c3", "2"]}], ")"}], "2"]]}], ",", "0", ",", "0", 
        ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", 
        ",", 
        RowBox[{
         RowBox[{"-", "l4"}], " ", 
         RowBox[{"Cos", "[", "\[Psi]4", "]"}]}], ",", "0", ",", "0"}], "}"}], 
      ",", 
      RowBox[{"{", 
       RowBox[{"0", ",", "0", ",", 
        RowBox[{"-", "1"}], ",", 
        RowBox[{
         FractionBox[
          RowBox[{
           RowBox[{
            RowBox[{"-", "2"}], " ", "c1", " ", "z"}], "+", 
           RowBox[{"c3", " ", 
            RowBox[{"Cos", "[", 
             FractionBox["1", "5"], "]"}]}], "+", 
           RowBox[{"2", " ", "c1", " ", "l4", " ", 
            RowBox[{"Cos", "[", "\[Phi]4", "]"}], " ", 
            RowBox[{"Cos", "[", "\[Psi]4", "]"}]}], "+", 
           RowBox[{"Sin", "[", 
            FractionBox["1", "5"], "]"}]}], 
          RowBox[{"1", "+", 
           SuperscriptBox["c1", "2"], "+", 
           SuperscriptBox["c2", "2"], "+", 
           SuperscriptBox["c3", "2"]}]], "-", 
         FractionBox[
          RowBox[{"2", " ", "c1", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              RowBox[{"-", 
               RowBox[{"(", 
                RowBox[{"1", "+", 
                 SuperscriptBox["c1", "2"], "+", 
                 SuperscriptBox["c2", "2"], "+", 
                 SuperscriptBox["c3", "2"]}], ")"}]}], " ", "z"}], "-", 
             RowBox[{"c2", " ", 
              RowBox[{"Cos", "[", 
               FractionBox["1", "5"], "]"}]}], "+", 
             RowBox[{"c1", " ", "c3", " ", 
              RowBox[{"Cos", "[", 
               FractionBox["1", "5"], "]"}]}], "+", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{"1", "+", 
                SuperscriptBox["c1", "2"], "+", 
                SuperscriptBox["c2", "2"], "+", 
                SuperscriptBox["c3", "2"]}], ")"}], " ", "l4", " ", 
              RowBox[{"Cos", "[", "\[Phi]4", "]"}], " ", 
              RowBox[{"Cos", "[", "\[Psi]4", "]"}]}], "+", 
             RowBox[{"c1", " ", 
              RowBox[{"Sin", "[", 
               FractionBox["1", "5"], "]"}]}], "+", 
             RowBox[{"c2", " ", "c3", " ", 
              RowBox[{"Sin", "[", 
               FractionBox["1", "5"], "]"}]}]}], ")"}]}], 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"1", "+", 
             SuperscriptBox["c1", "2"], "+", 
             SuperscriptBox["c2", "2"], "+", 
             SuperscriptBox["c3", "2"]}], ")"}], "2"]]}], ",", 
        RowBox[{
         FractionBox[
          RowBox[{
           RowBox[{
            RowBox[{"-", "2"}], " ", "c2", " ", "z"}], "-", 
           RowBox[{"Cos", "[", 
            FractionBox["1", "5"], "]"}], "+", 
           RowBox[{"2", " ", "c2", " ", "l4", " ", 
            RowBox[{"Cos", "[", "\[Phi]4", "]"}], " ", 
            RowBox[{"Cos", "[", "\[Psi]4", "]"}]}], "+", 
           RowBox[{"c3", " ", 
            RowBox[{"Sin", "[", 
             FractionBox["1", "5"], "]"}]}]}], 
          RowBox[{"1", "+", 
           SuperscriptBox["c1", "2"], "+", 
           SuperscriptBox["c2", "2"], "+", 
           SuperscriptBox["c3", "2"]}]], "-", 
         FractionBox[
          RowBox[{"2", " ", "c2", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              RowBox[{"-", 
               RowBox[{"(", 
                RowBox[{"1", "+", 
                 SuperscriptBox["c1", "2"], "+", 
                 SuperscriptBox["c2", "2"], "+", 
                 SuperscriptBox["c3", "2"]}], ")"}]}], " ", "z"}], "-", 
             RowBox[{"c2", " ", 
              RowBox[{"Cos", "[", 
               FractionBox["1", "5"], "]"}]}], "+", 
             RowBox[{"c1", " ", "c3", " ", 
              RowBox[{"Cos", "[", 
               FractionBox["1", "5"], "]"}]}], "+", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{"1", "+", 
                SuperscriptBox["c1", "2"], "+", 
                SuperscriptBox["c2", "2"], "+", 
                SuperscriptBox["c3", "2"]}], ")"}], " ", "l4", " ", 
              RowBox[{"Cos", "[", "\[Phi]4", "]"}], " ", 
              RowBox[{"Cos", "[", "\[Psi]4", "]"}]}], "+", 
             RowBox[{"c1", " ", 
              RowBox[{"Sin", "[", 
               FractionBox["1", "5"], "]"}]}], "+", 
             RowBox[{"c2", " ", "c3", " ", 
              RowBox[{"Sin", "[", 
               FractionBox["1", "5"], "]"}]}]}], ")"}]}], 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"1", "+", 
             SuperscriptBox["c1", "2"], "+", 
             SuperscriptBox["c2", "2"], "+", 
             SuperscriptBox["c3", "2"]}], ")"}], "2"]]}], ",", 
        RowBox[{
         FractionBox[
          RowBox[{
           RowBox[{
            RowBox[{"-", "2"}], " ", "c3", " ", "z"}], "+", 
           RowBox[{"c1", " ", 
            RowBox[{"Cos", "[", 
             FractionBox["1", "5"], "]"}]}], "+", 
           RowBox[{"2", " ", "c3", " ", "l4", " ", 
            RowBox[{"Cos", "[", "\[Phi]4", "]"}], " ", 
            RowBox[{"Cos", "[", "\[Psi]4", "]"}]}], "+", 
           RowBox[{"c2", " ", 
            RowBox[{"Sin", "[", 
             FractionBox["1", "5"], "]"}]}]}], 
          RowBox[{"1", "+", 
           SuperscriptBox["c1", "2"], "+", 
           SuperscriptBox["c2", "2"], "+", 
           SuperscriptBox["c3", "2"]}]], "-", 
         FractionBox[
          RowBox[{"2", " ", "c3", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              RowBox[{"-", 
               RowBox[{"(", 
                RowBox[{"1", "+", 
                 SuperscriptBox["c1", "2"], "+", 
                 SuperscriptBox["c2", "2"], "+", 
                 SuperscriptBox["c3", "2"]}], ")"}]}], " ", "z"}], "-", 
             RowBox[{"c2", " ", 
              RowBox[{"Cos", "[", 
               FractionBox["1", "5"], "]"}]}], "+", 
             RowBox[{"c1", " ", "c3", " ", 
              RowBox[{"Cos", "[", 
               FractionBox["1", "5"], "]"}]}], "+", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{"1", "+", 
                SuperscriptBox["c1", "2"], "+", 
                SuperscriptBox["c2", "2"], "+", 
                SuperscriptBox["c3", "2"]}], ")"}], " ", "l4", " ", 
              RowBox[{"Cos", "[", "\[Phi]4", "]"}], " ", 
              RowBox[{"Cos", "[", "\[Psi]4", "]"}]}], "+", 
             RowBox[{"c1", " ", 
              RowBox[{"Sin", "[", 
               FractionBox["1", "5"], "]"}]}], "+", 
             RowBox[{"c2", " ", "c3", " ", 
              RowBox[{"Sin", "[", 
               FractionBox["1", "5"], "]"}]}]}], ")"}]}], 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"1", "+", 
             SuperscriptBox["c1", "2"], "+", 
             SuperscriptBox["c2", "2"], "+", 
             SuperscriptBox["c3", "2"]}], ")"}], "2"]]}], ",", "0", ",", "0", 
        ",", "0", ",", 
        RowBox[{
         RowBox[{"-", "l4"}], " ", 
         RowBox[{"Cos", "[", "\[Psi]4", "]"}], " ", 
         RowBox[{"Sin", "[", "\[Phi]4", "]"}]}], ",", "0", ",", "0", ",", "0",
         ",", "0", ",", "0", ",", 
        RowBox[{
         RowBox[{"-", "l4"}], " ", 
         RowBox[{"Cos", "[", "\[Phi]4", "]"}], " ", 
         RowBox[{"Sin", "[", "\[Psi]4", "]"}]}], ",", "0", ",", "0"}], "}"}], 
      ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "1"}], ",", "0", ",", "0", ",", 
        RowBox[{
         FractionBox["1", "4"], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", 
            FractionBox[
             RowBox[{"4", " ", "c1", " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"c1", " ", "c2"}], "-", "c3"}], ")"}], " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{
                 SqrtBox["3"], " ", 
                 RowBox[{"Cos", "[", 
                  FractionBox["1", "5"], "]"}]}], "+", 
                RowBox[{"Sin", "[", 
                 FractionBox["1", "5"], "]"}]}], ")"}]}], 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "+", 
                SuperscriptBox["c1", "2"], "+", 
                SuperscriptBox["c2", "2"], "+", 
                SuperscriptBox["c3", "2"]}], ")"}], "2"]]}], "+", 
           FractionBox[
            RowBox[{"2", " ", "c2", " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                SqrtBox["3"], " ", 
                RowBox[{"Cos", "[", 
                 FractionBox["1", "5"], "]"}]}], "+", 
               RowBox[{"Sin", "[", 
                FractionBox["1", "5"], "]"}]}], ")"}]}], 
            RowBox[{"1", "+", 
             SuperscriptBox["c1", "2"], "+", 
             SuperscriptBox["c2", "2"], "+", 
             SuperscriptBox["c3", "2"]}]], "-", 
           FractionBox[
            RowBox[{"2", " ", "c1", " ", 
             RowBox[{"(", 
              RowBox[{"1", "+", 
               SuperscriptBox["c1", "2"], "-", 
               SuperscriptBox["c2", "2"], "-", 
               SuperscriptBox["c3", "2"]}], ")"}], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", 
                RowBox[{"Cos", "[", 
                 FractionBox["1", "5"], "]"}]}], "+", 
               RowBox[{
                SqrtBox["3"], " ", 
                RowBox[{"Sin", "[", 
                 FractionBox["1", "5"], "]"}]}]}], ")"}]}], 
            SuperscriptBox[
             RowBox[{"(", 
              RowBox[{"1", "+", 
               SuperscriptBox["c1", "2"], "+", 
               SuperscriptBox["c2", "2"], "+", 
               SuperscriptBox["c3", "2"]}], ")"}], "2"]], "+", 
           FractionBox[
            RowBox[{"2", " ", "c1", " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", 
                RowBox[{"Cos", "[", 
                 FractionBox["1", "5"], "]"}]}], "+", 
               RowBox[{
                SqrtBox["3"], " ", 
                RowBox[{"Sin", "[", 
                 FractionBox["1", "5"], "]"}]}]}], ")"}]}], 
            RowBox[{"1", "+", 
             SuperscriptBox["c1", "2"], "+", 
             SuperscriptBox["c2", "2"], "+", 
             SuperscriptBox["c3", "2"]}]]}], ")"}]}], ",", 
        RowBox[{
         FractionBox["1", "4"], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", 
            FractionBox[
             RowBox[{"4", " ", "c2", " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"c1", " ", "c2"}], "-", "c3"}], ")"}], " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{
                 SqrtBox["3"], " ", 
                 RowBox[{"Cos", "[", 
                  FractionBox["1", "5"], "]"}]}], "+", 
                RowBox[{"Sin", "[", 
                 FractionBox["1", "5"], "]"}]}], ")"}]}], 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "+", 
                SuperscriptBox["c1", "2"], "+", 
                SuperscriptBox["c2", "2"], "+", 
                SuperscriptBox["c3", "2"]}], ")"}], "2"]]}], "+", 
           FractionBox[
            RowBox[{"2", " ", "c1", " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                SqrtBox["3"], " ", 
                RowBox[{"Cos", "[", 
                 FractionBox["1", "5"], "]"}]}], "+", 
               RowBox[{"Sin", "[", 
                FractionBox["1", "5"], "]"}]}], ")"}]}], 
            RowBox[{"1", "+", 
             SuperscriptBox["c1", "2"], "+", 
             SuperscriptBox["c2", "2"], "+", 
             SuperscriptBox["c3", "2"]}]], "-", 
           FractionBox[
            RowBox[{"2", " ", "c2", " ", 
             RowBox[{"(", 
              RowBox[{"1", "+", 
               SuperscriptBox["c1", "2"], "-", 
               SuperscriptBox["c2", "2"], "-", 
               SuperscriptBox["c3", "2"]}], ")"}], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", 
                RowBox[{"Cos", "[", 
                 FractionBox["1", "5"], "]"}]}], "+", 
               RowBox[{
                SqrtBox["3"], " ", 
                RowBox[{"Sin", "[", 
                 FractionBox["1", "5"], "]"}]}]}], ")"}]}], 
            SuperscriptBox[
             RowBox[{"(", 
              RowBox[{"1", "+", 
               SuperscriptBox["c1", "2"], "+", 
               SuperscriptBox["c2", "2"], "+", 
               SuperscriptBox["c3", "2"]}], ")"}], "2"]], "-", 
           FractionBox[
            RowBox[{"2", " ", "c2", " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", 
                RowBox[{"Cos", "[", 
                 FractionBox["1", "5"], "]"}]}], "+", 
               RowBox[{
                SqrtBox["3"], " ", 
                RowBox[{"Sin", "[", 
                 FractionBox["1", "5"], "]"}]}]}], ")"}]}], 
            RowBox[{"1", "+", 
             SuperscriptBox["c1", "2"], "+", 
             SuperscriptBox["c2", "2"], "+", 
             SuperscriptBox["c3", "2"]}]]}], ")"}]}], ",", 
        RowBox[{
         FractionBox["1", "4"], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", 
            FractionBox[
             RowBox[{"4", " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"c1", " ", "c2"}], "-", "c3"}], ")"}], " ", "c3", " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{
                 SqrtBox["3"], " ", 
                 RowBox[{"Cos", "[", 
                  FractionBox["1", "5"], "]"}]}], "+", 
                RowBox[{"Sin", "[", 
                 FractionBox["1", "5"], "]"}]}], ")"}]}], 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "+", 
                SuperscriptBox["c1", "2"], "+", 
                SuperscriptBox["c2", "2"], "+", 
                SuperscriptBox["c3", "2"]}], ")"}], "2"]]}], "-", 
           FractionBox[
            RowBox[{"2", " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                SqrtBox["3"], " ", 
                RowBox[{"Cos", "[", 
                 FractionBox["1", "5"], "]"}]}], "+", 
               RowBox[{"Sin", "[", 
                FractionBox["1", "5"], "]"}]}], ")"}]}], 
            RowBox[{"1", "+", 
             SuperscriptBox["c1", "2"], "+", 
             SuperscriptBox["c2", "2"], "+", 
             SuperscriptBox["c3", "2"]}]], "-", 
           FractionBox[
            RowBox[{"2", " ", "c3", " ", 
             RowBox[{"(", 
              RowBox[{"1", "+", 
               SuperscriptBox["c1", "2"], "-", 
               SuperscriptBox["c2", "2"], "-", 
               SuperscriptBox["c3", "2"]}], ")"}], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", 
                RowBox[{"Cos", "[", 
                 FractionBox["1", "5"], "]"}]}], "+", 
               RowBox[{
                SqrtBox["3"], " ", 
                RowBox[{"Sin", "[", 
                 FractionBox["1", "5"], "]"}]}]}], ")"}]}], 
            SuperscriptBox[
             RowBox[{"(", 
              RowBox[{"1", "+", 
               SuperscriptBox["c1", "2"], "+", 
               SuperscriptBox["c2", "2"], "+", 
               SuperscriptBox["c3", "2"]}], ")"}], "2"]], "-", 
           FractionBox[
            RowBox[{"2", " ", "c3", " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", 
                RowBox[{"Cos", "[", 
                 FractionBox["1", "5"], "]"}]}], "+", 
               RowBox[{
                SqrtBox["3"], " ", 
                RowBox[{"Sin", "[", 
                 FractionBox["1", "5"], "]"}]}]}], ")"}]}], 
            RowBox[{"1", "+", 
             SuperscriptBox["c1", "2"], "+", 
             SuperscriptBox["c2", "2"], "+", 
             SuperscriptBox["c3", "2"]}]]}], ")"}]}], ",", "0", ",", "0", ",",
         "0", ",", "0", ",", 
        RowBox[{"l5", " ", 
         RowBox[{"Cos", "[", "\[Phi]5", "]"}], " ", 
         RowBox[{"Cos", "[", "\[Psi]5", "]"}]}], ",", "0", ",", "0", ",", "0",
         ",", "0", ",", "0", ",", 
        RowBox[{
         RowBox[{"-", "l5"}], " ", 
         RowBox[{"Sin", "[", "\[Phi]5", "]"}], " ", 
         RowBox[{"Sin", "[", "\[Psi]5", "]"}]}], ",", "0"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0", ",", 
        RowBox[{"-", "1"}], ",", "0", ",", 
        RowBox[{
         FractionBox["1", "4"], " ", 
         RowBox[{"(", 
          RowBox[{
           FractionBox[
            RowBox[{"2", " ", "c1", " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "1"}], "+", 
               SuperscriptBox["c1", "2"], "-", 
               SuperscriptBox["c2", "2"], "+", 
               SuperscriptBox["c3", "2"]}], ")"}], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                SqrtBox["3"], " ", 
                RowBox[{"Cos", "[", 
                 FractionBox["1", "5"], "]"}]}], "+", 
               RowBox[{"Sin", "[", 
                FractionBox["1", "5"], "]"}]}], ")"}]}], 
            SuperscriptBox[
             RowBox[{"(", 
              RowBox[{"1", "+", 
               SuperscriptBox["c1", "2"], "+", 
               SuperscriptBox["c2", "2"], "+", 
               SuperscriptBox["c3", "2"]}], ")"}], "2"]], "-", 
           FractionBox[
            RowBox[{"2", " ", "c1", " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                SqrtBox["3"], " ", 
                RowBox[{"Cos", "[", 
                 FractionBox["1", "5"], "]"}]}], "+", 
               RowBox[{"Sin", "[", 
                FractionBox["1", "5"], "]"}]}], ")"}]}], 
            RowBox[{"1", "+", 
             SuperscriptBox["c1", "2"], "+", 
             SuperscriptBox["c2", "2"], "+", 
             SuperscriptBox["c3", "2"]}]], "-", 
           FractionBox[
            RowBox[{"4", " ", "c1", " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"c1", " ", "c2"}], "+", "c3"}], ")"}], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", 
                RowBox[{"Cos", "[", 
                 FractionBox["1", "5"], "]"}]}], "+", 
               RowBox[{
                SqrtBox["3"], " ", 
                RowBox[{"Sin", "[", 
                 FractionBox["1", "5"], "]"}]}]}], ")"}]}], 
            SuperscriptBox[
             RowBox[{"(", 
              RowBox[{"1", "+", 
               SuperscriptBox["c1", "2"], "+", 
               SuperscriptBox["c2", "2"], "+", 
               SuperscriptBox["c3", "2"]}], ")"}], "2"]], "+", 
           FractionBox[
            RowBox[{"2", " ", "c2", " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", 
                RowBox[{"Cos", "[", 
                 FractionBox["1", "5"], "]"}]}], "+", 
               RowBox[{
                SqrtBox["3"], " ", 
                RowBox[{"Sin", "[", 
                 FractionBox["1", "5"], "]"}]}]}], ")"}]}], 
            RowBox[{"1", "+", 
             SuperscriptBox["c1", "2"], "+", 
             SuperscriptBox["c2", "2"], "+", 
             SuperscriptBox["c3", "2"]}]]}], ")"}]}], ",", 
        RowBox[{
         FractionBox["1", "4"], " ", 
         RowBox[{"(", 
          RowBox[{
           FractionBox[
            RowBox[{"2", " ", "c2", " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "1"}], "+", 
               SuperscriptBox["c1", "2"], "-", 
               SuperscriptBox["c2", "2"], "+", 
               SuperscriptBox["c3", "2"]}], ")"}], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                SqrtBox["3"], " ", 
                RowBox[{"Cos", "[", 
                 FractionBox["1", "5"], "]"}]}], "+", 
               RowBox[{"Sin", "[", 
                FractionBox["1", "5"], "]"}]}], ")"}]}], 
            SuperscriptBox[
             RowBox[{"(", 
              RowBox[{"1", "+", 
               SuperscriptBox["c1", "2"], "+", 
               SuperscriptBox["c2", "2"], "+", 
               SuperscriptBox["c3", "2"]}], ")"}], "2"]], "+", 
           FractionBox[
            RowBox[{"2", " ", "c2", " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                SqrtBox["3"], " ", 
                RowBox[{"Cos", "[", 
                 FractionBox["1", "5"], "]"}]}], "+", 
               RowBox[{"Sin", "[", 
                FractionBox["1", "5"], "]"}]}], ")"}]}], 
            RowBox[{"1", "+", 
             SuperscriptBox["c1", "2"], "+", 
             SuperscriptBox["c2", "2"], "+", 
             SuperscriptBox["c3", "2"]}]], "-", 
           FractionBox[
            RowBox[{"4", " ", "c2", " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"c1", " ", "c2"}], "+", "c3"}], ")"}], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", 
                RowBox[{"Cos", "[", 
                 FractionBox["1", "5"], "]"}]}], "+", 
               RowBox[{
                SqrtBox["3"], " ", 
                RowBox[{"Sin", "[", 
                 FractionBox["1", "5"], "]"}]}]}], ")"}]}], 
            SuperscriptBox[
             RowBox[{"(", 
              RowBox[{"1", "+", 
               SuperscriptBox["c1", "2"], "+", 
               SuperscriptBox["c2", "2"], "+", 
               SuperscriptBox["c3", "2"]}], ")"}], "2"]], "+", 
           FractionBox[
            RowBox[{"2", " ", "c1", " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", 
                RowBox[{"Cos", "[", 
                 FractionBox["1", "5"], "]"}]}], "+", 
               RowBox[{
                SqrtBox["3"], " ", 
                RowBox[{"Sin", "[", 
                 FractionBox["1", "5"], "]"}]}]}], ")"}]}], 
            RowBox[{"1", "+", 
             SuperscriptBox["c1", "2"], "+", 
             SuperscriptBox["c2", "2"], "+", 
             SuperscriptBox["c3", "2"]}]]}], ")"}]}], ",", 
        RowBox[{
         FractionBox["1", "4"], " ", 
         RowBox[{"(", 
          RowBox[{
           FractionBox[
            RowBox[{"2", " ", "c3", " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "1"}], "+", 
               SuperscriptBox["c1", "2"], "-", 
               SuperscriptBox["c2", "2"], "+", 
               SuperscriptBox["c3", "2"]}], ")"}], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                SqrtBox["3"], " ", 
                RowBox[{"Cos", "[", 
                 FractionBox["1", "5"], "]"}]}], "+", 
               RowBox[{"Sin", "[", 
                FractionBox["1", "5"], "]"}]}], ")"}]}], 
            SuperscriptBox[
             RowBox[{"(", 
              RowBox[{"1", "+", 
               SuperscriptBox["c1", "2"], "+", 
               SuperscriptBox["c2", "2"], "+", 
               SuperscriptBox["c3", "2"]}], ")"}], "2"]], "-", 
           FractionBox[
            RowBox[{"2", " ", "c3", " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                SqrtBox["3"], " ", 
                RowBox[{"Cos", "[", 
                 FractionBox["1", "5"], "]"}]}], "+", 
               RowBox[{"Sin", "[", 
                FractionBox["1", "5"], "]"}]}], ")"}]}], 
            RowBox[{"1", "+", 
             SuperscriptBox["c1", "2"], "+", 
             SuperscriptBox["c2", "2"], "+", 
             SuperscriptBox["c3", "2"]}]], "-", 
           FractionBox[
            RowBox[{"4", " ", "c3", " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"c1", " ", "c2"}], "+", "c3"}], ")"}], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", 
                RowBox[{"Cos", "[", 
                 FractionBox["1", "5"], "]"}]}], "+", 
               RowBox[{
                SqrtBox["3"], " ", 
                RowBox[{"Sin", "[", 
                 FractionBox["1", "5"], "]"}]}]}], ")"}]}], 
            SuperscriptBox[
             RowBox[{"(", 
              RowBox[{"1", "+", 
               SuperscriptBox["c1", "2"], "+", 
               SuperscriptBox["c2", "2"], "+", 
               SuperscriptBox["c3", "2"]}], ")"}], "2"]], "+", 
           FractionBox[
            RowBox[{"2", " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", 
                RowBox[{"Cos", "[", 
                 FractionBox["1", "5"], "]"}]}], "+", 
               RowBox[{
                SqrtBox["3"], " ", 
                RowBox[{"Sin", "[", 
                 FractionBox["1", "5"], "]"}]}]}], ")"}]}], 
            RowBox[{"1", "+", 
             SuperscriptBox["c1", "2"], "+", 
             SuperscriptBox["c2", "2"], "+", 
             SuperscriptBox["c3", "2"]}]]}], ")"}]}], ",", "0", ",", "0", ",",
         "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",",
         "0", ",", 
        RowBox[{
         RowBox[{"-", "l5"}], " ", 
         RowBox[{"Cos", "[", "\[Psi]5", "]"}]}], ",", "0"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0", ",", "0", ",", 
        RowBox[{"-", "1"}], ",", 
        RowBox[{
         FractionBox[
          RowBox[{
           RowBox[{
            RowBox[{"-", "4"}], " ", "c1", " ", "z"}], "+", 
           RowBox[{
            SqrtBox["3"], " ", 
            RowBox[{"Cos", "[", 
             FractionBox["1", "5"], "]"}]}], "-", 
           RowBox[{"c3", " ", 
            RowBox[{"Cos", "[", 
             FractionBox["1", "5"], "]"}]}], "+", 
           RowBox[{"4", " ", "c1", " ", "l5", " ", 
            RowBox[{"Cos", "[", "\[Phi]5", "]"}], " ", 
            RowBox[{"Cos", "[", "\[Psi]5", "]"}]}], "+", 
           RowBox[{"Sin", "[", 
            FractionBox["1", "5"], "]"}], "+", 
           RowBox[{
            SqrtBox["3"], " ", "c3", " ", 
            RowBox[{"Sin", "[", 
             FractionBox["1", "5"], "]"}]}]}], 
          RowBox[{"2", " ", 
           RowBox[{"(", 
            RowBox[{"1", "+", 
             SuperscriptBox["c1", "2"], "+", 
             SuperscriptBox["c2", "2"], "+", 
             SuperscriptBox["c3", "2"]}], ")"}]}]], "-", 
         RowBox[{
          FractionBox["1", 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{"1", "+", 
              SuperscriptBox["c1", "2"], "+", 
              SuperscriptBox["c2", "2"], "+", 
              SuperscriptBox["c3", "2"]}], ")"}], "2"]], 
          RowBox[{"c1", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              RowBox[{"-", "2"}], " ", 
              RowBox[{"(", 
               RowBox[{"1", "+", 
                SuperscriptBox["c1", "2"], "+", 
                SuperscriptBox["c2", "2"], "+", 
                SuperscriptBox["c3", "2"]}], ")"}], " ", "z"}], "+", 
             RowBox[{
              SqrtBox["3"], " ", "c1", " ", 
              RowBox[{"Cos", "[", 
               FractionBox["1", "5"], "]"}]}], "+", 
             RowBox[{"c2", " ", 
              RowBox[{"Cos", "[", 
               FractionBox["1", "5"], "]"}]}], "-", 
             RowBox[{"c1", " ", "c3", " ", 
              RowBox[{"Cos", "[", 
               FractionBox["1", "5"], "]"}]}], "+", 
             RowBox[{
              SqrtBox["3"], " ", "c2", " ", "c3", " ", 
              RowBox[{"Cos", "[", 
               FractionBox["1", "5"], "]"}]}], "+", 
             RowBox[{"2", " ", 
              RowBox[{"(", 
               RowBox[{"1", "+", 
                SuperscriptBox["c1", "2"], "+", 
                SuperscriptBox["c2", "2"], "+", 
                SuperscriptBox["c3", "2"]}], ")"}], " ", "l5", " ", 
              RowBox[{"Cos", "[", "\[Phi]5", "]"}], " ", 
              RowBox[{"Cos", "[", "\[Psi]5", "]"}]}], "+", 
             RowBox[{"c1", " ", 
              RowBox[{"Sin", "[", 
               FractionBox["1", "5"], "]"}]}], "-", 
             RowBox[{
              SqrtBox["3"], " ", "c2", " ", 
              RowBox[{"Sin", "[", 
               FractionBox["1", "5"], "]"}]}], "+", 
             RowBox[{
              SqrtBox["3"], " ", "c1", " ", "c3", " ", 
              RowBox[{"Sin", "[", 
               FractionBox["1", "5"], "]"}]}], "+", 
             RowBox[{"c2", " ", "c3", " ", 
              RowBox[{"Sin", "[", 
               FractionBox["1", "5"], "]"}]}]}], ")"}]}]}]}], ",", 
        RowBox[{
         FractionBox[
          RowBox[{
           RowBox[{
            RowBox[{"-", "4"}], " ", "c2", " ", "z"}], "+", 
           RowBox[{"Cos", "[", 
            FractionBox["1", "5"], "]"}], "+", 
           RowBox[{
            SqrtBox["3"], " ", "c3", " ", 
            RowBox[{"Cos", "[", 
             FractionBox["1", "5"], "]"}]}], "+", 
           RowBox[{"4", " ", "c2", " ", "l5", " ", 
            RowBox[{"Cos", "[", "\[Phi]5", "]"}], " ", 
            RowBox[{"Cos", "[", "\[Psi]5", "]"}]}], "-", 
           RowBox[{
            SqrtBox["3"], " ", 
            RowBox[{"Sin", "[", 
             FractionBox["1", "5"], "]"}]}], "+", 
           RowBox[{"c3", " ", 
            RowBox[{"Sin", "[", 
             FractionBox["1", "5"], "]"}]}]}], 
          RowBox[{"2", " ", 
           RowBox[{"(", 
            RowBox[{"1", "+", 
             SuperscriptBox["c1", "2"], "+", 
             SuperscriptBox["c2", "2"], "+", 
             SuperscriptBox["c3", "2"]}], ")"}]}]], "-", 
         RowBox[{
          FractionBox["1", 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{"1", "+", 
              SuperscriptBox["c1", "2"], "+", 
              SuperscriptBox["c2", "2"], "+", 
              SuperscriptBox["c3", "2"]}], ")"}], "2"]], 
          RowBox[{"c2", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              RowBox[{"-", "2"}], " ", 
              RowBox[{"(", 
               RowBox[{"1", "+", 
                SuperscriptBox["c1", "2"], "+", 
                SuperscriptBox["c2", "2"], "+", 
                SuperscriptBox["c3", "2"]}], ")"}], " ", "z"}], "+", 
             RowBox[{
              SqrtBox["3"], " ", "c1", " ", 
              RowBox[{"Cos", "[", 
               FractionBox["1", "5"], "]"}]}], "+", 
             RowBox[{"c2", " ", 
              RowBox[{"Cos", "[", 
               FractionBox["1", "5"], "]"}]}], "-", 
             RowBox[{"c1", " ", "c3", " ", 
              RowBox[{"Cos", "[", 
               FractionBox["1", "5"], "]"}]}], "+", 
             RowBox[{
              SqrtBox["3"], " ", "c2", " ", "c3", " ", 
              RowBox[{"Cos", "[", 
               FractionBox["1", "5"], "]"}]}], "+", 
             RowBox[{"2", " ", 
              RowBox[{"(", 
               RowBox[{"1", "+", 
                SuperscriptBox["c1", "2"], "+", 
                SuperscriptBox["c2", "2"], "+", 
                SuperscriptBox["c3", "2"]}], ")"}], " ", "l5", " ", 
              RowBox[{"Cos", "[", "\[Phi]5", "]"}], " ", 
              RowBox[{"Cos", "[", "\[Psi]5", "]"}]}], "+", 
             RowBox[{"c1", " ", 
              RowBox[{"Sin", "[", 
               FractionBox["1", "5"], "]"}]}], "-", 
             RowBox[{
              SqrtBox["3"], " ", "c2", " ", 
              RowBox[{"Sin", "[", 
               FractionBox["1", "5"], "]"}]}], "+", 
             RowBox[{
              SqrtBox["3"], " ", "c1", " ", "c3", " ", 
              RowBox[{"Sin", "[", 
               FractionBox["1", "5"], "]"}]}], "+", 
             RowBox[{"c2", " ", "c3", " ", 
              RowBox[{"Sin", "[", 
               FractionBox["1", "5"], "]"}]}]}], ")"}]}]}]}], ",", 
        RowBox[{
         FractionBox[
          RowBox[{
           RowBox[{
            RowBox[{"-", "4"}], " ", "c3", " ", "z"}], "-", 
           RowBox[{"c1", " ", 
            RowBox[{"Cos", "[", 
             FractionBox["1", "5"], "]"}]}], "+", 
           RowBox[{
            SqrtBox["3"], " ", "c2", " ", 
            RowBox[{"Cos", "[", 
             FractionBox["1", "5"], "]"}]}], "+", 
           RowBox[{"4", " ", "c3", " ", "l5", " ", 
            RowBox[{"Cos", "[", "\[Phi]5", "]"}], " ", 
            RowBox[{"Cos", "[", "\[Psi]5", "]"}]}], "+", 
           RowBox[{
            SqrtBox["3"], " ", "c1", " ", 
            RowBox[{"Sin", "[", 
             FractionBox["1", "5"], "]"}]}], "+", 
           RowBox[{"c2", " ", 
            RowBox[{"Sin", "[", 
             FractionBox["1", "5"], "]"}]}]}], 
          RowBox[{"2", " ", 
           RowBox[{"(", 
            RowBox[{"1", "+", 
             SuperscriptBox["c1", "2"], "+", 
             SuperscriptBox["c2", "2"], "+", 
             SuperscriptBox["c3", "2"]}], ")"}]}]], "-", 
         RowBox[{
          FractionBox["1", 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{"1", "+", 
              SuperscriptBox["c1", "2"], "+", 
              SuperscriptBox["c2", "2"], "+", 
              SuperscriptBox["c3", "2"]}], ")"}], "2"]], 
          RowBox[{"c3", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              RowBox[{"-", "2"}], " ", 
              RowBox[{"(", 
               RowBox[{"1", "+", 
                SuperscriptBox["c1", "2"], "+", 
                SuperscriptBox["c2", "2"], "+", 
                SuperscriptBox["c3", "2"]}], ")"}], " ", "z"}], "+", 
             RowBox[{
              SqrtBox["3"], " ", "c1", " ", 
              RowBox[{"Cos", "[", 
               FractionBox["1", "5"], "]"}]}], "+", 
             RowBox[{"c2", " ", 
              RowBox[{"Cos", "[", 
               FractionBox["1", "5"], "]"}]}], "-", 
             RowBox[{"c1", " ", "c3", " ", 
              RowBox[{"Cos", "[", 
               FractionBox["1", "5"], "]"}]}], "+", 
             RowBox[{
              SqrtBox["3"], " ", "c2", " ", "c3", " ", 
              RowBox[{"Cos", "[", 
               FractionBox["1", "5"], "]"}]}], "+", 
             RowBox[{"2", " ", 
              RowBox[{"(", 
               RowBox[{"1", "+", 
                SuperscriptBox["c1", "2"], "+", 
                SuperscriptBox["c2", "2"], "+", 
                SuperscriptBox["c3", "2"]}], ")"}], " ", "l5", " ", 
              RowBox[{"Cos", "[", "\[Phi]5", "]"}], " ", 
              RowBox[{"Cos", "[", "\[Psi]5", "]"}]}], "+", 
             RowBox[{"c1", " ", 
              RowBox[{"Sin", "[", 
               FractionBox["1", "5"], "]"}]}], "-", 
             RowBox[{
              SqrtBox["3"], " ", "c2", " ", 
              RowBox[{"Sin", "[", 
               FractionBox["1", "5"], "]"}]}], "+", 
             RowBox[{
              SqrtBox["3"], " ", "c1", " ", "c3", " ", 
              RowBox[{"Sin", "[", 
               FractionBox["1", "5"], "]"}]}], "+", 
             RowBox[{"c2", " ", "c3", " ", 
              RowBox[{"Sin", "[", 
               FractionBox["1", "5"], "]"}]}]}], ")"}]}]}]}], ",", "0", ",", 
        "0", ",", "0", ",", "0", ",", 
        RowBox[{
         RowBox[{"-", "l5"}], " ", 
         RowBox[{"Cos", "[", "\[Psi]5", "]"}], " ", 
         RowBox[{"Sin", "[", "\[Phi]5", "]"}]}], ",", "0", ",", "0", ",", "0",
         ",", "0", ",", "0", ",", 
        RowBox[{
         RowBox[{"-", "l5"}], " ", 
         RowBox[{"Cos", "[", "\[Phi]5", "]"}], " ", 
         RowBox[{"Sin", "[", "\[Psi]5", "]"}]}], ",", "0"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "1"}], ",", "0", ",", "0", ",", 
        RowBox[{
         FractionBox["1", "4"], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", 
            FractionBox[
             RowBox[{"4", " ", "c1", " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"c1", " ", "c2"}], "-", "c3"}], ")"}], " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{
                 SqrtBox["3"], " ", 
                 RowBox[{"Cos", "[", 
                  FractionBox["1", "5"], "]"}]}], "-", 
                RowBox[{"Sin", "[", 
                 FractionBox["1", "5"], "]"}]}], ")"}]}], 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "+", 
                SuperscriptBox["c1", "2"], "+", 
                SuperscriptBox["c2", "2"], "+", 
                SuperscriptBox["c3", "2"]}], ")"}], "2"]]}], "+", 
           FractionBox[
            RowBox[{"2", " ", "c2", " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                SqrtBox["3"], " ", 
                RowBox[{"Cos", "[", 
                 FractionBox["1", "5"], "]"}]}], "-", 
               RowBox[{"Sin", "[", 
                FractionBox["1", "5"], "]"}]}], ")"}]}], 
            RowBox[{"1", "+", 
             SuperscriptBox["c1", "2"], "+", 
             SuperscriptBox["c2", "2"], "+", 
             SuperscriptBox["c3", "2"]}]], "+", 
           FractionBox[
            RowBox[{"2", " ", "c1", " ", 
             RowBox[{"(", 
              RowBox[{"1", "+", 
               SuperscriptBox["c1", "2"], "-", 
               SuperscriptBox["c2", "2"], "-", 
               SuperscriptBox["c3", "2"]}], ")"}], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"Cos", "[", 
                FractionBox["1", "5"], "]"}], "+", 
               RowBox[{
                SqrtBox["3"], " ", 
                RowBox[{"Sin", "[", 
                 FractionBox["1", "5"], "]"}]}]}], ")"}]}], 
            SuperscriptBox[
             RowBox[{"(", 
              RowBox[{"1", "+", 
               SuperscriptBox["c1", "2"], "+", 
               SuperscriptBox["c2", "2"], "+", 
               SuperscriptBox["c3", "2"]}], ")"}], "2"]], "-", 
           FractionBox[
            RowBox[{"2", " ", "c1", " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"Cos", "[", 
                FractionBox["1", "5"], "]"}], "+", 
               RowBox[{
                SqrtBox["3"], " ", 
                RowBox[{"Sin", "[", 
                 FractionBox["1", "5"], "]"}]}]}], ")"}]}], 
            RowBox[{"1", "+", 
             SuperscriptBox["c1", "2"], "+", 
             SuperscriptBox["c2", "2"], "+", 
             SuperscriptBox["c3", "2"]}]]}], ")"}]}], ",", 
        RowBox[{
         FractionBox["1", "4"], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", 
            FractionBox[
             RowBox[{"4", " ", "c2", " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"c1", " ", "c2"}], "-", "c3"}], ")"}], " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{
                 SqrtBox["3"], " ", 
                 RowBox[{"Cos", "[", 
                  FractionBox["1", "5"], "]"}]}], "-", 
                RowBox[{"Sin", "[", 
                 FractionBox["1", "5"], "]"}]}], ")"}]}], 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "+", 
                SuperscriptBox["c1", "2"], "+", 
                SuperscriptBox["c2", "2"], "+", 
                SuperscriptBox["c3", "2"]}], ")"}], "2"]]}], "+", 
           FractionBox[
            RowBox[{"2", " ", "c1", " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                SqrtBox["3"], " ", 
                RowBox[{"Cos", "[", 
                 FractionBox["1", "5"], "]"}]}], "-", 
               RowBox[{"Sin", "[", 
                FractionBox["1", "5"], "]"}]}], ")"}]}], 
            RowBox[{"1", "+", 
             SuperscriptBox["c1", "2"], "+", 
             SuperscriptBox["c2", "2"], "+", 
             SuperscriptBox["c3", "2"]}]], "+", 
           FractionBox[
            RowBox[{"2", " ", "c2", " ", 
             RowBox[{"(", 
              RowBox[{"1", "+", 
               SuperscriptBox["c1", "2"], "-", 
               SuperscriptBox["c2", "2"], "-", 
               SuperscriptBox["c3", "2"]}], ")"}], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"Cos", "[", 
                FractionBox["1", "5"], "]"}], "+", 
               RowBox[{
                SqrtBox["3"], " ", 
                RowBox[{"Sin", "[", 
                 FractionBox["1", "5"], "]"}]}]}], ")"}]}], 
            SuperscriptBox[
             RowBox[{"(", 
              RowBox[{"1", "+", 
               SuperscriptBox["c1", "2"], "+", 
               SuperscriptBox["c2", "2"], "+", 
               SuperscriptBox["c3", "2"]}], ")"}], "2"]], "+", 
           FractionBox[
            RowBox[{"2", " ", "c2", " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"Cos", "[", 
                FractionBox["1", "5"], "]"}], "+", 
               RowBox[{
                SqrtBox["3"], " ", 
                RowBox[{"Sin", "[", 
                 FractionBox["1", "5"], "]"}]}]}], ")"}]}], 
            RowBox[{"1", "+", 
             SuperscriptBox["c1", "2"], "+", 
             SuperscriptBox["c2", "2"], "+", 
             SuperscriptBox["c3", "2"]}]]}], ")"}]}], ",", 
        RowBox[{
         FractionBox["1", "4"], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", 
            FractionBox[
             RowBox[{"4", " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"c1", " ", "c2"}], "-", "c3"}], ")"}], " ", "c3", " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{
                 SqrtBox["3"], " ", 
                 RowBox[{"Cos", "[", 
                  FractionBox["1", "5"], "]"}]}], "-", 
                RowBox[{"Sin", "[", 
                 FractionBox["1", "5"], "]"}]}], ")"}]}], 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "+", 
                SuperscriptBox["c1", "2"], "+", 
                SuperscriptBox["c2", "2"], "+", 
                SuperscriptBox["c3", "2"]}], ")"}], "2"]]}], "-", 
           FractionBox[
            RowBox[{"2", " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                SqrtBox["3"], " ", 
                RowBox[{"Cos", "[", 
                 FractionBox["1", "5"], "]"}]}], "-", 
               RowBox[{"Sin", "[", 
                FractionBox["1", "5"], "]"}]}], ")"}]}], 
            RowBox[{"1", "+", 
             SuperscriptBox["c1", "2"], "+", 
             SuperscriptBox["c2", "2"], "+", 
             SuperscriptBox["c3", "2"]}]], "+", 
           FractionBox[
            RowBox[{"2", " ", "c3", " ", 
             RowBox[{"(", 
              RowBox[{"1", "+", 
               SuperscriptBox["c1", "2"], "-", 
               SuperscriptBox["c2", "2"], "-", 
               SuperscriptBox["c3", "2"]}], ")"}], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"Cos", "[", 
                FractionBox["1", "5"], "]"}], "+", 
               RowBox[{
                SqrtBox["3"], " ", 
                RowBox[{"Sin", "[", 
                 FractionBox["1", "5"], "]"}]}]}], ")"}]}], 
            SuperscriptBox[
             RowBox[{"(", 
              RowBox[{"1", "+", 
               SuperscriptBox["c1", "2"], "+", 
               SuperscriptBox["c2", "2"], "+", 
               SuperscriptBox["c3", "2"]}], ")"}], "2"]], "+", 
           FractionBox[
            RowBox[{"2", " ", "c3", " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"Cos", "[", 
                FractionBox["1", "5"], "]"}], "+", 
               RowBox[{
                SqrtBox["3"], " ", 
                RowBox[{"Sin", "[", 
                 FractionBox["1", "5"], "]"}]}]}], ")"}]}], 
            RowBox[{"1", "+", 
             SuperscriptBox["c1", "2"], "+", 
             SuperscriptBox["c2", "2"], "+", 
             SuperscriptBox["c3", "2"]}]]}], ")"}]}], ",", "0", ",", "0", ",",
         "0", ",", "0", ",", "0", ",", 
        RowBox[{"l6", " ", 
         RowBox[{"Cos", "[", "\[Phi]6", "]"}], " ", 
         RowBox[{"Cos", "[", "\[Psi]6", "]"}]}], ",", "0", ",", "0", ",", "0",
         ",", "0", ",", "0", ",", 
        RowBox[{
         RowBox[{"-", "l6"}], " ", 
         RowBox[{"Sin", "[", "\[Phi]6", "]"}], " ", 
         RowBox[{"Sin", "[", "\[Psi]6", "]"}]}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0", ",", 
        RowBox[{"-", "1"}], ",", "0", ",", 
        RowBox[{
         FractionBox["1", "4"], " ", 
         RowBox[{"(", 
          RowBox[{
           FractionBox[
            RowBox[{"2", " ", "c1", " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "1"}], "+", 
               SuperscriptBox["c1", "2"], "-", 
               SuperscriptBox["c2", "2"], "+", 
               SuperscriptBox["c3", "2"]}], ")"}], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                SqrtBox["3"], " ", 
                RowBox[{"Cos", "[", 
                 FractionBox["1", "5"], "]"}]}], "-", 
               RowBox[{"Sin", "[", 
                FractionBox["1", "5"], "]"}]}], ")"}]}], 
            SuperscriptBox[
             RowBox[{"(", 
              RowBox[{"1", "+", 
               SuperscriptBox["c1", "2"], "+", 
               SuperscriptBox["c2", "2"], "+", 
               SuperscriptBox["c3", "2"]}], ")"}], "2"]], "-", 
           FractionBox[
            RowBox[{"2", " ", "c1", " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                SqrtBox["3"], " ", 
                RowBox[{"Cos", "[", 
                 FractionBox["1", "5"], "]"}]}], "-", 
               RowBox[{"Sin", "[", 
                FractionBox["1", "5"], "]"}]}], ")"}]}], 
            RowBox[{"1", "+", 
             SuperscriptBox["c1", "2"], "+", 
             SuperscriptBox["c2", "2"], "+", 
             SuperscriptBox["c3", "2"]}]], "+", 
           FractionBox[
            RowBox[{"4", " ", "c1", " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"c1", " ", "c2"}], "+", "c3"}], ")"}], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"Cos", "[", 
                FractionBox["1", "5"], "]"}], "+", 
               RowBox[{
                SqrtBox["3"], " ", 
                RowBox[{"Sin", "[", 
                 FractionBox["1", "5"], "]"}]}]}], ")"}]}], 
            SuperscriptBox[
             RowBox[{"(", 
              RowBox[{"1", "+", 
               SuperscriptBox["c1", "2"], "+", 
               SuperscriptBox["c2", "2"], "+", 
               SuperscriptBox["c3", "2"]}], ")"}], "2"]], "-", 
           FractionBox[
            RowBox[{"2", " ", "c2", " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"Cos", "[", 
                FractionBox["1", "5"], "]"}], "+", 
               RowBox[{
                SqrtBox["3"], " ", 
                RowBox[{"Sin", "[", 
                 FractionBox["1", "5"], "]"}]}]}], ")"}]}], 
            RowBox[{"1", "+", 
             SuperscriptBox["c1", "2"], "+", 
             SuperscriptBox["c2", "2"], "+", 
             SuperscriptBox["c3", "2"]}]]}], ")"}]}], ",", 
        RowBox[{
         FractionBox["1", "4"], " ", 
         RowBox[{"(", 
          RowBox[{
           FractionBox[
            RowBox[{"2", " ", "c2", " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "1"}], "+", 
               SuperscriptBox["c1", "2"], "-", 
               SuperscriptBox["c2", "2"], "+", 
               SuperscriptBox["c3", "2"]}], ")"}], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                SqrtBox["3"], " ", 
                RowBox[{"Cos", "[", 
                 FractionBox["1", "5"], "]"}]}], "-", 
               RowBox[{"Sin", "[", 
                FractionBox["1", "5"], "]"}]}], ")"}]}], 
            SuperscriptBox[
             RowBox[{"(", 
              RowBox[{"1", "+", 
               SuperscriptBox["c1", "2"], "+", 
               SuperscriptBox["c2", "2"], "+", 
               SuperscriptBox["c3", "2"]}], ")"}], "2"]], "+", 
           FractionBox[
            RowBox[{"2", " ", "c2", " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                SqrtBox["3"], " ", 
                RowBox[{"Cos", "[", 
                 FractionBox["1", "5"], "]"}]}], "-", 
               RowBox[{"Sin", "[", 
                FractionBox["1", "5"], "]"}]}], ")"}]}], 
            RowBox[{"1", "+", 
             SuperscriptBox["c1", "2"], "+", 
             SuperscriptBox["c2", "2"], "+", 
             SuperscriptBox["c3", "2"]}]], "+", 
           FractionBox[
            RowBox[{"4", " ", "c2", " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"c1", " ", "c2"}], "+", "c3"}], ")"}], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"Cos", "[", 
                FractionBox["1", "5"], "]"}], "+", 
               RowBox[{
                SqrtBox["3"], " ", 
                RowBox[{"Sin", "[", 
                 FractionBox["1", "5"], "]"}]}]}], ")"}]}], 
            SuperscriptBox[
             RowBox[{"(", 
              RowBox[{"1", "+", 
               SuperscriptBox["c1", "2"], "+", 
               SuperscriptBox["c2", "2"], "+", 
               SuperscriptBox["c3", "2"]}], ")"}], "2"]], "-", 
           FractionBox[
            RowBox[{"2", " ", "c1", " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"Cos", "[", 
                FractionBox["1", "5"], "]"}], "+", 
               RowBox[{
                SqrtBox["3"], " ", 
                RowBox[{"Sin", "[", 
                 FractionBox["1", "5"], "]"}]}]}], ")"}]}], 
            RowBox[{"1", "+", 
             SuperscriptBox["c1", "2"], "+", 
             SuperscriptBox["c2", "2"], "+", 
             SuperscriptBox["c3", "2"]}]]}], ")"}]}], ",", 
        RowBox[{
         FractionBox["1", "4"], " ", 
         RowBox[{"(", 
          RowBox[{
           FractionBox[
            RowBox[{"2", " ", "c3", " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "1"}], "+", 
               SuperscriptBox["c1", "2"], "-", 
               SuperscriptBox["c2", "2"], "+", 
               SuperscriptBox["c3", "2"]}], ")"}], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                SqrtBox["3"], " ", 
                RowBox[{"Cos", "[", 
                 FractionBox["1", "5"], "]"}]}], "-", 
               RowBox[{"Sin", "[", 
                FractionBox["1", "5"], "]"}]}], ")"}]}], 
            SuperscriptBox[
             RowBox[{"(", 
              RowBox[{"1", "+", 
               SuperscriptBox["c1", "2"], "+", 
               SuperscriptBox["c2", "2"], "+", 
               SuperscriptBox["c3", "2"]}], ")"}], "2"]], "-", 
           FractionBox[
            RowBox[{"2", " ", "c3", " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                SqrtBox["3"], " ", 
                RowBox[{"Cos", "[", 
                 FractionBox["1", "5"], "]"}]}], "-", 
               RowBox[{"Sin", "[", 
                FractionBox["1", "5"], "]"}]}], ")"}]}], 
            RowBox[{"1", "+", 
             SuperscriptBox["c1", "2"], "+", 
             SuperscriptBox["c2", "2"], "+", 
             SuperscriptBox["c3", "2"]}]], "+", 
           FractionBox[
            RowBox[{"4", " ", "c3", " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"c1", " ", "c2"}], "+", "c3"}], ")"}], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"Cos", "[", 
                FractionBox["1", "5"], "]"}], "+", 
               RowBox[{
                SqrtBox["3"], " ", 
                RowBox[{"Sin", "[", 
                 FractionBox["1", "5"], "]"}]}]}], ")"}]}], 
            SuperscriptBox[
             RowBox[{"(", 
              RowBox[{"1", "+", 
               SuperscriptBox["c1", "2"], "+", 
               SuperscriptBox["c2", "2"], "+", 
               SuperscriptBox["c3", "2"]}], ")"}], "2"]], "-", 
           FractionBox[
            RowBox[{"2", " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"Cos", "[", 
                FractionBox["1", "5"], "]"}], "+", 
               RowBox[{
                SqrtBox["3"], " ", 
                RowBox[{"Sin", "[", 
                 FractionBox["1", "5"], "]"}]}]}], ")"}]}], 
            RowBox[{"1", "+", 
             SuperscriptBox["c1", "2"], "+", 
             SuperscriptBox["c2", "2"], "+", 
             SuperscriptBox["c3", "2"]}]]}], ")"}]}], ",", "0", ",", "0", ",",
         "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",",
         "0", ",", "0", ",", 
        RowBox[{
         RowBox[{"-", "l6"}], " ", 
         RowBox[{"Cos", "[", "\[Psi]6", "]"}]}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0", ",", "0", ",", 
        RowBox[{"-", "1"}], ",", 
        RowBox[{
         FractionBox["1", "2"], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", 
            FractionBox[
             RowBox[{"2", " ", "c1", " ", 
              RowBox[{"(", 
               RowBox[{"c1", "+", 
                RowBox[{"c2", " ", "c3"}]}], ")"}], " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{
                 SqrtBox["3"], " ", 
                 RowBox[{"Cos", "[", 
                  FractionBox["1", "5"], "]"}]}], "-", 
                RowBox[{"Sin", "[", 
                 FractionBox["1", "5"], "]"}]}], ")"}]}], 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "+", 
                SuperscriptBox["c1", "2"], "+", 
                SuperscriptBox["c2", "2"], "+", 
                SuperscriptBox["c3", "2"]}], ")"}], "2"]]}], "+", 
           FractionBox[
            RowBox[{
             RowBox[{
              SqrtBox["3"], " ", 
              RowBox[{"Cos", "[", 
               FractionBox["1", "5"], "]"}]}], "-", 
             RowBox[{"Sin", "[", 
              FractionBox["1", "5"], "]"}]}], 
            RowBox[{"1", "+", 
             SuperscriptBox["c1", "2"], "+", 
             SuperscriptBox["c2", "2"], "+", 
             SuperscriptBox["c3", "2"]}]], "-", 
           FractionBox[
            RowBox[{"2", " ", "c1", " ", 
             RowBox[{"(", 
              RowBox[{"c2", "-", 
               RowBox[{"c1", " ", "c3"}]}], ")"}], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"Cos", "[", 
                FractionBox["1", "5"], "]"}], "+", 
               RowBox[{
                SqrtBox["3"], " ", 
                RowBox[{"Sin", "[", 
                 FractionBox["1", "5"], "]"}]}]}], ")"}]}], 
            SuperscriptBox[
             RowBox[{"(", 
              RowBox[{"1", "+", 
               SuperscriptBox["c1", "2"], "+", 
               SuperscriptBox["c2", "2"], "+", 
               SuperscriptBox["c3", "2"]}], ")"}], "2"]], "-", 
           FractionBox[
            RowBox[{"c3", " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"Cos", "[", 
                FractionBox["1", "5"], "]"}], "+", 
               RowBox[{
                SqrtBox["3"], " ", 
                RowBox[{"Sin", "[", 
                 FractionBox["1", "5"], "]"}]}]}], ")"}]}], 
            RowBox[{"1", "+", 
             SuperscriptBox["c1", "2"], "+", 
             SuperscriptBox["c2", "2"], "+", 
             SuperscriptBox["c3", "2"]}]]}], ")"}]}], ",", 
        RowBox[{
         FractionBox["1", "2"], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", 
            FractionBox[
             RowBox[{"2", " ", "c2", " ", 
              RowBox[{"(", 
               RowBox[{"c1", "+", 
                RowBox[{"c2", " ", "c3"}]}], ")"}], " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{
                 SqrtBox["3"], " ", 
                 RowBox[{"Cos", "[", 
                  FractionBox["1", "5"], "]"}]}], "-", 
                RowBox[{"Sin", "[", 
                 FractionBox["1", "5"], "]"}]}], ")"}]}], 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "+", 
                SuperscriptBox["c1", "2"], "+", 
                SuperscriptBox["c2", "2"], "+", 
                SuperscriptBox["c3", "2"]}], ")"}], "2"]]}], "+", 
           FractionBox[
            RowBox[{"c3", " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                SqrtBox["3"], " ", 
                RowBox[{"Cos", "[", 
                 FractionBox["1", "5"], "]"}]}], "-", 
               RowBox[{"Sin", "[", 
                FractionBox["1", "5"], "]"}]}], ")"}]}], 
            RowBox[{"1", "+", 
             SuperscriptBox["c1", "2"], "+", 
             SuperscriptBox["c2", "2"], "+", 
             SuperscriptBox["c3", "2"]}]], "-", 
           FractionBox[
            RowBox[{"2", " ", "c2", " ", 
             RowBox[{"(", 
              RowBox[{"c2", "-", 
               RowBox[{"c1", " ", "c3"}]}], ")"}], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"Cos", "[", 
                FractionBox["1", "5"], "]"}], "+", 
               RowBox[{
                SqrtBox["3"], " ", 
                RowBox[{"Sin", "[", 
                 FractionBox["1", "5"], "]"}]}]}], ")"}]}], 
            SuperscriptBox[
             RowBox[{"(", 
              RowBox[{"1", "+", 
               SuperscriptBox["c1", "2"], "+", 
               SuperscriptBox["c2", "2"], "+", 
               SuperscriptBox["c3", "2"]}], ")"}], "2"]], "+", 
           FractionBox[
            RowBox[{
             RowBox[{"Cos", "[", 
              FractionBox["1", "5"], "]"}], "+", 
             RowBox[{
              SqrtBox["3"], " ", 
              RowBox[{"Sin", "[", 
               FractionBox["1", "5"], "]"}]}]}], 
            RowBox[{"1", "+", 
             SuperscriptBox["c1", "2"], "+", 
             SuperscriptBox["c2", "2"], "+", 
             SuperscriptBox["c3", "2"]}]]}], ")"}]}], ",", 
        RowBox[{
         FractionBox["1", "2"], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", 
            FractionBox[
             RowBox[{"2", " ", "c3", " ", 
              RowBox[{"(", 
               RowBox[{"c1", "+", 
                RowBox[{"c2", " ", "c3"}]}], ")"}], " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{
                 SqrtBox["3"], " ", 
                 RowBox[{"Cos", "[", 
                  FractionBox["1", "5"], "]"}]}], "-", 
                RowBox[{"Sin", "[", 
                 FractionBox["1", "5"], "]"}]}], ")"}]}], 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "+", 
                SuperscriptBox["c1", "2"], "+", 
                SuperscriptBox["c2", "2"], "+", 
                SuperscriptBox["c3", "2"]}], ")"}], "2"]]}], "+", 
           FractionBox[
            RowBox[{"c2", " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                SqrtBox["3"], " ", 
                RowBox[{"Cos", "[", 
                 FractionBox["1", "5"], "]"}]}], "-", 
               RowBox[{"Sin", "[", 
                FractionBox["1", "5"], "]"}]}], ")"}]}], 
            RowBox[{"1", "+", 
             SuperscriptBox["c1", "2"], "+", 
             SuperscriptBox["c2", "2"], "+", 
             SuperscriptBox["c3", "2"]}]], "-", 
           FractionBox[
            RowBox[{"2", " ", "c3", " ", 
             RowBox[{"(", 
              RowBox[{"c2", "-", 
               RowBox[{"c1", " ", "c3"}]}], ")"}], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"Cos", "[", 
                FractionBox["1", "5"], "]"}], "+", 
               RowBox[{
                SqrtBox["3"], " ", 
                RowBox[{"Sin", "[", 
                 FractionBox["1", "5"], "]"}]}]}], ")"}]}], 
            SuperscriptBox[
             RowBox[{"(", 
              RowBox[{"1", "+", 
               SuperscriptBox["c1", "2"], "+", 
               SuperscriptBox["c2", "2"], "+", 
               SuperscriptBox["c3", "2"]}], ")"}], "2"]], "-", 
           FractionBox[
            RowBox[{"c1", " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"Cos", "[", 
                FractionBox["1", "5"], "]"}], "+", 
               RowBox[{
                SqrtBox["3"], " ", 
                RowBox[{"Sin", "[", 
                 FractionBox["1", "5"], "]"}]}]}], ")"}]}], 
            RowBox[{"1", "+", 
             SuperscriptBox["c1", "2"], "+", 
             SuperscriptBox["c2", "2"], "+", 
             SuperscriptBox["c3", "2"]}]]}], ")"}]}], ",", "0", ",", "0", ",",
         "0", ",", "0", ",", "0", ",", 
        RowBox[{
         RowBox[{"-", "l6"}], " ", 
         RowBox[{"Cos", "[", "\[Psi]6", "]"}], " ", 
         RowBox[{"Sin", "[", "\[Phi]6", "]"}]}], ",", "0", ",", "0", ",", "0",
         ",", "0", ",", "0", ",", 
        RowBox[{
         RowBox[{"-", "l6"}], " ", 
         RowBox[{"Cos", "[", "\[Phi]6", "]"}], " ", 
         RowBox[{"Sin", "[", "\[Psi]6", "]"}]}]}], "}"}]}], "}"}], "/.", 
    "\[VeryThinSpace]", "qnewlist"}], "]"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{{3.7662151473358383`*^9, 3.766215152072734*^9}, 
   3.766268075129238*^9, 
   3.766291708422718*^9},ExpressionUUID->"2ffbc8dc-0c1f-413c-ab8b-\
dd6dde25a743"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"PseudoInverse", "[", 
  RowBox[{"N", "[", 
   RowBox[{"tempJ", "/.", "test"}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.7662152034392786`*^9, 
  3.76621524019228*^9}},ExpressionUUID->"afaf83ac-d684-4a32-86b0-\
2c37bb2335bf"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "0.15880537808927436`"}], ",", "0.005396646294290877`", ",", 
     RowBox[{"-", "0.0002667261510307207`"}], ",", 
     RowBox[{"-", "0.1588053780892745`"}], ",", "0.005396646294290764`", ",", 
     RowBox[{"-", "0.00026672615103090144`"}], ",", 
     RowBox[{"-", "0.15880537808927445`"}], ",", "0.005396646294290933`", ",", 
     RowBox[{"-", "0.0002667261510308225`"}], ",", 
     RowBox[{"-", "0.15880537808927445`"}], ",", "0.005396646294290912`", ",", 
     RowBox[{"-", "0.00026672615103073935`"}], ",", 
     RowBox[{"-", "0.15880537808927442`"}], ",", "0.005396646294290732`", ",", 
     RowBox[{"-", "0.0002667261510305982`"}], ",", 
     RowBox[{"-", "0.15880537808927453`"}], ",", "0.005396646294290711`", ",", 
     RowBox[{"-", "0.00026672615103049633`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.005396646294291149`", ",", 
     RowBox[{"-", "0.15891158089426213`"}], ",", "0.005454406728423515`", ",",
      "0.005396646294290743`", ",", 
     RowBox[{"-", "0.15891158089426255`"}], ",", "0.005454406728423448`", ",",
      "0.0053966462942908`", ",", 
     RowBox[{"-", "0.15891158089426236`"}], ",", "0.005454406728423653`", ",",
      "0.005396646294290857`", ",", 
     RowBox[{"-", "0.15891158089426247`"}], ",", "0.005454406728423717`", ",",
      "0.005396646294290884`", ",", 
     RowBox[{"-", "0.15891158089426247`"}], ",", "0.005454406728423978`", ",",
      "0.005396646294290746`", ",", 
     RowBox[{"-", "0.15891158089426252`"}], ",", "0.005454406728423952`"}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "0.0002667261510306353`"}], ",", "0.005454406728423845`", 
     ",", 
     RowBox[{"-", "0.1588110574108246`"}], ",", 
     RowBox[{"-", "0.0002667261510306061`"}], ",", "0.005454406728423629`", 
     ",", 
     RowBox[{"-", "0.15881105741082494`"}], ",", 
     RowBox[{"-", "0.00026672615103082354`"}], ",", "0.005454406728423633`", 
     ",", 
     RowBox[{"-", "0.15881105741082477`"}], ",", 
     RowBox[{"-", "0.00026672615103076884`"}], ",", "0.00545440672842368`", 
     ",", 
     RowBox[{"-", "0.15881105741082477`"}], ",", 
     RowBox[{"-", "0.00026672615103067886`"}], ",", "0.0054544067284238735`", 
     ",", 
     RowBox[{"-", "0.1588110574108248`"}], ",", 
     RowBox[{"-", "0.0002667261510306981`"}], ",", "0.005454406728423807`", 
     ",", 
     RowBox[{"-", "0.15881105741082474`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "0.34490862202243583`"}], ",", "0.4120526364744114`", ",", 
     RowBox[{"-", "0.27317987241275343`"}], ",", 
     RowBox[{"-", "0.4119488378882065`"}], ",", "0.5053216127187729`", ",", 
     RowBox[{"-", "0.3529594513359207`"}], ",", 
     RowBox[{"-", "0.03718548486679552`"}], ",", "0.07373074866275196`", ",", 
     RowBox[{"-", "0.08878873384175759`"}], ",", "0.12920249440945664`", ",", 
     RowBox[{"-", "0.13395066067218644`"}], ",", "0.06102109144887572`", ",", 
     "0.3820941068892306`", ",", 
     RowBox[{"-", "0.48578338513716307`"}], ",", "0.36196860625451094`", ",", 
     "0.2827463434787503`", ",", 
     RowBox[{"-", "0.37137095204658643`"}], ",", "0.2919383598870451`"}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "0.0037841307652722515`"}], ",", 
     RowBox[{"-", "0.14016871033059478`"}], ",", "0.1461911423597431`", ",", 
     RowBox[{"-", "0.21730228497163978`"}], ",", "0.15812926649674278`", ",", 
     RowBox[{"-", "0.09352448177209248`"}], ",", 
     RowBox[{"-", "0.4736141468926812`"}], ",", "0.7088607542013072`", ",", 
     RowBox[{"-", "0.5805337338689316`"}], ",", 
     RowBox[{"-", "0.32804289841264844`"}], ",", "0.5565587535068044`", ",", 
     RowBox[{"-", "0.46992166152773096`"}], ",", "0.47739827765795234`", ",", 
     RowBox[{"-", "0.5686920438707125`"}], ",", "0.4343425915091885`", ",", 
     "0.5453451833842891`", ",", 
     RowBox[{"-", "0.7146880200035474`"}], ",", "0.5634461432998235`"}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.3017473711263244`", ",", "0.03500356236291315`", ",", 
     RowBox[{"-", "0.16879501420577162`"}], ",", "0.18688223079250554`", ",", 
     "0.20311973026929916`", ",", 
     RowBox[{"-", "0.2093713592521409`"}], ",", 
     RowBox[{"-", "0.35334930048472496`"}], ",", "0.3625158274138937`", ",", 
     RowBox[{"-", "0.035472322428584425`"}], ",", 
     RowBox[{"-", "0.38169665391132285`"}], ",", "0.2366547135836469`", ",", 
     "0.05120372854786388`", ",", "0.051601929358400155`", ",", 
     RowBox[{"-", "0.39751938977680673`"}], ",", "0.20426733663435567`", ",", 
     "0.19481442311881747`", ",", 
     RowBox[{"-", "0.4397744438529465`"}], ",", "0.15816763070427745`"}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.7689136467450035`", ",", 
     RowBox[{"-", "0.004480667867743226`"}], ",", 
     RowBox[{"-", "0.926412385590707`"}], ",", 
     RowBox[{"-", "0.49044864868352356`"}], ",", 
     RowBox[{"-", "0.04248132871157367`"}], ",", "0.29238930661819007`", ",", 
     RowBox[{"-", "0.05254962240642783`"}], ",", 
     RowBox[{"-", "0.08305572628443955`"}], ",", "0.045191013547272944`", ",",
      "0.0409696553845055`", ",", 
     RowBox[{"-", "0.05581112154398657`"}], ",", "0.029210877756072378`", ",", 
     RowBox[{"-", "0.044152449561610116`"}], ",", "0.08753639415217558`", ",",
      "0.2161283042501852`", ",", 
     RowBox[{"-", "0.1602371427673788`"}], ",", "0.09829245025556722`", ",", 
     "0.28165925154663046`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "0.48611339302829776`"}], ",", "0.027852718182659036`", ",",
      "0.29677096261819863`", ",", "0.7741933950505846`", ",", 
     "0.053008318143805404`", ",", 
     RowBox[{"-", "1.0542579549726045`"}], ",", 
     RowBox[{"-", "0.15954325538056288`"}], ",", "0.04690664889308194`", ",", 
     RowBox[{"-", "0.013821799039766925`"}], ",", 
     RowBox[{"-", "0.04561874206329134`"}], ",", "0.02013352900036681`", ",", 
     "0.00843520825884083`", ",", "0.03594051234246275`", ",", 
     RowBox[{"-", "0.07475936707573393`"}], ",", "0.32031027234246007`", ",", 
     RowBox[{"-", "0.05636307821032802`"}], ",", 
     RowBox[{"-", "0.07314184714417929`"}], ",", "0.38072967892051496`"}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "0.0429084701508112`"}], ",", "0.07335979076661732`", ",", 
     "0.05493535528566495`", ",", 
     RowBox[{"-", "0.14849553827306325`"}], ",", "0.2261419039527126`", ",", 
     RowBox[{"-", "0.0026558379522999545`"}], ",", "0.79185565338698`", ",", 
     "0.31596990370703665`", ",", 
     RowBox[{"-", "1.1479243431117834`"}], ",", 
     RowBox[{"-", "0.4750351003330213`"}], ",", "0.18700071351696337`", ",", 
     "0.21064826451004168`", ",", 
     RowBox[{"-", "0.0767356084591984`"}], ",", 
     RowBox[{"-", "0.3893296944736552`"}], ",", "0.4278959200328737`", ",", 
     "0.013814502539681407`", ",", 
     RowBox[{"-", "0.4131426174696753`"}], ",", "0.39526700936314657`"}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "0.047682116836777956`", ",", "0.05309008662141053`", ",", 
     "0.035995182843528636`", ",", 
     RowBox[{"-", "0.0359775898076739`"}], ",", "0.17654904605142474`", ",", 
     "0.018179549997232997`", ",", 
     RowBox[{"-", "0.47069984467779485`"}], ",", "0.2573347604111951`", ",", 
     "0.21502992051004996`", ",", "0.7796450247382625`", ",", 
     "0.1552916624106812`", ",", 
     RowBox[{"-", "0.9833229684414528`"}], ",", 
     RowBox[{"-", "0.18669840822538655`"}], ",", 
     RowBox[{"-", "0.31042484703260614`"}], ",", "0.3522343325673075`", ",", 
     RowBox[{"-", "0.07145586015361702`"}], ",", 
     RowBox[{"-", "0.33184070846210534`"}], ",", "0.30005035065097735`"}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "0.05379360181722194`"}], ",", 
     RowBox[{"-", "0.06887912289887464`"}], ",", "0.20638396251179883`", ",", 
     "0.02922805089018481`", ",", 
     RowBox[{"-", "0.18366057524113896`"}], ",", "0.3135259672549982`", ",", 
     RowBox[{"-", "0.06709445620358358`"}], ",", 
     RowBox[{"-", "0.2329141774226007`"}], ",", "0.4376402617712633`", ",", 
     RowBox[{"-", "0.17565069111788398`"}], ",", 
     RowBox[{"-", "0.13118959197297106`"}], ",", "0.36340029365477616`", ",", 
     "0.7930996327977768`", ",", "0.30179330032147555`", ",", 
     RowBox[{"-", "1.3091172920763048`"}], ",", 
     RowBox[{"-", "0.46329349583870433`"}], ",", "0.31485016721410986`", ",", 
     RowBox[{"-", "0.07366682498888756`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "0.1712848598748827`"}], ",", 
     RowBox[{"-", "0.08094280480406989`"}], ",", "0.27049329045916004`", ",", 
     RowBox[{"-", "0.06600423046594057`"}], ",", 
     RowBox[{"-", "0.22955736419523037`"}], ",", "0.37098533718212723`", ",", 
     "0.020526963991957758`", ",", 
     RowBox[{"-", "0.304241409304272`"}], ",", "0.40205131445060677`", ",", 
     RowBox[{"-", "0.06181470789800383`"}], ",", 
     RowBox[{"-", "0.17542519141105273`"}], ",", "0.309794692389365`", ",", 
     RowBox[{"-", "0.4589582401834768`"}], ",", "0.38518421410834347`", ",", 
     RowBox[{"-", "0.0692851689888781`"}], ",", "0.8000305131409141`", ",", 
     "0.40498255560628194`", ",", 
     RowBox[{"-", "1.3458730973647375`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "0.3716982473609328`"}], ",", 
     RowBox[{"-", "0.8407542174814507`"}], ",", 
     RowBox[{"-", "0.5476884546455494`"}], ",", "0.2500153758702314`", ",", 
     "0.09036984621039415`", ",", "0.1080976996051536`", ",", 
     "0.01430697286690367`", ",", "0.20390245497464984`", ",", 
     "0.13124446179281365`", ",", 
     RowBox[{"-", "0.03575137455597727`"}], ",", "0.21414725537720064`", ",", 
     "0.12252192411814948`", ",", "0.011125055960987128`", ",", 
     "0.13926046628813535`", ",", "0.06647167871560883`", ",", 
     "0.07361009476385788`", ",", "0.10916357804132322`", ",", 
     "0.060335595678143346`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "0.2556543051188569`", ",", "0.15886995620152186`", ",", 
     "0.00512489926248682`", ",", 
     RowBox[{"-", "0.36654005600702927`"}], ",", 
     RowBox[{"-", "0.7657160920552637`"}], ",", 
     RowBox[{"-", "0.5833588382556142`"}], ",", "0.07071144519833401`", ",", 
     "0.10147871526630402`", ",", "0.2434184013243055`", ",", 
     "0.006571318791117894`", ",", "0.10310816569947132`", ",", 
     "0.24024236981934657`", ",", 
     RowBox[{"-", "0.03849165423907891`"}], ",", "0.15333200816109196`", ",", 
     "0.04241191881465351`", ",", "0.013702518682869294`", ",", 
     "0.1650166301371266`", ",", 
     RowBox[{"-", "0.0068558457008598625`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.026847357971779343`", ",", "0.3562394893902658`", ",", 
     RowBox[{"-", "0.09775620742807915`"}], ",", "0.08508136939252223`", ",", 
     "0.27604047060416653`", ",", 
     RowBox[{"-", "0.018991582866948974`"}], ",", 
     RowBox[{"-", "0.38625315361126167`"}], ",", 
     RowBox[{"-", "1.0225744834678678`"}], ",", 
     RowBox[{"-", "0.3055948148733023`"}], ",", "0.23281209544742662`", ",", 
     RowBox[{"-", "0.13378604370276403`"}], ",", "0.3504975741224174`", ",", 
     "0.013139577106440042`", ",", "0.16874369785893606`", ",", 
     "0.053378708164253864`", ",", 
     RowBox[{"-", "0.03001936876183732`"}], ",", "0.27142625272751564`", ",", 
     RowBox[{"-", "0.040550771854021464`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "0.027020379610414064`"}], ",", "0.3202089007239345`", ",", 
     RowBox[{"-", "0.03691525973043951`"}], ",", "0.019111703895993294`", ",",
      "0.2554452001150859`", ",", "0.011241700598453261`", ",", 
     "0.2384510246960521`", ",", 
     RowBox[{"-", "0.06528593371163587`"}], ",", "0.2475247737797514`", ",", 
     RowBox[{"-", "0.3836756908893791`"}], ",", 
     RowBox[{"-", "0.9968183196188753`"}], ",", 
     RowBox[{"-", "0.37892233928977065`"}], ",", "0.07644345099247367`", ",", 
     "0.15875771261661947`", ",", "0.08034570535213512`", ",", 
     "0.018297768460343294`", ",", "0.2437818232851236`", ",", 
     "0.01770832455418942`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "0.0014153291438888328`"}], ",", 
     RowBox[{"-", "0.01307656812747994`"}], ",", "0.29547234793650234`", ",", 
     RowBox[{"-", "0.047222649184642126`"}], ",", "0.047270362814357834`", 
     ",", "0.2018491026632426`", ",", "0.02567996221131529`", ",", 
     "0.32108073227455136`", ",", 
     RowBox[{"-", "0.17562196105663888`"}], ",", "0.09081337518666242`", ",", 
     "0.3333194679544808`", ",", 
     RowBox[{"-", "0.1820642788391201`"}], ",", 
     RowBox[{"-", "0.37053085160046895`"}], ",", 
     RowBox[{"-", "0.8055954603657373`"}], ",", 
     RowBox[{"-", "0.4698227010169911`"}], ",", "0.24428337007609133`", ",", 
     "0.033090848860079104`", ",", "0.2711703955773244`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.05924017056966948`", ",", 
     RowBox[{"-", "0.06539817729653953`"}], ",", "0.32274557986939806`", ",", 
     "0.0011621335779936261`", ",", "0.012679595721511097`", ",", 
     "0.22214482352003354`", ",", 
     RowBox[{"-", "0.02128837381627432`"}], ",", "0.3774878980742504`", ",", 
     RowBox[{"-", "0.19998795570261002`"}], ",", "0.030838153565218906`", ",",
      "0.3961188577007391`", ",", 
     RowBox[{"-", "0.2112923446667035`"}], ",", "0.24992229932471638`", ",", 
     "0.10159095885120667`", ",", "0.16819759523465838`", ",", 
     RowBox[{"-", "0.37826650567625497`"}], ",", 
     RowBox[{"-", "0.9063897496409161`"}], ",", 
     RowBox[{"-", "0.36082479299045767`"}]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.7662152048970904`*^9, 3.7662152406929717`*^9}, 
   3.7662680762555933`*^9, 
   3.766291709512089*^9},ExpressionUUID->"afdb74e6-bd7c-4aa2-96f3-\
193e5d18e4c9"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Inverse", "[", 
   RowBox[{"tempJ", "/.", "qnewlist"}], "]"}], "//", "MatrixForm"}]], "Input",
 CellChangeTimes->{{3.7662151290858784`*^9, 
  3.766215138827774*^9}},ExpressionUUID->"8c0971ec-0ded-4037-9653-\
fb5a85e802a8"],

Cell[BoxData[
 TemplateBox[{
  "ReplaceAll","reps",
   "\"\\!\\(\\*RowBox[{\\\"{\\\", \\\"qnewlist\\\", \\\"}\\\"}]\\) is neither \
a list of replacement rules nor a valid dispatch table, and so cannot be used \
for replacing.\"",2,94,5,25993525642924664479,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.7662680763505383`*^9, 
  3.766291709600039*^9},ExpressionUUID->"50af4364-4364-4248-a9c6-\
b41a558cd769"],

Cell[BoxData[
 TagBox[
  RowBox[{"Inverse", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "1"}], ",", "0", ",", "0", ",", 
        RowBox[{
         FractionBox[
          RowBox[{"2", " ", "c1", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"c1", " ", "c2"}], "-", "c3"}], ")"}], " ", 
           RowBox[{"Cos", "[", 
            RowBox[{
             FractionBox["1", "5"], "+", 
             FractionBox["\[Pi]", "6"]}], "]"}]}], 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"1", "+", 
             SuperscriptBox["c1", "2"], "+", 
             SuperscriptBox["c2", "2"], "+", 
             SuperscriptBox["c3", "2"]}], ")"}], "2"]], "-", 
         FractionBox[
          RowBox[{"c2", " ", 
           RowBox[{"Cos", "[", 
            RowBox[{
             FractionBox["1", "5"], "+", 
             FractionBox["\[Pi]", "6"]}], "]"}]}], 
          RowBox[{"1", "+", 
           SuperscriptBox["c1", "2"], "+", 
           SuperscriptBox["c2", "2"], "+", 
           SuperscriptBox["c3", "2"]}]], "+", 
         FractionBox[
          RowBox[{"c1", " ", 
           RowBox[{"(", 
            RowBox[{"1", "+", 
             SuperscriptBox["c1", "2"], "-", 
             SuperscriptBox["c2", "2"], "-", 
             SuperscriptBox["c3", "2"]}], ")"}], " ", 
           RowBox[{"Sin", "[", 
            RowBox[{
             FractionBox["1", "5"], "+", 
             FractionBox["\[Pi]", "6"]}], "]"}]}], 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"1", "+", 
             SuperscriptBox["c1", "2"], "+", 
             SuperscriptBox["c2", "2"], "+", 
             SuperscriptBox["c3", "2"]}], ")"}], "2"]], "-", 
         FractionBox[
          RowBox[{"c1", " ", 
           RowBox[{"Sin", "[", 
            RowBox[{
             FractionBox["1", "5"], "+", 
             FractionBox["\[Pi]", "6"]}], "]"}]}], 
          RowBox[{"1", "+", 
           SuperscriptBox["c1", "2"], "+", 
           SuperscriptBox["c2", "2"], "+", 
           SuperscriptBox["c3", "2"]}]]}], ",", 
        RowBox[{
         FractionBox[
          RowBox[{"2", " ", "c2", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"c1", " ", "c2"}], "-", "c3"}], ")"}], " ", 
           RowBox[{"Cos", "[", 
            RowBox[{
             FractionBox["1", "5"], "+", 
             FractionBox["\[Pi]", "6"]}], "]"}]}], 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"1", "+", 
             SuperscriptBox["c1", "2"], "+", 
             SuperscriptBox["c2", "2"], "+", 
             SuperscriptBox["c3", "2"]}], ")"}], "2"]], "-", 
         FractionBox[
          RowBox[{"c1", " ", 
           RowBox[{"Cos", "[", 
            RowBox[{
             FractionBox["1", "5"], "+", 
             FractionBox["\[Pi]", "6"]}], "]"}]}], 
          RowBox[{"1", "+", 
           SuperscriptBox["c1", "2"], "+", 
           SuperscriptBox["c2", "2"], "+", 
           SuperscriptBox["c3", "2"]}]], "+", 
         FractionBox[
          RowBox[{"c2", " ", 
           RowBox[{"(", 
            RowBox[{"1", "+", 
             SuperscriptBox["c1", "2"], "-", 
             SuperscriptBox["c2", "2"], "-", 
             SuperscriptBox["c3", "2"]}], ")"}], " ", 
           RowBox[{"Sin", "[", 
            RowBox[{
             FractionBox["1", "5"], "+", 
             FractionBox["\[Pi]", "6"]}], "]"}]}], 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"1", "+", 
             SuperscriptBox["c1", "2"], "+", 
             SuperscriptBox["c2", "2"], "+", 
             SuperscriptBox["c3", "2"]}], ")"}], "2"]], "+", 
         FractionBox[
          RowBox[{"c2", " ", 
           RowBox[{"Sin", "[", 
            RowBox[{
             FractionBox["1", "5"], "+", 
             FractionBox["\[Pi]", "6"]}], "]"}]}], 
          RowBox[{"1", "+", 
           SuperscriptBox["c1", "2"], "+", 
           SuperscriptBox["c2", "2"], "+", 
           SuperscriptBox["c3", "2"]}]]}], ",", 
        RowBox[{
         FractionBox[
          RowBox[{"2", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"c1", " ", "c2"}], "-", "c3"}], ")"}], " ", "c3", " ", 
           RowBox[{"Cos", "[", 
            RowBox[{
             FractionBox["1", "5"], "+", 
             FractionBox["\[Pi]", "6"]}], "]"}]}], 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"1", "+", 
             SuperscriptBox["c1", "2"], "+", 
             SuperscriptBox["c2", "2"], "+", 
             SuperscriptBox["c3", "2"]}], ")"}], "2"]], "+", 
         FractionBox[
          RowBox[{"Cos", "[", 
           RowBox[{
            FractionBox["1", "5"], "+", 
            FractionBox["\[Pi]", "6"]}], "]"}], 
          RowBox[{"1", "+", 
           SuperscriptBox["c1", "2"], "+", 
           SuperscriptBox["c2", "2"], "+", 
           SuperscriptBox["c3", "2"]}]], "+", 
         FractionBox[
          RowBox[{"c3", " ", 
           RowBox[{"(", 
            RowBox[{"1", "+", 
             SuperscriptBox["c1", "2"], "-", 
             SuperscriptBox["c2", "2"], "-", 
             SuperscriptBox["c3", "2"]}], ")"}], " ", 
           RowBox[{"Sin", "[", 
            RowBox[{
             FractionBox["1", "5"], "+", 
             FractionBox["\[Pi]", "6"]}], "]"}]}], 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"1", "+", 
             SuperscriptBox["c1", "2"], "+", 
             SuperscriptBox["c2", "2"], "+", 
             SuperscriptBox["c3", "2"]}], ")"}], "2"]], "+", 
         FractionBox[
          RowBox[{"c3", " ", 
           RowBox[{"Sin", "[", 
            RowBox[{
             FractionBox["1", "5"], "+", 
             FractionBox["\[Pi]", "6"]}], "]"}]}], 
          RowBox[{"1", "+", 
           SuperscriptBox["c1", "2"], "+", 
           SuperscriptBox["c2", "2"], "+", 
           SuperscriptBox["c3", "2"]}]]}], ",", 
        RowBox[{"l1", " ", 
         RowBox[{"Cos", "[", "\[Phi]1", "]"}], " ", 
         RowBox[{"Cos", "[", "\[Psi]1", "]"}]}], ",", "0", ",", "0", ",", "0",
         ",", "0", ",", "0", ",", 
        RowBox[{
         RowBox[{"-", "l1"}], " ", 
         RowBox[{"Sin", "[", "\[Phi]1", "]"}], " ", 
         RowBox[{"Sin", "[", "\[Psi]1", "]"}]}], ",", "0", ",", "0", ",", "0",
         ",", "0", ",", "0"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0", ",", 
        RowBox[{"-", "1"}], ",", "0", ",", 
        RowBox[{
         RowBox[{"-", 
          FractionBox[
           RowBox[{"c1", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "+", 
              SuperscriptBox["c1", "2"], "-", 
              SuperscriptBox["c2", "2"], "+", 
              SuperscriptBox["c3", "2"]}], ")"}], " ", 
            RowBox[{"Cos", "[", 
             RowBox[{
              FractionBox["1", "5"], "+", 
              FractionBox["\[Pi]", "6"]}], "]"}]}], 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{"1", "+", 
              SuperscriptBox["c1", "2"], "+", 
              SuperscriptBox["c2", "2"], "+", 
              SuperscriptBox["c3", "2"]}], ")"}], "2"]]}], "+", 
         FractionBox[
          RowBox[{"c1", " ", 
           RowBox[{"Cos", "[", 
            RowBox[{
             FractionBox["1", "5"], "+", 
             FractionBox["\[Pi]", "6"]}], "]"}]}], 
          RowBox[{"1", "+", 
           SuperscriptBox["c1", "2"], "+", 
           SuperscriptBox["c2", "2"], "+", 
           SuperscriptBox["c3", "2"]}]], "+", 
         FractionBox[
          RowBox[{"2", " ", "c1", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"c1", " ", "c2"}], "+", "c3"}], ")"}], " ", 
           RowBox[{"Sin", "[", 
            RowBox[{
             FractionBox["1", "5"], "+", 
             FractionBox["\[Pi]", "6"]}], "]"}]}], 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"1", "+", 
             SuperscriptBox["c1", "2"], "+", 
             SuperscriptBox["c2", "2"], "+", 
             SuperscriptBox["c3", "2"]}], ")"}], "2"]], "-", 
         FractionBox[
          RowBox[{"c2", " ", 
           RowBox[{"Sin", "[", 
            RowBox[{
             FractionBox["1", "5"], "+", 
             FractionBox["\[Pi]", "6"]}], "]"}]}], 
          RowBox[{"1", "+", 
           SuperscriptBox["c1", "2"], "+", 
           SuperscriptBox["c2", "2"], "+", 
           SuperscriptBox["c3", "2"]}]]}], ",", 
        RowBox[{
         RowBox[{"-", 
          FractionBox[
           RowBox[{"c2", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "+", 
              SuperscriptBox["c1", "2"], "-", 
              SuperscriptBox["c2", "2"], "+", 
              SuperscriptBox["c3", "2"]}], ")"}], " ", 
            RowBox[{"Cos", "[", 
             RowBox[{
              FractionBox["1", "5"], "+", 
              FractionBox["\[Pi]", "6"]}], "]"}]}], 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{"1", "+", 
              SuperscriptBox["c1", "2"], "+", 
              SuperscriptBox["c2", "2"], "+", 
              SuperscriptBox["c3", "2"]}], ")"}], "2"]]}], "-", 
         FractionBox[
          RowBox[{"c2", " ", 
           RowBox[{"Cos", "[", 
            RowBox[{
             FractionBox["1", "5"], "+", 
             FractionBox["\[Pi]", "6"]}], "]"}]}], 
          RowBox[{"1", "+", 
           SuperscriptBox["c1", "2"], "+", 
           SuperscriptBox["c2", "2"], "+", 
           SuperscriptBox["c3", "2"]}]], "+", 
         FractionBox[
          RowBox[{"2", " ", "c2", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"c1", " ", "c2"}], "+", "c3"}], ")"}], " ", 
           RowBox[{"Sin", "[", 
            RowBox[{
             FractionBox["1", "5"], "+", 
             FractionBox["\[Pi]", "6"]}], "]"}]}], 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"1", "+", 
             SuperscriptBox["c1", "2"], "+", 
             SuperscriptBox["c2", "2"], "+", 
             SuperscriptBox["c3", "2"]}], ")"}], "2"]], "-", 
         FractionBox[
          RowBox[{"c1", " ", 
           RowBox[{"Sin", "[", 
            RowBox[{
             FractionBox["1", "5"], "+", 
             FractionBox["\[Pi]", "6"]}], "]"}]}], 
          RowBox[{"1", "+", 
           SuperscriptBox["c1", "2"], "+", 
           SuperscriptBox["c2", "2"], "+", 
           SuperscriptBox["c3", "2"]}]]}], ",", 
        RowBox[{
         RowBox[{"-", 
          FractionBox[
           RowBox[{"c3", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "+", 
              SuperscriptBox["c1", "2"], "-", 
              SuperscriptBox["c2", "2"], "+", 
              SuperscriptBox["c3", "2"]}], ")"}], " ", 
            RowBox[{"Cos", "[", 
             RowBox[{
              FractionBox["1", "5"], "+", 
              FractionBox["\[Pi]", "6"]}], "]"}]}], 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{"1", "+", 
              SuperscriptBox["c1", "2"], "+", 
              SuperscriptBox["c2", "2"], "+", 
              SuperscriptBox["c3", "2"]}], ")"}], "2"]]}], "+", 
         FractionBox[
          RowBox[{"c3", " ", 
           RowBox[{"Cos", "[", 
            RowBox[{
             FractionBox["1", "5"], "+", 
             FractionBox["\[Pi]", "6"]}], "]"}]}], 
          RowBox[{"1", "+", 
           SuperscriptBox["c1", "2"], "+", 
           SuperscriptBox["c2", "2"], "+", 
           SuperscriptBox["c3", "2"]}]], "+", 
         FractionBox[
          RowBox[{"2", " ", "c3", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"c1", " ", "c2"}], "+", "c3"}], ")"}], " ", 
           RowBox[{"Sin", "[", 
            RowBox[{
             FractionBox["1", "5"], "+", 
             FractionBox["\[Pi]", "6"]}], "]"}]}], 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"1", "+", 
             SuperscriptBox["c1", "2"], "+", 
             SuperscriptBox["c2", "2"], "+", 
             SuperscriptBox["c3", "2"]}], ")"}], "2"]], "-", 
         FractionBox[
          RowBox[{"Sin", "[", 
           RowBox[{
            FractionBox["1", "5"], "+", 
            FractionBox["\[Pi]", "6"]}], "]"}], 
          RowBox[{"1", "+", 
           SuperscriptBox["c1", "2"], "+", 
           SuperscriptBox["c2", "2"], "+", 
           SuperscriptBox["c3", "2"]}]]}], ",", "0", ",", "0", ",", "0", ",", 
        "0", ",", "0", ",", "0", ",", 
        RowBox[{
         RowBox[{"-", "l1"}], " ", 
         RowBox[{"Cos", "[", "\[Psi]1", "]"}]}], ",", "0", ",", "0", ",", "0",
         ",", "0", ",", "0"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0", ",", "0", ",", 
        RowBox[{"-", "1"}], ",", 
        RowBox[{
         FractionBox[
          RowBox[{"2", " ", "c1", " ", 
           RowBox[{"(", 
            RowBox[{"c1", "+", 
             RowBox[{"c2", " ", "c3"}]}], ")"}], " ", 
           RowBox[{"Cos", "[", 
            RowBox[{
             FractionBox["1", "5"], "+", 
             FractionBox["\[Pi]", "6"]}], "]"}]}], 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"1", "+", 
             SuperscriptBox["c1", "2"], "+", 
             SuperscriptBox["c2", "2"], "+", 
             SuperscriptBox["c3", "2"]}], ")"}], "2"]], "-", 
         FractionBox[
          RowBox[{"Cos", "[", 
           RowBox[{
            FractionBox["1", "5"], "+", 
            FractionBox["\[Pi]", "6"]}], "]"}], 
          RowBox[{"1", "+", 
           SuperscriptBox["c1", "2"], "+", 
           SuperscriptBox["c2", "2"], "+", 
           SuperscriptBox["c3", "2"]}]], "-", 
         FractionBox[
          RowBox[{"2", " ", "c1", " ", 
           RowBox[{"(", 
            RowBox[{"c2", "-", 
             RowBox[{"c1", " ", "c3"}]}], ")"}], " ", 
           RowBox[{"Sin", "[", 
            RowBox[{
             FractionBox["1", "5"], "+", 
             FractionBox["\[Pi]", "6"]}], "]"}]}], 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"1", "+", 
             SuperscriptBox["c1", "2"], "+", 
             SuperscriptBox["c2", "2"], "+", 
             SuperscriptBox["c3", "2"]}], ")"}], "2"]], "-", 
         FractionBox[
          RowBox[{"c3", " ", 
           RowBox[{"Sin", "[", 
            RowBox[{
             FractionBox["1", "5"], "+", 
             FractionBox["\[Pi]", "6"]}], "]"}]}], 
          RowBox[{"1", "+", 
           SuperscriptBox["c1", "2"], "+", 
           SuperscriptBox["c2", "2"], "+", 
           SuperscriptBox["c3", "2"]}]]}], ",", 
        RowBox[{
         FractionBox[
          RowBox[{"2", " ", "c2", " ", 
           RowBox[{"(", 
            RowBox[{"c1", "+", 
             RowBox[{"c2", " ", "c3"}]}], ")"}], " ", 
           RowBox[{"Cos", "[", 
            RowBox[{
             FractionBox["1", "5"], "+", 
             FractionBox["\[Pi]", "6"]}], "]"}]}], 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"1", "+", 
             SuperscriptBox["c1", "2"], "+", 
             SuperscriptBox["c2", "2"], "+", 
             SuperscriptBox["c3", "2"]}], ")"}], "2"]], "-", 
         FractionBox[
          RowBox[{"c3", " ", 
           RowBox[{"Cos", "[", 
            RowBox[{
             FractionBox["1", "5"], "+", 
             FractionBox["\[Pi]", "6"]}], "]"}]}], 
          RowBox[{"1", "+", 
           SuperscriptBox["c1", "2"], "+", 
           SuperscriptBox["c2", "2"], "+", 
           SuperscriptBox["c3", "2"]}]], "-", 
         FractionBox[
          RowBox[{"2", " ", "c2", " ", 
           RowBox[{"(", 
            RowBox[{"c2", "-", 
             RowBox[{"c1", " ", "c3"}]}], ")"}], " ", 
           RowBox[{"Sin", "[", 
            RowBox[{
             FractionBox["1", "5"], "+", 
             FractionBox["\[Pi]", "6"]}], "]"}]}], 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"1", "+", 
             SuperscriptBox["c1", "2"], "+", 
             SuperscriptBox["c2", "2"], "+", 
             SuperscriptBox["c3", "2"]}], ")"}], "2"]], "+", 
         FractionBox[
          RowBox[{"Sin", "[", 
           RowBox[{
            FractionBox["1", "5"], "+", 
            FractionBox["\[Pi]", "6"]}], "]"}], 
          RowBox[{"1", "+", 
           SuperscriptBox["c1", "2"], "+", 
           SuperscriptBox["c2", "2"], "+", 
           SuperscriptBox["c3", "2"]}]]}], ",", 
        RowBox[{
         FractionBox[
          RowBox[{"2", " ", "c3", " ", 
           RowBox[{"(", 
            RowBox[{"c1", "+", 
             RowBox[{"c2", " ", "c3"}]}], ")"}], " ", 
           RowBox[{"Cos", "[", 
            RowBox[{
             FractionBox["1", "5"], "+", 
             FractionBox["\[Pi]", "6"]}], "]"}]}], 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"1", "+", 
             SuperscriptBox["c1", "2"], "+", 
             SuperscriptBox["c2", "2"], "+", 
             SuperscriptBox["c3", "2"]}], ")"}], "2"]], "-", 
         FractionBox[
          RowBox[{"c2", " ", 
           RowBox[{"Cos", "[", 
            RowBox[{
             FractionBox["1", "5"], "+", 
             FractionBox["\[Pi]", "6"]}], "]"}]}], 
          RowBox[{"1", "+", 
           SuperscriptBox["c1", "2"], "+", 
           SuperscriptBox["c2", "2"], "+", 
           SuperscriptBox["c3", "2"]}]], "-", 
         FractionBox[
          RowBox[{"2", " ", "c3", " ", 
           RowBox[{"(", 
            RowBox[{"c2", "-", 
             RowBox[{"c1", " ", "c3"}]}], ")"}], " ", 
           RowBox[{"Sin", "[", 
            RowBox[{
             FractionBox["1", "5"], "+", 
             FractionBox["\[Pi]", "6"]}], "]"}]}], 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"1", "+", 
             SuperscriptBox["c1", "2"], "+", 
             SuperscriptBox["c2", "2"], "+", 
             SuperscriptBox["c3", "2"]}], ")"}], "2"]], "-", 
         FractionBox[
          RowBox[{"c1", " ", 
           RowBox[{"Sin", "[", 
            RowBox[{
             FractionBox["1", "5"], "+", 
             FractionBox["\[Pi]", "6"]}], "]"}]}], 
          RowBox[{"1", "+", 
           SuperscriptBox["c1", "2"], "+", 
           SuperscriptBox["c2", "2"], "+", 
           SuperscriptBox["c3", "2"]}]]}], ",", 
        RowBox[{
         RowBox[{"-", "l1"}], " ", 
         RowBox[{"Cos", "[", "\[Psi]1", "]"}], " ", 
         RowBox[{"Sin", "[", "\[Phi]1", "]"}]}], ",", "0", ",", "0", ",", "0",
         ",", "0", ",", "0", ",", 
        RowBox[{
         RowBox[{"-", "l1"}], " ", 
         RowBox[{"Cos", "[", "\[Phi]1", "]"}], " ", 
         RowBox[{"Sin", "[", "\[Psi]1", "]"}]}], ",", "0", ",", "0", ",", "0",
         ",", "0", ",", "0"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "1"}], ",", "0", ",", "0", ",", 
        RowBox[{
         FractionBox[
          RowBox[{"c1", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"c1", " ", "c2"}], "-", "c3"}], ")"}], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              SqrtBox["3"], " ", 
              RowBox[{"Cos", "[", 
               FractionBox["1", "5"], "]"}]}], "+", 
             RowBox[{"Sin", "[", 
              FractionBox["1", "5"], "]"}]}], ")"}]}], 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"1", "+", 
             SuperscriptBox["c1", "2"], "+", 
             SuperscriptBox["c2", "2"], "+", 
             SuperscriptBox["c3", "2"]}], ")"}], "2"]], "-", 
         FractionBox[
          RowBox[{"c2", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              SqrtBox["3"], " ", 
              RowBox[{"Cos", "[", 
               FractionBox["1", "5"], "]"}]}], "+", 
             RowBox[{"Sin", "[", 
              FractionBox["1", "5"], "]"}]}], ")"}]}], 
          RowBox[{"2", " ", 
           RowBox[{"(", 
            RowBox[{"1", "+", 
             SuperscriptBox["c1", "2"], "+", 
             SuperscriptBox["c2", "2"], "+", 
             SuperscriptBox["c3", "2"]}], ")"}]}]], "-", 
         FractionBox[
          RowBox[{"c1", " ", 
           RowBox[{"(", 
            RowBox[{"1", "+", 
             SuperscriptBox["c1", "2"], "-", 
             SuperscriptBox["c2", "2"], "-", 
             SuperscriptBox["c3", "2"]}], ")"}], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", 
              RowBox[{"Cos", "[", 
               FractionBox["1", "5"], "]"}]}], "+", 
             RowBox[{
              SqrtBox["3"], " ", 
              RowBox[{"Sin", "[", 
               FractionBox["1", "5"], "]"}]}]}], ")"}]}], 
          RowBox[{"2", " ", 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{"1", "+", 
              SuperscriptBox["c1", "2"], "+", 
              SuperscriptBox["c2", "2"], "+", 
              SuperscriptBox["c3", "2"]}], ")"}], "2"]}]], "+", 
         FractionBox[
          RowBox[{"c1", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", 
              RowBox[{"Cos", "[", 
               FractionBox["1", "5"], "]"}]}], "+", 
             RowBox[{
              SqrtBox["3"], " ", 
              RowBox[{"Sin", "[", 
               FractionBox["1", "5"], "]"}]}]}], ")"}]}], 
          RowBox[{"2", " ", 
           RowBox[{"(", 
            RowBox[{"1", "+", 
             SuperscriptBox["c1", "2"], "+", 
             SuperscriptBox["c2", "2"], "+", 
             SuperscriptBox["c3", "2"]}], ")"}]}]]}], ",", 
        RowBox[{
         FractionBox[
          RowBox[{"c2", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"c1", " ", "c2"}], "-", "c3"}], ")"}], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              SqrtBox["3"], " ", 
              RowBox[{"Cos", "[", 
               FractionBox["1", "5"], "]"}]}], "+", 
             RowBox[{"Sin", "[", 
              FractionBox["1", "5"], "]"}]}], ")"}]}], 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"1", "+", 
             SuperscriptBox["c1", "2"], "+", 
             SuperscriptBox["c2", "2"], "+", 
             SuperscriptBox["c3", "2"]}], ")"}], "2"]], "-", 
         FractionBox[
          RowBox[{"c1", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              SqrtBox["3"], " ", 
              RowBox[{"Cos", "[", 
               FractionBox["1", "5"], "]"}]}], "+", 
             RowBox[{"Sin", "[", 
              FractionBox["1", "5"], "]"}]}], ")"}]}], 
          RowBox[{"2", " ", 
           RowBox[{"(", 
            RowBox[{"1", "+", 
             SuperscriptBox["c1", "2"], "+", 
             SuperscriptBox["c2", "2"], "+", 
             SuperscriptBox["c3", "2"]}], ")"}]}]], "-", 
         FractionBox[
          RowBox[{"c2", " ", 
           RowBox[{"(", 
            RowBox[{"1", "+", 
             SuperscriptBox["c1", "2"], "-", 
             SuperscriptBox["c2", "2"], "-", 
             SuperscriptBox["c3", "2"]}], ")"}], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", 
              RowBox[{"Cos", "[", 
               FractionBox["1", "5"], "]"}]}], "+", 
             RowBox[{
              SqrtBox["3"], " ", 
              RowBox[{"Sin", "[", 
               FractionBox["1", "5"], "]"}]}]}], ")"}]}], 
          RowBox[{"2", " ", 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{"1", "+", 
              SuperscriptBox["c1", "2"], "+", 
              SuperscriptBox["c2", "2"], "+", 
              SuperscriptBox["c3", "2"]}], ")"}], "2"]}]], "-", 
         FractionBox[
          RowBox[{"c2", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", 
              RowBox[{"Cos", "[", 
               FractionBox["1", "5"], "]"}]}], "+", 
             RowBox[{
              SqrtBox["3"], " ", 
              RowBox[{"Sin", "[", 
               FractionBox["1", "5"], "]"}]}]}], ")"}]}], 
          RowBox[{"2", " ", 
           RowBox[{"(", 
            RowBox[{"1", "+", 
             SuperscriptBox["c1", "2"], "+", 
             SuperscriptBox["c2", "2"], "+", 
             SuperscriptBox["c3", "2"]}], ")"}]}]]}], ",", 
        RowBox[{
         FractionBox[
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"c1", " ", "c2"}], "-", "c3"}], ")"}], " ", "c3", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              SqrtBox["3"], " ", 
              RowBox[{"Cos", "[", 
               FractionBox["1", "5"], "]"}]}], "+", 
             RowBox[{"Sin", "[", 
              FractionBox["1", "5"], "]"}]}], ")"}]}], 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"1", "+", 
             SuperscriptBox["c1", "2"], "+", 
             SuperscriptBox["c2", "2"], "+", 
             SuperscriptBox["c3", "2"]}], ")"}], "2"]], "+", 
         FractionBox[
          RowBox[{
           RowBox[{
            SqrtBox["3"], " ", 
            RowBox[{"Cos", "[", 
             FractionBox["1", "5"], "]"}]}], "+", 
           RowBox[{"Sin", "[", 
            FractionBox["1", "5"], "]"}]}], 
          RowBox[{"2", " ", 
           RowBox[{"(", 
            RowBox[{"1", "+", 
             SuperscriptBox["c1", "2"], "+", 
             SuperscriptBox["c2", "2"], "+", 
             SuperscriptBox["c3", "2"]}], ")"}]}]], "-", 
         FractionBox[
          RowBox[{"c3", " ", 
           RowBox[{"(", 
            RowBox[{"1", "+", 
             SuperscriptBox["c1", "2"], "-", 
             SuperscriptBox["c2", "2"], "-", 
             SuperscriptBox["c3", "2"]}], ")"}], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", 
              RowBox[{"Cos", "[", 
               FractionBox["1", "5"], "]"}]}], "+", 
             RowBox[{
              SqrtBox["3"], " ", 
              RowBox[{"Sin", "[", 
               FractionBox["1", "5"], "]"}]}]}], ")"}]}], 
          RowBox[{"2", " ", 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{"1", "+", 
              SuperscriptBox["c1", "2"], "+", 
              SuperscriptBox["c2", "2"], "+", 
              SuperscriptBox["c3", "2"]}], ")"}], "2"]}]], "-", 
         FractionBox[
          RowBox[{"c3", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", 
              RowBox[{"Cos", "[", 
               FractionBox["1", "5"], "]"}]}], "+", 
             RowBox[{
              SqrtBox["3"], " ", 
              RowBox[{"Sin", "[", 
               FractionBox["1", "5"], "]"}]}]}], ")"}]}], 
          RowBox[{"2", " ", 
           RowBox[{"(", 
            RowBox[{"1", "+", 
             SuperscriptBox["c1", "2"], "+", 
             SuperscriptBox["c2", "2"], "+", 
             SuperscriptBox["c3", "2"]}], ")"}]}]]}], ",", "0", ",", 
        RowBox[{"l2", " ", 
         RowBox[{"Cos", "[", "\[Phi]2", "]"}], " ", 
         RowBox[{"Cos", "[", "\[Psi]2", "]"}]}], ",", "0", ",", "0", ",", "0",
         ",", "0", ",", "0", ",", 
        RowBox[{
         RowBox[{"-", "l2"}], " ", 
         RowBox[{"Sin", "[", "\[Phi]2", "]"}], " ", 
         RowBox[{"Sin", "[", "\[Psi]2", "]"}]}], ",", "0", ",", "0", ",", "0",
         ",", "0"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0", ",", 
        RowBox[{"-", "1"}], ",", "0", ",", 
        RowBox[{
         RowBox[{"-", 
          FractionBox[
           RowBox[{"c1", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "+", 
              SuperscriptBox["c1", "2"], "-", 
              SuperscriptBox["c2", "2"], "+", 
              SuperscriptBox["c3", "2"]}], ")"}], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               SqrtBox["3"], " ", 
               RowBox[{"Cos", "[", 
                FractionBox["1", "5"], "]"}]}], "+", 
              RowBox[{"Sin", "[", 
               FractionBox["1", "5"], "]"}]}], ")"}]}], 
           RowBox[{"2", " ", 
            SuperscriptBox[
             RowBox[{"(", 
              RowBox[{"1", "+", 
               SuperscriptBox["c1", "2"], "+", 
               SuperscriptBox["c2", "2"], "+", 
               SuperscriptBox["c3", "2"]}], ")"}], "2"]}]]}], "+", 
         FractionBox[
          RowBox[{"c1", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              SqrtBox["3"], " ", 
              RowBox[{"Cos", "[", 
               FractionBox["1", "5"], "]"}]}], "+", 
             RowBox[{"Sin", "[", 
              FractionBox["1", "5"], "]"}]}], ")"}]}], 
          RowBox[{"2", " ", 
           RowBox[{"(", 
            RowBox[{"1", "+", 
             SuperscriptBox["c1", "2"], "+", 
             SuperscriptBox["c2", "2"], "+", 
             SuperscriptBox["c3", "2"]}], ")"}]}]], "-", 
         FractionBox[
          RowBox[{"c1", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"c1", " ", "c2"}], "+", "c3"}], ")"}], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", 
              RowBox[{"Cos", "[", 
               FractionBox["1", "5"], "]"}]}], "+", 
             RowBox[{
              SqrtBox["3"], " ", 
              RowBox[{"Sin", "[", 
               FractionBox["1", "5"], "]"}]}]}], ")"}]}], 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"1", "+", 
             SuperscriptBox["c1", "2"], "+", 
             SuperscriptBox["c2", "2"], "+", 
             SuperscriptBox["c3", "2"]}], ")"}], "2"]], "+", 
         FractionBox[
          RowBox[{"c2", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", 
              RowBox[{"Cos", "[", 
               FractionBox["1", "5"], "]"}]}], "+", 
             RowBox[{
              SqrtBox["3"], " ", 
              RowBox[{"Sin", "[", 
               FractionBox["1", "5"], "]"}]}]}], ")"}]}], 
          RowBox[{"2", " ", 
           RowBox[{"(", 
            RowBox[{"1", "+", 
             SuperscriptBox["c1", "2"], "+", 
             SuperscriptBox["c2", "2"], "+", 
             SuperscriptBox["c3", "2"]}], ")"}]}]]}], ",", 
        RowBox[{
         RowBox[{"-", 
          FractionBox[
           RowBox[{"c2", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "+", 
              SuperscriptBox["c1", "2"], "-", 
              SuperscriptBox["c2", "2"], "+", 
              SuperscriptBox["c3", "2"]}], ")"}], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               SqrtBox["3"], " ", 
               RowBox[{"Cos", "[", 
                FractionBox["1", "5"], "]"}]}], "+", 
              RowBox[{"Sin", "[", 
               FractionBox["1", "5"], "]"}]}], ")"}]}], 
           RowBox[{"2", " ", 
            SuperscriptBox[
             RowBox[{"(", 
              RowBox[{"1", "+", 
               SuperscriptBox["c1", "2"], "+", 
               SuperscriptBox["c2", "2"], "+", 
               SuperscriptBox["c3", "2"]}], ")"}], "2"]}]]}], "-", 
         FractionBox[
          RowBox[{"c2", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              SqrtBox["3"], " ", 
              RowBox[{"Cos", "[", 
               FractionBox["1", "5"], "]"}]}], "+", 
             RowBox[{"Sin", "[", 
              FractionBox["1", "5"], "]"}]}], ")"}]}], 
          RowBox[{"2", " ", 
           RowBox[{"(", 
            RowBox[{"1", "+", 
             SuperscriptBox["c1", "2"], "+", 
             SuperscriptBox["c2", "2"], "+", 
             SuperscriptBox["c3", "2"]}], ")"}]}]], "-", 
         FractionBox[
          RowBox[{"c2", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"c1", " ", "c2"}], "+", "c3"}], ")"}], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", 
              RowBox[{"Cos", "[", 
               FractionBox["1", "5"], "]"}]}], "+", 
             RowBox[{
              SqrtBox["3"], " ", 
              RowBox[{"Sin", "[", 
               FractionBox["1", "5"], "]"}]}]}], ")"}]}], 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"1", "+", 
             SuperscriptBox["c1", "2"], "+", 
             SuperscriptBox["c2", "2"], "+", 
             SuperscriptBox["c3", "2"]}], ")"}], "2"]], "+", 
         FractionBox[
          RowBox[{"c1", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", 
              RowBox[{"Cos", "[", 
               FractionBox["1", "5"], "]"}]}], "+", 
             RowBox[{
              SqrtBox["3"], " ", 
              RowBox[{"Sin", "[", 
               FractionBox["1", "5"], "]"}]}]}], ")"}]}], 
          RowBox[{"2", " ", 
           RowBox[{"(", 
            RowBox[{"1", "+", 
             SuperscriptBox["c1", "2"], "+", 
             SuperscriptBox["c2", "2"], "+", 
             SuperscriptBox["c3", "2"]}], ")"}]}]]}], ",", 
        RowBox[{
         RowBox[{"-", 
          FractionBox[
           RowBox[{"c3", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "+", 
              SuperscriptBox["c1", "2"], "-", 
              SuperscriptBox["c2", "2"], "+", 
              SuperscriptBox["c3", "2"]}], ")"}], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               SqrtBox["3"], " ", 
               RowBox[{"Cos", "[", 
                FractionBox["1", "5"], "]"}]}], "+", 
              RowBox[{"Sin", "[", 
               FractionBox["1", "5"], "]"}]}], ")"}]}], 
           RowBox[{"2", " ", 
            SuperscriptBox[
             RowBox[{"(", 
              RowBox[{"1", "+", 
               SuperscriptBox["c1", "2"], "+", 
               SuperscriptBox["c2", "2"], "+", 
               SuperscriptBox["c3", "2"]}], ")"}], "2"]}]]}], "+", 
         FractionBox[
          RowBox[{"c3", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              SqrtBox["3"], " ", 
              RowBox[{"Cos", "[", 
               FractionBox["1", "5"], "]"}]}], "+", 
             RowBox[{"Sin", "[", 
              FractionBox["1", "5"], "]"}]}], ")"}]}], 
          RowBox[{"2", " ", 
           RowBox[{"(", 
            RowBox[{"1", "+", 
             SuperscriptBox["c1", "2"], "+", 
             SuperscriptBox["c2", "2"], "+", 
             SuperscriptBox["c3", "2"]}], ")"}]}]], "-", 
         FractionBox[
          RowBox[{"c3", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"c1", " ", "c2"}], "+", "c3"}], ")"}], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", 
              RowBox[{"Cos", "[", 
               FractionBox["1", "5"], "]"}]}], "+", 
             RowBox[{
              SqrtBox["3"], " ", 
              RowBox[{"Sin", "[", 
               FractionBox["1", "5"], "]"}]}]}], ")"}]}], 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"1", "+", 
             SuperscriptBox["c1", "2"], "+", 
             SuperscriptBox["c2", "2"], "+", 
             SuperscriptBox["c3", "2"]}], ")"}], "2"]], "+", 
         FractionBox[
          RowBox[{
           RowBox[{"-", 
            RowBox[{"Cos", "[", 
             FractionBox["1", "5"], "]"}]}], "+", 
           RowBox[{
            SqrtBox["3"], " ", 
            RowBox[{"Sin", "[", 
             FractionBox["1", "5"], "]"}]}]}], 
          RowBox[{"2", " ", 
           RowBox[{"(", 
            RowBox[{"1", "+", 
             SuperscriptBox["c1", "2"], "+", 
             SuperscriptBox["c2", "2"], "+", 
             SuperscriptBox["c3", "2"]}], ")"}]}]]}], ",", "0", ",", "0", ",",
         "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", 
        RowBox[{
         RowBox[{"-", "l2"}], " ", 
         RowBox[{"Cos", "[", "\[Psi]2", "]"}]}], ",", "0", ",", "0", ",", "0",
         ",", "0"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0", ",", "0", ",", 
        RowBox[{"-", "1"}], ",", 
        RowBox[{
         RowBox[{"-", 
          FractionBox[
           RowBox[{
            RowBox[{"4", " ", "c1", " ", "z"}], "+", 
            RowBox[{
             SqrtBox["3"], " ", 
             RowBox[{"Cos", "[", 
              FractionBox["1", "5"], "]"}]}], "+", 
            RowBox[{"c3", " ", 
             RowBox[{"Cos", "[", 
              FractionBox["1", "5"], "]"}]}], "-", 
            RowBox[{"4", " ", "c1", " ", "l2", " ", 
             RowBox[{"Cos", "[", "\[Phi]2", "]"}], " ", 
             RowBox[{"Cos", "[", "\[Psi]2", "]"}]}], "+", 
            RowBox[{"Sin", "[", 
             FractionBox["1", "5"], "]"}], "-", 
            RowBox[{
             SqrtBox["3"], " ", "c3", " ", 
             RowBox[{"Sin", "[", 
              FractionBox["1", "5"], "]"}]}]}], 
           RowBox[{"2", " ", 
            RowBox[{"(", 
             RowBox[{"1", "+", 
              SuperscriptBox["c1", "2"], "+", 
              SuperscriptBox["c2", "2"], "+", 
              SuperscriptBox["c3", "2"]}], ")"}]}]]}], "+", 
         RowBox[{
          FractionBox["1", 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{"1", "+", 
              SuperscriptBox["c1", "2"], "+", 
              SuperscriptBox["c2", "2"], "+", 
              SuperscriptBox["c3", "2"]}], ")"}], "2"]], 
          RowBox[{"c1", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"2", " ", 
              RowBox[{"(", 
               RowBox[{"1", "+", 
                SuperscriptBox["c1", "2"], "+", 
                SuperscriptBox["c2", "2"], "+", 
                SuperscriptBox["c3", "2"]}], ")"}], " ", "z"}], "+", 
             RowBox[{
              SqrtBox["3"], " ", "c1", " ", 
              RowBox[{"Cos", "[", 
               FractionBox["1", "5"], "]"}]}], "-", 
             RowBox[{"c2", " ", 
              RowBox[{"Cos", "[", 
               FractionBox["1", "5"], "]"}]}], "+", 
             RowBox[{"c1", " ", "c3", " ", 
              RowBox[{"Cos", "[", 
               FractionBox["1", "5"], "]"}]}], "+", 
             RowBox[{
              SqrtBox["3"], " ", "c2", " ", "c3", " ", 
              RowBox[{"Cos", "[", 
               FractionBox["1", "5"], "]"}]}], "-", 
             RowBox[{"2", " ", 
              RowBox[{"(", 
               RowBox[{"1", "+", 
                SuperscriptBox["c1", "2"], "+", 
                SuperscriptBox["c2", "2"], "+", 
                SuperscriptBox["c3", "2"]}], ")"}], " ", "l2", " ", 
              RowBox[{"Cos", "[", "\[Phi]2", "]"}], " ", 
              RowBox[{"Cos", "[", "\[Psi]2", "]"}]}], "+", 
             RowBox[{"c1", " ", 
              RowBox[{"Sin", "[", 
               FractionBox["1", "5"], "]"}]}], "+", 
             RowBox[{
              SqrtBox["3"], " ", "c2", " ", 
              RowBox[{"Sin", "[", 
               FractionBox["1", "5"], "]"}]}], "-", 
             RowBox[{
              SqrtBox["3"], " ", "c1", " ", "c3", " ", 
              RowBox[{"Sin", "[", 
               FractionBox["1", "5"], "]"}]}], "+", 
             RowBox[{"c2", " ", "c3", " ", 
              RowBox[{"Sin", "[", 
               FractionBox["1", "5"], "]"}]}]}], ")"}]}]}]}], ",", 
        RowBox[{
         RowBox[{"-", 
          FractionBox[
           RowBox[{
            RowBox[{"4", " ", "c2", " ", "z"}], "-", 
            RowBox[{"Cos", "[", 
             FractionBox["1", "5"], "]"}], "+", 
            RowBox[{
             SqrtBox["3"], " ", "c3", " ", 
             RowBox[{"Cos", "[", 
              FractionBox["1", "5"], "]"}]}], "-", 
            RowBox[{"4", " ", "c2", " ", "l2", " ", 
             RowBox[{"Cos", "[", "\[Phi]2", "]"}], " ", 
             RowBox[{"Cos", "[", "\[Psi]2", "]"}]}], "+", 
            RowBox[{
             SqrtBox["3"], " ", 
             RowBox[{"Sin", "[", 
              FractionBox["1", "5"], "]"}]}], "+", 
            RowBox[{"c3", " ", 
             RowBox[{"Sin", "[", 
              FractionBox["1", "5"], "]"}]}]}], 
           RowBox[{"2", " ", 
            RowBox[{"(", 
             RowBox[{"1", "+", 
              SuperscriptBox["c1", "2"], "+", 
              SuperscriptBox["c2", "2"], "+", 
              SuperscriptBox["c3", "2"]}], ")"}]}]]}], "+", 
         RowBox[{
          FractionBox["1", 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{"1", "+", 
              SuperscriptBox["c1", "2"], "+", 
              SuperscriptBox["c2", "2"], "+", 
              SuperscriptBox["c3", "2"]}], ")"}], "2"]], 
          RowBox[{"c2", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"2", " ", 
              RowBox[{"(", 
               RowBox[{"1", "+", 
                SuperscriptBox["c1", "2"], "+", 
                SuperscriptBox["c2", "2"], "+", 
                SuperscriptBox["c3", "2"]}], ")"}], " ", "z"}], "+", 
             RowBox[{
              SqrtBox["3"], " ", "c1", " ", 
              RowBox[{"Cos", "[", 
               FractionBox["1", "5"], "]"}]}], "-", 
             RowBox[{"c2", " ", 
              RowBox[{"Cos", "[", 
               FractionBox["1", "5"], "]"}]}], "+", 
             RowBox[{"c1", " ", "c3", " ", 
              RowBox[{"Cos", "[", 
               FractionBox["1", "5"], "]"}]}], "+", 
             RowBox[{
              SqrtBox["3"], " ", "c2", " ", "c3", " ", 
              RowBox[{"Cos", "[", 
               FractionBox["1", "5"], "]"}]}], "-", 
             RowBox[{"2", " ", 
              RowBox[{"(", 
               RowBox[{"1", "+", 
                SuperscriptBox["c1", "2"], "+", 
                SuperscriptBox["c2", "2"], "+", 
                SuperscriptBox["c3", "2"]}], ")"}], " ", "l2", " ", 
              RowBox[{"Cos", "[", "\[Phi]2", "]"}], " ", 
              RowBox[{"Cos", "[", "\[Psi]2", "]"}]}], "+", 
             RowBox[{"c1", " ", 
              RowBox[{"Sin", "[", 
               FractionBox["1", "5"], "]"}]}], "+", 
             RowBox[{
              SqrtBox["3"], " ", "c2", " ", 
              RowBox[{"Sin", "[", 
               FractionBox["1", "5"], "]"}]}], "-", 
             RowBox[{
              SqrtBox["3"], " ", "c1", " ", "c3", " ", 
              RowBox[{"Sin", "[", 
               FractionBox["1", "5"], "]"}]}], "+", 
             RowBox[{"c2", " ", "c3", " ", 
              RowBox[{"Sin", "[", 
               FractionBox["1", "5"], "]"}]}]}], ")"}]}]}]}], ",", 
        RowBox[{
         RowBox[{"-", 
          FractionBox[
           RowBox[{
            RowBox[{"4", " ", "c3", " ", "z"}], "+", 
            RowBox[{"c1", " ", 
             RowBox[{"Cos", "[", 
              FractionBox["1", "5"], "]"}]}], "+", 
            RowBox[{
             SqrtBox["3"], " ", "c2", " ", 
             RowBox[{"Cos", "[", 
              FractionBox["1", "5"], "]"}]}], "-", 
            RowBox[{"4", " ", "c3", " ", "l2", " ", 
             RowBox[{"Cos", "[", "\[Phi]2", "]"}], " ", 
             RowBox[{"Cos", "[", "\[Psi]2", "]"}]}], "-", 
            RowBox[{
             SqrtBox["3"], " ", "c1", " ", 
             RowBox[{"Sin", "[", 
              FractionBox["1", "5"], "]"}]}], "+", 
            RowBox[{"c2", " ", 
             RowBox[{"Sin", "[", 
              FractionBox["1", "5"], "]"}]}]}], 
           RowBox[{"2", " ", 
            RowBox[{"(", 
             RowBox[{"1", "+", 
              SuperscriptBox["c1", "2"], "+", 
              SuperscriptBox["c2", "2"], "+", 
              SuperscriptBox["c3", "2"]}], ")"}]}]]}], "+", 
         RowBox[{
          FractionBox["1", 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{"1", "+", 
              SuperscriptBox["c1", "2"], "+", 
              SuperscriptBox["c2", "2"], "+", 
              SuperscriptBox["c3", "2"]}], ")"}], "2"]], 
          RowBox[{"c3", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"2", " ", 
              RowBox[{"(", 
               RowBox[{"1", "+", 
                SuperscriptBox["c1", "2"], "+", 
                SuperscriptBox["c2", "2"], "+", 
                SuperscriptBox["c3", "2"]}], ")"}], " ", "z"}], "+", 
             RowBox[{
              SqrtBox["3"], " ", "c1", " ", 
              RowBox[{"Cos", "[", 
               FractionBox["1", "5"], "]"}]}], "-", 
             RowBox[{"c2", " ", 
              RowBox[{"Cos", "[", 
               FractionBox["1", "5"], "]"}]}], "+", 
             RowBox[{"c1", " ", "c3", " ", 
              RowBox[{"Cos", "[", 
               FractionBox["1", "5"], "]"}]}], "+", 
             RowBox[{
              SqrtBox["3"], " ", "c2", " ", "c3", " ", 
              RowBox[{"Cos", "[", 
               FractionBox["1", "5"], "]"}]}], "-", 
             RowBox[{"2", " ", 
              RowBox[{"(", 
               RowBox[{"1", "+", 
                SuperscriptBox["c1", "2"], "+", 
                SuperscriptBox["c2", "2"], "+", 
                SuperscriptBox["c3", "2"]}], ")"}], " ", "l2", " ", 
              RowBox[{"Cos", "[", "\[Phi]2", "]"}], " ", 
              RowBox[{"Cos", "[", "\[Psi]2", "]"}]}], "+", 
             RowBox[{"c1", " ", 
              RowBox[{"Sin", "[", 
               FractionBox["1", "5"], "]"}]}], "+", 
             RowBox[{
              SqrtBox["3"], " ", "c2", " ", 
              RowBox[{"Sin", "[", 
               FractionBox["1", "5"], "]"}]}], "-", 
             RowBox[{
              SqrtBox["3"], " ", "c1", " ", "c3", " ", 
              RowBox[{"Sin", "[", 
               FractionBox["1", "5"], "]"}]}], "+", 
             RowBox[{"c2", " ", "c3", " ", 
              RowBox[{"Sin", "[", 
               FractionBox["1", "5"], "]"}]}]}], ")"}]}]}]}], ",", "0", ",", 
        RowBox[{
         RowBox[{"-", "l2"}], " ", 
         RowBox[{"Cos", "[", "\[Psi]2", "]"}], " ", 
         RowBox[{"Sin", "[", "\[Phi]2", "]"}]}], ",", "0", ",", "0", ",", "0",
         ",", "0", ",", "0", ",", 
        RowBox[{
         RowBox[{"-", "l2"}], " ", 
         RowBox[{"Cos", "[", "\[Phi]2", "]"}], " ", 
         RowBox[{"Sin", "[", "\[Psi]2", "]"}]}], ",", "0", ",", "0", ",", "0",
         ",", "0"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "1"}], ",", "0", ",", "0", ",", 
        RowBox[{
         FractionBox["1", "2"], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", 
            FractionBox[
             RowBox[{"2", " ", "c1", " ", 
              RowBox[{"(", 
               RowBox[{"1", "+", 
                SuperscriptBox["c1", "2"], "-", 
                SuperscriptBox["c2", "2"], "-", 
                SuperscriptBox["c3", "2"]}], ")"}], " ", 
              RowBox[{"Cos", "[", 
               FractionBox["1", "5"], "]"}]}], 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "+", 
                SuperscriptBox["c1", "2"], "+", 
                SuperscriptBox["c2", "2"], "+", 
                SuperscriptBox["c3", "2"]}], ")"}], "2"]]}], "+", 
           FractionBox[
            RowBox[{"2", " ", "c1", " ", 
             RowBox[{"Cos", "[", 
              FractionBox["1", "5"], "]"}]}], 
            RowBox[{"1", "+", 
             SuperscriptBox["c1", "2"], "+", 
             SuperscriptBox["c2", "2"], "+", 
             SuperscriptBox["c3", "2"]}]], "-", 
           FractionBox[
            RowBox[{"4", " ", "c1", " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"-", "c1"}], " ", "c2"}], "+", "c3"}], ")"}], " ", 
             RowBox[{"Sin", "[", 
              FractionBox["1", "5"], "]"}]}], 
            SuperscriptBox[
             RowBox[{"(", 
              RowBox[{"1", "+", 
               SuperscriptBox["c1", "2"], "+", 
               SuperscriptBox["c2", "2"], "+", 
               SuperscriptBox["c3", "2"]}], ")"}], "2"]], "-", 
           FractionBox[
            RowBox[{"2", " ", "c2", " ", 
             RowBox[{"Sin", "[", 
              FractionBox["1", "5"], "]"}]}], 
            RowBox[{"1", "+", 
             SuperscriptBox["c1", "2"], "+", 
             SuperscriptBox["c2", "2"], "+", 
             SuperscriptBox["c3", "2"]}]]}], ")"}]}], ",", 
        RowBox[{
         FractionBox["1", "2"], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", 
            FractionBox[
             RowBox[{"2", " ", "c2", " ", 
              RowBox[{"(", 
               RowBox[{"1", "+", 
                SuperscriptBox["c1", "2"], "-", 
                SuperscriptBox["c2", "2"], "-", 
                SuperscriptBox["c3", "2"]}], ")"}], " ", 
              RowBox[{"Cos", "[", 
               FractionBox["1", "5"], "]"}]}], 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "+", 
                SuperscriptBox["c1", "2"], "+", 
                SuperscriptBox["c2", "2"], "+", 
                SuperscriptBox["c3", "2"]}], ")"}], "2"]]}], "-", 
           FractionBox[
            RowBox[{"2", " ", "c2", " ", 
             RowBox[{"Cos", "[", 
              FractionBox["1", "5"], "]"}]}], 
            RowBox[{"1", "+", 
             SuperscriptBox["c1", "2"], "+", 
             SuperscriptBox["c2", "2"], "+", 
             SuperscriptBox["c3", "2"]}]], "-", 
           FractionBox[
            RowBox[{"4", " ", "c2", " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"-", "c1"}], " ", "c2"}], "+", "c3"}], ")"}], " ", 
             RowBox[{"Sin", "[", 
              FractionBox["1", "5"], "]"}]}], 
            SuperscriptBox[
             RowBox[{"(", 
              RowBox[{"1", "+", 
               SuperscriptBox["c1", "2"], "+", 
               SuperscriptBox["c2", "2"], "+", 
               SuperscriptBox["c3", "2"]}], ")"}], "2"]], "-", 
           FractionBox[
            RowBox[{"2", " ", "c1", " ", 
             RowBox[{"Sin", "[", 
              FractionBox["1", "5"], "]"}]}], 
            RowBox[{"1", "+", 
             SuperscriptBox["c1", "2"], "+", 
             SuperscriptBox["c2", "2"], "+", 
             SuperscriptBox["c3", "2"]}]]}], ")"}]}], ",", 
        RowBox[{
         FractionBox["1", "2"], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", 
            FractionBox[
             RowBox[{"2", " ", "c3", " ", 
              RowBox[{"(", 
               RowBox[{"1", "+", 
                SuperscriptBox["c1", "2"], "-", 
                SuperscriptBox["c2", "2"], "-", 
                SuperscriptBox["c3", "2"]}], ")"}], " ", 
              RowBox[{"Cos", "[", 
               FractionBox["1", "5"], "]"}]}], 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "+", 
                SuperscriptBox["c1", "2"], "+", 
                SuperscriptBox["c2", "2"], "+", 
                SuperscriptBox["c3", "2"]}], ")"}], "2"]]}], "-", 
           FractionBox[
            RowBox[{"2", " ", "c3", " ", 
             RowBox[{"Cos", "[", 
              FractionBox["1", "5"], "]"}]}], 
            RowBox[{"1", "+", 
             SuperscriptBox["c1", "2"], "+", 
             SuperscriptBox["c2", "2"], "+", 
             SuperscriptBox["c3", "2"]}]], "-", 
           FractionBox[
            RowBox[{"4", " ", "c3", " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"-", "c1"}], " ", "c2"}], "+", "c3"}], ")"}], " ", 
             RowBox[{"Sin", "[", 
              FractionBox["1", "5"], "]"}]}], 
            SuperscriptBox[
             RowBox[{"(", 
              RowBox[{"1", "+", 
               SuperscriptBox["c1", "2"], "+", 
               SuperscriptBox["c2", "2"], "+", 
               SuperscriptBox["c3", "2"]}], ")"}], "2"]], "+", 
           FractionBox[
            RowBox[{"2", " ", 
             RowBox[{"Sin", "[", 
              FractionBox["1", "5"], "]"}]}], 
            RowBox[{"1", "+", 
             SuperscriptBox["c1", "2"], "+", 
             SuperscriptBox["c2", "2"], "+", 
             SuperscriptBox["c3", "2"]}]]}], ")"}]}], ",", "0", ",", "0", ",", 
        RowBox[{"l3", " ", 
         RowBox[{"Cos", "[", "\[Phi]3", "]"}], " ", 
         RowBox[{"Cos", "[", "\[Psi]3", "]"}]}], ",", "0", ",", "0", ",", "0",
         ",", "0", ",", "0", ",", 
        RowBox[{
         RowBox[{"-", "l3"}], " ", 
         RowBox[{"Sin", "[", "\[Phi]3", "]"}], " ", 
         RowBox[{"Sin", "[", "\[Psi]3", "]"}]}], ",", "0", ",", "0", ",", 
        "0"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0", ",", 
        RowBox[{"-", "1"}], ",", "0", ",", 
        RowBox[{
         FractionBox["1", "2"], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", 
            FractionBox[
             RowBox[{"4", " ", "c1", " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"c1", " ", "c2"}], "+", "c3"}], ")"}], " ", 
              RowBox[{"Cos", "[", 
               FractionBox["1", "5"], "]"}]}], 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "+", 
                SuperscriptBox["c1", "2"], "+", 
                SuperscriptBox["c2", "2"], "+", 
                SuperscriptBox["c3", "2"]}], ")"}], "2"]]}], "+", 
           FractionBox[
            RowBox[{"2", " ", "c2", " ", 
             RowBox[{"Cos", "[", 
              FractionBox["1", "5"], "]"}]}], 
            RowBox[{"1", "+", 
             SuperscriptBox["c1", "2"], "+", 
             SuperscriptBox["c2", "2"], "+", 
             SuperscriptBox["c3", "2"]}]], "-", 
           FractionBox[
            RowBox[{"2", " ", "c1", " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "1"}], "+", 
               SuperscriptBox["c1", "2"], "-", 
               SuperscriptBox["c2", "2"], "+", 
               SuperscriptBox["c3", "2"]}], ")"}], " ", 
             RowBox[{"Sin", "[", 
              FractionBox["1", "5"], "]"}]}], 
            SuperscriptBox[
             RowBox[{"(", 
              RowBox[{"1", "+", 
               SuperscriptBox["c1", "2"], "+", 
               SuperscriptBox["c2", "2"], "+", 
               SuperscriptBox["c3", "2"]}], ")"}], "2"]], "+", 
           FractionBox[
            RowBox[{"2", " ", "c1", " ", 
             RowBox[{"Sin", "[", 
              FractionBox["1", "5"], "]"}]}], 
            RowBox[{"1", "+", 
             SuperscriptBox["c1", "2"], "+", 
             SuperscriptBox["c2", "2"], "+", 
             SuperscriptBox["c3", "2"]}]]}], ")"}]}], ",", 
        RowBox[{
         FractionBox["1", "2"], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", 
            FractionBox[
             RowBox[{"4", " ", "c2", " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"c1", " ", "c2"}], "+", "c3"}], ")"}], " ", 
              RowBox[{"Cos", "[", 
               FractionBox["1", "5"], "]"}]}], 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "+", 
                SuperscriptBox["c1", "2"], "+", 
                SuperscriptBox["c2", "2"], "+", 
                SuperscriptBox["c3", "2"]}], ")"}], "2"]]}], "+", 
           FractionBox[
            RowBox[{"2", " ", "c1", " ", 
             RowBox[{"Cos", "[", 
              FractionBox["1", "5"], "]"}]}], 
            RowBox[{"1", "+", 
             SuperscriptBox["c1", "2"], "+", 
             SuperscriptBox["c2", "2"], "+", 
             SuperscriptBox["c3", "2"]}]], "-", 
           FractionBox[
            RowBox[{"2", " ", "c2", " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "1"}], "+", 
               SuperscriptBox["c1", "2"], "-", 
               SuperscriptBox["c2", "2"], "+", 
               SuperscriptBox["c3", "2"]}], ")"}], " ", 
             RowBox[{"Sin", "[", 
              FractionBox["1", "5"], "]"}]}], 
            SuperscriptBox[
             RowBox[{"(", 
              RowBox[{"1", "+", 
               SuperscriptBox["c1", "2"], "+", 
               SuperscriptBox["c2", "2"], "+", 
               SuperscriptBox["c3", "2"]}], ")"}], "2"]], "-", 
           FractionBox[
            RowBox[{"2", " ", "c2", " ", 
             RowBox[{"Sin", "[", 
              FractionBox["1", "5"], "]"}]}], 
            RowBox[{"1", "+", 
             SuperscriptBox["c1", "2"], "+", 
             SuperscriptBox["c2", "2"], "+", 
             SuperscriptBox["c3", "2"]}]]}], ")"}]}], ",", 
        RowBox[{
         FractionBox["1", "2"], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", 
            FractionBox[
             RowBox[{"4", " ", "c3", " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"c1", " ", "c2"}], "+", "c3"}], ")"}], " ", 
              RowBox[{"Cos", "[", 
               FractionBox["1", "5"], "]"}]}], 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "+", 
                SuperscriptBox["c1", "2"], "+", 
                SuperscriptBox["c2", "2"], "+", 
                SuperscriptBox["c3", "2"]}], ")"}], "2"]]}], "+", 
           FractionBox[
            RowBox[{"2", " ", 
             RowBox[{"Cos", "[", 
              FractionBox["1", "5"], "]"}]}], 
            RowBox[{"1", "+", 
             SuperscriptBox["c1", "2"], "+", 
             SuperscriptBox["c2", "2"], "+", 
             SuperscriptBox["c3", "2"]}]], "-", 
           FractionBox[
            RowBox[{"2", " ", "c3", " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "1"}], "+", 
               SuperscriptBox["c1", "2"], "-", 
               SuperscriptBox["c2", "2"], "+", 
               SuperscriptBox["c3", "2"]}], ")"}], " ", 
             RowBox[{"Sin", "[", 
              FractionBox["1", "5"], "]"}]}], 
            SuperscriptBox[
             RowBox[{"(", 
              RowBox[{"1", "+", 
               SuperscriptBox["c1", "2"], "+", 
               SuperscriptBox["c2", "2"], "+", 
               SuperscriptBox["c3", "2"]}], ")"}], "2"]], "+", 
           FractionBox[
            RowBox[{"2", " ", "c3", " ", 
             RowBox[{"Sin", "[", 
              FractionBox["1", "5"], "]"}]}], 
            RowBox[{"1", "+", 
             SuperscriptBox["c1", "2"], "+", 
             SuperscriptBox["c2", "2"], "+", 
             SuperscriptBox["c3", "2"]}]]}], ")"}]}], ",", "0", ",", "0", ",",
         "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", 
        RowBox[{
         RowBox[{"-", "l3"}], " ", 
         RowBox[{"Cos", "[", "\[Psi]3", "]"}]}], ",", "0", ",", "0", ",", 
        "0"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0", ",", "0", ",", 
        RowBox[{"-", "1"}], ",", 
        RowBox[{
         RowBox[{"-", 
          FractionBox[
           RowBox[{
            RowBox[{"2", " ", "c1", " ", "z"}], "-", 
            RowBox[{"c3", " ", 
             RowBox[{"Cos", "[", 
              FractionBox["1", "5"], "]"}]}], "-", 
            RowBox[{"2", " ", "c1", " ", "l3", " ", 
             RowBox[{"Cos", "[", "\[Phi]3", "]"}], " ", 
             RowBox[{"Cos", "[", "\[Psi]3", "]"}]}], "+", 
            RowBox[{"Sin", "[", 
             FractionBox["1", "5"], "]"}]}], 
           RowBox[{"1", "+", 
            SuperscriptBox["c1", "2"], "+", 
            SuperscriptBox["c2", "2"], "+", 
            SuperscriptBox["c3", "2"]}]]}], "+", 
         FractionBox[
          RowBox[{"2", " ", "c1", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              RowBox[{"(", 
               RowBox[{"1", "+", 
                SuperscriptBox["c1", "2"], "+", 
                SuperscriptBox["c2", "2"], "+", 
                SuperscriptBox["c3", "2"]}], ")"}], " ", "z"}], "+", 
             RowBox[{"c2", " ", 
              RowBox[{"Cos", "[", 
               FractionBox["1", "5"], "]"}]}], "-", 
             RowBox[{"c1", " ", "c3", " ", 
              RowBox[{"Cos", "[", 
               FractionBox["1", "5"], "]"}]}], "-", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{"1", "+", 
                SuperscriptBox["c1", "2"], "+", 
                SuperscriptBox["c2", "2"], "+", 
                SuperscriptBox["c3", "2"]}], ")"}], " ", "l3", " ", 
              RowBox[{"Cos", "[", "\[Phi]3", "]"}], " ", 
              RowBox[{"Cos", "[", "\[Psi]3", "]"}]}], "+", 
             RowBox[{"c1", " ", 
              RowBox[{"Sin", "[", 
               FractionBox["1", "5"], "]"}]}], "+", 
             RowBox[{"c2", " ", "c3", " ", 
              RowBox[{"Sin", "[", 
               FractionBox["1", "5"], "]"}]}]}], ")"}]}], 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"1", "+", 
             SuperscriptBox["c1", "2"], "+", 
             SuperscriptBox["c2", "2"], "+", 
             SuperscriptBox["c3", "2"]}], ")"}], "2"]]}], ",", 
        RowBox[{
         RowBox[{"-", 
          FractionBox[
           RowBox[{
            RowBox[{"2", " ", "c2", " ", "z"}], "+", 
            RowBox[{"Cos", "[", 
             FractionBox["1", "5"], "]"}], "-", 
            RowBox[{"2", " ", "c2", " ", "l3", " ", 
             RowBox[{"Cos", "[", "\[Phi]3", "]"}], " ", 
             RowBox[{"Cos", "[", "\[Psi]3", "]"}]}], "+", 
            RowBox[{"c3", " ", 
             RowBox[{"Sin", "[", 
              FractionBox["1", "5"], "]"}]}]}], 
           RowBox[{"1", "+", 
            SuperscriptBox["c1", "2"], "+", 
            SuperscriptBox["c2", "2"], "+", 
            SuperscriptBox["c3", "2"]}]]}], "+", 
         FractionBox[
          RowBox[{"2", " ", "c2", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              RowBox[{"(", 
               RowBox[{"1", "+", 
                SuperscriptBox["c1", "2"], "+", 
                SuperscriptBox["c2", "2"], "+", 
                SuperscriptBox["c3", "2"]}], ")"}], " ", "z"}], "+", 
             RowBox[{"c2", " ", 
              RowBox[{"Cos", "[", 
               FractionBox["1", "5"], "]"}]}], "-", 
             RowBox[{"c1", " ", "c3", " ", 
              RowBox[{"Cos", "[", 
               FractionBox["1", "5"], "]"}]}], "-", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{"1", "+", 
                SuperscriptBox["c1", "2"], "+", 
                SuperscriptBox["c2", "2"], "+", 
                SuperscriptBox["c3", "2"]}], ")"}], " ", "l3", " ", 
              RowBox[{"Cos", "[", "\[Phi]3", "]"}], " ", 
              RowBox[{"Cos", "[", "\[Psi]3", "]"}]}], "+", 
             RowBox[{"c1", " ", 
              RowBox[{"Sin", "[", 
               FractionBox["1", "5"], "]"}]}], "+", 
             RowBox[{"c2", " ", "c3", " ", 
              RowBox[{"Sin", "[", 
               FractionBox["1", "5"], "]"}]}]}], ")"}]}], 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"1", "+", 
             SuperscriptBox["c1", "2"], "+", 
             SuperscriptBox["c2", "2"], "+", 
             SuperscriptBox["c3", "2"]}], ")"}], "2"]]}], ",", 
        RowBox[{
         RowBox[{"-", 
          FractionBox[
           RowBox[{
            RowBox[{"2", " ", "c3", " ", "z"}], "-", 
            RowBox[{"c1", " ", 
             RowBox[{"Cos", "[", 
              FractionBox["1", "5"], "]"}]}], "-", 
            RowBox[{"2", " ", "c3", " ", "l3", " ", 
             RowBox[{"Cos", "[", "\[Phi]3", "]"}], " ", 
             RowBox[{"Cos", "[", "\[Psi]3", "]"}]}], "+", 
            RowBox[{"c2", " ", 
             RowBox[{"Sin", "[", 
              FractionBox["1", "5"], "]"}]}]}], 
           RowBox[{"1", "+", 
            SuperscriptBox["c1", "2"], "+", 
            SuperscriptBox["c2", "2"], "+", 
            SuperscriptBox["c3", "2"]}]]}], "+", 
         FractionBox[
          RowBox[{"2", " ", "c3", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              RowBox[{"(", 
               RowBox[{"1", "+", 
                SuperscriptBox["c1", "2"], "+", 
                SuperscriptBox["c2", "2"], "+", 
                SuperscriptBox["c3", "2"]}], ")"}], " ", "z"}], "+", 
             RowBox[{"c2", " ", 
              RowBox[{"Cos", "[", 
               FractionBox["1", "5"], "]"}]}], "-", 
             RowBox[{"c1", " ", "c3", " ", 
              RowBox[{"Cos", "[", 
               FractionBox["1", "5"], "]"}]}], "-", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{"1", "+", 
                SuperscriptBox["c1", "2"], "+", 
                SuperscriptBox["c2", "2"], "+", 
                SuperscriptBox["c3", "2"]}], ")"}], " ", "l3", " ", 
              RowBox[{"Cos", "[", "\[Phi]3", "]"}], " ", 
              RowBox[{"Cos", "[", "\[Psi]3", "]"}]}], "+", 
             RowBox[{"c1", " ", 
              RowBox[{"Sin", "[", 
               FractionBox["1", "5"], "]"}]}], "+", 
             RowBox[{"c2", " ", "c3", " ", 
              RowBox[{"Sin", "[", 
               FractionBox["1", "5"], "]"}]}]}], ")"}]}], 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"1", "+", 
             SuperscriptBox["c1", "2"], "+", 
             SuperscriptBox["c2", "2"], "+", 
             SuperscriptBox["c3", "2"]}], ")"}], "2"]]}], ",", "0", ",", "0", 
        ",", 
        RowBox[{
         RowBox[{"-", "l3"}], " ", 
         RowBox[{"Cos", "[", "\[Psi]3", "]"}], " ", 
         RowBox[{"Sin", "[", "\[Phi]3", "]"}]}], ",", "0", ",", "0", ",", "0",
         ",", "0", ",", "0", ",", 
        RowBox[{
         RowBox[{"-", "l3"}], " ", 
         RowBox[{"Cos", "[", "\[Phi]3", "]"}], " ", 
         RowBox[{"Sin", "[", "\[Psi]3", "]"}]}], ",", "0", ",", "0", ",", 
        "0"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "1"}], ",", "0", ",", "0", ",", 
        RowBox[{
         RowBox[{"-", 
          FractionBox[
           RowBox[{
            RowBox[{"4", " ", "c1", " ", "x"}], "+", 
            RowBox[{"2", " ", "c1", " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", 
                RowBox[{"Cos", "[", 
                 FractionBox["1", "5"], "]"}]}], "+", 
               RowBox[{"2", " ", 
                RowBox[{"Cos", "[", 
                 FractionBox["1", "3"], "]"}]}]}], ")"}]}], "-", 
            RowBox[{"2", " ", "c2", " ", 
             RowBox[{"Sin", "[", 
              FractionBox["1", "5"], "]"}]}]}], 
           RowBox[{"2", " ", 
            RowBox[{"(", 
             RowBox[{"1", "+", 
              SuperscriptBox["c1", "2"], "+", 
              SuperscriptBox["c2", "2"], "+", 
              SuperscriptBox["c3", "2"]}], ")"}]}]]}], "+", 
         FractionBox[
          RowBox[{"c1", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"2", " ", 
              RowBox[{"(", 
               RowBox[{"1", "+", 
                SuperscriptBox["c1", "2"], "+", 
                SuperscriptBox["c2", "2"], "+", 
                SuperscriptBox["c3", "2"]}], ")"}], " ", "x"}], "-", 
             RowBox[{"Cos", "[", 
              FractionBox["1", "5"], "]"}], "+", 
             RowBox[{
              SuperscriptBox["c2", "2"], " ", 
              RowBox[{"Cos", "[", 
               FractionBox["1", "5"], "]"}]}], "+", 
             RowBox[{
              SuperscriptBox["c3", "2"], " ", 
              RowBox[{"Cos", "[", 
               FractionBox["1", "5"], "]"}]}], "+", 
             RowBox[{"2", " ", 
              RowBox[{"Cos", "[", 
               FractionBox["1", "3"], "]"}]}], "+", 
             RowBox[{"2", " ", 
              SuperscriptBox["c2", "2"], " ", 
              RowBox[{"Cos", "[", 
               FractionBox["1", "3"], "]"}]}], "+", 
             RowBox[{"2", " ", 
              SuperscriptBox["c3", "2"], " ", 
              RowBox[{"Cos", "[", 
               FractionBox["1", "3"], "]"}]}], "+", 
             RowBox[{
              SuperscriptBox["c1", "2"], " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", 
                 RowBox[{"Cos", "[", 
                  FractionBox["1", "5"], "]"}]}], "+", 
                RowBox[{"2", " ", 
                 RowBox[{"Cos", "[", 
                  FractionBox["1", "3"], "]"}]}]}], ")"}]}], "-", 
             RowBox[{"2", " ", "c1", " ", "c2", " ", 
              RowBox[{"Sin", "[", 
               FractionBox["1", "5"], "]"}]}], "+", 
             RowBox[{"2", " ", "c3", " ", 
              RowBox[{"Sin", "[", 
               FractionBox["1", "5"], "]"}]}]}], ")"}]}], 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"1", "+", 
             SuperscriptBox["c1", "2"], "+", 
             SuperscriptBox["c2", "2"], "+", 
             SuperscriptBox["c3", "2"]}], ")"}], "2"]]}], ",", 
        RowBox[{
         RowBox[{"-", 
          FractionBox[
           RowBox[{
            RowBox[{"4", " ", "c2", " ", "x"}], "+", 
            RowBox[{"2", " ", "c2", " ", 
             RowBox[{"Cos", "[", 
              FractionBox["1", "5"], "]"}]}], "+", 
            RowBox[{"4", " ", "c2", " ", 
             RowBox[{"Cos", "[", 
              FractionBox["1", "3"], "]"}]}], "-", 
            RowBox[{"2", " ", "c1", " ", 
             RowBox[{"Sin", "[", 
              FractionBox["1", "5"], "]"}]}]}], 
           RowBox[{"2", " ", 
            RowBox[{"(", 
             RowBox[{"1", "+", 
              SuperscriptBox["c1", "2"], "+", 
              SuperscriptBox["c2", "2"], "+", 
              SuperscriptBox["c3", "2"]}], ")"}]}]]}], "+", 
         FractionBox[
          RowBox[{"c2", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"2", " ", 
              RowBox[{"(", 
               RowBox[{"1", "+", 
                SuperscriptBox["c1", "2"], "+", 
                SuperscriptBox["c2", "2"], "+", 
                SuperscriptBox["c3", "2"]}], ")"}], " ", "x"}], "-", 
             RowBox[{"Cos", "[", 
              FractionBox["1", "5"], "]"}], "+", 
             RowBox[{
              SuperscriptBox["c2", "2"], " ", 
              RowBox[{"Cos", "[", 
               FractionBox["1", "5"], "]"}]}], "+", 
             RowBox[{
              SuperscriptBox["c3", "2"], " ", 
              RowBox[{"Cos", "[", 
               FractionBox["1", "5"], "]"}]}], "+", 
             RowBox[{"2", " ", 
              RowBox[{"Cos", "[", 
               FractionBox["1", "3"], "]"}]}], "+", 
             RowBox[{"2", " ", 
              SuperscriptBox["c2", "2"], " ", 
              RowBox[{"Cos", "[", 
               FractionBox["1", "3"], "]"}]}], "+", 
             RowBox[{"2", " ", 
              SuperscriptBox["c3", "2"], " ", 
              RowBox[{"Cos", "[", 
               FractionBox["1", "3"], "]"}]}], "+", 
             RowBox[{
              SuperscriptBox["c1", "2"], " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", 
                 RowBox[{"Cos", "[", 
                  FractionBox["1", "5"], "]"}]}], "+", 
                RowBox[{"2", " ", 
                 RowBox[{"Cos", "[", 
                  FractionBox["1", "3"], "]"}]}]}], ")"}]}], "-", 
             RowBox[{"2", " ", "c1", " ", "c2", " ", 
              RowBox[{"Sin", "[", 
               FractionBox["1", "5"], "]"}]}], "+", 
             RowBox[{"2", " ", "c3", " ", 
              RowBox[{"Sin", "[", 
               FractionBox["1", "5"], "]"}]}]}], ")"}]}], 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"1", "+", 
             SuperscriptBox["c1", "2"], "+", 
             SuperscriptBox["c2", "2"], "+", 
             SuperscriptBox["c3", "2"]}], ")"}], "2"]]}], ",", 
        RowBox[{
         RowBox[{"-", 
          FractionBox[
           RowBox[{
            RowBox[{"4", " ", "c3", " ", "x"}], "+", 
            RowBox[{"2", " ", "c3", " ", 
             RowBox[{"Cos", "[", 
              FractionBox["1", "5"], "]"}]}], "+", 
            RowBox[{"4", " ", "c3", " ", 
             RowBox[{"Cos", "[", 
              FractionBox["1", "3"], "]"}]}], "+", 
            RowBox[{"2", " ", 
             RowBox[{"Sin", "[", 
              FractionBox["1", "5"], "]"}]}]}], 
           RowBox[{"2", " ", 
            RowBox[{"(", 
             RowBox[{"1", "+", 
              SuperscriptBox["c1", "2"], "+", 
              SuperscriptBox["c2", "2"], "+", 
              SuperscriptBox["c3", "2"]}], ")"}]}]]}], "+", 
         FractionBox[
          RowBox[{"c3", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"2", " ", 
              RowBox[{"(", 
               RowBox[{"1", "+", 
                SuperscriptBox["c1", "2"], "+", 
                SuperscriptBox["c2", "2"], "+", 
                SuperscriptBox["c3", "2"]}], ")"}], " ", "x"}], "-", 
             RowBox[{"Cos", "[", 
              FractionBox["1", "5"], "]"}], "+", 
             RowBox[{
              SuperscriptBox["c2", "2"], " ", 
              RowBox[{"Cos", "[", 
               FractionBox["1", "5"], "]"}]}], "+", 
             RowBox[{
              SuperscriptBox["c3", "2"], " ", 
              RowBox[{"Cos", "[", 
               FractionBox["1", "5"], "]"}]}], "+", 
             RowBox[{"2", " ", 
              RowBox[{"Cos", "[", 
               FractionBox["1", "3"], "]"}]}], "+", 
             RowBox[{"2", " ", 
              SuperscriptBox["c2", "2"], " ", 
              RowBox[{"Cos", "[", 
               FractionBox["1", "3"], "]"}]}], "+", 
             RowBox[{"2", " ", 
              SuperscriptBox["c3", "2"], " ", 
              RowBox[{"Cos", "[", 
               FractionBox["1", "3"], "]"}]}], "+", 
             RowBox[{
              SuperscriptBox["c1", "2"], " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", 
                 RowBox[{"Cos", "[", 
                  FractionBox["1", "5"], "]"}]}], "+", 
                RowBox[{"2", " ", 
                 RowBox[{"Cos", "[", 
                  FractionBox["1", "3"], "]"}]}]}], ")"}]}], "-", 
             RowBox[{"2", " ", "c1", " ", "c2", " ", 
              RowBox[{"Sin", "[", 
               FractionBox["1", "5"], "]"}]}], "+", 
             RowBox[{"2", " ", "c3", " ", 
              RowBox[{"Sin", "[", 
               FractionBox["1", "5"], "]"}]}]}], ")"}]}], 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"1", "+", 
             SuperscriptBox["c1", "2"], "+", 
             SuperscriptBox["c2", "2"], "+", 
             SuperscriptBox["c3", "2"]}], ")"}], "2"]]}], ",", "0", ",", "0", 
        ",", "0", ",", 
        RowBox[{"l4", " ", 
         RowBox[{"Cos", "[", "\[Phi]4", "]"}], " ", 
         RowBox[{"Cos", "[", "\[Psi]4", "]"}]}], ",", "0", ",", "0", ",", "0",
         ",", "0", ",", "0", ",", 
        RowBox[{
         RowBox[{"-", "l4"}], " ", 
         RowBox[{"Sin", "[", "\[Phi]4", "]"}], " ", 
         RowBox[{"Sin", "[", "\[Psi]4", "]"}]}], ",", "0", ",", "0"}], "}"}], 
      ",", 
      RowBox[{"{", 
       RowBox[{"0", ",", 
        RowBox[{"-", "1"}], ",", "0", ",", 
        RowBox[{
         FractionBox[
          RowBox[{
           RowBox[{
            RowBox[{"-", "4"}], " ", "c1", " ", "y"}], "+", 
           RowBox[{"2", " ", "c2", " ", 
            RowBox[{"Cos", "[", 
             FractionBox["1", "5"], "]"}]}], "-", 
           RowBox[{"2", " ", "c1", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"Sin", "[", 
               FractionBox["1", "5"], "]"}], "+", 
              RowBox[{"2", " ", 
               RowBox[{"Sin", "[", 
                FractionBox["1", "3"], "]"}]}]}], ")"}]}]}], 
          RowBox[{"2", " ", 
           RowBox[{"(", 
            RowBox[{"1", "+", 
             SuperscriptBox["c1", "2"], "+", 
             SuperscriptBox["c2", "2"], "+", 
             SuperscriptBox["c3", "2"]}], ")"}]}]], "-", 
         FractionBox[
          RowBox[{"c1", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              RowBox[{"-", "2"}], " ", 
              RowBox[{"(", 
               RowBox[{"1", "+", 
                SuperscriptBox["c1", "2"], "+", 
                SuperscriptBox["c2", "2"], "+", 
                SuperscriptBox["c3", "2"]}], ")"}], " ", "y"}], "+", 
             RowBox[{"2", " ", "c1", " ", "c2", " ", 
              RowBox[{"Cos", "[", 
               FractionBox["1", "5"], "]"}]}], "+", 
             RowBox[{"2", " ", "c3", " ", 
              RowBox[{"Cos", "[", 
               FractionBox["1", "5"], "]"}]}], "+", 
             RowBox[{"Sin", "[", 
              FractionBox["1", "5"], "]"}], "+", 
             RowBox[{
              SuperscriptBox["c2", "2"], " ", 
              RowBox[{"Sin", "[", 
               FractionBox["1", "5"], "]"}]}], "-", 
             RowBox[{
              SuperscriptBox["c3", "2"], " ", 
              RowBox[{"Sin", "[", 
               FractionBox["1", "5"], "]"}]}], "-", 
             RowBox[{"2", " ", 
              RowBox[{"Sin", "[", 
               FractionBox["1", "3"], "]"}]}], "-", 
             RowBox[{"2", " ", 
              SuperscriptBox["c2", "2"], " ", 
              RowBox[{"Sin", "[", 
               FractionBox["1", "3"], "]"}]}], "-", 
             RowBox[{"2", " ", 
              SuperscriptBox["c3", "2"], " ", 
              RowBox[{"Sin", "[", 
               FractionBox["1", "3"], "]"}]}], "-", 
             RowBox[{
              SuperscriptBox["c1", "2"], " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"Sin", "[", 
                 FractionBox["1", "5"], "]"}], "+", 
                RowBox[{"2", " ", 
                 RowBox[{"Sin", "[", 
                  FractionBox["1", "3"], "]"}]}]}], ")"}]}]}], ")"}]}], 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"1", "+", 
             SuperscriptBox["c1", "2"], "+", 
             SuperscriptBox["c2", "2"], "+", 
             SuperscriptBox["c3", "2"]}], ")"}], "2"]]}], ",", 
        RowBox[{
         FractionBox[
          RowBox[{
           RowBox[{
            RowBox[{"-", "4"}], " ", "c2", " ", "y"}], "+", 
           RowBox[{"2", " ", "c1", " ", 
            RowBox[{"Cos", "[", 
             FractionBox["1", "5"], "]"}]}], "+", 
           RowBox[{"2", " ", "c2", " ", 
            RowBox[{"Sin", "[", 
             FractionBox["1", "5"], "]"}]}], "-", 
           RowBox[{"4", " ", "c2", " ", 
            RowBox[{"Sin", "[", 
             FractionBox["1", "3"], "]"}]}]}], 
          RowBox[{"2", " ", 
           RowBox[{"(", 
            RowBox[{"1", "+", 
             SuperscriptBox["c1", "2"], "+", 
             SuperscriptBox["c2", "2"], "+", 
             SuperscriptBox["c3", "2"]}], ")"}]}]], "-", 
         FractionBox[
          RowBox[{"c2", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              RowBox[{"-", "2"}], " ", 
              RowBox[{"(", 
               RowBox[{"1", "+", 
                SuperscriptBox["c1", "2"], "+", 
                SuperscriptBox["c2", "2"], "+", 
                SuperscriptBox["c3", "2"]}], ")"}], " ", "y"}], "+", 
             RowBox[{"2", " ", "c1", " ", "c2", " ", 
              RowBox[{"Cos", "[", 
               FractionBox["1", "5"], "]"}]}], "+", 
             RowBox[{"2", " ", "c3", " ", 
              RowBox[{"Cos", "[", 
               FractionBox["1", "5"], "]"}]}], "+", 
             RowBox[{"Sin", "[", 
              FractionBox["1", "5"], "]"}], "+", 
             RowBox[{
              SuperscriptBox["c2", "2"], " ", 
              RowBox[{"Sin", "[", 
               FractionBox["1", "5"], "]"}]}], "-", 
             RowBox[{
              SuperscriptBox["c3", "2"], " ", 
              RowBox[{"Sin", "[", 
               FractionBox["1", "5"], "]"}]}], "-", 
             RowBox[{"2", " ", 
              RowBox[{"Sin", "[", 
               FractionBox["1", "3"], "]"}]}], "-", 
             RowBox[{"2", " ", 
              SuperscriptBox["c2", "2"], " ", 
              RowBox[{"Sin", "[", 
               FractionBox["1", "3"], "]"}]}], "-", 
             RowBox[{"2", " ", 
              SuperscriptBox["c3", "2"], " ", 
              RowBox[{"Sin", "[", 
               FractionBox["1", "3"], "]"}]}], "-", 
             RowBox[{
              SuperscriptBox["c1", "2"], " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"Sin", "[", 
                 FractionBox["1", "5"], "]"}], "+", 
                RowBox[{"2", " ", 
                 RowBox[{"Sin", "[", 
                  FractionBox["1", "3"], "]"}]}]}], ")"}]}]}], ")"}]}], 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"1", "+", 
             SuperscriptBox["c1", "2"], "+", 
             SuperscriptBox["c2", "2"], "+", 
             SuperscriptBox["c3", "2"]}], ")"}], "2"]]}], ",", 
        RowBox[{
         FractionBox[
          RowBox[{
           RowBox[{
            RowBox[{"-", "4"}], " ", "c3", " ", "y"}], "+", 
           RowBox[{"2", " ", 
            RowBox[{"Cos", "[", 
             FractionBox["1", "5"], "]"}]}], "-", 
           RowBox[{"2", " ", "c3", " ", 
            RowBox[{"Sin", "[", 
             FractionBox["1", "5"], "]"}]}], "-", 
           RowBox[{"4", " ", "c3", " ", 
            RowBox[{"Sin", "[", 
             FractionBox["1", "3"], "]"}]}]}], 
          RowBox[{"2", " ", 
           RowBox[{"(", 
            RowBox[{"1", "+", 
             SuperscriptBox["c1", "2"], "+", 
             SuperscriptBox["c2", "2"], "+", 
             SuperscriptBox["c3", "2"]}], ")"}]}]], "-", 
         FractionBox[
          RowBox[{"c3", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              RowBox[{"-", "2"}], " ", 
              RowBox[{"(", 
               RowBox[{"1", "+", 
                SuperscriptBox["c1", "2"], "+", 
                SuperscriptBox["c2", "2"], "+", 
                SuperscriptBox["c3", "2"]}], ")"}], " ", "y"}], "+", 
             RowBox[{"2", " ", "c1", " ", "c2", " ", 
              RowBox[{"Cos", "[", 
               FractionBox["1", "5"], "]"}]}], "+", 
             RowBox[{"2", " ", "c3", " ", 
              RowBox[{"Cos", "[", 
               FractionBox["1", "5"], "]"}]}], "+", 
             RowBox[{"Sin", "[", 
              FractionBox["1", "5"], "]"}], "+", 
             RowBox[{
              SuperscriptBox["c2", "2"], " ", 
              RowBox[{"Sin", "[", 
               FractionBox["1", "5"], "]"}]}], "-", 
             RowBox[{
              SuperscriptBox["c3", "2"], " ", 
              RowBox[{"Sin", "[", 
               FractionBox["1", "5"], "]"}]}], "-", 
             RowBox[{"2", " ", 
              RowBox[{"Sin", "[", 
               FractionBox["1", "3"], "]"}]}], "-", 
             RowBox[{"2", " ", 
              SuperscriptBox["c2", "2"], " ", 
              RowBox[{"Sin", "[", 
               FractionBox["1", "3"], "]"}]}], "-", 
             RowBox[{"2", " ", 
              SuperscriptBox["c3", "2"], " ", 
              RowBox[{"Sin", "[", 
               FractionBox["1", "3"], "]"}]}], "-", 
             RowBox[{
              SuperscriptBox["c1", "2"], " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"Sin", "[", 
                 FractionBox["1", "5"], "]"}], "+", 
                RowBox[{"2", " ", 
                 RowBox[{"Sin", "[", 
                  FractionBox["1", "3"], "]"}]}]}], ")"}]}]}], ")"}]}], 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"1", "+", 
             SuperscriptBox["c1", "2"], "+", 
             SuperscriptBox["c2", "2"], "+", 
             SuperscriptBox["c3", "2"]}], ")"}], "2"]]}], ",", "0", ",", "0", 
        ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", 
        ",", 
        RowBox[{
         RowBox[{"-", "l4"}], " ", 
         RowBox[{"Cos", "[", "\[Psi]4", "]"}]}], ",", "0", ",", "0"}], "}"}], 
      ",", 
      RowBox[{"{", 
       RowBox[{"0", ",", "0", ",", 
        RowBox[{"-", "1"}], ",", 
        RowBox[{
         FractionBox[
          RowBox[{
           RowBox[{
            RowBox[{"-", "2"}], " ", "c1", " ", "z"}], "+", 
           RowBox[{"c3", " ", 
            RowBox[{"Cos", "[", 
             FractionBox["1", "5"], "]"}]}], "+", 
           RowBox[{"2", " ", "c1", " ", "l4", " ", 
            RowBox[{"Cos", "[", "\[Phi]4", "]"}], " ", 
            RowBox[{"Cos", "[", "\[Psi]4", "]"}]}], "+", 
           RowBox[{"Sin", "[", 
            FractionBox["1", "5"], "]"}]}], 
          RowBox[{"1", "+", 
           SuperscriptBox["c1", "2"], "+", 
           SuperscriptBox["c2", "2"], "+", 
           SuperscriptBox["c3", "2"]}]], "-", 
         FractionBox[
          RowBox[{"2", " ", "c1", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              RowBox[{"-", 
               RowBox[{"(", 
                RowBox[{"1", "+", 
                 SuperscriptBox["c1", "2"], "+", 
                 SuperscriptBox["c2", "2"], "+", 
                 SuperscriptBox["c3", "2"]}], ")"}]}], " ", "z"}], "-", 
             RowBox[{"c2", " ", 
              RowBox[{"Cos", "[", 
               FractionBox["1", "5"], "]"}]}], "+", 
             RowBox[{"c1", " ", "c3", " ", 
              RowBox[{"Cos", "[", 
               FractionBox["1", "5"], "]"}]}], "+", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{"1", "+", 
                SuperscriptBox["c1", "2"], "+", 
                SuperscriptBox["c2", "2"], "+", 
                SuperscriptBox["c3", "2"]}], ")"}], " ", "l4", " ", 
              RowBox[{"Cos", "[", "\[Phi]4", "]"}], " ", 
              RowBox[{"Cos", "[", "\[Psi]4", "]"}]}], "+", 
             RowBox[{"c1", " ", 
              RowBox[{"Sin", "[", 
               FractionBox["1", "5"], "]"}]}], "+", 
             RowBox[{"c2", " ", "c3", " ", 
              RowBox[{"Sin", "[", 
               FractionBox["1", "5"], "]"}]}]}], ")"}]}], 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"1", "+", 
             SuperscriptBox["c1", "2"], "+", 
             SuperscriptBox["c2", "2"], "+", 
             SuperscriptBox["c3", "2"]}], ")"}], "2"]]}], ",", 
        RowBox[{
         FractionBox[
          RowBox[{
           RowBox[{
            RowBox[{"-", "2"}], " ", "c2", " ", "z"}], "-", 
           RowBox[{"Cos", "[", 
            FractionBox["1", "5"], "]"}], "+", 
           RowBox[{"2", " ", "c2", " ", "l4", " ", 
            RowBox[{"Cos", "[", "\[Phi]4", "]"}], " ", 
            RowBox[{"Cos", "[", "\[Psi]4", "]"}]}], "+", 
           RowBox[{"c3", " ", 
            RowBox[{"Sin", "[", 
             FractionBox["1", "5"], "]"}]}]}], 
          RowBox[{"1", "+", 
           SuperscriptBox["c1", "2"], "+", 
           SuperscriptBox["c2", "2"], "+", 
           SuperscriptBox["c3", "2"]}]], "-", 
         FractionBox[
          RowBox[{"2", " ", "c2", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              RowBox[{"-", 
               RowBox[{"(", 
                RowBox[{"1", "+", 
                 SuperscriptBox["c1", "2"], "+", 
                 SuperscriptBox["c2", "2"], "+", 
                 SuperscriptBox["c3", "2"]}], ")"}]}], " ", "z"}], "-", 
             RowBox[{"c2", " ", 
              RowBox[{"Cos", "[", 
               FractionBox["1", "5"], "]"}]}], "+", 
             RowBox[{"c1", " ", "c3", " ", 
              RowBox[{"Cos", "[", 
               FractionBox["1", "5"], "]"}]}], "+", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{"1", "+", 
                SuperscriptBox["c1", "2"], "+", 
                SuperscriptBox["c2", "2"], "+", 
                SuperscriptBox["c3", "2"]}], ")"}], " ", "l4", " ", 
              RowBox[{"Cos", "[", "\[Phi]4", "]"}], " ", 
              RowBox[{"Cos", "[", "\[Psi]4", "]"}]}], "+", 
             RowBox[{"c1", " ", 
              RowBox[{"Sin", "[", 
               FractionBox["1", "5"], "]"}]}], "+", 
             RowBox[{"c2", " ", "c3", " ", 
              RowBox[{"Sin", "[", 
               FractionBox["1", "5"], "]"}]}]}], ")"}]}], 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"1", "+", 
             SuperscriptBox["c1", "2"], "+", 
             SuperscriptBox["c2", "2"], "+", 
             SuperscriptBox["c3", "2"]}], ")"}], "2"]]}], ",", 
        RowBox[{
         FractionBox[
          RowBox[{
           RowBox[{
            RowBox[{"-", "2"}], " ", "c3", " ", "z"}], "+", 
           RowBox[{"c1", " ", 
            RowBox[{"Cos", "[", 
             FractionBox["1", "5"], "]"}]}], "+", 
           RowBox[{"2", " ", "c3", " ", "l4", " ", 
            RowBox[{"Cos", "[", "\[Phi]4", "]"}], " ", 
            RowBox[{"Cos", "[", "\[Psi]4", "]"}]}], "+", 
           RowBox[{"c2", " ", 
            RowBox[{"Sin", "[", 
             FractionBox["1", "5"], "]"}]}]}], 
          RowBox[{"1", "+", 
           SuperscriptBox["c1", "2"], "+", 
           SuperscriptBox["c2", "2"], "+", 
           SuperscriptBox["c3", "2"]}]], "-", 
         FractionBox[
          RowBox[{"2", " ", "c3", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              RowBox[{"-", 
               RowBox[{"(", 
                RowBox[{"1", "+", 
                 SuperscriptBox["c1", "2"], "+", 
                 SuperscriptBox["c2", "2"], "+", 
                 SuperscriptBox["c3", "2"]}], ")"}]}], " ", "z"}], "-", 
             RowBox[{"c2", " ", 
              RowBox[{"Cos", "[", 
               FractionBox["1", "5"], "]"}]}], "+", 
             RowBox[{"c1", " ", "c3", " ", 
              RowBox[{"Cos", "[", 
               FractionBox["1", "5"], "]"}]}], "+", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{"1", "+", 
                SuperscriptBox["c1", "2"], "+", 
                SuperscriptBox["c2", "2"], "+", 
                SuperscriptBox["c3", "2"]}], ")"}], " ", "l4", " ", 
              RowBox[{"Cos", "[", "\[Phi]4", "]"}], " ", 
              RowBox[{"Cos", "[", "\[Psi]4", "]"}]}], "+", 
             RowBox[{"c1", " ", 
              RowBox[{"Sin", "[", 
               FractionBox["1", "5"], "]"}]}], "+", 
             RowBox[{"c2", " ", "c3", " ", 
              RowBox[{"Sin", "[", 
               FractionBox["1", "5"], "]"}]}]}], ")"}]}], 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"1", "+", 
             SuperscriptBox["c1", "2"], "+", 
             SuperscriptBox["c2", "2"], "+", 
             SuperscriptBox["c3", "2"]}], ")"}], "2"]]}], ",", "0", ",", "0", 
        ",", "0", ",", 
        RowBox[{
         RowBox[{"-", "l4"}], " ", 
         RowBox[{"Cos", "[", "\[Psi]4", "]"}], " ", 
         RowBox[{"Sin", "[", "\[Phi]4", "]"}]}], ",", "0", ",", "0", ",", "0",
         ",", "0", ",", "0", ",", 
        RowBox[{
         RowBox[{"-", "l4"}], " ", 
         RowBox[{"Cos", "[", "\[Phi]4", "]"}], " ", 
         RowBox[{"Sin", "[", "\[Psi]4", "]"}]}], ",", "0", ",", "0"}], "}"}], 
      ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "1"}], ",", "0", ",", "0", ",", 
        RowBox[{
         FractionBox["1", "4"], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", 
            FractionBox[
             RowBox[{"4", " ", "c1", " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"c1", " ", "c2"}], "-", "c3"}], ")"}], " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{
                 SqrtBox["3"], " ", 
                 RowBox[{"Cos", "[", 
                  FractionBox["1", "5"], "]"}]}], "+", 
                RowBox[{"Sin", "[", 
                 FractionBox["1", "5"], "]"}]}], ")"}]}], 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "+", 
                SuperscriptBox["c1", "2"], "+", 
                SuperscriptBox["c2", "2"], "+", 
                SuperscriptBox["c3", "2"]}], ")"}], "2"]]}], "+", 
           FractionBox[
            RowBox[{"2", " ", "c2", " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                SqrtBox["3"], " ", 
                RowBox[{"Cos", "[", 
                 FractionBox["1", "5"], "]"}]}], "+", 
               RowBox[{"Sin", "[", 
                FractionBox["1", "5"], "]"}]}], ")"}]}], 
            RowBox[{"1", "+", 
             SuperscriptBox["c1", "2"], "+", 
             SuperscriptBox["c2", "2"], "+", 
             SuperscriptBox["c3", "2"]}]], "-", 
           FractionBox[
            RowBox[{"2", " ", "c1", " ", 
             RowBox[{"(", 
              RowBox[{"1", "+", 
               SuperscriptBox["c1", "2"], "-", 
               SuperscriptBox["c2", "2"], "-", 
               SuperscriptBox["c3", "2"]}], ")"}], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", 
                RowBox[{"Cos", "[", 
                 FractionBox["1", "5"], "]"}]}], "+", 
               RowBox[{
                SqrtBox["3"], " ", 
                RowBox[{"Sin", "[", 
                 FractionBox["1", "5"], "]"}]}]}], ")"}]}], 
            SuperscriptBox[
             RowBox[{"(", 
              RowBox[{"1", "+", 
               SuperscriptBox["c1", "2"], "+", 
               SuperscriptBox["c2", "2"], "+", 
               SuperscriptBox["c3", "2"]}], ")"}], "2"]], "+", 
           FractionBox[
            RowBox[{"2", " ", "c1", " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", 
                RowBox[{"Cos", "[", 
                 FractionBox["1", "5"], "]"}]}], "+", 
               RowBox[{
                SqrtBox["3"], " ", 
                RowBox[{"Sin", "[", 
                 FractionBox["1", "5"], "]"}]}]}], ")"}]}], 
            RowBox[{"1", "+", 
             SuperscriptBox["c1", "2"], "+", 
             SuperscriptBox["c2", "2"], "+", 
             SuperscriptBox["c3", "2"]}]]}], ")"}]}], ",", 
        RowBox[{
         FractionBox["1", "4"], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", 
            FractionBox[
             RowBox[{"4", " ", "c2", " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"c1", " ", "c2"}], "-", "c3"}], ")"}], " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{
                 SqrtBox["3"], " ", 
                 RowBox[{"Cos", "[", 
                  FractionBox["1", "5"], "]"}]}], "+", 
                RowBox[{"Sin", "[", 
                 FractionBox["1", "5"], "]"}]}], ")"}]}], 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "+", 
                SuperscriptBox["c1", "2"], "+", 
                SuperscriptBox["c2", "2"], "+", 
                SuperscriptBox["c3", "2"]}], ")"}], "2"]]}], "+", 
           FractionBox[
            RowBox[{"2", " ", "c1", " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                SqrtBox["3"], " ", 
                RowBox[{"Cos", "[", 
                 FractionBox["1", "5"], "]"}]}], "+", 
               RowBox[{"Sin", "[", 
                FractionBox["1", "5"], "]"}]}], ")"}]}], 
            RowBox[{"1", "+", 
             SuperscriptBox["c1", "2"], "+", 
             SuperscriptBox["c2", "2"], "+", 
             SuperscriptBox["c3", "2"]}]], "-", 
           FractionBox[
            RowBox[{"2", " ", "c2", " ", 
             RowBox[{"(", 
              RowBox[{"1", "+", 
               SuperscriptBox["c1", "2"], "-", 
               SuperscriptBox["c2", "2"], "-", 
               SuperscriptBox["c3", "2"]}], ")"}], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", 
                RowBox[{"Cos", "[", 
                 FractionBox["1", "5"], "]"}]}], "+", 
               RowBox[{
                SqrtBox["3"], " ", 
                RowBox[{"Sin", "[", 
                 FractionBox["1", "5"], "]"}]}]}], ")"}]}], 
            SuperscriptBox[
             RowBox[{"(", 
              RowBox[{"1", "+", 
               SuperscriptBox["c1", "2"], "+", 
               SuperscriptBox["c2", "2"], "+", 
               SuperscriptBox["c3", "2"]}], ")"}], "2"]], "-", 
           FractionBox[
            RowBox[{"2", " ", "c2", " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", 
                RowBox[{"Cos", "[", 
                 FractionBox["1", "5"], "]"}]}], "+", 
               RowBox[{
                SqrtBox["3"], " ", 
                RowBox[{"Sin", "[", 
                 FractionBox["1", "5"], "]"}]}]}], ")"}]}], 
            RowBox[{"1", "+", 
             SuperscriptBox["c1", "2"], "+", 
             SuperscriptBox["c2", "2"], "+", 
             SuperscriptBox["c3", "2"]}]]}], ")"}]}], ",", 
        RowBox[{
         FractionBox["1", "4"], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", 
            FractionBox[
             RowBox[{"4", " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"c1", " ", "c2"}], "-", "c3"}], ")"}], " ", "c3", " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{
                 SqrtBox["3"], " ", 
                 RowBox[{"Cos", "[", 
                  FractionBox["1", "5"], "]"}]}], "+", 
                RowBox[{"Sin", "[", 
                 FractionBox["1", "5"], "]"}]}], ")"}]}], 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "+", 
                SuperscriptBox["c1", "2"], "+", 
                SuperscriptBox["c2", "2"], "+", 
                SuperscriptBox["c3", "2"]}], ")"}], "2"]]}], "-", 
           FractionBox[
            RowBox[{"2", " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                SqrtBox["3"], " ", 
                RowBox[{"Cos", "[", 
                 FractionBox["1", "5"], "]"}]}], "+", 
               RowBox[{"Sin", "[", 
                FractionBox["1", "5"], "]"}]}], ")"}]}], 
            RowBox[{"1", "+", 
             SuperscriptBox["c1", "2"], "+", 
             SuperscriptBox["c2", "2"], "+", 
             SuperscriptBox["c3", "2"]}]], "-", 
           FractionBox[
            RowBox[{"2", " ", "c3", " ", 
             RowBox[{"(", 
              RowBox[{"1", "+", 
               SuperscriptBox["c1", "2"], "-", 
               SuperscriptBox["c2", "2"], "-", 
               SuperscriptBox["c3", "2"]}], ")"}], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", 
                RowBox[{"Cos", "[", 
                 FractionBox["1", "5"], "]"}]}], "+", 
               RowBox[{
                SqrtBox["3"], " ", 
                RowBox[{"Sin", "[", 
                 FractionBox["1", "5"], "]"}]}]}], ")"}]}], 
            SuperscriptBox[
             RowBox[{"(", 
              RowBox[{"1", "+", 
               SuperscriptBox["c1", "2"], "+", 
               SuperscriptBox["c2", "2"], "+", 
               SuperscriptBox["c3", "2"]}], ")"}], "2"]], "-", 
           FractionBox[
            RowBox[{"2", " ", "c3", " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", 
                RowBox[{"Cos", "[", 
                 FractionBox["1", "5"], "]"}]}], "+", 
               RowBox[{
                SqrtBox["3"], " ", 
                RowBox[{"Sin", "[", 
                 FractionBox["1", "5"], "]"}]}]}], ")"}]}], 
            RowBox[{"1", "+", 
             SuperscriptBox["c1", "2"], "+", 
             SuperscriptBox["c2", "2"], "+", 
             SuperscriptBox["c3", "2"]}]]}], ")"}]}], ",", "0", ",", "0", ",",
         "0", ",", "0", ",", 
        RowBox[{"l5", " ", 
         RowBox[{"Cos", "[", "\[Phi]5", "]"}], " ", 
         RowBox[{"Cos", "[", "\[Psi]5", "]"}]}], ",", "0", ",", "0", ",", "0",
         ",", "0", ",", "0", ",", 
        RowBox[{
         RowBox[{"-", "l5"}], " ", 
         RowBox[{"Sin", "[", "\[Phi]5", "]"}], " ", 
         RowBox[{"Sin", "[", "\[Psi]5", "]"}]}], ",", "0"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0", ",", 
        RowBox[{"-", "1"}], ",", "0", ",", 
        RowBox[{
         FractionBox["1", "4"], " ", 
         RowBox[{"(", 
          RowBox[{
           FractionBox[
            RowBox[{"2", " ", "c1", " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "1"}], "+", 
               SuperscriptBox["c1", "2"], "-", 
               SuperscriptBox["c2", "2"], "+", 
               SuperscriptBox["c3", "2"]}], ")"}], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                SqrtBox["3"], " ", 
                RowBox[{"Cos", "[", 
                 FractionBox["1", "5"], "]"}]}], "+", 
               RowBox[{"Sin", "[", 
                FractionBox["1", "5"], "]"}]}], ")"}]}], 
            SuperscriptBox[
             RowBox[{"(", 
              RowBox[{"1", "+", 
               SuperscriptBox["c1", "2"], "+", 
               SuperscriptBox["c2", "2"], "+", 
               SuperscriptBox["c3", "2"]}], ")"}], "2"]], "-", 
           FractionBox[
            RowBox[{"2", " ", "c1", " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                SqrtBox["3"], " ", 
                RowBox[{"Cos", "[", 
                 FractionBox["1", "5"], "]"}]}], "+", 
               RowBox[{"Sin", "[", 
                FractionBox["1", "5"], "]"}]}], ")"}]}], 
            RowBox[{"1", "+", 
             SuperscriptBox["c1", "2"], "+", 
             SuperscriptBox["c2", "2"], "+", 
             SuperscriptBox["c3", "2"]}]], "-", 
           FractionBox[
            RowBox[{"4", " ", "c1", " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"c1", " ", "c2"}], "+", "c3"}], ")"}], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", 
                RowBox[{"Cos", "[", 
                 FractionBox["1", "5"], "]"}]}], "+", 
               RowBox[{
                SqrtBox["3"], " ", 
                RowBox[{"Sin", "[", 
                 FractionBox["1", "5"], "]"}]}]}], ")"}]}], 
            SuperscriptBox[
             RowBox[{"(", 
              RowBox[{"1", "+", 
               SuperscriptBox["c1", "2"], "+", 
               SuperscriptBox["c2", "2"], "+", 
               SuperscriptBox["c3", "2"]}], ")"}], "2"]], "+", 
           FractionBox[
            RowBox[{"2", " ", "c2", " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", 
                RowBox[{"Cos", "[", 
                 FractionBox["1", "5"], "]"}]}], "+", 
               RowBox[{
                SqrtBox["3"], " ", 
                RowBox[{"Sin", "[", 
                 FractionBox["1", "5"], "]"}]}]}], ")"}]}], 
            RowBox[{"1", "+", 
             SuperscriptBox["c1", "2"], "+", 
             SuperscriptBox["c2", "2"], "+", 
             SuperscriptBox["c3", "2"]}]]}], ")"}]}], ",", 
        RowBox[{
         FractionBox["1", "4"], " ", 
         RowBox[{"(", 
          RowBox[{
           FractionBox[
            RowBox[{"2", " ", "c2", " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "1"}], "+", 
               SuperscriptBox["c1", "2"], "-", 
               SuperscriptBox["c2", "2"], "+", 
               SuperscriptBox["c3", "2"]}], ")"}], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                SqrtBox["3"], " ", 
                RowBox[{"Cos", "[", 
                 FractionBox["1", "5"], "]"}]}], "+", 
               RowBox[{"Sin", "[", 
                FractionBox["1", "5"], "]"}]}], ")"}]}], 
            SuperscriptBox[
             RowBox[{"(", 
              RowBox[{"1", "+", 
               SuperscriptBox["c1", "2"], "+", 
               SuperscriptBox["c2", "2"], "+", 
               SuperscriptBox["c3", "2"]}], ")"}], "2"]], "+", 
           FractionBox[
            RowBox[{"2", " ", "c2", " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                SqrtBox["3"], " ", 
                RowBox[{"Cos", "[", 
                 FractionBox["1", "5"], "]"}]}], "+", 
               RowBox[{"Sin", "[", 
                FractionBox["1", "5"], "]"}]}], ")"}]}], 
            RowBox[{"1", "+", 
             SuperscriptBox["c1", "2"], "+", 
             SuperscriptBox["c2", "2"], "+", 
             SuperscriptBox["c3", "2"]}]], "-", 
           FractionBox[
            RowBox[{"4", " ", "c2", " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"c1", " ", "c2"}], "+", "c3"}], ")"}], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", 
                RowBox[{"Cos", "[", 
                 FractionBox["1", "5"], "]"}]}], "+", 
               RowBox[{
                SqrtBox["3"], " ", 
                RowBox[{"Sin", "[", 
                 FractionBox["1", "5"], "]"}]}]}], ")"}]}], 
            SuperscriptBox[
             RowBox[{"(", 
              RowBox[{"1", "+", 
               SuperscriptBox["c1", "2"], "+", 
               SuperscriptBox["c2", "2"], "+", 
               SuperscriptBox["c3", "2"]}], ")"}], "2"]], "+", 
           FractionBox[
            RowBox[{"2", " ", "c1", " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", 
                RowBox[{"Cos", "[", 
                 FractionBox["1", "5"], "]"}]}], "+", 
               RowBox[{
                SqrtBox["3"], " ", 
                RowBox[{"Sin", "[", 
                 FractionBox["1", "5"], "]"}]}]}], ")"}]}], 
            RowBox[{"1", "+", 
             SuperscriptBox["c1", "2"], "+", 
             SuperscriptBox["c2", "2"], "+", 
             SuperscriptBox["c3", "2"]}]]}], ")"}]}], ",", 
        RowBox[{
         FractionBox["1", "4"], " ", 
         RowBox[{"(", 
          RowBox[{
           FractionBox[
            RowBox[{"2", " ", "c3", " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "1"}], "+", 
               SuperscriptBox["c1", "2"], "-", 
               SuperscriptBox["c2", "2"], "+", 
               SuperscriptBox["c3", "2"]}], ")"}], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                SqrtBox["3"], " ", 
                RowBox[{"Cos", "[", 
                 FractionBox["1", "5"], "]"}]}], "+", 
               RowBox[{"Sin", "[", 
                FractionBox["1", "5"], "]"}]}], ")"}]}], 
            SuperscriptBox[
             RowBox[{"(", 
              RowBox[{"1", "+", 
               SuperscriptBox["c1", "2"], "+", 
               SuperscriptBox["c2", "2"], "+", 
               SuperscriptBox["c3", "2"]}], ")"}], "2"]], "-", 
           FractionBox[
            RowBox[{"2", " ", "c3", " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                SqrtBox["3"], " ", 
                RowBox[{"Cos", "[", 
                 FractionBox["1", "5"], "]"}]}], "+", 
               RowBox[{"Sin", "[", 
                FractionBox["1", "5"], "]"}]}], ")"}]}], 
            RowBox[{"1", "+", 
             SuperscriptBox["c1", "2"], "+", 
             SuperscriptBox["c2", "2"], "+", 
             SuperscriptBox["c3", "2"]}]], "-", 
           FractionBox[
            RowBox[{"4", " ", "c3", " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"c1", " ", "c2"}], "+", "c3"}], ")"}], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", 
                RowBox[{"Cos", "[", 
                 FractionBox["1", "5"], "]"}]}], "+", 
               RowBox[{
                SqrtBox["3"], " ", 
                RowBox[{"Sin", "[", 
                 FractionBox["1", "5"], "]"}]}]}], ")"}]}], 
            SuperscriptBox[
             RowBox[{"(", 
              RowBox[{"1", "+", 
               SuperscriptBox["c1", "2"], "+", 
               SuperscriptBox["c2", "2"], "+", 
               SuperscriptBox["c3", "2"]}], ")"}], "2"]], "+", 
           FractionBox[
            RowBox[{"2", " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", 
                RowBox[{"Cos", "[", 
                 FractionBox["1", "5"], "]"}]}], "+", 
               RowBox[{
                SqrtBox["3"], " ", 
                RowBox[{"Sin", "[", 
                 FractionBox["1", "5"], "]"}]}]}], ")"}]}], 
            RowBox[{"1", "+", 
             SuperscriptBox["c1", "2"], "+", 
             SuperscriptBox["c2", "2"], "+", 
             SuperscriptBox["c3", "2"]}]]}], ")"}]}], ",", "0", ",", "0", ",",
         "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",",
         "0", ",", 
        RowBox[{
         RowBox[{"-", "l5"}], " ", 
         RowBox[{"Cos", "[", "\[Psi]5", "]"}]}], ",", "0"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0", ",", "0", ",", 
        RowBox[{"-", "1"}], ",", 
        RowBox[{
         FractionBox[
          RowBox[{
           RowBox[{
            RowBox[{"-", "4"}], " ", "c1", " ", "z"}], "+", 
           RowBox[{
            SqrtBox["3"], " ", 
            RowBox[{"Cos", "[", 
             FractionBox["1", "5"], "]"}]}], "-", 
           RowBox[{"c3", " ", 
            RowBox[{"Cos", "[", 
             FractionBox["1", "5"], "]"}]}], "+", 
           RowBox[{"4", " ", "c1", " ", "l5", " ", 
            RowBox[{"Cos", "[", "\[Phi]5", "]"}], " ", 
            RowBox[{"Cos", "[", "\[Psi]5", "]"}]}], "+", 
           RowBox[{"Sin", "[", 
            FractionBox["1", "5"], "]"}], "+", 
           RowBox[{
            SqrtBox["3"], " ", "c3", " ", 
            RowBox[{"Sin", "[", 
             FractionBox["1", "5"], "]"}]}]}], 
          RowBox[{"2", " ", 
           RowBox[{"(", 
            RowBox[{"1", "+", 
             SuperscriptBox["c1", "2"], "+", 
             SuperscriptBox["c2", "2"], "+", 
             SuperscriptBox["c3", "2"]}], ")"}]}]], "-", 
         RowBox[{
          FractionBox["1", 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{"1", "+", 
              SuperscriptBox["c1", "2"], "+", 
              SuperscriptBox["c2", "2"], "+", 
              SuperscriptBox["c3", "2"]}], ")"}], "2"]], 
          RowBox[{"c1", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              RowBox[{"-", "2"}], " ", 
              RowBox[{"(", 
               RowBox[{"1", "+", 
                SuperscriptBox["c1", "2"], "+", 
                SuperscriptBox["c2", "2"], "+", 
                SuperscriptBox["c3", "2"]}], ")"}], " ", "z"}], "+", 
             RowBox[{
              SqrtBox["3"], " ", "c1", " ", 
              RowBox[{"Cos", "[", 
               FractionBox["1", "5"], "]"}]}], "+", 
             RowBox[{"c2", " ", 
              RowBox[{"Cos", "[", 
               FractionBox["1", "5"], "]"}]}], "-", 
             RowBox[{"c1", " ", "c3", " ", 
              RowBox[{"Cos", "[", 
               FractionBox["1", "5"], "]"}]}], "+", 
             RowBox[{
              SqrtBox["3"], " ", "c2", " ", "c3", " ", 
              RowBox[{"Cos", "[", 
               FractionBox["1", "5"], "]"}]}], "+", 
             RowBox[{"2", " ", 
              RowBox[{"(", 
               RowBox[{"1", "+", 
                SuperscriptBox["c1", "2"], "+", 
                SuperscriptBox["c2", "2"], "+", 
                SuperscriptBox["c3", "2"]}], ")"}], " ", "l5", " ", 
              RowBox[{"Cos", "[", "\[Phi]5", "]"}], " ", 
              RowBox[{"Cos", "[", "\[Psi]5", "]"}]}], "+", 
             RowBox[{"c1", " ", 
              RowBox[{"Sin", "[", 
               FractionBox["1", "5"], "]"}]}], "-", 
             RowBox[{
              SqrtBox["3"], " ", "c2", " ", 
              RowBox[{"Sin", "[", 
               FractionBox["1", "5"], "]"}]}], "+", 
             RowBox[{
              SqrtBox["3"], " ", "c1", " ", "c3", " ", 
              RowBox[{"Sin", "[", 
               FractionBox["1", "5"], "]"}]}], "+", 
             RowBox[{"c2", " ", "c3", " ", 
              RowBox[{"Sin", "[", 
               FractionBox["1", "5"], "]"}]}]}], ")"}]}]}]}], ",", 
        RowBox[{
         FractionBox[
          RowBox[{
           RowBox[{
            RowBox[{"-", "4"}], " ", "c2", " ", "z"}], "+", 
           RowBox[{"Cos", "[", 
            FractionBox["1", "5"], "]"}], "+", 
           RowBox[{
            SqrtBox["3"], " ", "c3", " ", 
            RowBox[{"Cos", "[", 
             FractionBox["1", "5"], "]"}]}], "+", 
           RowBox[{"4", " ", "c2", " ", "l5", " ", 
            RowBox[{"Cos", "[", "\[Phi]5", "]"}], " ", 
            RowBox[{"Cos", "[", "\[Psi]5", "]"}]}], "-", 
           RowBox[{
            SqrtBox["3"], " ", 
            RowBox[{"Sin", "[", 
             FractionBox["1", "5"], "]"}]}], "+", 
           RowBox[{"c3", " ", 
            RowBox[{"Sin", "[", 
             FractionBox["1", "5"], "]"}]}]}], 
          RowBox[{"2", " ", 
           RowBox[{"(", 
            RowBox[{"1", "+", 
             SuperscriptBox["c1", "2"], "+", 
             SuperscriptBox["c2", "2"], "+", 
             SuperscriptBox["c3", "2"]}], ")"}]}]], "-", 
         RowBox[{
          FractionBox["1", 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{"1", "+", 
              SuperscriptBox["c1", "2"], "+", 
              SuperscriptBox["c2", "2"], "+", 
              SuperscriptBox["c3", "2"]}], ")"}], "2"]], 
          RowBox[{"c2", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              RowBox[{"-", "2"}], " ", 
              RowBox[{"(", 
               RowBox[{"1", "+", 
                SuperscriptBox["c1", "2"], "+", 
                SuperscriptBox["c2", "2"], "+", 
                SuperscriptBox["c3", "2"]}], ")"}], " ", "z"}], "+", 
             RowBox[{
              SqrtBox["3"], " ", "c1", " ", 
              RowBox[{"Cos", "[", 
               FractionBox["1", "5"], "]"}]}], "+", 
             RowBox[{"c2", " ", 
              RowBox[{"Cos", "[", 
               FractionBox["1", "5"], "]"}]}], "-", 
             RowBox[{"c1", " ", "c3", " ", 
              RowBox[{"Cos", "[", 
               FractionBox["1", "5"], "]"}]}], "+", 
             RowBox[{
              SqrtBox["3"], " ", "c2", " ", "c3", " ", 
              RowBox[{"Cos", "[", 
               FractionBox["1", "5"], "]"}]}], "+", 
             RowBox[{"2", " ", 
              RowBox[{"(", 
               RowBox[{"1", "+", 
                SuperscriptBox["c1", "2"], "+", 
                SuperscriptBox["c2", "2"], "+", 
                SuperscriptBox["c3", "2"]}], ")"}], " ", "l5", " ", 
              RowBox[{"Cos", "[", "\[Phi]5", "]"}], " ", 
              RowBox[{"Cos", "[", "\[Psi]5", "]"}]}], "+", 
             RowBox[{"c1", " ", 
              RowBox[{"Sin", "[", 
               FractionBox["1", "5"], "]"}]}], "-", 
             RowBox[{
              SqrtBox["3"], " ", "c2", " ", 
              RowBox[{"Sin", "[", 
               FractionBox["1", "5"], "]"}]}], "+", 
             RowBox[{
              SqrtBox["3"], " ", "c1", " ", "c3", " ", 
              RowBox[{"Sin", "[", 
               FractionBox["1", "5"], "]"}]}], "+", 
             RowBox[{"c2", " ", "c3", " ", 
              RowBox[{"Sin", "[", 
               FractionBox["1", "5"], "]"}]}]}], ")"}]}]}]}], ",", 
        RowBox[{
         FractionBox[
          RowBox[{
           RowBox[{
            RowBox[{"-", "4"}], " ", "c3", " ", "z"}], "-", 
           RowBox[{"c1", " ", 
            RowBox[{"Cos", "[", 
             FractionBox["1", "5"], "]"}]}], "+", 
           RowBox[{
            SqrtBox["3"], " ", "c2", " ", 
            RowBox[{"Cos", "[", 
             FractionBox["1", "5"], "]"}]}], "+", 
           RowBox[{"4", " ", "c3", " ", "l5", " ", 
            RowBox[{"Cos", "[", "\[Phi]5", "]"}], " ", 
            RowBox[{"Cos", "[", "\[Psi]5", "]"}]}], "+", 
           RowBox[{
            SqrtBox["3"], " ", "c1", " ", 
            RowBox[{"Sin", "[", 
             FractionBox["1", "5"], "]"}]}], "+", 
           RowBox[{"c2", " ", 
            RowBox[{"Sin", "[", 
             FractionBox["1", "5"], "]"}]}]}], 
          RowBox[{"2", " ", 
           RowBox[{"(", 
            RowBox[{"1", "+", 
             SuperscriptBox["c1", "2"], "+", 
             SuperscriptBox["c2", "2"], "+", 
             SuperscriptBox["c3", "2"]}], ")"}]}]], "-", 
         RowBox[{
          FractionBox["1", 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{"1", "+", 
              SuperscriptBox["c1", "2"], "+", 
              SuperscriptBox["c2", "2"], "+", 
              SuperscriptBox["c3", "2"]}], ")"}], "2"]], 
          RowBox[{"c3", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              RowBox[{"-", "2"}], " ", 
              RowBox[{"(", 
               RowBox[{"1", "+", 
                SuperscriptBox["c1", "2"], "+", 
                SuperscriptBox["c2", "2"], "+", 
                SuperscriptBox["c3", "2"]}], ")"}], " ", "z"}], "+", 
             RowBox[{
              SqrtBox["3"], " ", "c1", " ", 
              RowBox[{"Cos", "[", 
               FractionBox["1", "5"], "]"}]}], "+", 
             RowBox[{"c2", " ", 
              RowBox[{"Cos", "[", 
               FractionBox["1", "5"], "]"}]}], "-", 
             RowBox[{"c1", " ", "c3", " ", 
              RowBox[{"Cos", "[", 
               FractionBox["1", "5"], "]"}]}], "+", 
             RowBox[{
              SqrtBox["3"], " ", "c2", " ", "c3", " ", 
              RowBox[{"Cos", "[", 
               FractionBox["1", "5"], "]"}]}], "+", 
             RowBox[{"2", " ", 
              RowBox[{"(", 
               RowBox[{"1", "+", 
                SuperscriptBox["c1", "2"], "+", 
                SuperscriptBox["c2", "2"], "+", 
                SuperscriptBox["c3", "2"]}], ")"}], " ", "l5", " ", 
              RowBox[{"Cos", "[", "\[Phi]5", "]"}], " ", 
              RowBox[{"Cos", "[", "\[Psi]5", "]"}]}], "+", 
             RowBox[{"c1", " ", 
              RowBox[{"Sin", "[", 
               FractionBox["1", "5"], "]"}]}], "-", 
             RowBox[{
              SqrtBox["3"], " ", "c2", " ", 
              RowBox[{"Sin", "[", 
               FractionBox["1", "5"], "]"}]}], "+", 
             RowBox[{
              SqrtBox["3"], " ", "c1", " ", "c3", " ", 
              RowBox[{"Sin", "[", 
               FractionBox["1", "5"], "]"}]}], "+", 
             RowBox[{"c2", " ", "c3", " ", 
              RowBox[{"Sin", "[", 
               FractionBox["1", "5"], "]"}]}]}], ")"}]}]}]}], ",", "0", ",", 
        "0", ",", "0", ",", "0", ",", 
        RowBox[{
         RowBox[{"-", "l5"}], " ", 
         RowBox[{"Cos", "[", "\[Psi]5", "]"}], " ", 
         RowBox[{"Sin", "[", "\[Phi]5", "]"}]}], ",", "0", ",", "0", ",", "0",
         ",", "0", ",", "0", ",", 
        RowBox[{
         RowBox[{"-", "l5"}], " ", 
         RowBox[{"Cos", "[", "\[Phi]5", "]"}], " ", 
         RowBox[{"Sin", "[", "\[Psi]5", "]"}]}], ",", "0"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "1"}], ",", "0", ",", "0", ",", 
        RowBox[{
         FractionBox["1", "4"], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", 
            FractionBox[
             RowBox[{"4", " ", "c1", " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"c1", " ", "c2"}], "-", "c3"}], ")"}], " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{
                 SqrtBox["3"], " ", 
                 RowBox[{"Cos", "[", 
                  FractionBox["1", "5"], "]"}]}], "-", 
                RowBox[{"Sin", "[", 
                 FractionBox["1", "5"], "]"}]}], ")"}]}], 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "+", 
                SuperscriptBox["c1", "2"], "+", 
                SuperscriptBox["c2", "2"], "+", 
                SuperscriptBox["c3", "2"]}], ")"}], "2"]]}], "+", 
           FractionBox[
            RowBox[{"2", " ", "c2", " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                SqrtBox["3"], " ", 
                RowBox[{"Cos", "[", 
                 FractionBox["1", "5"], "]"}]}], "-", 
               RowBox[{"Sin", "[", 
                FractionBox["1", "5"], "]"}]}], ")"}]}], 
            RowBox[{"1", "+", 
             SuperscriptBox["c1", "2"], "+", 
             SuperscriptBox["c2", "2"], "+", 
             SuperscriptBox["c3", "2"]}]], "+", 
           FractionBox[
            RowBox[{"2", " ", "c1", " ", 
             RowBox[{"(", 
              RowBox[{"1", "+", 
               SuperscriptBox["c1", "2"], "-", 
               SuperscriptBox["c2", "2"], "-", 
               SuperscriptBox["c3", "2"]}], ")"}], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"Cos", "[", 
                FractionBox["1", "5"], "]"}], "+", 
               RowBox[{
                SqrtBox["3"], " ", 
                RowBox[{"Sin", "[", 
                 FractionBox["1", "5"], "]"}]}]}], ")"}]}], 
            SuperscriptBox[
             RowBox[{"(", 
              RowBox[{"1", "+", 
               SuperscriptBox["c1", "2"], "+", 
               SuperscriptBox["c2", "2"], "+", 
               SuperscriptBox["c3", "2"]}], ")"}], "2"]], "-", 
           FractionBox[
            RowBox[{"2", " ", "c1", " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"Cos", "[", 
                FractionBox["1", "5"], "]"}], "+", 
               RowBox[{
                SqrtBox["3"], " ", 
                RowBox[{"Sin", "[", 
                 FractionBox["1", "5"], "]"}]}]}], ")"}]}], 
            RowBox[{"1", "+", 
             SuperscriptBox["c1", "2"], "+", 
             SuperscriptBox["c2", "2"], "+", 
             SuperscriptBox["c3", "2"]}]]}], ")"}]}], ",", 
        RowBox[{
         FractionBox["1", "4"], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", 
            FractionBox[
             RowBox[{"4", " ", "c2", " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"c1", " ", "c2"}], "-", "c3"}], ")"}], " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{
                 SqrtBox["3"], " ", 
                 RowBox[{"Cos", "[", 
                  FractionBox["1", "5"], "]"}]}], "-", 
                RowBox[{"Sin", "[", 
                 FractionBox["1", "5"], "]"}]}], ")"}]}], 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "+", 
                SuperscriptBox["c1", "2"], "+", 
                SuperscriptBox["c2", "2"], "+", 
                SuperscriptBox["c3", "2"]}], ")"}], "2"]]}], "+", 
           FractionBox[
            RowBox[{"2", " ", "c1", " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                SqrtBox["3"], " ", 
                RowBox[{"Cos", "[", 
                 FractionBox["1", "5"], "]"}]}], "-", 
               RowBox[{"Sin", "[", 
                FractionBox["1", "5"], "]"}]}], ")"}]}], 
            RowBox[{"1", "+", 
             SuperscriptBox["c1", "2"], "+", 
             SuperscriptBox["c2", "2"], "+", 
             SuperscriptBox["c3", "2"]}]], "+", 
           FractionBox[
            RowBox[{"2", " ", "c2", " ", 
             RowBox[{"(", 
              RowBox[{"1", "+", 
               SuperscriptBox["c1", "2"], "-", 
               SuperscriptBox["c2", "2"], "-", 
               SuperscriptBox["c3", "2"]}], ")"}], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"Cos", "[", 
                FractionBox["1", "5"], "]"}], "+", 
               RowBox[{
                SqrtBox["3"], " ", 
                RowBox[{"Sin", "[", 
                 FractionBox["1", "5"], "]"}]}]}], ")"}]}], 
            SuperscriptBox[
             RowBox[{"(", 
              RowBox[{"1", "+", 
               SuperscriptBox["c1", "2"], "+", 
               SuperscriptBox["c2", "2"], "+", 
               SuperscriptBox["c3", "2"]}], ")"}], "2"]], "+", 
           FractionBox[
            RowBox[{"2", " ", "c2", " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"Cos", "[", 
                FractionBox["1", "5"], "]"}], "+", 
               RowBox[{
                SqrtBox["3"], " ", 
                RowBox[{"Sin", "[", 
                 FractionBox["1", "5"], "]"}]}]}], ")"}]}], 
            RowBox[{"1", "+", 
             SuperscriptBox["c1", "2"], "+", 
             SuperscriptBox["c2", "2"], "+", 
             SuperscriptBox["c3", "2"]}]]}], ")"}]}], ",", 
        RowBox[{
         FractionBox["1", "4"], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", 
            FractionBox[
             RowBox[{"4", " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"c1", " ", "c2"}], "-", "c3"}], ")"}], " ", "c3", " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{
                 SqrtBox["3"], " ", 
                 RowBox[{"Cos", "[", 
                  FractionBox["1", "5"], "]"}]}], "-", 
                RowBox[{"Sin", "[", 
                 FractionBox["1", "5"], "]"}]}], ")"}]}], 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "+", 
                SuperscriptBox["c1", "2"], "+", 
                SuperscriptBox["c2", "2"], "+", 
                SuperscriptBox["c3", "2"]}], ")"}], "2"]]}], "-", 
           FractionBox[
            RowBox[{"2", " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                SqrtBox["3"], " ", 
                RowBox[{"Cos", "[", 
                 FractionBox["1", "5"], "]"}]}], "-", 
               RowBox[{"Sin", "[", 
                FractionBox["1", "5"], "]"}]}], ")"}]}], 
            RowBox[{"1", "+", 
             SuperscriptBox["c1", "2"], "+", 
             SuperscriptBox["c2", "2"], "+", 
             SuperscriptBox["c3", "2"]}]], "+", 
           FractionBox[
            RowBox[{"2", " ", "c3", " ", 
             RowBox[{"(", 
              RowBox[{"1", "+", 
               SuperscriptBox["c1", "2"], "-", 
               SuperscriptBox["c2", "2"], "-", 
               SuperscriptBox["c3", "2"]}], ")"}], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"Cos", "[", 
                FractionBox["1", "5"], "]"}], "+", 
               RowBox[{
                SqrtBox["3"], " ", 
                RowBox[{"Sin", "[", 
                 FractionBox["1", "5"], "]"}]}]}], ")"}]}], 
            SuperscriptBox[
             RowBox[{"(", 
              RowBox[{"1", "+", 
               SuperscriptBox["c1", "2"], "+", 
               SuperscriptBox["c2", "2"], "+", 
               SuperscriptBox["c3", "2"]}], ")"}], "2"]], "+", 
           FractionBox[
            RowBox[{"2", " ", "c3", " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"Cos", "[", 
                FractionBox["1", "5"], "]"}], "+", 
               RowBox[{
                SqrtBox["3"], " ", 
                RowBox[{"Sin", "[", 
                 FractionBox["1", "5"], "]"}]}]}], ")"}]}], 
            RowBox[{"1", "+", 
             SuperscriptBox["c1", "2"], "+", 
             SuperscriptBox["c2", "2"], "+", 
             SuperscriptBox["c3", "2"]}]]}], ")"}]}], ",", "0", ",", "0", ",",
         "0", ",", "0", ",", "0", ",", 
        RowBox[{"l6", " ", 
         RowBox[{"Cos", "[", "\[Phi]6", "]"}], " ", 
         RowBox[{"Cos", "[", "\[Psi]6", "]"}]}], ",", "0", ",", "0", ",", "0",
         ",", "0", ",", "0", ",", 
        RowBox[{
         RowBox[{"-", "l6"}], " ", 
         RowBox[{"Sin", "[", "\[Phi]6", "]"}], " ", 
         RowBox[{"Sin", "[", "\[Psi]6", "]"}]}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0", ",", 
        RowBox[{"-", "1"}], ",", "0", ",", 
        RowBox[{
         FractionBox["1", "4"], " ", 
         RowBox[{"(", 
          RowBox[{
           FractionBox[
            RowBox[{"2", " ", "c1", " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "1"}], "+", 
               SuperscriptBox["c1", "2"], "-", 
               SuperscriptBox["c2", "2"], "+", 
               SuperscriptBox["c3", "2"]}], ")"}], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                SqrtBox["3"], " ", 
                RowBox[{"Cos", "[", 
                 FractionBox["1", "5"], "]"}]}], "-", 
               RowBox[{"Sin", "[", 
                FractionBox["1", "5"], "]"}]}], ")"}]}], 
            SuperscriptBox[
             RowBox[{"(", 
              RowBox[{"1", "+", 
               SuperscriptBox["c1", "2"], "+", 
               SuperscriptBox["c2", "2"], "+", 
               SuperscriptBox["c3", "2"]}], ")"}], "2"]], "-", 
           FractionBox[
            RowBox[{"2", " ", "c1", " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                SqrtBox["3"], " ", 
                RowBox[{"Cos", "[", 
                 FractionBox["1", "5"], "]"}]}], "-", 
               RowBox[{"Sin", "[", 
                FractionBox["1", "5"], "]"}]}], ")"}]}], 
            RowBox[{"1", "+", 
             SuperscriptBox["c1", "2"], "+", 
             SuperscriptBox["c2", "2"], "+", 
             SuperscriptBox["c3", "2"]}]], "+", 
           FractionBox[
            RowBox[{"4", " ", "c1", " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"c1", " ", "c2"}], "+", "c3"}], ")"}], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"Cos", "[", 
                FractionBox["1", "5"], "]"}], "+", 
               RowBox[{
                SqrtBox["3"], " ", 
                RowBox[{"Sin", "[", 
                 FractionBox["1", "5"], "]"}]}]}], ")"}]}], 
            SuperscriptBox[
             RowBox[{"(", 
              RowBox[{"1", "+", 
               SuperscriptBox["c1", "2"], "+", 
               SuperscriptBox["c2", "2"], "+", 
               SuperscriptBox["c3", "2"]}], ")"}], "2"]], "-", 
           FractionBox[
            RowBox[{"2", " ", "c2", " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"Cos", "[", 
                FractionBox["1", "5"], "]"}], "+", 
               RowBox[{
                SqrtBox["3"], " ", 
                RowBox[{"Sin", "[", 
                 FractionBox["1", "5"], "]"}]}]}], ")"}]}], 
            RowBox[{"1", "+", 
             SuperscriptBox["c1", "2"], "+", 
             SuperscriptBox["c2", "2"], "+", 
             SuperscriptBox["c3", "2"]}]]}], ")"}]}], ",", 
        RowBox[{
         FractionBox["1", "4"], " ", 
         RowBox[{"(", 
          RowBox[{
           FractionBox[
            RowBox[{"2", " ", "c2", " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "1"}], "+", 
               SuperscriptBox["c1", "2"], "-", 
               SuperscriptBox["c2", "2"], "+", 
               SuperscriptBox["c3", "2"]}], ")"}], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                SqrtBox["3"], " ", 
                RowBox[{"Cos", "[", 
                 FractionBox["1", "5"], "]"}]}], "-", 
               RowBox[{"Sin", "[", 
                FractionBox["1", "5"], "]"}]}], ")"}]}], 
            SuperscriptBox[
             RowBox[{"(", 
              RowBox[{"1", "+", 
               SuperscriptBox["c1", "2"], "+", 
               SuperscriptBox["c2", "2"], "+", 
               SuperscriptBox["c3", "2"]}], ")"}], "2"]], "+", 
           FractionBox[
            RowBox[{"2", " ", "c2", " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                SqrtBox["3"], " ", 
                RowBox[{"Cos", "[", 
                 FractionBox["1", "5"], "]"}]}], "-", 
               RowBox[{"Sin", "[", 
                FractionBox["1", "5"], "]"}]}], ")"}]}], 
            RowBox[{"1", "+", 
             SuperscriptBox["c1", "2"], "+", 
             SuperscriptBox["c2", "2"], "+", 
             SuperscriptBox["c3", "2"]}]], "+", 
           FractionBox[
            RowBox[{"4", " ", "c2", " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"c1", " ", "c2"}], "+", "c3"}], ")"}], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"Cos", "[", 
                FractionBox["1", "5"], "]"}], "+", 
               RowBox[{
                SqrtBox["3"], " ", 
                RowBox[{"Sin", "[", 
                 FractionBox["1", "5"], "]"}]}]}], ")"}]}], 
            SuperscriptBox[
             RowBox[{"(", 
              RowBox[{"1", "+", 
               SuperscriptBox["c1", "2"], "+", 
               SuperscriptBox["c2", "2"], "+", 
               SuperscriptBox["c3", "2"]}], ")"}], "2"]], "-", 
           FractionBox[
            RowBox[{"2", " ", "c1", " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"Cos", "[", 
                FractionBox["1", "5"], "]"}], "+", 
               RowBox[{
                SqrtBox["3"], " ", 
                RowBox[{"Sin", "[", 
                 FractionBox["1", "5"], "]"}]}]}], ")"}]}], 
            RowBox[{"1", "+", 
             SuperscriptBox["c1", "2"], "+", 
             SuperscriptBox["c2", "2"], "+", 
             SuperscriptBox["c3", "2"]}]]}], ")"}]}], ",", 
        RowBox[{
         FractionBox["1", "4"], " ", 
         RowBox[{"(", 
          RowBox[{
           FractionBox[
            RowBox[{"2", " ", "c3", " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "1"}], "+", 
               SuperscriptBox["c1", "2"], "-", 
               SuperscriptBox["c2", "2"], "+", 
               SuperscriptBox["c3", "2"]}], ")"}], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                SqrtBox["3"], " ", 
                RowBox[{"Cos", "[", 
                 FractionBox["1", "5"], "]"}]}], "-", 
               RowBox[{"Sin", "[", 
                FractionBox["1", "5"], "]"}]}], ")"}]}], 
            SuperscriptBox[
             RowBox[{"(", 
              RowBox[{"1", "+", 
               SuperscriptBox["c1", "2"], "+", 
               SuperscriptBox["c2", "2"], "+", 
               SuperscriptBox["c3", "2"]}], ")"}], "2"]], "-", 
           FractionBox[
            RowBox[{"2", " ", "c3", " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                SqrtBox["3"], " ", 
                RowBox[{"Cos", "[", 
                 FractionBox["1", "5"], "]"}]}], "-", 
               RowBox[{"Sin", "[", 
                FractionBox["1", "5"], "]"}]}], ")"}]}], 
            RowBox[{"1", "+", 
             SuperscriptBox["c1", "2"], "+", 
             SuperscriptBox["c2", "2"], "+", 
             SuperscriptBox["c3", "2"]}]], "+", 
           FractionBox[
            RowBox[{"4", " ", "c3", " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"c1", " ", "c2"}], "+", "c3"}], ")"}], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"Cos", "[", 
                FractionBox["1", "5"], "]"}], "+", 
               RowBox[{
                SqrtBox["3"], " ", 
                RowBox[{"Sin", "[", 
                 FractionBox["1", "5"], "]"}]}]}], ")"}]}], 
            SuperscriptBox[
             RowBox[{"(", 
              RowBox[{"1", "+", 
               SuperscriptBox["c1", "2"], "+", 
               SuperscriptBox["c2", "2"], "+", 
               SuperscriptBox["c3", "2"]}], ")"}], "2"]], "-", 
           FractionBox[
            RowBox[{"2", " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"Cos", "[", 
                FractionBox["1", "5"], "]"}], "+", 
               RowBox[{
                SqrtBox["3"], " ", 
                RowBox[{"Sin", "[", 
                 FractionBox["1", "5"], "]"}]}]}], ")"}]}], 
            RowBox[{"1", "+", 
             SuperscriptBox["c1", "2"], "+", 
             SuperscriptBox["c2", "2"], "+", 
             SuperscriptBox["c3", "2"]}]]}], ")"}]}], ",", "0", ",", "0", ",",
         "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",",
         "0", ",", "0", ",", 
        RowBox[{
         RowBox[{"-", "l6"}], " ", 
         RowBox[{"Cos", "[", "\[Psi]6", "]"}]}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0", ",", "0", ",", 
        RowBox[{"-", "1"}], ",", 
        RowBox[{
         FractionBox["1", "2"], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", 
            FractionBox[
             RowBox[{"2", " ", "c1", " ", 
              RowBox[{"(", 
               RowBox[{"c1", "+", 
                RowBox[{"c2", " ", "c3"}]}], ")"}], " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{
                 SqrtBox["3"], " ", 
                 RowBox[{"Cos", "[", 
                  FractionBox["1", "5"], "]"}]}], "-", 
                RowBox[{"Sin", "[", 
                 FractionBox["1", "5"], "]"}]}], ")"}]}], 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "+", 
                SuperscriptBox["c1", "2"], "+", 
                SuperscriptBox["c2", "2"], "+", 
                SuperscriptBox["c3", "2"]}], ")"}], "2"]]}], "+", 
           FractionBox[
            RowBox[{
             RowBox[{
              SqrtBox["3"], " ", 
              RowBox[{"Cos", "[", 
               FractionBox["1", "5"], "]"}]}], "-", 
             RowBox[{"Sin", "[", 
              FractionBox["1", "5"], "]"}]}], 
            RowBox[{"1", "+", 
             SuperscriptBox["c1", "2"], "+", 
             SuperscriptBox["c2", "2"], "+", 
             SuperscriptBox["c3", "2"]}]], "-", 
           FractionBox[
            RowBox[{"2", " ", "c1", " ", 
             RowBox[{"(", 
              RowBox[{"c2", "-", 
               RowBox[{"c1", " ", "c3"}]}], ")"}], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"Cos", "[", 
                FractionBox["1", "5"], "]"}], "+", 
               RowBox[{
                SqrtBox["3"], " ", 
                RowBox[{"Sin", "[", 
                 FractionBox["1", "5"], "]"}]}]}], ")"}]}], 
            SuperscriptBox[
             RowBox[{"(", 
              RowBox[{"1", "+", 
               SuperscriptBox["c1", "2"], "+", 
               SuperscriptBox["c2", "2"], "+", 
               SuperscriptBox["c3", "2"]}], ")"}], "2"]], "-", 
           FractionBox[
            RowBox[{"c3", " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"Cos", "[", 
                FractionBox["1", "5"], "]"}], "+", 
               RowBox[{
                SqrtBox["3"], " ", 
                RowBox[{"Sin", "[", 
                 FractionBox["1", "5"], "]"}]}]}], ")"}]}], 
            RowBox[{"1", "+", 
             SuperscriptBox["c1", "2"], "+", 
             SuperscriptBox["c2", "2"], "+", 
             SuperscriptBox["c3", "2"]}]]}], ")"}]}], ",", 
        RowBox[{
         FractionBox["1", "2"], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", 
            FractionBox[
             RowBox[{"2", " ", "c2", " ", 
              RowBox[{"(", 
               RowBox[{"c1", "+", 
                RowBox[{"c2", " ", "c3"}]}], ")"}], " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{
                 SqrtBox["3"], " ", 
                 RowBox[{"Cos", "[", 
                  FractionBox["1", "5"], "]"}]}], "-", 
                RowBox[{"Sin", "[", 
                 FractionBox["1", "5"], "]"}]}], ")"}]}], 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "+", 
                SuperscriptBox["c1", "2"], "+", 
                SuperscriptBox["c2", "2"], "+", 
                SuperscriptBox["c3", "2"]}], ")"}], "2"]]}], "+", 
           FractionBox[
            RowBox[{"c3", " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                SqrtBox["3"], " ", 
                RowBox[{"Cos", "[", 
                 FractionBox["1", "5"], "]"}]}], "-", 
               RowBox[{"Sin", "[", 
                FractionBox["1", "5"], "]"}]}], ")"}]}], 
            RowBox[{"1", "+", 
             SuperscriptBox["c1", "2"], "+", 
             SuperscriptBox["c2", "2"], "+", 
             SuperscriptBox["c3", "2"]}]], "-", 
           FractionBox[
            RowBox[{"2", " ", "c2", " ", 
             RowBox[{"(", 
              RowBox[{"c2", "-", 
               RowBox[{"c1", " ", "c3"}]}], ")"}], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"Cos", "[", 
                FractionBox["1", "5"], "]"}], "+", 
               RowBox[{
                SqrtBox["3"], " ", 
                RowBox[{"Sin", "[", 
                 FractionBox["1", "5"], "]"}]}]}], ")"}]}], 
            SuperscriptBox[
             RowBox[{"(", 
              RowBox[{"1", "+", 
               SuperscriptBox["c1", "2"], "+", 
               SuperscriptBox["c2", "2"], "+", 
               SuperscriptBox["c3", "2"]}], ")"}], "2"]], "+", 
           FractionBox[
            RowBox[{
             RowBox[{"Cos", "[", 
              FractionBox["1", "5"], "]"}], "+", 
             RowBox[{
              SqrtBox["3"], " ", 
              RowBox[{"Sin", "[", 
               FractionBox["1", "5"], "]"}]}]}], 
            RowBox[{"1", "+", 
             SuperscriptBox["c1", "2"], "+", 
             SuperscriptBox["c2", "2"], "+", 
             SuperscriptBox["c3", "2"]}]]}], ")"}]}], ",", 
        RowBox[{
         FractionBox["1", "2"], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", 
            FractionBox[
             RowBox[{"2", " ", "c3", " ", 
              RowBox[{"(", 
               RowBox[{"c1", "+", 
                RowBox[{"c2", " ", "c3"}]}], ")"}], " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{
                 SqrtBox["3"], " ", 
                 RowBox[{"Cos", "[", 
                  FractionBox["1", "5"], "]"}]}], "-", 
                RowBox[{"Sin", "[", 
                 FractionBox["1", "5"], "]"}]}], ")"}]}], 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "+", 
                SuperscriptBox["c1", "2"], "+", 
                SuperscriptBox["c2", "2"], "+", 
                SuperscriptBox["c3", "2"]}], ")"}], "2"]]}], "+", 
           FractionBox[
            RowBox[{"c2", " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                SqrtBox["3"], " ", 
                RowBox[{"Cos", "[", 
                 FractionBox["1", "5"], "]"}]}], "-", 
               RowBox[{"Sin", "[", 
                FractionBox["1", "5"], "]"}]}], ")"}]}], 
            RowBox[{"1", "+", 
             SuperscriptBox["c1", "2"], "+", 
             SuperscriptBox["c2", "2"], "+", 
             SuperscriptBox["c3", "2"]}]], "-", 
           FractionBox[
            RowBox[{"2", " ", "c3", " ", 
             RowBox[{"(", 
              RowBox[{"c2", "-", 
               RowBox[{"c1", " ", "c3"}]}], ")"}], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"Cos", "[", 
                FractionBox["1", "5"], "]"}], "+", 
               RowBox[{
                SqrtBox["3"], " ", 
                RowBox[{"Sin", "[", 
                 FractionBox["1", "5"], "]"}]}]}], ")"}]}], 
            SuperscriptBox[
             RowBox[{"(", 
              RowBox[{"1", "+", 
               SuperscriptBox["c1", "2"], "+", 
               SuperscriptBox["c2", "2"], "+", 
               SuperscriptBox["c3", "2"]}], ")"}], "2"]], "-", 
           FractionBox[
            RowBox[{"c1", " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"Cos", "[", 
                FractionBox["1", "5"], "]"}], "+", 
               RowBox[{
                SqrtBox["3"], " ", 
                RowBox[{"Sin", "[", 
                 FractionBox["1", "5"], "]"}]}]}], ")"}]}], 
            RowBox[{"1", "+", 
             SuperscriptBox["c1", "2"], "+", 
             SuperscriptBox["c2", "2"], "+", 
             SuperscriptBox["c3", "2"]}]]}], ")"}]}], ",", "0", ",", "0", ",",
         "0", ",", "0", ",", "0", ",", 
        RowBox[{
         RowBox[{"-", "l6"}], " ", 
         RowBox[{"Cos", "[", "\[Psi]6", "]"}], " ", 
         RowBox[{"Sin", "[", "\[Phi]6", "]"}]}], ",", "0", ",", "0", ",", "0",
         ",", "0", ",", "0", ",", 
        RowBox[{
         RowBox[{"-", "l6"}], " ", 
         RowBox[{"Cos", "[", "\[Phi]6", "]"}], " ", 
         RowBox[{"Sin", "[", "\[Psi]6", "]"}]}]}], "}"}]}], "}"}], "/.", 
    "\[VeryThinSpace]", "qnewlist"}], "]"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{{3.7662151313336115`*^9, 3.766215139160605*^9}, 
   3.7662680767712955`*^9, 
   3.7662917098638897`*^9},ExpressionUUID->"178b042c-f9e2-4d51-9882-\
baa7e471370d"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"qnewlist", " ", "=", " ", 
   RowBox[{"Inner", "[", 
    RowBox[{"Rule", ",", " ", "q", ",", " ", "qnew", ",", " ", "List"}], 
    "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.7661534863032236`*^9, 
  3.766153503235654*^9}},ExpressionUUID->"0a4c866c-88ff-45d9-b728-\
47e78121945d"],

Cell[BoxData[
 TemplateBox[{
  "Inner","heads",
   "\"Heads \\!\\(\\*RowBox[{\\\"Part\\\"}]\\) and \
\\!\\(\\*RowBox[{\\\"List\\\"}]\\) at positions \
\\!\\(\\*RowBox[{\\\"3\\\"}]\\) and \\!\\(\\*RowBox[{\\\"2\\\"}]\\) are \
expected to be the same.\"",2,95,6,25993525642924664479,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.766268077668785*^9, 
  3.766291710796357*^9},ExpressionUUID->"e2a185b3-9f4d-4ef5-8adf-\
45f996f62b97"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"SingularValueList", "[", 
   RowBox[{"tempJ", "/.", "qnewlist"}], "]"}], "//", "Dimensions"}]], "Input",
 CellChangeTimes->{{3.7661532994421806`*^9, 3.766153321702629*^9}, {
  3.7661534807882347`*^9, 3.7661535062800393`*^9}, {3.766153548403822*^9, 
  3.7661535559087553`*^9}, {3.76615363515546*^9, 
  3.7661536359032164`*^9}},ExpressionUUID->"1b92dd8e-a065-414c-9f2a-\
48f537aa1830"],

Cell[BoxData[
 TemplateBox[{
  "ReplaceAll","reps",
   "\"\\!\\(\\*RowBox[{\\\"{\\\", RowBox[{\\\"Inner\\\", \\\"[\\\", \
RowBox[{\\\"Rule\\\", \\\",\\\", RowBox[{\\\"{\\\", RowBox[{\\\"x\\\", \
\\\",\\\", \\\"y\\\", \\\",\\\", \\\"z\\\", \\\",\\\", \\\"c1\\\", \\\",\\\", \
\\\"c2\\\", \\\",\\\", \\\"c3\\\", \\\",\\\", \\\"\[Phi]1\\\", \\\",\\\", \
\\\"\[Phi]2\\\", \\\",\\\", \\\"\[Phi]3\\\", \\\",\\\", \\\"\[Phi]4\\\", \
\\\",\\\", \\\"\[Phi]5\\\", \\\",\\\", \\\"\[Phi]6\\\", \\\",\\\", \
\\\"\[Psi]1\\\", \\\",\\\", \\\"\[Psi]2\\\", \\\",\\\", \\\"\[Psi]3\\\", \
\\\",\\\", \\\"\[Psi]4\\\", \\\",\\\", \\\"\[Psi]5\\\", \\\",\\\", \
\\\"\[Psi]6\\\", \\\",\\\", \\\"l1\\\", \\\",\\\", \\\"l2\\\", \\\",\\\", \
\\\"l3\\\", \\\",\\\", \\\"l4\\\", \\\",\\\", \\\"l5\\\", \\\",\\\", \\\"l6\\\
\"}], \\\"}\\\"}], \\\",\\\", RowBox[{\\\"qecdat\\\", \
\\\"\[LeftDoubleBracket]\\\", \\\"1\\\", \\\"\[RightDoubleBracket]\\\"}], \
\\\",\\\", \\\"List\\\"}], \\\"]\\\"}], \\\"}\\\"}]\\) is neither a list of \
replacement rules nor a valid dispatch table, and so cannot be used for \
replacing.\"",2,96,7,25993525642924664479,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.766268077745737*^9, 
  3.766291710855341*^9},ExpressionUUID->"6e60411f-1ac1-4edb-b735-\
1ebc5ad35bfb"],

Cell[BoxData[
 RowBox[{"{", "1", "}"}]], "Output",
 CellChangeTimes->{{3.7661533007302666`*^9, 3.766153322248767*^9}, {
   3.766153482828857*^9, 3.7661535253431277`*^9}, 3.7661535566750326`*^9, 
   3.766153636223138*^9, 3.766156712684065*^9, 3.766156828282631*^9, 
   3.76621505714565*^9, 3.766215110951502*^9, 3.7662680779986057`*^9, 
   3.7662917108942976`*^9},ExpressionUUID->"a4120556-7cdb-4e60-9da2-\
5320e25f70a2"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"lhsvec", " ", "=", " ", 
  RowBox[{"-", 
   RowBox[{
    RowBox[{"Inverse", "[", 
     RowBox[{"N", "[", 
      RowBox[{"tempJ", "/.", "qnewlist"}], "]"}], "]"}], ".", 
    RowBox[{"(", 
     RowBox[{"J\[Eta]\[Theta]", "/.", "qnewlist"}], ")"}], ".", 
    RowBox[{"ConstantArray", "[", 
     RowBox[{"1", ",", " ", 
      RowBox[{"{", "6", "}"}]}], "]"}]}]}]}]], "Input",
 CellChangeTimes->{{3.7661540684642544`*^9, 
  3.7661541286592607`*^9}},ExpressionUUID->"b105dff4-dac1-49f7-933f-\
dd4e9bc63f3e"],

Cell[BoxData[
 TemplateBox[{
  "ReplaceAll","reps",
   "\"\\!\\(\\*RowBox[{\\\"{\\\", RowBox[{\\\"Inner\\\", \\\"[\\\", \
RowBox[{\\\"Rule\\\", \\\",\\\", RowBox[{\\\"{\\\", RowBox[{\\\"x\\\", \
\\\",\\\", \\\"y\\\", \\\",\\\", \\\"z\\\", \\\",\\\", \\\"c1\\\", \\\",\\\", \
\\\"c2\\\", \\\",\\\", \\\"c3\\\", \\\",\\\", \\\"\[Phi]1\\\", \\\",\\\", \
\\\"\[Phi]2\\\", \\\",\\\", \\\"\[Phi]3\\\", \\\",\\\", \\\"\[Phi]4\\\", \
\\\",\\\", \\\"\[Phi]5\\\", \\\",\\\", \\\"\[Phi]6\\\", \\\",\\\", \
\\\"\[Psi]1\\\", \\\",\\\", \\\"\[Psi]2\\\", \\\",\\\", \\\"\[Psi]3\\\", \
\\\",\\\", \\\"\[Psi]4\\\", \\\",\\\", \\\"\[Psi]5\\\", \\\",\\\", \
\\\"\[Psi]6\\\", \\\",\\\", \\\"l1\\\", \\\",\\\", \\\"l2\\\", \\\",\\\", \
\\\"l3\\\", \\\",\\\", \\\"l4\\\", \\\",\\\", \\\"l5\\\", \\\",\\\", \\\"l6\\\
\"}], \\\"}\\\"}], \\\",\\\", RowBox[{\\\"qecdat\\\", \
\\\"\[LeftDoubleBracket]\\\", \\\"1\\\", \\\"\[RightDoubleBracket]\\\"}], \
\\\",\\\", \\\"List\\\"}], \\\"]\\\"}], \\\"}\\\"}]\\) is neither a list of \
replacement rules nor a valid dispatch table, and so cannot be used for \
replacing.\"",2,97,8,25993525642924664479,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.766268078035572*^9, 
  3.766291710971258*^9},ExpressionUUID->"211b7a11-206c-4b6d-be53-\
cf93bc3bd076"],

Cell[BoxData[
 TemplateBox[{
  "ReplaceAll","reps",
   "\"\\!\\(\\*RowBox[{\\\"{\\\", RowBox[{\\\"Inner\\\", \\\"[\\\", \
RowBox[{\\\"Rule\\\", \\\",\\\", RowBox[{\\\"{\\\", RowBox[{\\\"x\\\", \
\\\",\\\", \\\"y\\\", \\\",\\\", \\\"z\\\", \\\",\\\", \\\"c1\\\", \\\",\\\", \
\\\"c2\\\", \\\",\\\", \\\"c3\\\", \\\",\\\", \\\"\[Phi]1\\\", \\\",\\\", \
\\\"\[Phi]2\\\", \\\",\\\", \\\"\[Phi]3\\\", \\\",\\\", \\\"\[Phi]4\\\", \
\\\",\\\", \\\"\[Phi]5\\\", \\\",\\\", \\\"\[Phi]6\\\", \\\",\\\", \
\\\"\[Psi]1\\\", \\\",\\\", \\\"\[Psi]2\\\", \\\",\\\", \\\"\[Psi]3\\\", \
\\\",\\\", \\\"\[Psi]4\\\", \\\",\\\", \\\"\[Psi]5\\\", \\\",\\\", \
\\\"\[Psi]6\\\", \\\",\\\", \\\"l1\\\", \\\",\\\", \\\"l2\\\", \\\",\\\", \
\\\"l3\\\", \\\",\\\", \\\"l4\\\", \\\",\\\", \\\"l5\\\", \\\",\\\", \\\"l6\\\
\"}], \\\"}\\\"}], \\\",\\\", RowBox[{\\\"qecdat\\\", \
\\\"\[LeftDoubleBracket]\\\", \\\"1\\\", \\\"\[RightDoubleBracket]\\\"}], \
\\\",\\\", \\\"List\\\"}], \\\"]\\\"}], \\\"}\\\"}]\\) is neither a list of \
replacement rules nor a valid dispatch table, and so cannot be used for \
replacing.\"",2,97,9,25993525642924664479,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.766268078035572*^9, 
  3.766291711011232*^9},ExpressionUUID->"26c8db59-c8e9-4069-8304-\
d67103ffb20d"],

Cell[BoxData[
 TemplateBox[{
  "ReplaceAll","reps",
   "\"\\!\\(\\*RowBox[{\\\"{\\\", RowBox[{\\\"Inner\\\", \\\"[\\\", \
RowBox[{\\\"Rule\\\", \\\",\\\", RowBox[{\\\"{\\\", RowBox[{\\\"x\\\", \
\\\",\\\", \\\"y\\\", \\\",\\\", \\\"z\\\", \\\",\\\", \\\"c1\\\", \\\",\\\", \
\\\"c2\\\", \\\",\\\", \\\"c3\\\", \\\",\\\", \\\"\[Phi]1\\\", \\\",\\\", \
\\\"\[Phi]2\\\", \\\",\\\", \\\"\[Phi]3\\\", \\\",\\\", \\\"\[Phi]4\\\", \
\\\",\\\", \\\"\[Phi]5\\\", \\\",\\\", \\\"\[Phi]6\\\", \\\",\\\", \
\\\"\[Psi]1\\\", \\\",\\\", \\\"\[Psi]2\\\", \\\",\\\", \\\"\[Psi]3\\\", \
\\\",\\\", \\\"\[Psi]4\\\", \\\",\\\", \\\"\[Psi]5\\\", \\\",\\\", \
\\\"\[Psi]6\\\", \\\",\\\", \\\"l1\\\", \\\",\\\", \\\"l2\\\", \\\",\\\", \
\\\"l3\\\", \\\",\\\", \\\"l4\\\", \\\",\\\", \\\"l5\\\", \\\",\\\", \\\"l6\\\
\"}], \\\"}\\\"}], \\\",\\\", RowBox[{\\\"qecdat\\\", \
\\\"\[LeftDoubleBracket]\\\", \\\"1\\\", \\\"\[RightDoubleBracket]\\\"}], \
\\\",\\\", \\\"List\\\"}], \\\"]\\\"}], \\\"}\\\"}]\\) is neither a list of \
replacement rules nor a valid dispatch table, and so cannot be used for \
replacing.\"",2,97,10,25993525642924664479,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.766268078035572*^9, 
  3.7662917110492115`*^9},ExpressionUUID->"14c82522-abcf-4b20-b597-\
f682748c9bab"],

Cell[BoxData[
 TemplateBox[{
  "General","stop",
   "\"Further output of \\!\\(\\*StyleBox[RowBox[{\\\"ReplaceAll\\\", \
\\\"::\\\", \\\"reps\\\"}], \\\"MessageName\\\"]\\) will be suppressed during \
this calculation.\"",2,97,11,25993525642924664479,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.766268078035572*^9, 
  3.766291711084195*^9},ExpressionUUID->"f97a14ae-51d5-42c1-b47d-\
7f3d9ea4c647"],

Cell[BoxData[
 RowBox[{"-", 
  RowBox[{
   RowBox[{"Inverse", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "1.`"}], ",", "0.`", ",", "0.`", ",", 
         RowBox[{
          FractionBox[
           RowBox[{"1.4988557768261273`", " ", "c1", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"c1", " ", "c2"}], "-", 
              RowBox[{"1.`", " ", "c3"}]}], ")"}]}], 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{"1.`", "\[VeryThinSpace]", "+", 
              SuperscriptBox["c1", "2"], "+", 
              SuperscriptBox["c2", "2"], "+", 
              SuperscriptBox["c3", "2"]}], ")"}], "2"]], "+", 
          FractionBox[
           RowBox[{"0.662085976341998`", " ", "c1", " ", 
            RowBox[{"(", 
             RowBox[{"1.`", "\[VeryThinSpace]", "+", 
              SuperscriptBox["c1", "2"], "-", 
              RowBox[{"1.`", " ", 
               SuperscriptBox["c2", "2"]}], "-", 
              RowBox[{"1.`", " ", 
               SuperscriptBox["c3", "2"]}]}], ")"}]}], 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{"1.`", "\[VeryThinSpace]", "+", 
              SuperscriptBox["c1", "2"], "+", 
              SuperscriptBox["c2", "2"], "+", 
              SuperscriptBox["c3", "2"]}], ")"}], "2"]], "-", 
          FractionBox[
           RowBox[{"0.662085976341998`", " ", "c1"}], 
           RowBox[{"1.`", "\[VeryThinSpace]", "+", 
            SuperscriptBox["c1", "2"], "+", 
            SuperscriptBox["c2", "2"], "+", 
            SuperscriptBox["c3", "2"]}]], "-", 
          FractionBox[
           RowBox[{"0.7494278884130636`", " ", "c2"}], 
           RowBox[{"1.`", "\[VeryThinSpace]", "+", 
            SuperscriptBox["c1", "2"], "+", 
            SuperscriptBox["c2", "2"], "+", 
            SuperscriptBox["c3", "2"]}]]}], ",", 
         RowBox[{
          FractionBox[
           RowBox[{"1.4988557768261273`", " ", "c2", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"c1", " ", "c2"}], "-", 
              RowBox[{"1.`", " ", "c3"}]}], ")"}]}], 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{"1.`", "\[VeryThinSpace]", "+", 
              SuperscriptBox["c1", "2"], "+", 
              SuperscriptBox["c2", "2"], "+", 
              SuperscriptBox["c3", "2"]}], ")"}], "2"]], "+", 
          FractionBox[
           RowBox[{"0.662085976341998`", " ", "c2", " ", 
            RowBox[{"(", 
             RowBox[{"1.`", "\[VeryThinSpace]", "+", 
              SuperscriptBox["c1", "2"], "-", 
              RowBox[{"1.`", " ", 
               SuperscriptBox["c2", "2"]}], "-", 
              RowBox[{"1.`", " ", 
               SuperscriptBox["c3", "2"]}]}], ")"}]}], 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{"1.`", "\[VeryThinSpace]", "+", 
              SuperscriptBox["c1", "2"], "+", 
              SuperscriptBox["c2", "2"], "+", 
              SuperscriptBox["c3", "2"]}], ")"}], "2"]], "-", 
          FractionBox[
           RowBox[{"0.7494278884130636`", " ", "c1"}], 
           RowBox[{"1.`", "\[VeryThinSpace]", "+", 
            SuperscriptBox["c1", "2"], "+", 
            SuperscriptBox["c2", "2"], "+", 
            SuperscriptBox["c3", "2"]}]], "+", 
          FractionBox[
           RowBox[{"0.662085976341998`", " ", "c2"}], 
           RowBox[{"1.`", "\[VeryThinSpace]", "+", 
            SuperscriptBox["c1", "2"], "+", 
            SuperscriptBox["c2", "2"], "+", 
            SuperscriptBox["c3", "2"]}]]}], ",", 
         RowBox[{
          FractionBox[
           RowBox[{"1.4988557768261273`", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"c1", " ", "c2"}], "-", 
              RowBox[{"1.`", " ", "c3"}]}], ")"}], " ", "c3"}], 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{"1.`", "\[VeryThinSpace]", "+", 
              SuperscriptBox["c1", "2"], "+", 
              SuperscriptBox["c2", "2"], "+", 
              SuperscriptBox["c3", "2"]}], ")"}], "2"]], "+", 
          FractionBox[
           RowBox[{"0.662085976341998`", " ", "c3", " ", 
            RowBox[{"(", 
             RowBox[{"1.`", "\[VeryThinSpace]", "+", 
              SuperscriptBox["c1", "2"], "-", 
              RowBox[{"1.`", " ", 
               SuperscriptBox["c2", "2"]}], "-", 
              RowBox[{"1.`", " ", 
               SuperscriptBox["c3", "2"]}]}], ")"}]}], 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{"1.`", "\[VeryThinSpace]", "+", 
              SuperscriptBox["c1", "2"], "+", 
              SuperscriptBox["c2", "2"], "+", 
              SuperscriptBox["c3", "2"]}], ")"}], "2"]], "+", 
          FractionBox["0.7494278884130636`", 
           RowBox[{"1.`", "\[VeryThinSpace]", "+", 
            SuperscriptBox["c1", "2"], "+", 
            SuperscriptBox["c2", "2"], "+", 
            SuperscriptBox["c3", "2"]}]], "+", 
          FractionBox[
           RowBox[{"0.662085976341998`", " ", "c3"}], 
           RowBox[{"1.`", "\[VeryThinSpace]", "+", 
            SuperscriptBox["c1", "2"], "+", 
            SuperscriptBox["c2", "2"], "+", 
            SuperscriptBox["c3", "2"]}]]}], ",", 
         RowBox[{"l1", " ", 
          RowBox[{"Cos", "[", "\[Phi]1", "]"}], " ", 
          RowBox[{"Cos", "[", "\[Psi]1", "]"}]}], ",", "0.`", ",", "0.`", ",",
          "0.`", ",", "0.`", ",", "0.`", ",", 
         RowBox[{
          RowBox[{"-", "1.`"}], " ", "l1", " ", 
          RowBox[{"Sin", "[", "\[Phi]1", "]"}], " ", 
          RowBox[{"Sin", "[", "\[Psi]1", "]"}]}], ",", "0.`", ",", "0.`", ",",
          "0.`", ",", "0.`", ",", "0.`"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"0.`", ",", 
         RowBox[{"-", "1.`"}], ",", "0.`", ",", 
         RowBox[{
          FractionBox[
           RowBox[{"1.324171952683996`", " ", "c1", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"c1", " ", "c2"}], "+", "c3"}], ")"}]}], 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{"1.`", "\[VeryThinSpace]", "+", 
              SuperscriptBox["c1", "2"], "+", 
              SuperscriptBox["c2", "2"], "+", 
              SuperscriptBox["c3", "2"]}], ")"}], "2"]], "-", 
          FractionBox[
           RowBox[{"0.7494278884130636`", " ", "c1", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1.`"}], "+", 
              SuperscriptBox["c1", "2"], "-", 
              RowBox[{"1.`", " ", 
               SuperscriptBox["c2", "2"]}], "+", 
              SuperscriptBox["c3", "2"]}], ")"}]}], 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{"1.`", "\[VeryThinSpace]", "+", 
              SuperscriptBox["c1", "2"], "+", 
              SuperscriptBox["c2", "2"], "+", 
              SuperscriptBox["c3", "2"]}], ")"}], "2"]], "+", 
          FractionBox[
           RowBox[{"0.7494278884130636`", " ", "c1"}], 
           RowBox[{"1.`", "\[VeryThinSpace]", "+", 
            SuperscriptBox["c1", "2"], "+", 
            SuperscriptBox["c2", "2"], "+", 
            SuperscriptBox["c3", "2"]}]], "-", 
          FractionBox[
           RowBox[{"0.662085976341998`", " ", "c2"}], 
           RowBox[{"1.`", "\[VeryThinSpace]", "+", 
            SuperscriptBox["c1", "2"], "+", 
            SuperscriptBox["c2", "2"], "+", 
            SuperscriptBox["c3", "2"]}]]}], ",", 
         RowBox[{
          FractionBox[
           RowBox[{"1.324171952683996`", " ", "c2", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"c1", " ", "c2"}], "+", "c3"}], ")"}]}], 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{"1.`", "\[VeryThinSpace]", "+", 
              SuperscriptBox["c1", "2"], "+", 
              SuperscriptBox["c2", "2"], "+", 
              SuperscriptBox["c3", "2"]}], ")"}], "2"]], "-", 
          FractionBox[
           RowBox[{"0.7494278884130636`", " ", "c2", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1.`"}], "+", 
              SuperscriptBox["c1", "2"], "-", 
              RowBox[{"1.`", " ", 
               SuperscriptBox["c2", "2"]}], "+", 
              SuperscriptBox["c3", "2"]}], ")"}]}], 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{"1.`", "\[VeryThinSpace]", "+", 
              SuperscriptBox["c1", "2"], "+", 
              SuperscriptBox["c2", "2"], "+", 
              SuperscriptBox["c3", "2"]}], ")"}], "2"]], "-", 
          FractionBox[
           RowBox[{"0.662085976341998`", " ", "c1"}], 
           RowBox[{"1.`", "\[VeryThinSpace]", "+", 
            SuperscriptBox["c1", "2"], "+", 
            SuperscriptBox["c2", "2"], "+", 
            SuperscriptBox["c3", "2"]}]], "-", 
          FractionBox[
           RowBox[{"0.7494278884130636`", " ", "c2"}], 
           RowBox[{"1.`", "\[VeryThinSpace]", "+", 
            SuperscriptBox["c1", "2"], "+", 
            SuperscriptBox["c2", "2"], "+", 
            SuperscriptBox["c3", "2"]}]]}], ",", 
         RowBox[{
          FractionBox[
           RowBox[{"1.324171952683996`", " ", "c3", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"c1", " ", "c2"}], "+", "c3"}], ")"}]}], 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{"1.`", "\[VeryThinSpace]", "+", 
              SuperscriptBox["c1", "2"], "+", 
              SuperscriptBox["c2", "2"], "+", 
              SuperscriptBox["c3", "2"]}], ")"}], "2"]], "-", 
          FractionBox[
           RowBox[{"0.7494278884130636`", " ", "c3", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1.`"}], "+", 
              SuperscriptBox["c1", "2"], "-", 
              RowBox[{"1.`", " ", 
               SuperscriptBox["c2", "2"]}], "+", 
              SuperscriptBox["c3", "2"]}], ")"}]}], 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{"1.`", "\[VeryThinSpace]", "+", 
              SuperscriptBox["c1", "2"], "+", 
              SuperscriptBox["c2", "2"], "+", 
              SuperscriptBox["c3", "2"]}], ")"}], "2"]], "-", 
          FractionBox["0.662085976341998`", 
           RowBox[{"1.`", "\[VeryThinSpace]", "+", 
            SuperscriptBox["c1", "2"], "+", 
            SuperscriptBox["c2", "2"], "+", 
            SuperscriptBox["c3", "2"]}]], "+", 
          FractionBox[
           RowBox[{"0.7494278884130636`", " ", "c3"}], 
           RowBox[{"1.`", "\[VeryThinSpace]", "+", 
            SuperscriptBox["c1", "2"], "+", 
            SuperscriptBox["c2", "2"], "+", 
            SuperscriptBox["c3", "2"]}]]}], ",", "0.`", ",", "0.`", ",", 
         "0.`", ",", "0.`", ",", "0.`", ",", "0.`", ",", 
         RowBox[{
          RowBox[{"-", "1.`"}], " ", "l1", " ", 
          RowBox[{"Cos", "[", "\[Psi]1", "]"}]}], ",", "0.`", ",", "0.`", ",",
          "0.`", ",", "0.`", ",", "0.`"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"0.`", ",", "0.`", ",", 
         RowBox[{"-", "1.`"}], ",", 
         RowBox[{
          RowBox[{"-", 
           FractionBox[
            RowBox[{"1.324171952683996`", " ", "c1", " ", 
             RowBox[{"(", 
              RowBox[{"c2", "-", 
               RowBox[{"1.`", " ", "c1", " ", "c3"}]}], ")"}]}], 
            SuperscriptBox[
             RowBox[{"(", 
              RowBox[{"1.`", "\[VeryThinSpace]", "+", 
               SuperscriptBox["c1", "2"], "+", 
               SuperscriptBox["c2", "2"], "+", 
               SuperscriptBox["c3", "2"]}], ")"}], "2"]]}], "+", 
          FractionBox[
           RowBox[{"1.4988557768261273`", " ", "c1", " ", 
            RowBox[{"(", 
             RowBox[{"c1", "+", 
              RowBox[{"c2", " ", "c3"}]}], ")"}]}], 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{"1.`", "\[VeryThinSpace]", "+", 
              SuperscriptBox["c1", "2"], "+", 
              SuperscriptBox["c2", "2"], "+", 
              SuperscriptBox["c3", "2"]}], ")"}], "2"]], "-", 
          FractionBox["0.7494278884130636`", 
           RowBox[{"1.`", "\[VeryThinSpace]", "+", 
            SuperscriptBox["c1", "2"], "+", 
            SuperscriptBox["c2", "2"], "+", 
            SuperscriptBox["c3", "2"]}]], "-", 
          FractionBox[
           RowBox[{"0.662085976341998`", " ", "c3"}], 
           RowBox[{"1.`", "\[VeryThinSpace]", "+", 
            SuperscriptBox["c1", "2"], "+", 
            SuperscriptBox["c2", "2"], "+", 
            SuperscriptBox["c3", "2"]}]]}], ",", 
         RowBox[{
          RowBox[{"-", 
           FractionBox[
            RowBox[{"1.324171952683996`", " ", "c2", " ", 
             RowBox[{"(", 
              RowBox[{"c2", "-", 
               RowBox[{"1.`", " ", "c1", " ", "c3"}]}], ")"}]}], 
            SuperscriptBox[
             RowBox[{"(", 
              RowBox[{"1.`", "\[VeryThinSpace]", "+", 
               SuperscriptBox["c1", "2"], "+", 
               SuperscriptBox["c2", "2"], "+", 
               SuperscriptBox["c3", "2"]}], ")"}], "2"]]}], "+", 
          FractionBox[
           RowBox[{"1.4988557768261273`", " ", "c2", " ", 
            RowBox[{"(", 
             RowBox[{"c1", "+", 
              RowBox[{"c2", " ", "c3"}]}], ")"}]}], 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{"1.`", "\[VeryThinSpace]", "+", 
              SuperscriptBox["c1", "2"], "+", 
              SuperscriptBox["c2", "2"], "+", 
              SuperscriptBox["c3", "2"]}], ")"}], "2"]], "+", 
          FractionBox["0.662085976341998`", 
           RowBox[{"1.`", "\[VeryThinSpace]", "+", 
            SuperscriptBox["c1", "2"], "+", 
            SuperscriptBox["c2", "2"], "+", 
            SuperscriptBox["c3", "2"]}]], "-", 
          FractionBox[
           RowBox[{"0.7494278884130636`", " ", "c3"}], 
           RowBox[{"1.`", "\[VeryThinSpace]", "+", 
            SuperscriptBox["c1", "2"], "+", 
            SuperscriptBox["c2", "2"], "+", 
            SuperscriptBox["c3", "2"]}]]}], ",", 
         RowBox[{
          RowBox[{"-", 
           FractionBox[
            RowBox[{"1.324171952683996`", " ", "c3", " ", 
             RowBox[{"(", 
              RowBox[{"c2", "-", 
               RowBox[{"1.`", " ", "c1", " ", "c3"}]}], ")"}]}], 
            SuperscriptBox[
             RowBox[{"(", 
              RowBox[{"1.`", "\[VeryThinSpace]", "+", 
               SuperscriptBox["c1", "2"], "+", 
               SuperscriptBox["c2", "2"], "+", 
               SuperscriptBox["c3", "2"]}], ")"}], "2"]]}], "+", 
          FractionBox[
           RowBox[{"1.4988557768261273`", " ", "c3", " ", 
            RowBox[{"(", 
             RowBox[{"c1", "+", 
              RowBox[{"c2", " ", "c3"}]}], ")"}]}], 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{"1.`", "\[VeryThinSpace]", "+", 
              SuperscriptBox["c1", "2"], "+", 
              SuperscriptBox["c2", "2"], "+", 
              SuperscriptBox["c3", "2"]}], ")"}], "2"]], "-", 
          FractionBox[
           RowBox[{"0.662085976341998`", " ", "c1"}], 
           RowBox[{"1.`", "\[VeryThinSpace]", "+", 
            SuperscriptBox["c1", "2"], "+", 
            SuperscriptBox["c2", "2"], "+", 
            SuperscriptBox["c3", "2"]}]], "-", 
          FractionBox[
           RowBox[{"0.7494278884130636`", " ", "c2"}], 
           RowBox[{"1.`", "\[VeryThinSpace]", "+", 
            SuperscriptBox["c1", "2"], "+", 
            SuperscriptBox["c2", "2"], "+", 
            SuperscriptBox["c3", "2"]}]]}], ",", 
         RowBox[{
          RowBox[{"-", "1.`"}], " ", "l1", " ", 
          RowBox[{"Cos", "[", "\[Psi]1", "]"}], " ", 
          RowBox[{"Sin", "[", "\[Phi]1", "]"}]}], ",", "0.`", ",", "0.`", ",",
          "0.`", ",", "0.`", ",", "0.`", ",", 
         RowBox[{
          RowBox[{"-", "1.`"}], " ", "l1", " ", 
          RowBox[{"Cos", "[", "\[Phi]1", "]"}], " ", 
          RowBox[{"Sin", "[", "\[Psi]1", "]"}]}], ",", "0.`", ",", "0.`", ",",
          "0.`", ",", "0.`", ",", "0.`"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "1.`"}], ",", "0.`", ",", "0.`", ",", 
         RowBox[{
          FractionBox[
           RowBox[{"1.8961944384162495`", " ", "c1", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"c1", " ", "c2"}], "-", 
              RowBox[{"1.`", " ", "c3"}]}], ")"}]}], 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{"1.`", "\[VeryThinSpace]", "+", 
              SuperscriptBox["c1", "2"], "+", 
              SuperscriptBox["c2", "2"], "+", 
              SuperscriptBox["c3", "2"]}], ")"}], "2"]], "+", 
          FractionBox[
           RowBox[{"0.31798060149924373`", " ", "c1", " ", 
            RowBox[{"(", 
             RowBox[{"1.`", "\[VeryThinSpace]", "+", 
              SuperscriptBox["c1", "2"], "-", 
              RowBox[{"1.`", " ", 
               SuperscriptBox["c2", "2"]}], "-", 
              RowBox[{"1.`", " ", 
               SuperscriptBox["c3", "2"]}]}], ")"}]}], 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{"1.`", "\[VeryThinSpace]", "+", 
              SuperscriptBox["c1", "2"], "+", 
              SuperscriptBox["c2", "2"], "+", 
              SuperscriptBox["c3", "2"]}], ")"}], "2"]], "-", 
          FractionBox[
           RowBox[{"0.31798060149924373`", " ", "c1"}], 
           RowBox[{"1.`", "\[VeryThinSpace]", "+", 
            SuperscriptBox["c1", "2"], "+", 
            SuperscriptBox["c2", "2"], "+", 
            SuperscriptBox["c3", "2"]}]], "-", 
          FractionBox[
           RowBox[{"0.9480972192081247`", " ", "c2"}], 
           RowBox[{"1.`", "\[VeryThinSpace]", "+", 
            SuperscriptBox["c1", "2"], "+", 
            SuperscriptBox["c2", "2"], "+", 
            SuperscriptBox["c3", "2"]}]]}], ",", 
         RowBox[{
          FractionBox[
           RowBox[{"1.8961944384162495`", " ", "c2", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"c1", " ", "c2"}], "-", 
              RowBox[{"1.`", " ", "c3"}]}], ")"}]}], 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{"1.`", "\[VeryThinSpace]", "+", 
              SuperscriptBox["c1", "2"], "+", 
              SuperscriptBox["c2", "2"], "+", 
              SuperscriptBox["c3", "2"]}], ")"}], "2"]], "+", 
          FractionBox[
           RowBox[{"0.31798060149924373`", " ", "c2", " ", 
            RowBox[{"(", 
             RowBox[{"1.`", "\[VeryThinSpace]", "+", 
              SuperscriptBox["c1", "2"], "-", 
              RowBox[{"1.`", " ", 
               SuperscriptBox["c2", "2"]}], "-", 
              RowBox[{"1.`", " ", 
               SuperscriptBox["c3", "2"]}]}], ")"}]}], 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{"1.`", "\[VeryThinSpace]", "+", 
              SuperscriptBox["c1", "2"], "+", 
              SuperscriptBox["c2", "2"], "+", 
              SuperscriptBox["c3", "2"]}], ")"}], "2"]], "-", 
          FractionBox[
           RowBox[{"0.9480972192081247`", " ", "c1"}], 
           RowBox[{"1.`", "\[VeryThinSpace]", "+", 
            SuperscriptBox["c1", "2"], "+", 
            SuperscriptBox["c2", "2"], "+", 
            SuperscriptBox["c3", "2"]}]], "+", 
          FractionBox[
           RowBox[{"0.31798060149924373`", " ", "c2"}], 
           RowBox[{"1.`", "\[VeryThinSpace]", "+", 
            SuperscriptBox["c1", "2"], "+", 
            SuperscriptBox["c2", "2"], "+", 
            SuperscriptBox["c3", "2"]}]]}], ",", 
         RowBox[{
          FractionBox[
           RowBox[{"1.8961944384162495`", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"c1", " ", "c2"}], "-", 
              RowBox[{"1.`", " ", "c3"}]}], ")"}], " ", "c3"}], 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{"1.`", "\[VeryThinSpace]", "+", 
              SuperscriptBox["c1", "2"], "+", 
              SuperscriptBox["c2", "2"], "+", 
              SuperscriptBox["c3", "2"]}], ")"}], "2"]], "+", 
          FractionBox[
           RowBox[{"0.31798060149924373`", " ", "c3", " ", 
            RowBox[{"(", 
             RowBox[{"1.`", "\[VeryThinSpace]", "+", 
              SuperscriptBox["c1", "2"], "-", 
              RowBox[{"1.`", " ", 
               SuperscriptBox["c2", "2"]}], "-", 
              RowBox[{"1.`", " ", 
               SuperscriptBox["c3", "2"]}]}], ")"}]}], 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{"1.`", "\[VeryThinSpace]", "+", 
              SuperscriptBox["c1", "2"], "+", 
              SuperscriptBox["c2", "2"], "+", 
              SuperscriptBox["c3", "2"]}], ")"}], "2"]], "+", 
          FractionBox["0.9480972192081247`", 
           RowBox[{"1.`", "\[VeryThinSpace]", "+", 
            SuperscriptBox["c1", "2"], "+", 
            SuperscriptBox["c2", "2"], "+", 
            SuperscriptBox["c3", "2"]}]], "+", 
          FractionBox[
           RowBox[{"0.31798060149924373`", " ", "c3"}], 
           RowBox[{"1.`", "\[VeryThinSpace]", "+", 
            SuperscriptBox["c1", "2"], "+", 
            SuperscriptBox["c2", "2"], "+", 
            SuperscriptBox["c3", "2"]}]]}], ",", "0.`", ",", 
         RowBox[{"l2", " ", 
          RowBox[{"Cos", "[", "\[Phi]2", "]"}], " ", 
          RowBox[{"Cos", "[", "\[Psi]2", "]"}]}], ",", "0.`", ",", "0.`", ",",
          "0.`", ",", "0.`", ",", "0.`", ",", 
         RowBox[{
          RowBox[{"-", "1.`"}], " ", "l2", " ", 
          RowBox[{"Sin", "[", "\[Phi]2", "]"}], " ", 
          RowBox[{"Sin", "[", "\[Psi]2", "]"}]}], ",", "0.`", ",", "0.`", ",",
          "0.`", ",", "0.`"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"0.`", ",", 
         RowBox[{"-", "1.`"}], ",", "0.`", ",", 
         RowBox[{
          FractionBox[
           RowBox[{"0.6359612029984875`", " ", "c1", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"c1", " ", "c2"}], "+", "c3"}], ")"}]}], 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{"1.`", "\[VeryThinSpace]", "+", 
              SuperscriptBox["c1", "2"], "+", 
              SuperscriptBox["c2", "2"], "+", 
              SuperscriptBox["c3", "2"]}], ")"}], "2"]], "-", 
          FractionBox[
           RowBox[{"0.9480972192081247`", " ", "c1", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1.`"}], "+", 
              SuperscriptBox["c1", "2"], "-", 
              RowBox[{"1.`", " ", 
               SuperscriptBox["c2", "2"]}], "+", 
              SuperscriptBox["c3", "2"]}], ")"}]}], 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{"1.`", "\[VeryThinSpace]", "+", 
              SuperscriptBox["c1", "2"], "+", 
              SuperscriptBox["c2", "2"], "+", 
              SuperscriptBox["c3", "2"]}], ")"}], "2"]], "+", 
          FractionBox[
           RowBox[{"0.9480972192081247`", " ", "c1"}], 
           RowBox[{"1.`", "\[VeryThinSpace]", "+", 
            SuperscriptBox["c1", "2"], "+", 
            SuperscriptBox["c2", "2"], "+", 
            SuperscriptBox["c3", "2"]}]], "-", 
          FractionBox[
           RowBox[{"0.31798060149924373`", " ", "c2"}], 
           RowBox[{"1.`", "\[VeryThinSpace]", "+", 
            SuperscriptBox["c1", "2"], "+", 
            SuperscriptBox["c2", "2"], "+", 
            SuperscriptBox["c3", "2"]}]]}], ",", 
         RowBox[{
          FractionBox[
           RowBox[{"0.6359612029984875`", " ", "c2", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"c1", " ", "c2"}], "+", "c3"}], ")"}]}], 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{"1.`", "\[VeryThinSpace]", "+", 
              SuperscriptBox["c1", "2"], "+", 
              SuperscriptBox["c2", "2"], "+", 
              SuperscriptBox["c3", "2"]}], ")"}], "2"]], "-", 
          FractionBox[
           RowBox[{"0.9480972192081247`", " ", "c2", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1.`"}], "+", 
              SuperscriptBox["c1", "2"], "-", 
              RowBox[{"1.`", " ", 
               SuperscriptBox["c2", "2"]}], "+", 
              SuperscriptBox["c3", "2"]}], ")"}]}], 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{"1.`", "\[VeryThinSpace]", "+", 
              SuperscriptBox["c1", "2"], "+", 
              SuperscriptBox["c2", "2"], "+", 
              SuperscriptBox["c3", "2"]}], ")"}], "2"]], "-", 
          FractionBox[
           RowBox[{"0.31798060149924373`", " ", "c1"}], 
           RowBox[{"1.`", "\[VeryThinSpace]", "+", 
            SuperscriptBox["c1", "2"], "+", 
            SuperscriptBox["c2", "2"], "+", 
            SuperscriptBox["c3", "2"]}]], "-", 
          FractionBox[
           RowBox[{"0.9480972192081247`", " ", "c2"}], 
           RowBox[{"1.`", "\[VeryThinSpace]", "+", 
            SuperscriptBox["c1", "2"], "+", 
            SuperscriptBox["c2", "2"], "+", 
            SuperscriptBox["c3", "2"]}]]}], ",", 
         RowBox[{
          FractionBox[
           RowBox[{"0.6359612029984875`", " ", "c3", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"c1", " ", "c2"}], "+", "c3"}], ")"}]}], 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{"1.`", "\[VeryThinSpace]", "+", 
              SuperscriptBox["c1", "2"], "+", 
              SuperscriptBox["c2", "2"], "+", 
              SuperscriptBox["c3", "2"]}], ")"}], "2"]], "-", 
          FractionBox[
           RowBox[{"0.9480972192081247`", " ", "c3", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1.`"}], "+", 
              SuperscriptBox["c1", "2"], "-", 
              RowBox[{"1.`", " ", 
               SuperscriptBox["c2", "2"]}], "+", 
              SuperscriptBox["c3", "2"]}], ")"}]}], 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{"1.`", "\[VeryThinSpace]", "+", 
              SuperscriptBox["c1", "2"], "+", 
              SuperscriptBox["c2", "2"], "+", 
              SuperscriptBox["c3", "2"]}], ")"}], "2"]], "-", 
          FractionBox["0.31798060149924373`", 
           RowBox[{"1.`", "\[VeryThinSpace]", "+", 
            SuperscriptBox["c1", "2"], "+", 
            SuperscriptBox["c2", "2"], "+", 
            SuperscriptBox["c3", "2"]}]], "+", 
          FractionBox[
           RowBox[{"0.9480972192081247`", " ", "c3"}], 
           RowBox[{"1.`", "\[VeryThinSpace]", "+", 
            SuperscriptBox["c1", "2"], "+", 
            SuperscriptBox["c2", "2"], "+", 
            SuperscriptBox["c3", "2"]}]]}], ",", "0.`", ",", "0.`", ",", 
         "0.`", ",", "0.`", ",", "0.`", ",", "0.`", ",", "0.`", ",", 
         RowBox[{
          RowBox[{"-", "1.`"}], " ", "l2", " ", 
          RowBox[{"Cos", "[", "\[Psi]2", "]"}]}], ",", "0.`", ",", "0.`", ",",
          "0.`", ",", "0.`"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"0.`", ",", "0.`", ",", 
         RowBox[{"-", "1.`"}], ",", 
         RowBox[{
          RowBox[{"-", 
           FractionBox[
            RowBox[{"0.5`", " ", 
             RowBox[{"(", 
              RowBox[{"1.8961944384162495`", "\[VeryThinSpace]", "+", 
               RowBox[{"0.6359612029984875`", " ", "c3"}], "+", 
               RowBox[{"4.`", " ", "c1", " ", "z"}], "-", 
               RowBox[{"4.`", " ", "c1", " ", "l2", " ", 
                RowBox[{"Cos", "[", "\[Phi]2", "]"}], " ", 
                RowBox[{"Cos", "[", "\[Psi]2", "]"}]}]}], ")"}]}], 
            RowBox[{"1.`", "\[VeryThinSpace]", "+", 
             SuperscriptBox["c1", "2"], "+", 
             SuperscriptBox["c2", "2"], "+", 
             SuperscriptBox["c3", "2"]}]]}], "+", 
          FractionBox[
           RowBox[{"c1", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"1.8961944384162495`", " ", "c1"}], "-", 
              RowBox[{"0.6359612029984875`", " ", "c2"}], "+", 
              RowBox[{"0.6359612029984875`", " ", "c1", " ", "c3"}], "+", 
              RowBox[{"1.8961944384162495`", " ", "c2", " ", "c3"}], "+", 
              RowBox[{"2.`", " ", 
               RowBox[{"(", 
                RowBox[{"1.`", "\[VeryThinSpace]", "+", 
                 SuperscriptBox["c1", "2"], "+", 
                 SuperscriptBox["c2", "2"], "+", 
                 SuperscriptBox["c3", "2"]}], ")"}], " ", "z"}], "-", 
              RowBox[{"2.`", " ", 
               RowBox[{"(", 
                RowBox[{"1.`", "\[VeryThinSpace]", "+", 
                 SuperscriptBox["c1", "2"], "+", 
                 SuperscriptBox["c2", "2"], "+", 
                 SuperscriptBox["c3", "2"]}], ")"}], " ", "l2", " ", 
               RowBox[{"Cos", "[", "\[Phi]2", "]"}], " ", 
               RowBox[{"Cos", "[", "\[Psi]2", "]"}]}]}], ")"}]}], 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{"1.`", "\[VeryThinSpace]", "+", 
              SuperscriptBox["c1", "2"], "+", 
              SuperscriptBox["c2", "2"], "+", 
              SuperscriptBox["c3", "2"]}], ")"}], "2"]]}], ",", 
         RowBox[{
          RowBox[{"-", 
           FractionBox[
            RowBox[{"0.5`", " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "0.6359612029984875`"}], "+", 
               RowBox[{"1.8961944384162495`", " ", "c3"}], "+", 
               RowBox[{"4.`", " ", "c2", " ", "z"}], "-", 
               RowBox[{"4.`", " ", "c2", " ", "l2", " ", 
                RowBox[{"Cos", "[", "\[Phi]2", "]"}], " ", 
                RowBox[{"Cos", "[", "\[Psi]2", "]"}]}]}], ")"}]}], 
            RowBox[{"1.`", "\[VeryThinSpace]", "+", 
             SuperscriptBox["c1", "2"], "+", 
             SuperscriptBox["c2", "2"], "+", 
             SuperscriptBox["c3", "2"]}]]}], "+", 
          FractionBox[
           RowBox[{"c2", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"1.8961944384162495`", " ", "c1"}], "-", 
              RowBox[{"0.6359612029984875`", " ", "c2"}], "+", 
              RowBox[{"0.6359612029984875`", " ", "c1", " ", "c3"}], "+", 
              RowBox[{"1.8961944384162495`", " ", "c2", " ", "c3"}], "+", 
              RowBox[{"2.`", " ", 
               RowBox[{"(", 
                RowBox[{"1.`", "\[VeryThinSpace]", "+", 
                 SuperscriptBox["c1", "2"], "+", 
                 SuperscriptBox["c2", "2"], "+", 
                 SuperscriptBox["c3", "2"]}], ")"}], " ", "z"}], "-", 
              RowBox[{"2.`", " ", 
               RowBox[{"(", 
                RowBox[{"1.`", "\[VeryThinSpace]", "+", 
                 SuperscriptBox["c1", "2"], "+", 
                 SuperscriptBox["c2", "2"], "+", 
                 SuperscriptBox["c3", "2"]}], ")"}], " ", "l2", " ", 
               RowBox[{"Cos", "[", "\[Phi]2", "]"}], " ", 
               RowBox[{"Cos", "[", "\[Psi]2", "]"}]}]}], ")"}]}], 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{"1.`", "\[VeryThinSpace]", "+", 
              SuperscriptBox["c1", "2"], "+", 
              SuperscriptBox["c2", "2"], "+", 
              SuperscriptBox["c3", "2"]}], ")"}], "2"]]}], ",", 
         RowBox[{
          RowBox[{"-", 
           FractionBox[
            RowBox[{"0.5`", " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"0.6359612029984875`", " ", "c1"}], "+", 
               RowBox[{"1.8961944384162495`", " ", "c2"}], "+", 
               RowBox[{"4.`", " ", "c3", " ", "z"}], "-", 
               RowBox[{"4.`", " ", "c3", " ", "l2", " ", 
                RowBox[{"Cos", "[", "\[Phi]2", "]"}], " ", 
                RowBox[{"Cos", "[", "\[Psi]2", "]"}]}]}], ")"}]}], 
            RowBox[{"1.`", "\[VeryThinSpace]", "+", 
             SuperscriptBox["c1", "2"], "+", 
             SuperscriptBox["c2", "2"], "+", 
             SuperscriptBox["c3", "2"]}]]}], "+", 
          FractionBox[
           RowBox[{"c3", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"1.8961944384162495`", " ", "c1"}], "-", 
              RowBox[{"0.6359612029984875`", " ", "c2"}], "+", 
              RowBox[{"0.6359612029984875`", " ", "c1", " ", "c3"}], "+", 
              RowBox[{"1.8961944384162495`", " ", "c2", " ", "c3"}], "+", 
              RowBox[{"2.`", " ", 
               RowBox[{"(", 
                RowBox[{"1.`", "\[VeryThinSpace]", "+", 
                 SuperscriptBox["c1", "2"], "+", 
                 SuperscriptBox["c2", "2"], "+", 
                 SuperscriptBox["c3", "2"]}], ")"}], " ", "z"}], "-", 
              RowBox[{"2.`", " ", 
               RowBox[{"(", 
                RowBox[{"1.`", "\[VeryThinSpace]", "+", 
                 SuperscriptBox["c1", "2"], "+", 
                 SuperscriptBox["c2", "2"], "+", 
                 SuperscriptBox["c3", "2"]}], ")"}], " ", "l2", " ", 
               RowBox[{"Cos", "[", "\[Phi]2", "]"}], " ", 
               RowBox[{"Cos", "[", "\[Psi]2", "]"}]}]}], ")"}]}], 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{"1.`", "\[VeryThinSpace]", "+", 
              SuperscriptBox["c1", "2"], "+", 
              SuperscriptBox["c2", "2"], "+", 
              SuperscriptBox["c3", "2"]}], ")"}], "2"]]}], ",", "0.`", ",", 
         RowBox[{
          RowBox[{"-", "1.`"}], " ", "l2", " ", 
          RowBox[{"Cos", "[", "\[Psi]2", "]"}], " ", 
          RowBox[{"Sin", "[", "\[Phi]2", "]"}]}], ",", "0.`", ",", "0.`", ",",
          "0.`", ",", "0.`", ",", "0.`", ",", 
         RowBox[{
          RowBox[{"-", "1.`"}], " ", "l2", " ", 
          RowBox[{"Cos", "[", "\[Phi]2", "]"}], " ", 
          RowBox[{"Sin", "[", "\[Psi]2", "]"}]}], ",", "0.`", ",", "0.`", ",",
          "0.`", ",", "0.`"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "1.`"}], ",", "0.`", ",", "0.`", ",", 
         RowBox[{"0.5`", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", 
             FractionBox[
              RowBox[{"0.7946773231802449`", " ", "c1", " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{
                  RowBox[{"-", "1.`"}], " ", "c1", " ", "c2"}], "+", "c3"}], 
                ")"}]}], 
              SuperscriptBox[
               RowBox[{"(", 
                RowBox[{"1.`", "\[VeryThinSpace]", "+", 
                 SuperscriptBox["c1", "2"], "+", 
                 SuperscriptBox["c2", "2"], "+", 
                 SuperscriptBox["c3", "2"]}], ")"}], "2"]]}], "-", 
            FractionBox[
             RowBox[{"1.9601331556824833`", " ", "c1", " ", 
              RowBox[{"(", 
               RowBox[{"1.`", "\[VeryThinSpace]", "+", 
                SuperscriptBox["c1", "2"], "-", 
                RowBox[{"1.`", " ", 
                 SuperscriptBox["c2", "2"]}], "-", 
                RowBox[{"1.`", " ", 
                 SuperscriptBox["c3", "2"]}]}], ")"}]}], 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1.`", "\[VeryThinSpace]", "+", 
                SuperscriptBox["c1", "2"], "+", 
                SuperscriptBox["c2", "2"], "+", 
                SuperscriptBox["c3", "2"]}], ")"}], "2"]], "+", 
            FractionBox[
             RowBox[{"1.9601331556824833`", " ", "c1"}], 
             RowBox[{"1.`", "\[VeryThinSpace]", "+", 
              SuperscriptBox["c1", "2"], "+", 
              SuperscriptBox["c2", "2"], "+", 
              SuperscriptBox["c3", "2"]}]], "-", 
            FractionBox[
             RowBox[{"0.39733866159012243`", " ", "c2"}], 
             RowBox[{"1.`", "\[VeryThinSpace]", "+", 
              SuperscriptBox["c1", "2"], "+", 
              SuperscriptBox["c2", "2"], "+", 
              SuperscriptBox["c3", "2"]}]]}], ")"}]}], ",", 
         RowBox[{"0.5`", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", 
             FractionBox[
              RowBox[{"0.7946773231802449`", " ", "c2", " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{
                  RowBox[{"-", "1.`"}], " ", "c1", " ", "c2"}], "+", "c3"}], 
                ")"}]}], 
              SuperscriptBox[
               RowBox[{"(", 
                RowBox[{"1.`", "\[VeryThinSpace]", "+", 
                 SuperscriptBox["c1", "2"], "+", 
                 SuperscriptBox["c2", "2"], "+", 
                 SuperscriptBox["c3", "2"]}], ")"}], "2"]]}], "-", 
            FractionBox[
             RowBox[{"1.9601331556824833`", " ", "c2", " ", 
              RowBox[{"(", 
               RowBox[{"1.`", "\[VeryThinSpace]", "+", 
                SuperscriptBox["c1", "2"], "-", 
                RowBox[{"1.`", " ", 
                 SuperscriptBox["c2", "2"]}], "-", 
                RowBox[{"1.`", " ", 
                 SuperscriptBox["c3", "2"]}]}], ")"}]}], 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1.`", "\[VeryThinSpace]", "+", 
                SuperscriptBox["c1", "2"], "+", 
                SuperscriptBox["c2", "2"], "+", 
                SuperscriptBox["c3", "2"]}], ")"}], "2"]], "-", 
            FractionBox[
             RowBox[{"0.39733866159012243`", " ", "c1"}], 
             RowBox[{"1.`", "\[VeryThinSpace]", "+", 
              SuperscriptBox["c1", "2"], "+", 
              SuperscriptBox["c2", "2"], "+", 
              SuperscriptBox["c3", "2"]}]], "-", 
            FractionBox[
             RowBox[{"1.9601331556824833`", " ", "c2"}], 
             RowBox[{"1.`", "\[VeryThinSpace]", "+", 
              SuperscriptBox["c1", "2"], "+", 
              SuperscriptBox["c2", "2"], "+", 
              SuperscriptBox["c3", "2"]}]]}], ")"}]}], ",", 
         RowBox[{"0.5`", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", 
             FractionBox[
              RowBox[{"0.7946773231802449`", " ", "c3", " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{
                  RowBox[{"-", "1.`"}], " ", "c1", " ", "c2"}], "+", "c3"}], 
                ")"}]}], 
              SuperscriptBox[
               RowBox[{"(", 
                RowBox[{"1.`", "\[VeryThinSpace]", "+", 
                 SuperscriptBox["c1", "2"], "+", 
                 SuperscriptBox["c2", "2"], "+", 
                 SuperscriptBox["c3", "2"]}], ")"}], "2"]]}], "-", 
            FractionBox[
             RowBox[{"1.9601331556824833`", " ", "c3", " ", 
              RowBox[{"(", 
               RowBox[{"1.`", "\[VeryThinSpace]", "+", 
                SuperscriptBox["c1", "2"], "-", 
                RowBox[{"1.`", " ", 
                 SuperscriptBox["c2", "2"]}], "-", 
                RowBox[{"1.`", " ", 
                 SuperscriptBox["c3", "2"]}]}], ")"}]}], 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1.`", "\[VeryThinSpace]", "+", 
                SuperscriptBox["c1", "2"], "+", 
                SuperscriptBox["c2", "2"], "+", 
                SuperscriptBox["c3", "2"]}], ")"}], "2"]], "+", 
            FractionBox["0.39733866159012243`", 
             RowBox[{"1.`", "\[VeryThinSpace]", "+", 
              SuperscriptBox["c1", "2"], "+", 
              SuperscriptBox["c2", "2"], "+", 
              SuperscriptBox["c3", "2"]}]], "-", 
            FractionBox[
             RowBox[{"1.9601331556824833`", " ", "c3"}], 
             RowBox[{"1.`", "\[VeryThinSpace]", "+", 
              SuperscriptBox["c1", "2"], "+", 
              SuperscriptBox["c2", "2"], "+", 
              SuperscriptBox["c3", "2"]}]]}], ")"}]}], ",", "0.`", ",", "0.`",
          ",", 
         RowBox[{"l3", " ", 
          RowBox[{"Cos", "[", "\[Phi]3", "]"}], " ", 
          RowBox[{"Cos", "[", "\[Psi]3", "]"}]}], ",", "0.`", ",", "0.`", ",",
          "0.`", ",", "0.`", ",", "0.`", ",", 
         RowBox[{
          RowBox[{"-", "1.`"}], " ", "l3", " ", 
          RowBox[{"Sin", "[", "\[Phi]3", "]"}], " ", 
          RowBox[{"Sin", "[", "\[Psi]3", "]"}]}], ",", "0.`", ",", "0.`", ",",
          "0.`"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"0.`", ",", 
         RowBox[{"-", "1.`"}], ",", "0.`", ",", 
         RowBox[{"0.5`", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", 
             FractionBox[
              RowBox[{"3.9202663113649665`", " ", "c1", " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"c1", " ", "c2"}], "+", "c3"}], ")"}]}], 
              SuperscriptBox[
               RowBox[{"(", 
                RowBox[{"1.`", "\[VeryThinSpace]", "+", 
                 SuperscriptBox["c1", "2"], "+", 
                 SuperscriptBox["c2", "2"], "+", 
                 SuperscriptBox["c3", "2"]}], ")"}], "2"]]}], "-", 
            FractionBox[
             RowBox[{"0.39733866159012243`", " ", "c1", " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "1.`"}], "+", 
                SuperscriptBox["c1", "2"], "-", 
                RowBox[{"1.`", " ", 
                 SuperscriptBox["c2", "2"]}], "+", 
                SuperscriptBox["c3", "2"]}], ")"}]}], 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1.`", "\[VeryThinSpace]", "+", 
                SuperscriptBox["c1", "2"], "+", 
                SuperscriptBox["c2", "2"], "+", 
                SuperscriptBox["c3", "2"]}], ")"}], "2"]], "+", 
            FractionBox[
             RowBox[{"0.39733866159012243`", " ", "c1"}], 
             RowBox[{"1.`", "\[VeryThinSpace]", "+", 
              SuperscriptBox["c1", "2"], "+", 
              SuperscriptBox["c2", "2"], "+", 
              SuperscriptBox["c3", "2"]}]], "+", 
            FractionBox[
             RowBox[{"1.9601331556824833`", " ", "c2"}], 
             RowBox[{"1.`", "\[VeryThinSpace]", "+", 
              SuperscriptBox["c1", "2"], "+", 
              SuperscriptBox["c2", "2"], "+", 
              SuperscriptBox["c3", "2"]}]]}], ")"}]}], ",", 
         RowBox[{"0.5`", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", 
             FractionBox[
              RowBox[{"3.9202663113649665`", " ", "c2", " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"c1", " ", "c2"}], "+", "c3"}], ")"}]}], 
              SuperscriptBox[
               RowBox[{"(", 
                RowBox[{"1.`", "\[VeryThinSpace]", "+", 
                 SuperscriptBox["c1", "2"], "+", 
                 SuperscriptBox["c2", "2"], "+", 
                 SuperscriptBox["c3", "2"]}], ")"}], "2"]]}], "-", 
            FractionBox[
             RowBox[{"0.39733866159012243`", " ", "c2", " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "1.`"}], "+", 
                SuperscriptBox["c1", "2"], "-", 
                RowBox[{"1.`", " ", 
                 SuperscriptBox["c2", "2"]}], "+", 
                SuperscriptBox["c3", "2"]}], ")"}]}], 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1.`", "\[VeryThinSpace]", "+", 
                SuperscriptBox["c1", "2"], "+", 
                SuperscriptBox["c2", "2"], "+", 
                SuperscriptBox["c3", "2"]}], ")"}], "2"]], "+", 
            FractionBox[
             RowBox[{"1.9601331556824833`", " ", "c1"}], 
             RowBox[{"1.`", "\[VeryThinSpace]", "+", 
              SuperscriptBox["c1", "2"], "+", 
              SuperscriptBox["c2", "2"], "+", 
              SuperscriptBox["c3", "2"]}]], "-", 
            FractionBox[
             RowBox[{"0.39733866159012243`", " ", "c2"}], 
             RowBox[{"1.`", "\[VeryThinSpace]", "+", 
              SuperscriptBox["c1", "2"], "+", 
              SuperscriptBox["c2", "2"], "+", 
              SuperscriptBox["c3", "2"]}]]}], ")"}]}], ",", 
         RowBox[{"0.5`", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", 
             FractionBox[
              RowBox[{"3.9202663113649665`", " ", "c3", " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"c1", " ", "c2"}], "+", "c3"}], ")"}]}], 
              SuperscriptBox[
               RowBox[{"(", 
                RowBox[{"1.`", "\[VeryThinSpace]", "+", 
                 SuperscriptBox["c1", "2"], "+", 
                 SuperscriptBox["c2", "2"], "+", 
                 SuperscriptBox["c3", "2"]}], ")"}], "2"]]}], "-", 
            FractionBox[
             RowBox[{"0.39733866159012243`", " ", "c3", " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "1.`"}], "+", 
                SuperscriptBox["c1", "2"], "-", 
                RowBox[{"1.`", " ", 
                 SuperscriptBox["c2", "2"]}], "+", 
                SuperscriptBox["c3", "2"]}], ")"}]}], 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1.`", "\[VeryThinSpace]", "+", 
                SuperscriptBox["c1", "2"], "+", 
                SuperscriptBox["c2", "2"], "+", 
                SuperscriptBox["c3", "2"]}], ")"}], "2"]], "+", 
            FractionBox["1.9601331556824833`", 
             RowBox[{"1.`", "\[VeryThinSpace]", "+", 
              SuperscriptBox["c1", "2"], "+", 
              SuperscriptBox["c2", "2"], "+", 
              SuperscriptBox["c3", "2"]}]], "+", 
            FractionBox[
             RowBox[{"0.39733866159012243`", " ", "c3"}], 
             RowBox[{"1.`", "\[VeryThinSpace]", "+", 
              SuperscriptBox["c1", "2"], "+", 
              SuperscriptBox["c2", "2"], "+", 
              SuperscriptBox["c3", "2"]}]]}], ")"}]}], ",", "0.`", ",", "0.`",
          ",", "0.`", ",", "0.`", ",", "0.`", ",", "0.`", ",", "0.`", ",", 
         "0.`", ",", 
         RowBox[{
          RowBox[{"-", "1.`"}], " ", "l3", " ", 
          RowBox[{"Cos", "[", "\[Psi]3", "]"}]}], ",", "0.`", ",", "0.`", ",",
          "0.`"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"0.`", ",", "0.`", ",", 
         RowBox[{"-", "1.`"}], ",", 
         RowBox[{
          RowBox[{"-", 
           FractionBox[
            RowBox[{"1.`", " ", 
             RowBox[{"(", 
              RowBox[{"0.19866933079506122`", "\[VeryThinSpace]", "-", 
               RowBox[{"0.9800665778412416`", " ", "c3"}], "+", 
               RowBox[{"2.`", " ", "c1", " ", "z"}], "-", 
               RowBox[{"2.`", " ", "c1", " ", "l3", " ", 
                RowBox[{"Cos", "[", "\[Phi]3", "]"}], " ", 
                RowBox[{"Cos", "[", "\[Psi]3", "]"}]}]}], ")"}]}], 
            RowBox[{"1.`", "\[VeryThinSpace]", "+", 
             SuperscriptBox["c1", "2"], "+", 
             SuperscriptBox["c2", "2"], "+", 
             SuperscriptBox["c3", "2"]}]]}], "+", 
          FractionBox[
           RowBox[{"2.`", " ", "c1", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"0.19866933079506122`", " ", "c1"}], "+", 
              RowBox[{"0.9800665778412416`", " ", "c2"}], "-", 
              RowBox[{"0.9800665778412416`", " ", "c1", " ", "c3"}], "+", 
              RowBox[{"0.19866933079506122`", " ", "c2", " ", "c3"}], "+", 
              RowBox[{
               RowBox[{"(", 
                RowBox[{"1.`", "\[VeryThinSpace]", "+", 
                 SuperscriptBox["c1", "2"], "+", 
                 SuperscriptBox["c2", "2"], "+", 
                 SuperscriptBox["c3", "2"]}], ")"}], " ", "z"}], "-", 
              RowBox[{"1.`", " ", 
               RowBox[{"(", 
                RowBox[{"1.`", "\[VeryThinSpace]", "+", 
                 SuperscriptBox["c1", "2"], "+", 
                 SuperscriptBox["c2", "2"], "+", 
                 SuperscriptBox["c3", "2"]}], ")"}], " ", "l3", " ", 
               RowBox[{"Cos", "[", "\[Phi]3", "]"}], " ", 
               RowBox[{"Cos", "[", "\[Psi]3", "]"}]}]}], ")"}]}], 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{"1.`", "\[VeryThinSpace]", "+", 
              SuperscriptBox["c1", "2"], "+", 
              SuperscriptBox["c2", "2"], "+", 
              SuperscriptBox["c3", "2"]}], ")"}], "2"]]}], ",", 
         RowBox[{
          RowBox[{"-", 
           FractionBox[
            RowBox[{"1.`", " ", 
             RowBox[{"(", 
              RowBox[{"0.9800665778412416`", "\[VeryThinSpace]", "+", 
               RowBox[{"0.19866933079506122`", " ", "c3"}], "+", 
               RowBox[{"2.`", " ", "c2", " ", "z"}], "-", 
               RowBox[{"2.`", " ", "c2", " ", "l3", " ", 
                RowBox[{"Cos", "[", "\[Phi]3", "]"}], " ", 
                RowBox[{"Cos", "[", "\[Psi]3", "]"}]}]}], ")"}]}], 
            RowBox[{"1.`", "\[VeryThinSpace]", "+", 
             SuperscriptBox["c1", "2"], "+", 
             SuperscriptBox["c2", "2"], "+", 
             SuperscriptBox["c3", "2"]}]]}], "+", 
          FractionBox[
           RowBox[{"2.`", " ", "c2", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"0.19866933079506122`", " ", "c1"}], "+", 
              RowBox[{"0.9800665778412416`", " ", "c2"}], "-", 
              RowBox[{"0.9800665778412416`", " ", "c1", " ", "c3"}], "+", 
              RowBox[{"0.19866933079506122`", " ", "c2", " ", "c3"}], "+", 
              RowBox[{
               RowBox[{"(", 
                RowBox[{"1.`", "\[VeryThinSpace]", "+", 
                 SuperscriptBox["c1", "2"], "+", 
                 SuperscriptBox["c2", "2"], "+", 
                 SuperscriptBox["c3", "2"]}], ")"}], " ", "z"}], "-", 
              RowBox[{"1.`", " ", 
               RowBox[{"(", 
                RowBox[{"1.`", "\[VeryThinSpace]", "+", 
                 SuperscriptBox["c1", "2"], "+", 
                 SuperscriptBox["c2", "2"], "+", 
                 SuperscriptBox["c3", "2"]}], ")"}], " ", "l3", " ", 
               RowBox[{"Cos", "[", "\[Phi]3", "]"}], " ", 
               RowBox[{"Cos", "[", "\[Psi]3", "]"}]}]}], ")"}]}], 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{"1.`", "\[VeryThinSpace]", "+", 
              SuperscriptBox["c1", "2"], "+", 
              SuperscriptBox["c2", "2"], "+", 
              SuperscriptBox["c3", "2"]}], ")"}], "2"]]}], ",", 
         RowBox[{
          RowBox[{"-", 
           FractionBox[
            RowBox[{"1.`", " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"-", "0.9800665778412416`"}], " ", "c1"}], "+", 
               RowBox[{"0.19866933079506122`", " ", "c2"}], "+", 
               RowBox[{"2.`", " ", "c3", " ", "z"}], "-", 
               RowBox[{"2.`", " ", "c3", " ", "l3", " ", 
                RowBox[{"Cos", "[", "\[Phi]3", "]"}], " ", 
                RowBox[{"Cos", "[", "\[Psi]3", "]"}]}]}], ")"}]}], 
            RowBox[{"1.`", "\[VeryThinSpace]", "+", 
             SuperscriptBox["c1", "2"], "+", 
             SuperscriptBox["c2", "2"], "+", 
             SuperscriptBox["c3", "2"]}]]}], "+", 
          FractionBox[
           RowBox[{"2.`", " ", "c3", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"0.19866933079506122`", " ", "c1"}], "+", 
              RowBox[{"0.9800665778412416`", " ", "c2"}], "-", 
              RowBox[{"0.9800665778412416`", " ", "c1", " ", "c3"}], "+", 
              RowBox[{"0.19866933079506122`", " ", "c2", " ", "c3"}], "+", 
              RowBox[{
               RowBox[{"(", 
                RowBox[{"1.`", "\[VeryThinSpace]", "+", 
                 SuperscriptBox["c1", "2"], "+", 
                 SuperscriptBox["c2", "2"], "+", 
                 SuperscriptBox["c3", "2"]}], ")"}], " ", "z"}], "-", 
              RowBox[{"1.`", " ", 
               RowBox[{"(", 
                RowBox[{"1.`", "\[VeryThinSpace]", "+", 
                 SuperscriptBox["c1", "2"], "+", 
                 SuperscriptBox["c2", "2"], "+", 
                 SuperscriptBox["c3", "2"]}], ")"}], " ", "l3", " ", 
               RowBox[{"Cos", "[", "\[Phi]3", "]"}], " ", 
               RowBox[{"Cos", "[", "\[Psi]3", "]"}]}]}], ")"}]}], 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{"1.`", "\[VeryThinSpace]", "+", 
              SuperscriptBox["c1", "2"], "+", 
              SuperscriptBox["c2", "2"], "+", 
              SuperscriptBox["c3", "2"]}], ")"}], "2"]]}], ",", "0.`", ",", 
         "0.`", ",", 
         RowBox[{
          RowBox[{"-", "1.`"}], " ", "l3", " ", 
          RowBox[{"Cos", "[", "\[Psi]3", "]"}], " ", 
          RowBox[{"Sin", "[", "\[Phi]3", "]"}]}], ",", "0.`", ",", "0.`", ",",
          "0.`", ",", "0.`", ",", "0.`", ",", 
         RowBox[{
          RowBox[{"-", "1.`"}], " ", "l3", " ", 
          RowBox[{"Cos", "[", "\[Phi]3", "]"}], " ", 
          RowBox[{"Sin", "[", "\[Psi]3", "]"}]}], ",", "0.`", ",", "0.`", ",",
          "0.`"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "1.`"}], ",", "0.`", ",", "0.`", ",", 
         RowBox[{
          RowBox[{"-", 
           FractionBox[
            RowBox[{"0.5`", " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"1.8196946295764675`", " ", "c1"}], "-", 
               RowBox[{"0.39733866159012243`", " ", "c2"}], "+", 
               RowBox[{"4.`", " ", "c1", " ", "x"}]}], ")"}]}], 
            RowBox[{"1.`", "\[VeryThinSpace]", "+", 
             SuperscriptBox["c1", "2"], "+", 
             SuperscriptBox["c2", "2"], "+", 
             SuperscriptBox["c3", "2"]}]]}], "+", 
          FractionBox[
           RowBox[{"c1", " ", 
            RowBox[{"(", 
             RowBox[{"0.9098473147882338`", "\[VeryThinSpace]", "+", 
              RowBox[{"0.9098473147882338`", " ", 
               SuperscriptBox["c1", "2"]}], "-", 
              RowBox[{"0.39733866159012243`", " ", "c1", " ", "c2"}], "+", 
              RowBox[{"2.869980470470717`", " ", 
               SuperscriptBox["c2", "2"]}], "+", 
              RowBox[{"0.39733866159012243`", " ", "c3"}], "+", 
              RowBox[{"2.869980470470717`", " ", 
               SuperscriptBox["c3", "2"]}], "+", 
              RowBox[{"2.`", " ", 
               RowBox[{"(", 
                RowBox[{"1.`", "\[VeryThinSpace]", "+", 
                 SuperscriptBox["c1", "2"], "+", 
                 SuperscriptBox["c2", "2"], "+", 
                 SuperscriptBox["c3", "2"]}], ")"}], " ", "x"}]}], ")"}]}], 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{"1.`", "\[VeryThinSpace]", "+", 
              SuperscriptBox["c1", "2"], "+", 
              SuperscriptBox["c2", "2"], "+", 
              SuperscriptBox["c3", "2"]}], ")"}], "2"]]}], ",", 
         RowBox[{
          RowBox[{"-", 
           FractionBox[
            RowBox[{"0.5`", " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"-", "0.39733866159012243`"}], " ", "c1"}], "+", 
               RowBox[{"5.739960940941434`", " ", "c2"}], "+", 
               RowBox[{"4.`", " ", "c2", " ", "x"}]}], ")"}]}], 
            RowBox[{"1.`", "\[VeryThinSpace]", "+", 
             SuperscriptBox["c1", "2"], "+", 
             SuperscriptBox["c2", "2"], "+", 
             SuperscriptBox["c3", "2"]}]]}], "+", 
          FractionBox[
           RowBox[{"c2", " ", 
            RowBox[{"(", 
             RowBox[{"0.9098473147882338`", "\[VeryThinSpace]", "+", 
              RowBox[{"0.9098473147882338`", " ", 
               SuperscriptBox["c1", "2"]}], "-", 
              RowBox[{"0.39733866159012243`", " ", "c1", " ", "c2"}], "+", 
              RowBox[{"2.869980470470717`", " ", 
               SuperscriptBox["c2", "2"]}], "+", 
              RowBox[{"0.39733866159012243`", " ", "c3"}], "+", 
              RowBox[{"2.869980470470717`", " ", 
               SuperscriptBox["c3", "2"]}], "+", 
              RowBox[{"2.`", " ", 
               RowBox[{"(", 
                RowBox[{"1.`", "\[VeryThinSpace]", "+", 
                 SuperscriptBox["c1", "2"], "+", 
                 SuperscriptBox["c2", "2"], "+", 
                 SuperscriptBox["c3", "2"]}], ")"}], " ", "x"}]}], ")"}]}], 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{"1.`", "\[VeryThinSpace]", "+", 
              SuperscriptBox["c1", "2"], "+", 
              SuperscriptBox["c2", "2"], "+", 
              SuperscriptBox["c3", "2"]}], ")"}], "2"]]}], ",", 
         RowBox[{
          RowBox[{"-", 
           FractionBox[
            RowBox[{"0.5`", " ", 
             RowBox[{"(", 
              RowBox[{"0.39733866159012243`", "\[VeryThinSpace]", "+", 
               RowBox[{"5.739960940941434`", " ", "c3"}], "+", 
               RowBox[{"4.`", " ", "c3", " ", "x"}]}], ")"}]}], 
            RowBox[{"1.`", "\[VeryThinSpace]", "+", 
             SuperscriptBox["c1", "2"], "+", 
             SuperscriptBox["c2", "2"], "+", 
             SuperscriptBox["c3", "2"]}]]}], "+", 
          FractionBox[
           RowBox[{"c3", " ", 
            RowBox[{"(", 
             RowBox[{"0.9098473147882338`", "\[VeryThinSpace]", "+", 
              RowBox[{"0.9098473147882338`", " ", 
               SuperscriptBox["c1", "2"]}], "-", 
              RowBox[{"0.39733866159012243`", " ", "c1", " ", "c2"}], "+", 
              RowBox[{"2.869980470470717`", " ", 
               SuperscriptBox["c2", "2"]}], "+", 
              RowBox[{"0.39733866159012243`", " ", "c3"}], "+", 
              RowBox[{"2.869980470470717`", " ", 
               SuperscriptBox["c3", "2"]}], "+", 
              RowBox[{"2.`", " ", 
               RowBox[{"(", 
                RowBox[{"1.`", "\[VeryThinSpace]", "+", 
                 SuperscriptBox["c1", "2"], "+", 
                 SuperscriptBox["c2", "2"], "+", 
                 SuperscriptBox["c3", "2"]}], ")"}], " ", "x"}]}], ")"}]}], 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{"1.`", "\[VeryThinSpace]", "+", 
              SuperscriptBox["c1", "2"], "+", 
              SuperscriptBox["c2", "2"], "+", 
              SuperscriptBox["c3", "2"]}], ")"}], "2"]]}], ",", "0.`", ",", 
         "0.`", ",", "0.`", ",", 
         RowBox[{"l4", " ", 
          RowBox[{"Cos", "[", "\[Phi]4", "]"}], " ", 
          RowBox[{"Cos", "[", "\[Psi]4", "]"}]}], ",", "0.`", ",", "0.`", ",",
          "0.`", ",", "0.`", ",", "0.`", ",", 
         RowBox[{
          RowBox[{"-", "1.`"}], " ", "l4", " ", 
          RowBox[{"Sin", "[", "\[Phi]4", "]"}], " ", 
          RowBox[{"Sin", "[", "\[Psi]4", "]"}]}], ",", "0.`", ",", "0.`"}], 
        "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"0.`", ",", 
         RowBox[{"-", "1.`"}], ",", "0.`", ",", 
         RowBox[{
          FractionBox[
           RowBox[{"0.5`", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               RowBox[{"-", "1.7061174487747313`"}], " ", "c1"}], "+", 
              RowBox[{"1.9601331556824833`", " ", "c2"}], "-", 
              RowBox[{"4.`", " ", "c1", " ", "y"}]}], ")"}]}], 
           RowBox[{"1.`", "\[VeryThinSpace]", "+", 
            SuperscriptBox["c1", "2"], "+", 
            SuperscriptBox["c2", "2"], "+", 
            SuperscriptBox["c3", "2"]}]], "-", 
          FractionBox[
           RowBox[{"1.`", " ", "c1", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "0.4557200627972432`"}], "-", 
              RowBox[{"0.8530587243873656`", " ", 
               SuperscriptBox["c1", "2"]}], "+", 
              RowBox[{"1.9601331556824833`", " ", "c1", " ", "c2"}], "-", 
              RowBox[{"0.4557200627972432`", " ", 
               SuperscriptBox["c2", "2"]}], "+", 
              RowBox[{"1.9601331556824833`", " ", "c3"}], "-", 
              RowBox[{"0.8530587243873656`", " ", 
               SuperscriptBox["c3", "2"]}], "-", 
              RowBox[{"2.`", " ", 
               RowBox[{"(", 
                RowBox[{"1.`", "\[VeryThinSpace]", "+", 
                 SuperscriptBox["c1", "2"], "+", 
                 SuperscriptBox["c2", "2"], "+", 
                 SuperscriptBox["c3", "2"]}], ")"}], " ", "y"}]}], ")"}]}], 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{"1.`", "\[VeryThinSpace]", "+", 
              SuperscriptBox["c1", "2"], "+", 
              SuperscriptBox["c2", "2"], "+", 
              SuperscriptBox["c3", "2"]}], ")"}], "2"]]}], ",", 
         RowBox[{
          FractionBox[
           RowBox[{"0.5`", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"1.9601331556824833`", " ", "c1"}], "-", 
              RowBox[{"0.9114401255944864`", " ", "c2"}], "-", 
              RowBox[{"4.`", " ", "c2", " ", "y"}]}], ")"}]}], 
           RowBox[{"1.`", "\[VeryThinSpace]", "+", 
            SuperscriptBox["c1", "2"], "+", 
            SuperscriptBox["c2", "2"], "+", 
            SuperscriptBox["c3", "2"]}]], "-", 
          FractionBox[
           RowBox[{"1.`", " ", "c2", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "0.4557200627972432`"}], "-", 
              RowBox[{"0.8530587243873656`", " ", 
               SuperscriptBox["c1", "2"]}], "+", 
              RowBox[{"1.9601331556824833`", " ", "c1", " ", "c2"}], "-", 
              RowBox[{"0.4557200627972432`", " ", 
               SuperscriptBox["c2", "2"]}], "+", 
              RowBox[{"1.9601331556824833`", " ", "c3"}], "-", 
              RowBox[{"0.8530587243873656`", " ", 
               SuperscriptBox["c3", "2"]}], "-", 
              RowBox[{"2.`", " ", 
               RowBox[{"(", 
                RowBox[{"1.`", "\[VeryThinSpace]", "+", 
                 SuperscriptBox["c1", "2"], "+", 
                 SuperscriptBox["c2", "2"], "+", 
                 SuperscriptBox["c3", "2"]}], ")"}], " ", "y"}]}], ")"}]}], 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{"1.`", "\[VeryThinSpace]", "+", 
              SuperscriptBox["c1", "2"], "+", 
              SuperscriptBox["c2", "2"], "+", 
              SuperscriptBox["c3", "2"]}], ")"}], "2"]]}], ",", 
         RowBox[{
          FractionBox[
           RowBox[{"0.5`", " ", 
            RowBox[{"(", 
             RowBox[{"1.9601331556824833`", "\[VeryThinSpace]", "-", 
              RowBox[{"1.7061174487747313`", " ", "c3"}], "-", 
              RowBox[{"4.`", " ", "c3", " ", "y"}]}], ")"}]}], 
           RowBox[{"1.`", "\[VeryThinSpace]", "+", 
            SuperscriptBox["c1", "2"], "+", 
            SuperscriptBox["c2", "2"], "+", 
            SuperscriptBox["c3", "2"]}]], "-", 
          FractionBox[
           RowBox[{"1.`", " ", "c3", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "0.4557200627972432`"}], "-", 
              RowBox[{"0.8530587243873656`", " ", 
               SuperscriptBox["c1", "2"]}], "+", 
              RowBox[{"1.9601331556824833`", " ", "c1", " ", "c2"}], "-", 
              RowBox[{"0.4557200627972432`", " ", 
               SuperscriptBox["c2", "2"]}], "+", 
              RowBox[{"1.9601331556824833`", " ", "c3"}], "-", 
              RowBox[{"0.8530587243873656`", " ", 
               SuperscriptBox["c3", "2"]}], "-", 
              RowBox[{"2.`", " ", 
               RowBox[{"(", 
                RowBox[{"1.`", "\[VeryThinSpace]", "+", 
                 SuperscriptBox["c1", "2"], "+", 
                 SuperscriptBox["c2", "2"], "+", 
                 SuperscriptBox["c3", "2"]}], ")"}], " ", "y"}]}], ")"}]}], 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{"1.`", "\[VeryThinSpace]", "+", 
              SuperscriptBox["c1", "2"], "+", 
              SuperscriptBox["c2", "2"], "+", 
              SuperscriptBox["c3", "2"]}], ")"}], "2"]]}], ",", "0.`", ",", 
         "0.`", ",", "0.`", ",", "0.`", ",", "0.`", ",", "0.`", ",", "0.`", 
         ",", "0.`", ",", "0.`", ",", 
         RowBox[{
          RowBox[{"-", "1.`"}], " ", "l4", " ", 
          RowBox[{"Cos", "[", "\[Psi]4", "]"}]}], ",", "0.`", ",", "0.`"}], 
        "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"0.`", ",", "0.`", ",", 
         RowBox[{"-", "1.`"}], ",", 
         RowBox[{
          FractionBox[
           RowBox[{"0.19866933079506122`", "\[VeryThinSpace]", "+", 
            RowBox[{"0.9800665778412416`", " ", "c3"}], "-", 
            RowBox[{"2.`", " ", "c1", " ", "z"}], "+", 
            RowBox[{"2.`", " ", "c1", " ", "l4", " ", 
             RowBox[{"Cos", "[", "\[Phi]4", "]"}], " ", 
             RowBox[{"Cos", "[", "\[Psi]4", "]"}]}]}], 
           RowBox[{"1.`", "\[VeryThinSpace]", "+", 
            SuperscriptBox["c1", "2"], "+", 
            SuperscriptBox["c2", "2"], "+", 
            SuperscriptBox["c3", "2"]}]], "-", 
          FractionBox[
           RowBox[{"2.`", " ", "c1", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"0.19866933079506122`", " ", "c1"}], "-", 
              RowBox[{"0.9800665778412416`", " ", "c2"}], "+", 
              RowBox[{"0.9800665778412416`", " ", "c1", " ", "c3"}], "+", 
              RowBox[{"0.19866933079506122`", " ", "c2", " ", "c3"}], "-", 
              RowBox[{"1.`", " ", 
               RowBox[{"(", 
                RowBox[{"1.`", "\[VeryThinSpace]", "+", 
                 SuperscriptBox["c1", "2"], "+", 
                 SuperscriptBox["c2", "2"], "+", 
                 SuperscriptBox["c3", "2"]}], ")"}], " ", "z"}], "+", 
              RowBox[{
               RowBox[{"(", 
                RowBox[{"1.`", "\[VeryThinSpace]", "+", 
                 SuperscriptBox["c1", "2"], "+", 
                 SuperscriptBox["c2", "2"], "+", 
                 SuperscriptBox["c3", "2"]}], ")"}], " ", "l4", " ", 
               RowBox[{"Cos", "[", "\[Phi]4", "]"}], " ", 
               RowBox[{"Cos", "[", "\[Psi]4", "]"}]}]}], ")"}]}], 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{"1.`", "\[VeryThinSpace]", "+", 
              SuperscriptBox["c1", "2"], "+", 
              SuperscriptBox["c2", "2"], "+", 
              SuperscriptBox["c3", "2"]}], ")"}], "2"]]}], ",", 
         RowBox[{
          FractionBox[
           RowBox[{
            RowBox[{"-", "0.9800665778412416`"}], "+", 
            RowBox[{"0.19866933079506122`", " ", "c3"}], "-", 
            RowBox[{"2.`", " ", "c2", " ", "z"}], "+", 
            RowBox[{"2.`", " ", "c2", " ", "l4", " ", 
             RowBox[{"Cos", "[", "\[Phi]4", "]"}], " ", 
             RowBox[{"Cos", "[", "\[Psi]4", "]"}]}]}], 
           RowBox[{"1.`", "\[VeryThinSpace]", "+", 
            SuperscriptBox["c1", "2"], "+", 
            SuperscriptBox["c2", "2"], "+", 
            SuperscriptBox["c3", "2"]}]], "-", 
          FractionBox[
           RowBox[{"2.`", " ", "c2", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"0.19866933079506122`", " ", "c1"}], "-", 
              RowBox[{"0.9800665778412416`", " ", "c2"}], "+", 
              RowBox[{"0.9800665778412416`", " ", "c1", " ", "c3"}], "+", 
              RowBox[{"0.19866933079506122`", " ", "c2", " ", "c3"}], "-", 
              RowBox[{"1.`", " ", 
               RowBox[{"(", 
                RowBox[{"1.`", "\[VeryThinSpace]", "+", 
                 SuperscriptBox["c1", "2"], "+", 
                 SuperscriptBox["c2", "2"], "+", 
                 SuperscriptBox["c3", "2"]}], ")"}], " ", "z"}], "+", 
              RowBox[{
               RowBox[{"(", 
                RowBox[{"1.`", "\[VeryThinSpace]", "+", 
                 SuperscriptBox["c1", "2"], "+", 
                 SuperscriptBox["c2", "2"], "+", 
                 SuperscriptBox["c3", "2"]}], ")"}], " ", "l4", " ", 
               RowBox[{"Cos", "[", "\[Phi]4", "]"}], " ", 
               RowBox[{"Cos", "[", "\[Psi]4", "]"}]}]}], ")"}]}], 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{"1.`", "\[VeryThinSpace]", "+", 
              SuperscriptBox["c1", "2"], "+", 
              SuperscriptBox["c2", "2"], "+", 
              SuperscriptBox["c3", "2"]}], ")"}], "2"]]}], ",", 
         RowBox[{
          FractionBox[
           RowBox[{
            RowBox[{"0.9800665778412416`", " ", "c1"}], "+", 
            RowBox[{"0.19866933079506122`", " ", "c2"}], "-", 
            RowBox[{"2.`", " ", "c3", " ", "z"}], "+", 
            RowBox[{"2.`", " ", "c3", " ", "l4", " ", 
             RowBox[{"Cos", "[", "\[Phi]4", "]"}], " ", 
             RowBox[{"Cos", "[", "\[Psi]4", "]"}]}]}], 
           RowBox[{"1.`", "\[VeryThinSpace]", "+", 
            SuperscriptBox["c1", "2"], "+", 
            SuperscriptBox["c2", "2"], "+", 
            SuperscriptBox["c3", "2"]}]], "-", 
          FractionBox[
           RowBox[{"2.`", " ", "c3", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"0.19866933079506122`", " ", "c1"}], "-", 
              RowBox[{"0.9800665778412416`", " ", "c2"}], "+", 
              RowBox[{"0.9800665778412416`", " ", "c1", " ", "c3"}], "+", 
              RowBox[{"0.19866933079506122`", " ", "c2", " ", "c3"}], "-", 
              RowBox[{"1.`", " ", 
               RowBox[{"(", 
                RowBox[{"1.`", "\[VeryThinSpace]", "+", 
                 SuperscriptBox["c1", "2"], "+", 
                 SuperscriptBox["c2", "2"], "+", 
                 SuperscriptBox["c3", "2"]}], ")"}], " ", "z"}], "+", 
              RowBox[{
               RowBox[{"(", 
                RowBox[{"1.`", "\[VeryThinSpace]", "+", 
                 SuperscriptBox["c1", "2"], "+", 
                 SuperscriptBox["c2", "2"], "+", 
                 SuperscriptBox["c3", "2"]}], ")"}], " ", "l4", " ", 
               RowBox[{"Cos", "[", "\[Phi]4", "]"}], " ", 
               RowBox[{"Cos", "[", "\[Psi]4", "]"}]}]}], ")"}]}], 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{"1.`", "\[VeryThinSpace]", "+", 
              SuperscriptBox["c1", "2"], "+", 
              SuperscriptBox["c2", "2"], "+", 
              SuperscriptBox["c3", "2"]}], ")"}], "2"]]}], ",", "0.`", ",", 
         "0.`", ",", "0.`", ",", 
         RowBox[{
          RowBox[{"-", "1.`"}], " ", "l4", " ", 
          RowBox[{"Cos", "[", "\[Psi]4", "]"}], " ", 
          RowBox[{"Sin", "[", "\[Phi]4", "]"}]}], ",", "0.`", ",", "0.`", ",",
          "0.`", ",", "0.`", ",", "0.`", ",", 
         RowBox[{
          RowBox[{"-", "1.`"}], " ", "l4", " ", 
          RowBox[{"Cos", "[", "\[Phi]4", "]"}], " ", 
          RowBox[{"Sin", "[", "\[Psi]4", "]"}]}], ",", "0.`", ",", "0.`"}], 
        "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "1.`"}], ",", "0.`", ",", "0.`", ",", 
         RowBox[{"0.25`", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", 
             FractionBox[
              RowBox[{"7.584777753664998`", " ", "c1", " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"c1", " ", "c2"}], "-", 
                 RowBox[{"1.`", " ", "c3"}]}], ")"}]}], 
              SuperscriptBox[
               RowBox[{"(", 
                RowBox[{"1.`", "\[VeryThinSpace]", "+", 
                 SuperscriptBox["c1", "2"], "+", 
                 SuperscriptBox["c2", "2"], "+", 
                 SuperscriptBox["c3", "2"]}], ")"}], "2"]]}], "+", 
            FractionBox[
             RowBox[{"1.271922405996975`", " ", "c1", " ", 
              RowBox[{"(", 
               RowBox[{"1.`", "\[VeryThinSpace]", "+", 
                SuperscriptBox["c1", "2"], "-", 
                RowBox[{"1.`", " ", 
                 SuperscriptBox["c2", "2"]}], "-", 
                RowBox[{"1.`", " ", 
                 SuperscriptBox["c3", "2"]}]}], ")"}]}], 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1.`", "\[VeryThinSpace]", "+", 
                SuperscriptBox["c1", "2"], "+", 
                SuperscriptBox["c2", "2"], "+", 
                SuperscriptBox["c3", "2"]}], ")"}], "2"]], "-", 
            FractionBox[
             RowBox[{"1.271922405996975`", " ", "c1"}], 
             RowBox[{"1.`", "\[VeryThinSpace]", "+", 
              SuperscriptBox["c1", "2"], "+", 
              SuperscriptBox["c2", "2"], "+", 
              SuperscriptBox["c3", "2"]}]], "+", 
            FractionBox[
             RowBox[{"3.792388876832499`", " ", "c2"}], 
             RowBox[{"1.`", "\[VeryThinSpace]", "+", 
              SuperscriptBox["c1", "2"], "+", 
              SuperscriptBox["c2", "2"], "+", 
              SuperscriptBox["c3", "2"]}]]}], ")"}]}], ",", 
         RowBox[{"0.25`", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", 
             FractionBox[
              RowBox[{"7.584777753664998`", " ", "c2", " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"c1", " ", "c2"}], "-", 
                 RowBox[{"1.`", " ", "c3"}]}], ")"}]}], 
              SuperscriptBox[
               RowBox[{"(", 
                RowBox[{"1.`", "\[VeryThinSpace]", "+", 
                 SuperscriptBox["c1", "2"], "+", 
                 SuperscriptBox["c2", "2"], "+", 
                 SuperscriptBox["c3", "2"]}], ")"}], "2"]]}], "+", 
            FractionBox[
             RowBox[{"1.271922405996975`", " ", "c2", " ", 
              RowBox[{"(", 
               RowBox[{"1.`", "\[VeryThinSpace]", "+", 
                SuperscriptBox["c1", "2"], "-", 
                RowBox[{"1.`", " ", 
                 SuperscriptBox["c2", "2"]}], "-", 
                RowBox[{"1.`", " ", 
                 SuperscriptBox["c3", "2"]}]}], ")"}]}], 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1.`", "\[VeryThinSpace]", "+", 
                SuperscriptBox["c1", "2"], "+", 
                SuperscriptBox["c2", "2"], "+", 
                SuperscriptBox["c3", "2"]}], ")"}], "2"]], "+", 
            FractionBox[
             RowBox[{"3.792388876832499`", " ", "c1"}], 
             RowBox[{"1.`", "\[VeryThinSpace]", "+", 
              SuperscriptBox["c1", "2"], "+", 
              SuperscriptBox["c2", "2"], "+", 
              SuperscriptBox["c3", "2"]}]], "+", 
            FractionBox[
             RowBox[{"1.271922405996975`", " ", "c2"}], 
             RowBox[{"1.`", "\[VeryThinSpace]", "+", 
              SuperscriptBox["c1", "2"], "+", 
              SuperscriptBox["c2", "2"], "+", 
              SuperscriptBox["c3", "2"]}]]}], ")"}]}], ",", 
         RowBox[{"0.25`", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", 
             FractionBox[
              RowBox[{"7.584777753664998`", " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"c1", " ", "c2"}], "-", 
                 RowBox[{"1.`", " ", "c3"}]}], ")"}], " ", "c3"}], 
              SuperscriptBox[
               RowBox[{"(", 
                RowBox[{"1.`", "\[VeryThinSpace]", "+", 
                 SuperscriptBox["c1", "2"], "+", 
                 SuperscriptBox["c2", "2"], "+", 
                 SuperscriptBox["c3", "2"]}], ")"}], "2"]]}], "+", 
            FractionBox[
             RowBox[{"1.271922405996975`", " ", "c3", " ", 
              RowBox[{"(", 
               RowBox[{"1.`", "\[VeryThinSpace]", "+", 
                SuperscriptBox["c1", "2"], "-", 
                RowBox[{"1.`", " ", 
                 SuperscriptBox["c2", "2"]}], "-", 
                RowBox[{"1.`", " ", 
                 SuperscriptBox["c3", "2"]}]}], ")"}]}], 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1.`", "\[VeryThinSpace]", "+", 
                SuperscriptBox["c1", "2"], "+", 
                SuperscriptBox["c2", "2"], "+", 
                SuperscriptBox["c3", "2"]}], ")"}], "2"]], "-", 
            FractionBox["3.792388876832499`", 
             RowBox[{"1.`", "\[VeryThinSpace]", "+", 
              SuperscriptBox["c1", "2"], "+", 
              SuperscriptBox["c2", "2"], "+", 
              SuperscriptBox["c3", "2"]}]], "+", 
            FractionBox[
             RowBox[{"1.271922405996975`", " ", "c3"}], 
             RowBox[{"1.`", "\[VeryThinSpace]", "+", 
              SuperscriptBox["c1", "2"], "+", 
              SuperscriptBox["c2", "2"], "+", 
              SuperscriptBox["c3", "2"]}]]}], ")"}]}], ",", "0.`", ",", "0.`",
          ",", "0.`", ",", "0.`", ",", 
         RowBox[{"l5", " ", 
          RowBox[{"Cos", "[", "\[Phi]5", "]"}], " ", 
          RowBox[{"Cos", "[", "\[Psi]5", "]"}]}], ",", "0.`", ",", "0.`", ",",
          "0.`", ",", "0.`", ",", "0.`", ",", 
         RowBox[{
          RowBox[{"-", "1.`"}], " ", "l5", " ", 
          RowBox[{"Sin", "[", "\[Phi]5", "]"}], " ", 
          RowBox[{"Sin", "[", "\[Psi]5", "]"}]}], ",", "0.`"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"0.`", ",", 
         RowBox[{"-", "1.`"}], ",", "0.`", ",", 
         RowBox[{"0.25`", " ", 
          RowBox[{"(", 
           RowBox[{
            FractionBox[
             RowBox[{"2.54384481199395`", " ", "c1", " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"c1", " ", "c2"}], "+", "c3"}], ")"}]}], 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1.`", "\[VeryThinSpace]", "+", 
                SuperscriptBox["c1", "2"], "+", 
                SuperscriptBox["c2", "2"], "+", 
                SuperscriptBox["c3", "2"]}], ")"}], "2"]], "+", 
            FractionBox[
             RowBox[{"3.792388876832499`", " ", "c1", " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "1.`"}], "+", 
                SuperscriptBox["c1", "2"], "-", 
                RowBox[{"1.`", " ", 
                 SuperscriptBox["c2", "2"]}], "+", 
                SuperscriptBox["c3", "2"]}], ")"}]}], 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1.`", "\[VeryThinSpace]", "+", 
                SuperscriptBox["c1", "2"], "+", 
                SuperscriptBox["c2", "2"], "+", 
                SuperscriptBox["c3", "2"]}], ")"}], "2"]], "-", 
            FractionBox[
             RowBox[{"3.792388876832499`", " ", "c1"}], 
             RowBox[{"1.`", "\[VeryThinSpace]", "+", 
              SuperscriptBox["c1", "2"], "+", 
              SuperscriptBox["c2", "2"], "+", 
              SuperscriptBox["c3", "2"]}]], "-", 
            FractionBox[
             RowBox[{"1.271922405996975`", " ", "c2"}], 
             RowBox[{"1.`", "\[VeryThinSpace]", "+", 
              SuperscriptBox["c1", "2"], "+", 
              SuperscriptBox["c2", "2"], "+", 
              SuperscriptBox["c3", "2"]}]]}], ")"}]}], ",", 
         RowBox[{"0.25`", " ", 
          RowBox[{"(", 
           RowBox[{
            FractionBox[
             RowBox[{"2.54384481199395`", " ", "c2", " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"c1", " ", "c2"}], "+", "c3"}], ")"}]}], 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1.`", "\[VeryThinSpace]", "+", 
                SuperscriptBox["c1", "2"], "+", 
                SuperscriptBox["c2", "2"], "+", 
                SuperscriptBox["c3", "2"]}], ")"}], "2"]], "+", 
            FractionBox[
             RowBox[{"3.792388876832499`", " ", "c2", " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "1.`"}], "+", 
                SuperscriptBox["c1", "2"], "-", 
                RowBox[{"1.`", " ", 
                 SuperscriptBox["c2", "2"]}], "+", 
                SuperscriptBox["c3", "2"]}], ")"}]}], 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1.`", "\[VeryThinSpace]", "+", 
                SuperscriptBox["c1", "2"], "+", 
                SuperscriptBox["c2", "2"], "+", 
                SuperscriptBox["c3", "2"]}], ")"}], "2"]], "-", 
            FractionBox[
             RowBox[{"1.271922405996975`", " ", "c1"}], 
             RowBox[{"1.`", "\[VeryThinSpace]", "+", 
              SuperscriptBox["c1", "2"], "+", 
              SuperscriptBox["c2", "2"], "+", 
              SuperscriptBox["c3", "2"]}]], "+", 
            FractionBox[
             RowBox[{"3.792388876832499`", " ", "c2"}], 
             RowBox[{"1.`", "\[VeryThinSpace]", "+", 
              SuperscriptBox["c1", "2"], "+", 
              SuperscriptBox["c2", "2"], "+", 
              SuperscriptBox["c3", "2"]}]]}], ")"}]}], ",", 
         RowBox[{"0.25`", " ", 
          RowBox[{"(", 
           RowBox[{
            FractionBox[
             RowBox[{"2.54384481199395`", " ", "c3", " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"c1", " ", "c2"}], "+", "c3"}], ")"}]}], 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1.`", "\[VeryThinSpace]", "+", 
                SuperscriptBox["c1", "2"], "+", 
                SuperscriptBox["c2", "2"], "+", 
                SuperscriptBox["c3", "2"]}], ")"}], "2"]], "+", 
            FractionBox[
             RowBox[{"3.792388876832499`", " ", "c3", " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "1.`"}], "+", 
                SuperscriptBox["c1", "2"], "-", 
                RowBox[{"1.`", " ", 
                 SuperscriptBox["c2", "2"]}], "+", 
                SuperscriptBox["c3", "2"]}], ")"}]}], 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1.`", "\[VeryThinSpace]", "+", 
                SuperscriptBox["c1", "2"], "+", 
                SuperscriptBox["c2", "2"], "+", 
                SuperscriptBox["c3", "2"]}], ")"}], "2"]], "-", 
            FractionBox["1.271922405996975`", 
             RowBox[{"1.`", "\[VeryThinSpace]", "+", 
              SuperscriptBox["c1", "2"], "+", 
              SuperscriptBox["c2", "2"], "+", 
              SuperscriptBox["c3", "2"]}]], "-", 
            FractionBox[
             RowBox[{"3.792388876832499`", " ", "c3"}], 
             RowBox[{"1.`", "\[VeryThinSpace]", "+", 
              SuperscriptBox["c1", "2"], "+", 
              SuperscriptBox["c2", "2"], "+", 
              SuperscriptBox["c3", "2"]}]]}], ")"}]}], ",", "0.`", ",", "0.`",
          ",", "0.`", ",", "0.`", ",", "0.`", ",", "0.`", ",", "0.`", ",", 
         "0.`", ",", "0.`", ",", "0.`", ",", 
         RowBox[{
          RowBox[{"-", "1.`"}], " ", "l5", " ", 
          RowBox[{"Cos", "[", "\[Psi]5", "]"}]}], ",", "0.`"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"0.`", ",", "0.`", ",", 
         RowBox[{"-", "1.`"}], ",", 
         RowBox[{
          FractionBox[
           RowBox[{"0.5`", " ", 
            RowBox[{"(", 
             RowBox[{"1.8961944384162495`", "\[VeryThinSpace]", "-", 
              RowBox[{"0.6359612029984875`", " ", "c3"}], "-", 
              RowBox[{"4.`", " ", "c1", " ", "z"}], "+", 
              RowBox[{"4.`", " ", "c1", " ", "l5", " ", 
               RowBox[{"Cos", "[", "\[Phi]5", "]"}], " ", 
               RowBox[{"Cos", "[", "\[Psi]5", "]"}]}]}], ")"}]}], 
           RowBox[{"1.`", "\[VeryThinSpace]", "+", 
            SuperscriptBox["c1", "2"], "+", 
            SuperscriptBox["c2", "2"], "+", 
            SuperscriptBox["c3", "2"]}]], "-", 
          FractionBox[
           RowBox[{"1.`", " ", "c1", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"1.8961944384162495`", " ", "c1"}], "+", 
              RowBox[{"0.6359612029984875`", " ", "c2"}], "-", 
              RowBox[{"0.6359612029984875`", " ", "c1", " ", "c3"}], "+", 
              RowBox[{"1.8961944384162495`", " ", "c2", " ", "c3"}], "-", 
              RowBox[{"2.`", " ", 
               RowBox[{"(", 
                RowBox[{"1.`", "\[VeryThinSpace]", "+", 
                 SuperscriptBox["c1", "2"], "+", 
                 SuperscriptBox["c2", "2"], "+", 
                 SuperscriptBox["c3", "2"]}], ")"}], " ", "z"}], "+", 
              RowBox[{"2.`", " ", 
               RowBox[{"(", 
                RowBox[{"1.`", "\[VeryThinSpace]", "+", 
                 SuperscriptBox["c1", "2"], "+", 
                 SuperscriptBox["c2", "2"], "+", 
                 SuperscriptBox["c3", "2"]}], ")"}], " ", "l5", " ", 
               RowBox[{"Cos", "[", "\[Phi]5", "]"}], " ", 
               RowBox[{"Cos", "[", "\[Psi]5", "]"}]}]}], ")"}]}], 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{"1.`", "\[VeryThinSpace]", "+", 
              SuperscriptBox["c1", "2"], "+", 
              SuperscriptBox["c2", "2"], "+", 
              SuperscriptBox["c3", "2"]}], ")"}], "2"]]}], ",", 
         RowBox[{
          FractionBox[
           RowBox[{"0.5`", " ", 
            RowBox[{"(", 
             RowBox[{"0.6359612029984875`", "\[VeryThinSpace]", "+", 
              RowBox[{"1.8961944384162495`", " ", "c3"}], "-", 
              RowBox[{"4.`", " ", "c2", " ", "z"}], "+", 
              RowBox[{"4.`", " ", "c2", " ", "l5", " ", 
               RowBox[{"Cos", "[", "\[Phi]5", "]"}], " ", 
               RowBox[{"Cos", "[", "\[Psi]5", "]"}]}]}], ")"}]}], 
           RowBox[{"1.`", "\[VeryThinSpace]", "+", 
            SuperscriptBox["c1", "2"], "+", 
            SuperscriptBox["c2", "2"], "+", 
            SuperscriptBox["c3", "2"]}]], "-", 
          FractionBox[
           RowBox[{"1.`", " ", "c2", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"1.8961944384162495`", " ", "c1"}], "+", 
              RowBox[{"0.6359612029984875`", " ", "c2"}], "-", 
              RowBox[{"0.6359612029984875`", " ", "c1", " ", "c3"}], "+", 
              RowBox[{"1.8961944384162495`", " ", "c2", " ", "c3"}], "-", 
              RowBox[{"2.`", " ", 
               RowBox[{"(", 
                RowBox[{"1.`", "\[VeryThinSpace]", "+", 
                 SuperscriptBox["c1", "2"], "+", 
                 SuperscriptBox["c2", "2"], "+", 
                 SuperscriptBox["c3", "2"]}], ")"}], " ", "z"}], "+", 
              RowBox[{"2.`", " ", 
               RowBox[{"(", 
                RowBox[{"1.`", "\[VeryThinSpace]", "+", 
                 SuperscriptBox["c1", "2"], "+", 
                 SuperscriptBox["c2", "2"], "+", 
                 SuperscriptBox["c3", "2"]}], ")"}], " ", "l5", " ", 
               RowBox[{"Cos", "[", "\[Phi]5", "]"}], " ", 
               RowBox[{"Cos", "[", "\[Psi]5", "]"}]}]}], ")"}]}], 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{"1.`", "\[VeryThinSpace]", "+", 
              SuperscriptBox["c1", "2"], "+", 
              SuperscriptBox["c2", "2"], "+", 
              SuperscriptBox["c3", "2"]}], ")"}], "2"]]}], ",", 
         RowBox[{
          FractionBox[
           RowBox[{"0.5`", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               RowBox[{"-", "0.6359612029984875`"}], " ", "c1"}], "+", 
              RowBox[{"1.8961944384162495`", " ", "c2"}], "-", 
              RowBox[{"4.`", " ", "c3", " ", "z"}], "+", 
              RowBox[{"4.`", " ", "c3", " ", "l5", " ", 
               RowBox[{"Cos", "[", "\[Phi]5", "]"}], " ", 
               RowBox[{"Cos", "[", "\[Psi]5", "]"}]}]}], ")"}]}], 
           RowBox[{"1.`", "\[VeryThinSpace]", "+", 
            SuperscriptBox["c1", "2"], "+", 
            SuperscriptBox["c2", "2"], "+", 
            SuperscriptBox["c3", "2"]}]], "-", 
          FractionBox[
           RowBox[{"1.`", " ", "c3", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"1.8961944384162495`", " ", "c1"}], "+", 
              RowBox[{"0.6359612029984875`", " ", "c2"}], "-", 
              RowBox[{"0.6359612029984875`", " ", "c1", " ", "c3"}], "+", 
              RowBox[{"1.8961944384162495`", " ", "c2", " ", "c3"}], "-", 
              RowBox[{"2.`", " ", 
               RowBox[{"(", 
                RowBox[{"1.`", "\[VeryThinSpace]", "+", 
                 SuperscriptBox["c1", "2"], "+", 
                 SuperscriptBox["c2", "2"], "+", 
                 SuperscriptBox["c3", "2"]}], ")"}], " ", "z"}], "+", 
              RowBox[{"2.`", " ", 
               RowBox[{"(", 
                RowBox[{"1.`", "\[VeryThinSpace]", "+", 
                 SuperscriptBox["c1", "2"], "+", 
                 SuperscriptBox["c2", "2"], "+", 
                 SuperscriptBox["c3", "2"]}], ")"}], " ", "l5", " ", 
               RowBox[{"Cos", "[", "\[Phi]5", "]"}], " ", 
               RowBox[{"Cos", "[", "\[Psi]5", "]"}]}]}], ")"}]}], 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{"1.`", "\[VeryThinSpace]", "+", 
              SuperscriptBox["c1", "2"], "+", 
              SuperscriptBox["c2", "2"], "+", 
              SuperscriptBox["c3", "2"]}], ")"}], "2"]]}], ",", "0.`", ",", 
         "0.`", ",", "0.`", ",", "0.`", ",", 
         RowBox[{
          RowBox[{"-", "1.`"}], " ", "l5", " ", 
          RowBox[{"Cos", "[", "\[Psi]5", "]"}], " ", 
          RowBox[{"Sin", "[", "\[Phi]5", "]"}]}], ",", "0.`", ",", "0.`", ",",
          "0.`", ",", "0.`", ",", "0.`", ",", 
         RowBox[{
          RowBox[{"-", "1.`"}], " ", "l5", " ", 
          RowBox[{"Cos", "[", "\[Phi]5", "]"}], " ", 
          RowBox[{"Sin", "[", "\[Psi]5", "]"}]}], ",", "0.`"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"-", "1.`"}], ",", "0.`", ",", "0.`", ",", 
         RowBox[{"0.25`", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", 
             FractionBox[
              RowBox[{"5.995423107304509`", " ", "c1", " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"c1", " ", "c2"}], "-", 
                 RowBox[{"1.`", " ", "c3"}]}], ")"}]}], 
              SuperscriptBox[
               RowBox[{"(", 
                RowBox[{"1.`", "\[VeryThinSpace]", "+", 
                 SuperscriptBox["c1", "2"], "+", 
                 SuperscriptBox["c2", "2"], "+", 
                 SuperscriptBox["c3", "2"]}], ")"}], "2"]]}], "+", 
            FractionBox[
             RowBox[{"2.648343905367992`", " ", "c1", " ", 
              RowBox[{"(", 
               RowBox[{"1.`", "\[VeryThinSpace]", "+", 
                SuperscriptBox["c1", "2"], "-", 
                RowBox[{"1.`", " ", 
                 SuperscriptBox["c2", "2"]}], "-", 
                RowBox[{"1.`", " ", 
                 SuperscriptBox["c3", "2"]}]}], ")"}]}], 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1.`", "\[VeryThinSpace]", "+", 
                SuperscriptBox["c1", "2"], "+", 
                SuperscriptBox["c2", "2"], "+", 
                SuperscriptBox["c3", "2"]}], ")"}], "2"]], "-", 
            FractionBox[
             RowBox[{"2.648343905367992`", " ", "c1"}], 
             RowBox[{"1.`", "\[VeryThinSpace]", "+", 
              SuperscriptBox["c1", "2"], "+", 
              SuperscriptBox["c2", "2"], "+", 
              SuperscriptBox["c3", "2"]}]], "+", 
            FractionBox[
             RowBox[{"2.9977115536522545`", " ", "c2"}], 
             RowBox[{"1.`", "\[VeryThinSpace]", "+", 
              SuperscriptBox["c1", "2"], "+", 
              SuperscriptBox["c2", "2"], "+", 
              SuperscriptBox["c3", "2"]}]]}], ")"}]}], ",", 
         RowBox[{"0.25`", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", 
             FractionBox[
              RowBox[{"5.995423107304509`", " ", "c2", " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"c1", " ", "c2"}], "-", 
                 RowBox[{"1.`", " ", "c3"}]}], ")"}]}], 
              SuperscriptBox[
               RowBox[{"(", 
                RowBox[{"1.`", "\[VeryThinSpace]", "+", 
                 SuperscriptBox["c1", "2"], "+", 
                 SuperscriptBox["c2", "2"], "+", 
                 SuperscriptBox["c3", "2"]}], ")"}], "2"]]}], "+", 
            FractionBox[
             RowBox[{"2.648343905367992`", " ", "c2", " ", 
              RowBox[{"(", 
               RowBox[{"1.`", "\[VeryThinSpace]", "+", 
                SuperscriptBox["c1", "2"], "-", 
                RowBox[{"1.`", " ", 
                 SuperscriptBox["c2", "2"]}], "-", 
                RowBox[{"1.`", " ", 
                 SuperscriptBox["c3", "2"]}]}], ")"}]}], 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1.`", "\[VeryThinSpace]", "+", 
                SuperscriptBox["c1", "2"], "+", 
                SuperscriptBox["c2", "2"], "+", 
                SuperscriptBox["c3", "2"]}], ")"}], "2"]], "+", 
            FractionBox[
             RowBox[{"2.9977115536522545`", " ", "c1"}], 
             RowBox[{"1.`", "\[VeryThinSpace]", "+", 
              SuperscriptBox["c1", "2"], "+", 
              SuperscriptBox["c2", "2"], "+", 
              SuperscriptBox["c3", "2"]}]], "+", 
            FractionBox[
             RowBox[{"2.648343905367992`", " ", "c2"}], 
             RowBox[{"1.`", "\[VeryThinSpace]", "+", 
              SuperscriptBox["c1", "2"], "+", 
              SuperscriptBox["c2", "2"], "+", 
              SuperscriptBox["c3", "2"]}]]}], ")"}]}], ",", 
         RowBox[{"0.25`", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", 
             FractionBox[
              RowBox[{"5.995423107304509`", " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"c1", " ", "c2"}], "-", 
                 RowBox[{"1.`", " ", "c3"}]}], ")"}], " ", "c3"}], 
              SuperscriptBox[
               RowBox[{"(", 
                RowBox[{"1.`", "\[VeryThinSpace]", "+", 
                 SuperscriptBox["c1", "2"], "+", 
                 SuperscriptBox["c2", "2"], "+", 
                 SuperscriptBox["c3", "2"]}], ")"}], "2"]]}], "+", 
            FractionBox[
             RowBox[{"2.648343905367992`", " ", "c3", " ", 
              RowBox[{"(", 
               RowBox[{"1.`", "\[VeryThinSpace]", "+", 
                SuperscriptBox["c1", "2"], "-", 
                RowBox[{"1.`", " ", 
                 SuperscriptBox["c2", "2"]}], "-", 
                RowBox[{"1.`", " ", 
                 SuperscriptBox["c3", "2"]}]}], ")"}]}], 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1.`", "\[VeryThinSpace]", "+", 
                SuperscriptBox["c1", "2"], "+", 
                SuperscriptBox["c2", "2"], "+", 
                SuperscriptBox["c3", "2"]}], ")"}], "2"]], "-", 
            FractionBox["2.9977115536522545`", 
             RowBox[{"1.`", "\[VeryThinSpace]", "+", 
              SuperscriptBox["c1", "2"], "+", 
              SuperscriptBox["c2", "2"], "+", 
              SuperscriptBox["c3", "2"]}]], "+", 
            FractionBox[
             RowBox[{"2.648343905367992`", " ", "c3"}], 
             RowBox[{"1.`", "\[VeryThinSpace]", "+", 
              SuperscriptBox["c1", "2"], "+", 
              SuperscriptBox["c2", "2"], "+", 
              SuperscriptBox["c3", "2"]}]]}], ")"}]}], ",", "0.`", ",", "0.`",
          ",", "0.`", ",", "0.`", ",", "0.`", ",", 
         RowBox[{"l6", " ", 
          RowBox[{"Cos", "[", "\[Phi]6", "]"}], " ", 
          RowBox[{"Cos", "[", "\[Psi]6", "]"}]}], ",", "0.`", ",", "0.`", ",",
          "0.`", ",", "0.`", ",", "0.`", ",", 
         RowBox[{
          RowBox[{"-", "1.`"}], " ", "l6", " ", 
          RowBox[{"Sin", "[", "\[Phi]6", "]"}], " ", 
          RowBox[{"Sin", "[", "\[Psi]6", "]"}]}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"0.`", ",", 
         RowBox[{"-", "1.`"}], ",", "0.`", ",", 
         RowBox[{"0.25`", " ", 
          RowBox[{"(", 
           RowBox[{
            FractionBox[
             RowBox[{"5.296687810735984`", " ", "c1", " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"c1", " ", "c2"}], "+", "c3"}], ")"}]}], 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1.`", "\[VeryThinSpace]", "+", 
                SuperscriptBox["c1", "2"], "+", 
                SuperscriptBox["c2", "2"], "+", 
                SuperscriptBox["c3", "2"]}], ")"}], "2"]], "+", 
            FractionBox[
             RowBox[{"2.9977115536522545`", " ", "c1", " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "1.`"}], "+", 
                SuperscriptBox["c1", "2"], "-", 
                RowBox[{"1.`", " ", 
                 SuperscriptBox["c2", "2"]}], "+", 
                SuperscriptBox["c3", "2"]}], ")"}]}], 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1.`", "\[VeryThinSpace]", "+", 
                SuperscriptBox["c1", "2"], "+", 
                SuperscriptBox["c2", "2"], "+", 
                SuperscriptBox["c3", "2"]}], ")"}], "2"]], "-", 
            FractionBox[
             RowBox[{"2.9977115536522545`", " ", "c1"}], 
             RowBox[{"1.`", "\[VeryThinSpace]", "+", 
              SuperscriptBox["c1", "2"], "+", 
              SuperscriptBox["c2", "2"], "+", 
              SuperscriptBox["c3", "2"]}]], "-", 
            FractionBox[
             RowBox[{"2.648343905367992`", " ", "c2"}], 
             RowBox[{"1.`", "\[VeryThinSpace]", "+", 
              SuperscriptBox["c1", "2"], "+", 
              SuperscriptBox["c2", "2"], "+", 
              SuperscriptBox["c3", "2"]}]]}], ")"}]}], ",", 
         RowBox[{"0.25`", " ", 
          RowBox[{"(", 
           RowBox[{
            FractionBox[
             RowBox[{"5.296687810735984`", " ", "c2", " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"c1", " ", "c2"}], "+", "c3"}], ")"}]}], 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1.`", "\[VeryThinSpace]", "+", 
                SuperscriptBox["c1", "2"], "+", 
                SuperscriptBox["c2", "2"], "+", 
                SuperscriptBox["c3", "2"]}], ")"}], "2"]], "+", 
            FractionBox[
             RowBox[{"2.9977115536522545`", " ", "c2", " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "1.`"}], "+", 
                SuperscriptBox["c1", "2"], "-", 
                RowBox[{"1.`", " ", 
                 SuperscriptBox["c2", "2"]}], "+", 
                SuperscriptBox["c3", "2"]}], ")"}]}], 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1.`", "\[VeryThinSpace]", "+", 
                SuperscriptBox["c1", "2"], "+", 
                SuperscriptBox["c2", "2"], "+", 
                SuperscriptBox["c3", "2"]}], ")"}], "2"]], "-", 
            FractionBox[
             RowBox[{"2.648343905367992`", " ", "c1"}], 
             RowBox[{"1.`", "\[VeryThinSpace]", "+", 
              SuperscriptBox["c1", "2"], "+", 
              SuperscriptBox["c2", "2"], "+", 
              SuperscriptBox["c3", "2"]}]], "+", 
            FractionBox[
             RowBox[{"2.9977115536522545`", " ", "c2"}], 
             RowBox[{"1.`", "\[VeryThinSpace]", "+", 
              SuperscriptBox["c1", "2"], "+", 
              SuperscriptBox["c2", "2"], "+", 
              SuperscriptBox["c3", "2"]}]]}], ")"}]}], ",", 
         RowBox[{"0.25`", " ", 
          RowBox[{"(", 
           RowBox[{
            FractionBox[
             RowBox[{"5.296687810735984`", " ", "c3", " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"c1", " ", "c2"}], "+", "c3"}], ")"}]}], 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1.`", "\[VeryThinSpace]", "+", 
                SuperscriptBox["c1", "2"], "+", 
                SuperscriptBox["c2", "2"], "+", 
                SuperscriptBox["c3", "2"]}], ")"}], "2"]], "+", 
            FractionBox[
             RowBox[{"2.9977115536522545`", " ", "c3", " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "1.`"}], "+", 
                SuperscriptBox["c1", "2"], "-", 
                RowBox[{"1.`", " ", 
                 SuperscriptBox["c2", "2"]}], "+", 
                SuperscriptBox["c3", "2"]}], ")"}]}], 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1.`", "\[VeryThinSpace]", "+", 
                SuperscriptBox["c1", "2"], "+", 
                SuperscriptBox["c2", "2"], "+", 
                SuperscriptBox["c3", "2"]}], ")"}], "2"]], "-", 
            FractionBox["2.648343905367992`", 
             RowBox[{"1.`", "\[VeryThinSpace]", "+", 
              SuperscriptBox["c1", "2"], "+", 
              SuperscriptBox["c2", "2"], "+", 
              SuperscriptBox["c3", "2"]}]], "-", 
            FractionBox[
             RowBox[{"2.9977115536522545`", " ", "c3"}], 
             RowBox[{"1.`", "\[VeryThinSpace]", "+", 
              SuperscriptBox["c1", "2"], "+", 
              SuperscriptBox["c2", "2"], "+", 
              SuperscriptBox["c3", "2"]}]]}], ")"}]}], ",", "0.`", ",", "0.`",
          ",", "0.`", ",", "0.`", ",", "0.`", ",", "0.`", ",", "0.`", ",", 
         "0.`", ",", "0.`", ",", "0.`", ",", "0.`", ",", 
         RowBox[{
          RowBox[{"-", "1.`"}], " ", "l6", " ", 
          RowBox[{"Cos", "[", "\[Psi]6", "]"}]}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"0.`", ",", "0.`", ",", 
         RowBox[{"-", "1.`"}], ",", 
         RowBox[{"0.5`", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", 
             FractionBox[
              RowBox[{"2.648343905367992`", " ", "c1", " ", 
               RowBox[{"(", 
                RowBox[{"c2", "-", 
                 RowBox[{"1.`", " ", "c1", " ", "c3"}]}], ")"}]}], 
              SuperscriptBox[
               RowBox[{"(", 
                RowBox[{"1.`", "\[VeryThinSpace]", "+", 
                 SuperscriptBox["c1", "2"], "+", 
                 SuperscriptBox["c2", "2"], "+", 
                 SuperscriptBox["c3", "2"]}], ")"}], "2"]]}], "-", 
            FractionBox[
             RowBox[{"2.9977115536522545`", " ", "c1", " ", 
              RowBox[{"(", 
               RowBox[{"c1", "+", 
                RowBox[{"c2", " ", "c3"}]}], ")"}]}], 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1.`", "\[VeryThinSpace]", "+", 
                SuperscriptBox["c1", "2"], "+", 
                SuperscriptBox["c2", "2"], "+", 
                SuperscriptBox["c3", "2"]}], ")"}], "2"]], "+", 
            FractionBox["1.4988557768261273`", 
             RowBox[{"1.`", "\[VeryThinSpace]", "+", 
              SuperscriptBox["c1", "2"], "+", 
              SuperscriptBox["c2", "2"], "+", 
              SuperscriptBox["c3", "2"]}]], "-", 
            FractionBox[
             RowBox[{"1.324171952683996`", " ", "c3"}], 
             RowBox[{"1.`", "\[VeryThinSpace]", "+", 
              SuperscriptBox["c1", "2"], "+", 
              SuperscriptBox["c2", "2"], "+", 
              SuperscriptBox["c3", "2"]}]]}], ")"}]}], ",", 
         RowBox[{"0.5`", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", 
             FractionBox[
              RowBox[{"2.648343905367992`", " ", "c2", " ", 
               RowBox[{"(", 
                RowBox[{"c2", "-", 
                 RowBox[{"1.`", " ", "c1", " ", "c3"}]}], ")"}]}], 
              SuperscriptBox[
               RowBox[{"(", 
                RowBox[{"1.`", "\[VeryThinSpace]", "+", 
                 SuperscriptBox["c1", "2"], "+", 
                 SuperscriptBox["c2", "2"], "+", 
                 SuperscriptBox["c3", "2"]}], ")"}], "2"]]}], "-", 
            FractionBox[
             RowBox[{"2.9977115536522545`", " ", "c2", " ", 
              RowBox[{"(", 
               RowBox[{"c1", "+", 
                RowBox[{"c2", " ", "c3"}]}], ")"}]}], 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1.`", "\[VeryThinSpace]", "+", 
                SuperscriptBox["c1", "2"], "+", 
                SuperscriptBox["c2", "2"], "+", 
                SuperscriptBox["c3", "2"]}], ")"}], "2"]], "+", 
            FractionBox["1.324171952683996`", 
             RowBox[{"1.`", "\[VeryThinSpace]", "+", 
              SuperscriptBox["c1", "2"], "+", 
              SuperscriptBox["c2", "2"], "+", 
              SuperscriptBox["c3", "2"]}]], "+", 
            FractionBox[
             RowBox[{"1.4988557768261273`", " ", "c3"}], 
             RowBox[{"1.`", "\[VeryThinSpace]", "+", 
              SuperscriptBox["c1", "2"], "+", 
              SuperscriptBox["c2", "2"], "+", 
              SuperscriptBox["c3", "2"]}]]}], ")"}]}], ",", 
         RowBox[{"0.5`", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", 
             FractionBox[
              RowBox[{"2.648343905367992`", " ", "c3", " ", 
               RowBox[{"(", 
                RowBox[{"c2", "-", 
                 RowBox[{"1.`", " ", "c1", " ", "c3"}]}], ")"}]}], 
              SuperscriptBox[
               RowBox[{"(", 
                RowBox[{"1.`", "\[VeryThinSpace]", "+", 
                 SuperscriptBox["c1", "2"], "+", 
                 SuperscriptBox["c2", "2"], "+", 
                 SuperscriptBox["c3", "2"]}], ")"}], "2"]]}], "-", 
            FractionBox[
             RowBox[{"2.9977115536522545`", " ", "c3", " ", 
              RowBox[{"(", 
               RowBox[{"c1", "+", 
                RowBox[{"c2", " ", "c3"}]}], ")"}]}], 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1.`", "\[VeryThinSpace]", "+", 
                SuperscriptBox["c1", "2"], "+", 
                SuperscriptBox["c2", "2"], "+", 
                SuperscriptBox["c3", "2"]}], ")"}], "2"]], "-", 
            FractionBox[
             RowBox[{"1.324171952683996`", " ", "c1"}], 
             RowBox[{"1.`", "\[VeryThinSpace]", "+", 
              SuperscriptBox["c1", "2"], "+", 
              SuperscriptBox["c2", "2"], "+", 
              SuperscriptBox["c3", "2"]}]], "+", 
            FractionBox[
             RowBox[{"1.4988557768261273`", " ", "c2"}], 
             RowBox[{"1.`", "\[VeryThinSpace]", "+", 
              SuperscriptBox["c1", "2"], "+", 
              SuperscriptBox["c2", "2"], "+", 
              SuperscriptBox["c3", "2"]}]]}], ")"}]}], ",", "0.`", ",", "0.`",
          ",", "0.`", ",", "0.`", ",", "0.`", ",", 
         RowBox[{
          RowBox[{"-", "1.`"}], " ", "l6", " ", 
          RowBox[{"Cos", "[", "\[Psi]6", "]"}], " ", 
          RowBox[{"Sin", "[", "\[Phi]6", "]"}]}], ",", "0.`", ",", "0.`", ",",
          "0.`", ",", "0.`", ",", "0.`", ",", 
         RowBox[{
          RowBox[{"-", "1.`"}], " ", "l6", " ", 
          RowBox[{"Cos", "[", "\[Phi]6", "]"}], " ", 
          RowBox[{"Sin", "[", "\[Psi]6", "]"}]}]}], "}"}]}], "}"}], "/.", 
     "\[VeryThinSpace]", 
     RowBox[{"Inner", "[", 
      RowBox[{"Rule", ",", 
       RowBox[{"{", 
        RowBox[{
        "x", ",", "y", ",", "z", ",", "c1", ",", "c2", ",", "c3", ",", 
         "\[Phi]1", ",", "\[Phi]2", ",", "\[Phi]3", ",", "\[Phi]4", ",", 
         "\[Phi]5", ",", "\[Phi]6", ",", "\[Psi]1", ",", "\[Psi]2", ",", 
         "\[Psi]3", ",", "\[Psi]4", ",", "\[Psi]5", ",", "\[Psi]6", ",", "l1",
          ",", "l2", ",", "l3", ",", "l4", ",", "l5", ",", "l6"}], "}"}], ",", 
       RowBox[{
       "qecdat", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], ",", 
       "List"}], "]"}]}], "]"}], ".", 
   RowBox[{"(", 
    RowBox[{"J\[Eta]\[Theta]", "/.", "\[VeryThinSpace]", 
     RowBox[{"Inner", "[", 
      RowBox[{"Rule", ",", 
       RowBox[{"{", 
        RowBox[{
        "x", ",", "y", ",", "z", ",", "c1", ",", "c2", ",", "c3", ",", 
         "\[Phi]1", ",", "\[Phi]2", ",", "\[Phi]3", ",", "\[Phi]4", ",", 
         "\[Phi]5", ",", "\[Phi]6", ",", "\[Psi]1", ",", "\[Psi]2", ",", 
         "\[Psi]3", ",", "\[Psi]4", ",", "\[Psi]5", ",", "\[Psi]6", ",", "l1",
          ",", "l2", ",", "l3", ",", "l4", ",", "l5", ",", "l6"}], "}"}], ",", 
       RowBox[{
       "qecdat", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], ",", 
       "List"}], "]"}]}], ")"}], ".", 
   RowBox[{"{", 
    RowBox[{"1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1"}], 
    "}"}]}]}]], "Output",
 CellChangeTimes->{{3.7661540786309233`*^9, 3.766154129175131*^9}, 
   3.7661567131408005`*^9, 3.7661568336405954`*^9, 3.7662150574814577`*^9, 
   3.766215111505185*^9, 3.766268078699195*^9, 
   3.7662917112880735`*^9},ExpressionUUID->"5818d4cf-3a3c-4c8f-91b0-\
34c1ce265f3c"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"(", 
    RowBox[{"J\[Eta]\[Theta]", "/.", "qnewlist"}], ")"}], ".", 
   RowBox[{"ConstantArray", "[", 
    RowBox[{"1", ",", " ", 
     RowBox[{"{", "6", "}"}]}], "]"}]}], "//", "MatrixForm"}]], "Input",
 CellChangeTimes->{{3.7661541666903315`*^9, 
  3.766154169446411*^9}},ExpressionUUID->"487bde77-ca74-463b-a4d3-\
1fa341fc09b0"],

Cell[BoxData[
 TemplateBox[{
  "ReplaceAll","reps",
   "\"\\!\\(\\*RowBox[{\\\"{\\\", RowBox[{\\\"Inner\\\", \\\"[\\\", \
RowBox[{\\\"Rule\\\", \\\",\\\", RowBox[{\\\"{\\\", RowBox[{\\\"x\\\", \
\\\",\\\", \\\"y\\\", \\\",\\\", \\\"z\\\", \\\",\\\", \\\"c1\\\", \\\",\\\", \
\\\"c2\\\", \\\",\\\", \\\"c3\\\", \\\",\\\", \\\"\[Phi]1\\\", \\\",\\\", \
\\\"\[Phi]2\\\", \\\",\\\", \\\"\[Phi]3\\\", \\\",\\\", \\\"\[Phi]4\\\", \
\\\",\\\", \\\"\[Phi]5\\\", \\\",\\\", \\\"\[Phi]6\\\", \\\",\\\", \
\\\"\[Psi]1\\\", \\\",\\\", \\\"\[Psi]2\\\", \\\",\\\", \\\"\[Psi]3\\\", \
\\\",\\\", \\\"\[Psi]4\\\", \\\",\\\", \\\"\[Psi]5\\\", \\\",\\\", \
\\\"\[Psi]6\\\", \\\",\\\", \\\"l1\\\", \\\",\\\", \\\"l2\\\", \\\",\\\", \
\\\"l3\\\", \\\",\\\", \\\"l4\\\", \\\",\\\", \\\"l5\\\", \\\",\\\", \\\"l6\\\
\"}], \\\"}\\\"}], \\\",\\\", RowBox[{\\\"qecdat\\\", \
\\\"\[LeftDoubleBracket]\\\", \\\"1\\\", \\\"\[RightDoubleBracket]\\\"}], \
\\\",\\\", \\\"List\\\"}], \\\"]\\\"}], \\\"}\\\"}]\\) is neither a list of \
replacement rules nor a valid dispatch table, and so cannot be used for \
replacing.\"",2,98,12,25993525642924664479,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.766268078913072*^9, 
  3.7662917114299917`*^9},ExpressionUUID->"4f042a17-b865-47ff-9ca4-\
5db19d0ac522"],

Cell[BoxData[
 TagBox[
  RowBox[{
   RowBox[{"(", 
    RowBox[{"J\[Eta]\[Theta]", "/.", "\[VeryThinSpace]", 
     RowBox[{"Inner", "[", 
      RowBox[{"Rule", ",", 
       RowBox[{"{", 
        RowBox[{
        "x", ",", "y", ",", "z", ",", "c1", ",", "c2", ",", "c3", ",", 
         "\[Phi]1", ",", "\[Phi]2", ",", "\[Phi]3", ",", "\[Phi]4", ",", 
         "\[Phi]5", ",", "\[Phi]6", ",", "\[Psi]1", ",", "\[Psi]2", ",", 
         "\[Psi]3", ",", "\[Psi]4", ",", "\[Psi]5", ",", "\[Psi]6", ",", "l1",
          ",", "l2", ",", "l3", ",", "l4", ",", "l5", ",", "l6"}], "}"}], ",", 
       RowBox[{
       "qecdat", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], ",", 
       "List"}], "]"}]}], ")"}], ".", 
   RowBox[{"{", 
    RowBox[{"1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1"}], "}"}]}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{{3.7661541541395826`*^9, 3.766154169778669*^9}, 
   3.766156713218756*^9, 3.7661568346080065`*^9, 3.766215057659356*^9, 
   3.766215112290715*^9, 3.7662680789550467`*^9, 
   3.7662917114799633`*^9},ExpressionUUID->"6fc503b1-ddc4-45be-a23e-\
6d7c10e13a6c"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"-", 
   RowBox[{
    RowBox[{"N", "[", 
     RowBox[{"tempJ", "/.", "qnewlist"}], "]"}], ".", "lhsvec"}]}], "//", 
  "MatrixForm"}]], "Input",
 CellChangeTimes->{{3.766154133475713*^9, 
  3.7661541769396925`*^9}},ExpressionUUID->"3de93e0e-359e-4c0d-8476-\
d93ef003f0e9"],

Cell[BoxData[
 TemplateBox[{
  "ReplaceAll","reps",
   "\"\\!\\(\\*RowBox[{\\\"{\\\", RowBox[{\\\"Inner\\\", \\\"[\\\", \
RowBox[{\\\"Rule\\\", \\\",\\\", RowBox[{\\\"{\\\", RowBox[{\\\"x\\\", \
\\\",\\\", \\\"y\\\", \\\",\\\", \\\"z\\\", \\\",\\\", \\\"c1\\\", \\\",\\\", \
\\\"c2\\\", \\\",\\\", \\\"c3\\\", \\\",\\\", \\\"\[Phi]1\\\", \\\",\\\", \
\\\"\[Phi]2\\\", \\\",\\\", \\\"\[Phi]3\\\", \\\",\\\", \\\"\[Phi]4\\\", \
\\\",\\\", \\\"\[Phi]5\\\", \\\",\\\", \\\"\[Phi]6\\\", \\\",\\\", \
\\\"\[Psi]1\\\", \\\",\\\", \\\"\[Psi]2\\\", \\\",\\\", \\\"\[Psi]3\\\", \
\\\",\\\", \\\"\[Psi]4\\\", \\\",\\\", \\\"\[Psi]5\\\", \\\",\\\", \
\\\"\[Psi]6\\\", \\\",\\\", \\\"l1\\\", \\\",\\\", \\\"l2\\\", \\\",\\\", \
\\\"l3\\\", \\\",\\\", \\\"l4\\\", \\\",\\\", \\\"l5\\\", \\\",\\\", \\\"l6\\\
\"}], \\\"}\\\"}], \\\",\\\", RowBox[{\\\"qecdat\\\", \
\\\"\[LeftDoubleBracket]\\\", \\\"1\\\", \\\"\[RightDoubleBracket]\\\"}], \
\\\",\\\", \\\"List\\\"}], \\\"]\\\"}], \\\"}\\\"}]\\) is neither a list of \
replacement rules nor a valid dispatch table, and so cannot be used for \
replacing.\"",2,99,13,25993525642924664479,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.7662680789900265`*^9, 
  3.7662917115179625`*^9},ExpressionUUID->"6efb41ab-5e60-4d4d-a53c-\
0593528902e3"],

Cell[BoxData[
 TemplateBox[{
  "ReplaceAll","reps",
   "\"\\!\\(\\*RowBox[{\\\"{\\\", RowBox[{\\\"Inner\\\", \\\"[\\\", \
RowBox[{\\\"Rule\\\", \\\",\\\", RowBox[{\\\"{\\\", RowBox[{\\\"x\\\", \
\\\",\\\", \\\"y\\\", \\\",\\\", \\\"z\\\", \\\",\\\", \\\"c1\\\", \\\",\\\", \
\\\"c2\\\", \\\",\\\", \\\"c3\\\", \\\",\\\", \\\"\[Phi]1\\\", \\\",\\\", \
\\\"\[Phi]2\\\", \\\",\\\", \\\"\[Phi]3\\\", \\\",\\\", \\\"\[Phi]4\\\", \
\\\",\\\", \\\"\[Phi]5\\\", \\\",\\\", \\\"\[Phi]6\\\", \\\",\\\", \
\\\"\[Psi]1\\\", \\\",\\\", \\\"\[Psi]2\\\", \\\",\\\", \\\"\[Psi]3\\\", \
\\\",\\\", \\\"\[Psi]4\\\", \\\",\\\", \\\"\[Psi]5\\\", \\\",\\\", \
\\\"\[Psi]6\\\", \\\",\\\", \\\"l1\\\", \\\",\\\", \\\"l2\\\", \\\",\\\", \
\\\"l3\\\", \\\",\\\", \\\"l4\\\", \\\",\\\", \\\"l5\\\", \\\",\\\", \\\"l6\\\
\"}], \\\"}\\\"}], \\\",\\\", RowBox[{\\\"qecdat\\\", \
\\\"\[LeftDoubleBracket]\\\", \\\"1\\\", \\\"\[RightDoubleBracket]\\\"}], \
\\\",\\\", \\\"List\\\"}], \\\"]\\\"}], \\\"}\\\"}]\\) is neither a list of \
replacement rules nor a valid dispatch table, and so cannot be used for \
replacing.\"",2,99,14,25993525642924664479,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.7662680789900265`*^9, 
  3.766291711560917*^9},ExpressionUUID->"4dfa8795-65f8-4711-b03a-\
d2a931f39ba6"],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   FrameBox[GridBox[{
      {
       ItemBox[
        TagBox[
         TagBox[
          RowBox[{"-", 
           TemplateBox[{"1"},
            "OutputSizeLimit`Skeleton"]}],
          Function[BoxForm`e$, 
           MatrixForm[BoxForm`e$]]],
         Short[#, 5]& ],
        BaseStyle->{Deployed -> False},
        StripOnInput->False]},
      {GridBox[{
         {
          TagBox[
           TooltipBox[
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource[
                "FEStrings", "sizeBriefExplanation"], StandardForm],
               ImageSizeCache->{65., {3., 9.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLText",
             StripOnInput->False],
            StyleBox[
             DynamicBox[
              ToBoxes[
               FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"], 
               StandardForm]], DynamicUpdating -> True, StripOnInput -> 
             False]],
           Annotation[#, 
            Style[
             Dynamic[
              FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"]], 
             DynamicUpdating -> True], "Tooltip"]& ], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm],
               ImageSizeCache->{52., {1., 9.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           BaselinePosition->Baseline,
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
             Composition[OutputSizeLimit`Defer, 
              Function[{OutputSizeLimit`Dump`x$}, 
               MatrixForm[OutputSizeLimit`Dump`x$]]], 99, 
             25993525642924664479, 5/2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm],
               ImageSizeCache->{62., {1., 9.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           BaselinePosition->Baseline,
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
             Composition[OutputSizeLimit`Defer, 
              Function[{OutputSizeLimit`Dump`x$}, 
               MatrixForm[OutputSizeLimit`Dump`x$]]], 99, 
             25993525642924664479, 5 2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm],
               ImageSizeCache->{44., {1., 9.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           BaselinePosition->Baseline,
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
             Composition[OutputSizeLimit`Defer, 
              Function[{OutputSizeLimit`Dump`x$}, 
               MatrixForm[OutputSizeLimit`Dump`x$]]], 99, 
             25993525642924664479, Infinity],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm],
               ImageSizeCache->{78., {1., 9.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           BaselinePosition->Baseline,
           ButtonFunction:>FrontEndExecute[{
              FrontEnd`SetOptions[
              FrontEnd`$FrontEnd, 
               FrontEnd`PreferencesSettings -> {"Page" -> "Advanced"}], 
              FrontEnd`FrontEndToken["PreferencesDialog"]}],
           Evaluator->None,
           Method->"Preemptive"]}
        },
        AutoDelete->False,
        FrameStyle->GrayLevel[0.85],
        GridBoxDividers->{"Columns" -> {False, {True}}},
        GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
        GridBoxSpacings->{"Columns" -> {{2}}}]}
     },
     DefaultBaseStyle->"Column",
     GridBoxAlignment->{
      "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
       "RowsIndexed" -> {}},
     GridBoxDividers->{
      "Columns" -> {{False}}, "ColumnsIndexed" -> {}, "Rows" -> {{False}}, 
       "RowsIndexed" -> {}},
     GridBoxItemSize->{
      "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
       "RowsIndexed" -> {}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.5599999999999999]}, 
         Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
         Offset[0.2], 
         Offset[1.2], {
          Offset[0.4]}, 
         Offset[0.2]}, "RowsIndexed" -> {}}],
    BaseStyle->"OutputSizeLimit",
    FrameMargins->{{12, 12}, {0, 15}},
    FrameStyle->GrayLevel[0.85],
    RoundingRadius->5,
    StripOnInput->False],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  If[25993525642924664479 === $SessionID, 
   Out[99], Message[
     MessageName[Syntax, "noinfoker"]]; Missing["NotAvailable"]; 
   Null]]], "Output",
 CellChangeTimes->{3.7661541453742304`*^9, 3.7661541773515778`*^9, 
  3.766156713413649*^9, 3.7661568358762827`*^9, 3.766215057840252*^9, 
  3.766215113065273*^9, 3.7662680792468805`*^9, 
  3.766291711684845*^9},ExpressionUUID->"bf502146-512f-450a-bebc-\
d6d7041521de"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"SingularValueList", "[", 
   RowBox[{"N", "[", 
    RowBox[{
     RowBox[{"tempJ", "/.", "test"}], ",", " ", "50"}], "]"}], "]"}], "//", 
  "Dimensions"}]], "Input",
 CellChangeTimes->{{3.7661535764963813`*^9, 
  3.76615362056439*^9}},ExpressionUUID->"21fa3dd8-9f6c-4c8b-82ed-\
ef2a848b3c2f"],

Cell[BoxData[
 RowBox[{"{", "15", "}"}]], "Output",
 CellChangeTimes->{{3.766153583920519*^9, 3.76615362084832*^9}, 
   3.766156713642514*^9, 3.766156837144557*^9, 3.7662150580381393`*^9, 
   3.766215113781536*^9, 3.76626807937081*^9, 
   3.766291711795785*^9},ExpressionUUID->"d33a3d6e-f76a-4eeb-b3cd-\
cfc19729b7d0"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"MatrixRank", "[", 
  RowBox[{"N", "[", 
   RowBox[{"tempJ", "/.", "test"}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.766152833981559*^9, 3.7661528410787287`*^9}, {
  3.766152885966195*^9, 3.766152927970434*^9}, {3.766153283930152*^9, 
  3.7661532854386616`*^9}},ExpressionUUID->"b7d3b6bb-7beb-4a54-996a-\
3838e46bfbaa"],

Cell[BoxData["15"], "Output",
 CellChangeTimes->{
  3.766152842683402*^9, {3.766152887322564*^9, 3.7661529104471884`*^9}, {
   3.766153281417296*^9, 3.766153285858554*^9}, 3.766156713738493*^9, 
   3.7661568378281918`*^9, 3.7662150582390237`*^9, 3.766215114361204*^9, 
   3.766268079433777*^9, 
   3.7662917119027214`*^9},ExpressionUUID->"eee770d3-718e-4634-8e8a-\
17b79659c326"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"ctempJ", " ", "=", " ", 
   RowBox[{"Compile", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"x", ",", " ", "_Real"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"y", ",", " ", "_Real"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"z", ",", " ", "_Real"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"c1", ",", " ", "_Real"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"c2", ",", " ", "_Real"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"c3", ",", " ", "_Real"}], "}"}], ",", " ", 
       RowBox[{"{", 
        RowBox[{"\[Phi]1", ",", " ", "_Real"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"\[Phi]2", ",", " ", "_Real"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"\[Phi]3", ",", " ", "_Real"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"\[Phi]4", ",", " ", "_Real"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"\[Phi]5", ",", " ", "_Real"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"\[Phi]6", ",", " ", "_Real"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"\[Psi]1", ",", " ", "_Real"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"\[Psi]2", ",", " ", "_Real"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"\[Psi]3", ",", " ", "_Real"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"\[Psi]4", ",", " ", "_Real"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"\[Psi]5", ",", " ", "_Real"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"\[Psi]6", ",", " ", "_Real"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"l1", ",", " ", "_Real"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"l2", ",", " ", "_Real"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"l3", ",", " ", "_Real"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"l4", ",", " ", "_Real"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"l5", ",", " ", "_Real"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"l6", ",", " ", "_Real"}], "}"}]}], "}"}], ",", " ", 
     RowBox[{"Evaluate", "[", "tempJ", "]"}]}], "]"}]}], ";"}]], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{{3.757949669035951*^9, 3.7579496717977176`*^9}, {
   3.757949717260193*^9, 3.757949738949853*^9}, {3.76102830888195*^9, 
   3.761028333132729*^9}, 3.7624792462687125`*^9, {3.766152778309066*^9, 
   3.766152786873534*^9}},ExpressionUUID->"2ac456a9-60d2-43bd-9c60-\
91230c7bc99f"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"als", " ", "=", " ", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"al1x", ",", " ", "al1y", ",", " ", "0"}], "}"}], ",", " ", 
     RowBox[{"{", 
      RowBox[{"al2x", ",", " ", "al2y", ",", " ", "0"}], "}"}], ",", " ", 
     RowBox[{"{", 
      RowBox[{"al3x", ",", " ", "al3y", ",", " ", "0"}], "}"}], ",", " ", 
     RowBox[{"{", 
      RowBox[{"al4x", ",", " ", "al4y", ",", " ", "0"}], "}"}], ",", " ", 
     RowBox[{"{", 
      RowBox[{"al5x", ",", " ", "al5y", ",", " ", "0"}], "}"}], ",", " ", 
     RowBox[{"{", 
      RowBox[{"al6x", ",", " ", "al6y", ",", " ", "0"}], "}"}]}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"bs", " ", "=", " ", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"b1x", ",", " ", "b1y", ",", " ", "0"}], "}"}], ",", " ", 
      RowBox[{"{", 
       RowBox[{"b2x", ",", " ", "b2y", ",", " ", "0"}], "}"}], ",", " ", 
      RowBox[{"{", 
       RowBox[{"b3x", ",", " ", "b3y", ",", " ", "0"}], "}"}], ",", " ", 
      RowBox[{"{", 
       RowBox[{"b4x", ",", " ", "b4y", ",", " ", "0"}], "}"}], ",", " ", 
      RowBox[{"{", 
       RowBox[{"b5x", ",", " ", "b5y", ",", " ", "0"}], "}"}], ",", " ", 
      RowBox[{"{", 
       RowBox[{"b6x", ",", " ", "b6y", ",", " ", "0"}], "}"}]}], "}"}]}], 
   ";"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"alsrules", " ", "=", " ", 
   RowBox[{"Inner", "[", 
    RowBox[{"Rule", ",", " ", 
     RowBox[{"Flatten", "[", 
      RowBox[{"als", "[", 
       RowBox[{"[", 
        RowBox[{";;", ",", " ", 
         RowBox[{"1", ";;", "2"}]}], "]"}], "]"}], "]"}], ",", " ", 
     RowBox[{"Flatten", "[", 
      RowBox[{"al", "[", 
       RowBox[{"[", 
        RowBox[{";;", ",", " ", 
         RowBox[{"1", ";;", "2"}]}], "]"}], "]"}], "]"}], ",", " ", "List"}], 
    "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"bsrules", " ", "=", " ", 
    RowBox[{"Inner", "[", 
     RowBox[{"Rule", ",", " ", 
      RowBox[{"Flatten", "[", 
       RowBox[{"bs", "[", 
        RowBox[{"[", 
         RowBox[{";;", ",", " ", 
          RowBox[{"1", ";;", "2"}]}], "]"}], "]"}], "]"}], ",", " ", 
      RowBox[{"Flatten", "[", 
       RowBox[{"b", "[", 
        RowBox[{"[", 
         RowBox[{";;", ",", " ", 
          RowBox[{"1", ";;", "2"}]}], "]"}], "]"}], "]"}], ",", " ", "List"}],
      "]"}]}], ";"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"atps", " ", "=", " ", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"pc", "+", 
      RowBox[{"Rtp", ".", 
       RowBox[{"als", "[", 
        RowBox[{"[", "i", "]"}], "]"}]}]}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "6"}], "}"}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ajs", " ", "=", " ", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"bs", "[", 
       RowBox[{"[", "i", "]"}], "]"}], "+", 
      RowBox[{
       RowBox[{"Rl", "[", 
        RowBox[{"[", "i", "]"}], "]"}], ".", 
       RowBox[{"{", 
        RowBox[{"0", ",", "0", ",", 
         RowBox[{"l", "[", 
          RowBox[{"[", "i", "]"}], "]"}]}], "}"}]}]}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", " ", "6"}], "}"}]}], "]"}]}], ";"}]}], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{{3.757778825445179*^9, 3.757778954953791*^9}, 
   3.7624792462687125`*^9, {3.7660202582203693`*^9, 
   3.7660202625678806`*^9}},ExpressionUUID->"74a66258-2919-4eb3-8f86-\
29aca48c171a"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"J\[Eta]q", " ", "=", " ", 
   RowBox[{"D", "[", 
    RowBox[{"\[Eta]", ",", " ", 
     RowBox[{"{", "qq", "}"}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"J\[Eta]x", " ", "=", 
   RowBox[{"D", "[", 
    RowBox[{"\[Eta]", ",", " ", 
     RowBox[{"{", "qx", "}"}]}], "]"}]}], ";"}]}], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{{3.757948249330325*^9, 3.757948307758848*^9}, {
   3.761027999408804*^9, 3.761028012364993*^9}, {3.7610283271389823`*^9, 
   3.7610283279290934`*^9}, 
   3.7624792462687125`*^9},ExpressionUUID->"03cfe517-eb87-41ba-9c38-\
62d910f4f106"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"d\[Phi]", " ", "=", " ", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"Symbol", "[", 
      RowBox[{"\"\<d\[Phi]\>\"", "<>", 
       RowBox[{"ToString", "[", "i", "]"}]}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", " ", "6"}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"d\[Psi]", " ", "=", " ", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"Symbol", "[", 
      RowBox[{"\"\<d\[Psi]\>\"", "<>", 
       RowBox[{"ToString", "[", "i", "]"}]}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", " ", "6"}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"dl", " ", "=", " ", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"Symbol", "[", 
      RowBox[{"\"\<dl\>\"", "<>", 
       RowBox[{"ToString", "[", "i", "]"}]}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", " ", "6"}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"dq", " ", "=", " ", 
   RowBox[{"Join", "[", 
    RowBox[{"d\[Phi]", ",", " ", "d\[Psi]", ",", "dl"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"dqrule", " ", "=", " ", 
   RowBox[{"Inner", "[", 
    RowBox[{"Rule", ",", " ", 
     RowBox[{"D", "[", 
      RowBox[{
       RowBox[{"qq", "/.", "qrule"}], ",", " ", "t"}], "]"}], ",", " ", "dq", 
     ",", " ", "List"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"rq\[Phi]rule", "=", " ", 
   RowBox[{"Join", "[", 
    RowBox[{
     RowBox[{"Inner", "[", 
      RowBox[{"Rule", ",", 
       RowBox[{"qq", "/.", "qrule"}], ",", " ", "qq", ",", " ", "List"}], 
      "]"}], ",", " ", "dqrule"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"rxrule", " ", "=", " ", 
   RowBox[{"Inner", "[", 
    RowBox[{"Rule", ",", " ", 
     RowBox[{"qx", "/.", "qrule"}], ",", " ", "qx", ",", " ", "List"}], 
    "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"drxrule", " ", "=", " ", 
   RowBox[{"Inner", "[", 
    RowBox[{"Rule", ",", " ", 
     RowBox[{"D", "[", 
      RowBox[{
       RowBox[{"qx", "/.", "qrule"}], ",", " ", "t"}], "]"}], ",", " ", 
     RowBox[{"{", 
      RowBox[{
      "dx", ",", " ", "dy", ",", " ", "dz", ",", " ", "dc1", ",", " ", "dc2", 
       ",", " ", "dc3"}], "}"}], ",", " ", "List"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"rqrule", " ", "=", " ", 
   RowBox[{"Join", "[", 
    RowBox[{"rxrule", ",", " ", "drxrule", ",", " ", "rq\[Phi]rule"}], 
    "]"}]}], ";"}]}], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{{3.757906300527628*^9, 3.757906301631415*^9}, {
   3.7579063515990458`*^9, 3.7579063823710403`*^9}, {3.7579064329149942`*^9, 
   3.757906438502611*^9}, {3.757906499892932*^9, 3.7579065022477365`*^9}, {
   3.757906565011912*^9, 3.757906567743388*^9}, {3.7579498542312465`*^9, 
   3.7579498808191547`*^9}, {3.757949926336569*^9, 3.757949965906754*^9}, {
   3.757950001043779*^9, 3.7579500496784563`*^9}, {3.7610280402549515`*^9, 
   3.7610280438951283`*^9}, 
   3.7624792462687125`*^9},ExpressionUUID->"7bbbcaa7-2ecc-4223-87ac-\
2609d71c6ce7"],

Cell[BoxData[
 RowBox[{
  RowBox[{"cJ\[Eta]q", " ", "=", " ", 
   RowBox[{"Compile", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"x", ",", " ", "_Real"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"y", ",", " ", "_Real"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"z", ",", " ", "_Real"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"c1", ",", " ", "_Real"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"c2", ",", " ", "_Real"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"c3", ",", " ", "_Real"}], "}"}], ",", " ", 
       RowBox[{"{", 
        RowBox[{"\[Phi]1", ",", " ", "_Real"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"\[Phi]2", ",", " ", "_Real"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"\[Phi]3", ",", " ", "_Real"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"\[Phi]4", ",", " ", "_Real"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"\[Phi]5", ",", " ", "_Real"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"\[Phi]6", ",", " ", "_Real"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"\[Psi]1", ",", " ", "_Real"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"\[Psi]2", ",", " ", "_Real"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"\[Psi]3", ",", " ", "_Real"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"\[Psi]4", ",", " ", "_Real"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"\[Psi]5", ",", " ", "_Real"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"\[Psi]6", ",", " ", "_Real"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"l1", ",", " ", "_Real"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"l2", ",", " ", "_Real"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"l3", ",", " ", "_Real"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"l4", ",", " ", "_Real"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"l5", ",", " ", "_Real"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"l6", ",", " ", "_Real"}], "}"}]}], "}"}], ",", " ", 
     RowBox[{"Evaluate", "[", "J\[Eta]q", "]"}]}], "]"}]}], ";"}]], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{{3.757949669035951*^9, 3.7579496717977176`*^9}, {
   3.757949717260193*^9, 3.757949738949853*^9}, {3.76102830888195*^9, 
   3.761028333132729*^9}, 
   3.7624792462687125`*^9},ExpressionUUID->"f9da6d22-dea5-45a4-9c42-\
254d1956025b"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"dJ\[Eta]q", " ", "=", " ", 
   RowBox[{
    RowBox[{"D", "[", 
     RowBox[{
      RowBox[{"J\[Eta]q", "/.", "qrule"}], ",", " ", "t"}], "]"}], "/.", 
    "rqrule"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"cdJ\[Eta]q", " ", "=", " ", 
   RowBox[{"Compile", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"x", ",", " ", "_Real"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"y", ",", " ", "_Real"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"z", ",", " ", "_Real"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"c1", ",", " ", "_Real"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"c2", ",", " ", "_Real"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"c3", ",", " ", "_Real"}], "}"}], ",", " ", 
       RowBox[{"{", 
        RowBox[{"\[Phi]1", ",", " ", "_Real"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"\[Phi]2", ",", " ", "_Real"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"\[Phi]3", ",", " ", "_Real"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"\[Phi]4", ",", " ", "_Real"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"\[Phi]5", ",", " ", "_Real"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"\[Phi]6", ",", " ", "_Real"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"\[Psi]1", ",", " ", "_Real"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"\[Psi]2", ",", " ", "_Real"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"\[Psi]3", ",", " ", "_Real"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"\[Psi]4", ",", " ", "_Real"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"\[Psi]5", ",", " ", "_Real"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"\[Psi]6", ",", " ", "_Real"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"l1", ",", " ", "_Real"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"l2", ",", " ", "_Real"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"l3", ",", " ", "_Real"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"l4", ",", " ", "_Real"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"l5", ",", " ", "_Real"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"l6", ",", " ", "_Real"}], "}"}], ",", " ", 
       RowBox[{"{", 
        RowBox[{"dx", ",", " ", "_Real"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"dy", ",", " ", "_Real"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"dz", ",", " ", "_Real"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"dc1", ",", " ", "_Real"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"dc2", ",", " ", "_Real"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"dc3", ",", " ", "_Real"}], "}"}], ",", " ", 
       RowBox[{"{", 
        RowBox[{"d\[Phi]1", ",", " ", "_Real"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"d\[Phi]2", ",", " ", "_Real"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"d\[Phi]3", ",", " ", "_Real"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"d\[Phi]4", ",", " ", "_Real"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"d\[Phi]5", ",", " ", "_Real"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"d\[Phi]6", ",", " ", "_Real"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"d\[Psi]1", ",", " ", "_Real"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"d\[Psi]2", ",", " ", "_Real"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"d\[Psi]3", ",", " ", "_Real"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"d\[Psi]4", ",", " ", "_Real"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"d\[Psi]5", ",", " ", "_Real"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"d\[Psi]6", ",", " ", "_Real"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"dl1", ",", " ", "_Real"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"dl2", ",", " ", "_Real"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"dl3", ",", " ", "_Real"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"dl4", ",", " ", "_Real"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"dl5", ",", " ", "_Real"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"dl6", ",", " ", "_Real"}], "}"}]}], "}"}], ",", " ", 
     RowBox[{"Evaluate", "[", "dJ\[Eta]q", "]"}]}], "]"}]}], ";"}]}], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{{3.7579511408184476`*^9, 3.75795115464822*^9}, {
   3.761028346078885*^9, 3.7610283527490554`*^9}, 3.762479246284301*^9, {
   3.7660202729425592`*^9, 
   3.7660202735944133`*^9}},ExpressionUUID->"e14d0a5f-4b16-406b-9b71-\
ca79962f51c9"],

Cell[BoxData[
 RowBox[{
  RowBox[{"cJ\[Eta]x", " ", "=", " ", 
   RowBox[{"Compile", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"x", ",", " ", "_Real"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"y", ",", " ", "_Real"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"z", ",", " ", "_Real"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"c1", ",", " ", "_Real"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"c2", ",", " ", "_Real"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"c3", ",", " ", "_Real"}], "}"}], ",", " ", 
       RowBox[{"{", 
        RowBox[{"\[Phi]1", ",", " ", "_Real"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"\[Phi]2", ",", " ", "_Real"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"\[Phi]3", ",", " ", "_Real"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"\[Phi]4", ",", " ", "_Real"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"\[Phi]5", ",", " ", "_Real"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"\[Phi]6", ",", " ", "_Real"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"\[Psi]1", ",", " ", "_Real"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"\[Psi]2", ",", " ", "_Real"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"\[Psi]3", ",", " ", "_Real"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"\[Psi]4", ",", " ", "_Real"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"\[Psi]5", ",", " ", "_Real"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"\[Psi]6", ",", " ", "_Real"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"l1", ",", " ", "_Real"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"l2", ",", " ", "_Real"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"l3", ",", " ", "_Real"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"l4", ",", " ", "_Real"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"l5", ",", " ", "_Real"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"l6", ",", " ", "_Real"}], "}"}]}], "}"}], ",", " ", 
     RowBox[{"Evaluate", "[", "J\[Eta]x", "]"}]}], "]"}]}], ";"}]], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{{3.757949669035951*^9, 3.7579496717977176`*^9}, {
   3.757949717260193*^9, 3.757949753063754*^9}, {3.7610283581487703`*^9, 
   3.761028363138877*^9}, 
   3.762479246284301*^9},ExpressionUUID->"93ca9e54-2178-45fb-aa6a-\
4eb498cebaf6"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"dJ\[Eta]x", " ", "=", " ", 
   RowBox[{
    RowBox[{"D", "[", 
     RowBox[{
      RowBox[{"J\[Eta]x", "/.", "qrule"}], ",", " ", "t"}], "]"}], "/.", 
    "rqrule"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"cdJ\[Eta]x", " ", "=", " ", 
   RowBox[{"Compile", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"x", ",", " ", "_Real"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"y", ",", " ", "_Real"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"z", ",", " ", "_Real"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"c1", ",", " ", "_Real"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"c2", ",", " ", "_Real"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"c3", ",", " ", "_Real"}], "}"}], ",", " ", 
       RowBox[{"{", 
        RowBox[{"\[Phi]1", ",", " ", "_Real"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"\[Phi]2", ",", " ", "_Real"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"\[Phi]3", ",", " ", "_Real"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"\[Phi]4", ",", " ", "_Real"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"\[Phi]5", ",", " ", "_Real"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"\[Phi]6", ",", " ", "_Real"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"\[Psi]1", ",", " ", "_Real"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"\[Psi]2", ",", " ", "_Real"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"\[Psi]3", ",", " ", "_Real"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"\[Psi]4", ",", " ", "_Real"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"\[Psi]5", ",", " ", "_Real"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"\[Psi]6", ",", " ", "_Real"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"l1", ",", " ", "_Real"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"l2", ",", " ", "_Real"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"l3", ",", " ", "_Real"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"l4", ",", " ", "_Real"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"l5", ",", " ", "_Real"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"l6", ",", " ", "_Real"}], "}"}], ",", " ", 
       RowBox[{"{", 
        RowBox[{"dx", ",", " ", "_Real"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"dy", ",", " ", "_Real"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"dz", ",", " ", "_Real"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"dc1", ",", " ", "_Real"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"dc2", ",", " ", "_Real"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"dc3", ",", " ", "_Real"}], "}"}], ",", " ", 
       RowBox[{"{", 
        RowBox[{"d\[Phi]1", ",", " ", "_Real"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"d\[Phi]2", ",", " ", "_Real"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"d\[Phi]3", ",", " ", "_Real"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"d\[Phi]4", ",", " ", "_Real"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"d\[Phi]5", ",", " ", "_Real"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"d\[Phi]6", ",", " ", "_Real"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"d\[Psi]1", ",", " ", "_Real"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"d\[Psi]2", ",", " ", "_Real"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"d\[Psi]3", ",", " ", "_Real"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"d\[Psi]4", ",", " ", "_Real"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"d\[Psi]5", ",", " ", "_Real"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"d\[Psi]6", ",", " ", "_Real"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"dl1", ",", " ", "_Real"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"dl2", ",", " ", "_Real"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"dl3", ",", " ", "_Real"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"dl4", ",", " ", "_Real"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"dl5", ",", " ", "_Real"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"dl6", ",", " ", "_Real"}], "}"}]}], "}"}], ",", " ", 
     RowBox[{"Evaluate", "[", "dJ\[Eta]x", "]"}]}], "]"}]}], ";"}]}], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{{3.757949669035951*^9, 3.7579496717977176`*^9}, {
   3.757949717260193*^9, 3.757949753063754*^9}, {3.7579511879599504`*^9, 
   3.757951203927574*^9}, {3.7610283715291862`*^9, 3.761028376338929*^9}, 
   3.762479246284301*^9, {3.7660202769023976`*^9, 
   3.766020277473431*^9}},ExpressionUUID->"051368ee-a32c-4226-b8f4-\
7e09ddb96748"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"tMmat", " ", "=", " ", 
   RowBox[{"TrigExpand", "[", 
    RowBox[{"Mmat", "/.", "rqrule"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"cMmat", " ", "=", " ", 
   RowBox[{"Compile", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"x", ",", " ", "_Real"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"y", ",", " ", "_Real"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"z", ",", " ", "_Real"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"c1", ",", " ", "_Real"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"c2", ",", " ", "_Real"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"c3", ",", " ", "_Real"}], "}"}], ",", " ", 
       RowBox[{"{", 
        RowBox[{"\[Phi]1", ",", " ", "_Real"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"\[Phi]2", ",", " ", "_Real"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"\[Phi]3", ",", " ", "_Real"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"\[Phi]4", ",", " ", "_Real"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"\[Phi]5", ",", " ", "_Real"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"\[Phi]6", ",", " ", "_Real"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"\[Psi]1", ",", " ", "_Real"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"\[Psi]2", ",", " ", "_Real"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"\[Psi]3", ",", " ", "_Real"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"\[Psi]4", ",", " ", "_Real"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"\[Psi]5", ",", " ", "_Real"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"\[Psi]6", ",", " ", "_Real"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"l1", ",", " ", "_Real"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"l2", ",", " ", "_Real"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"l3", ",", " ", "_Real"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"l4", ",", " ", "_Real"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"l5", ",", " ", "_Real"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"l6", ",", " ", "_Real"}], "}"}]}], "}"}], ",", " ", 
     RowBox[{"Evaluate", "[", "tMmat", "]"}]}], "]"}]}], ";"}]}], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{{3.757950081381276*^9, 3.757950094587205*^9}, 
   3.762479246284301*^9, {3.7660202797670364`*^9, 
   3.766020280418014*^9}},ExpressionUUID->"ddc6c0f5-b78d-4558-b509-\
e5817a08dabb"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"tCmat", " ", "=", " ", 
   RowBox[{"TrigExpand", "[", 
    RowBox[{"Simplify", "[", 
     RowBox[{"tempC", "/.", "rqrule"}], "]"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"cCmat", " ", "=", " ", 
   RowBox[{"Compile", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"x", ",", " ", "_Real"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"y", ",", " ", "_Real"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"z", ",", " ", "_Real"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"c1", ",", " ", "_Real"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"c2", ",", " ", "_Real"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"c3", ",", " ", "_Real"}], "}"}], ",", " ", 
       RowBox[{"{", 
        RowBox[{"\[Phi]1", ",", " ", "_Real"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"\[Phi]2", ",", " ", "_Real"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"\[Phi]3", ",", " ", "_Real"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"\[Phi]4", ",", " ", "_Real"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"\[Phi]5", ",", " ", "_Real"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"\[Phi]6", ",", " ", "_Real"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"\[Psi]1", ",", " ", "_Real"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"\[Psi]2", ",", " ", "_Real"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"\[Psi]3", ",", " ", "_Real"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"\[Psi]4", ",", " ", "_Real"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"\[Psi]5", ",", " ", "_Real"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"\[Psi]6", ",", " ", "_Real"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"l1", ",", " ", "_Real"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"l2", ",", " ", "_Real"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"l3", ",", " ", "_Real"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"l4", ",", " ", "_Real"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"l5", ",", " ", "_Real"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"l6", ",", " ", "_Real"}], "}"}], ",", " ", 
       RowBox[{"{", 
        RowBox[{"dx", ",", " ", "_Real"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"dy", ",", " ", "_Real"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"dz", ",", " ", "_Real"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"dc1", ",", " ", "_Real"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"dc2", ",", " ", "_Real"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"dc3", ",", " ", "_Real"}], "}"}], ",", " ", 
       RowBox[{"{", 
        RowBox[{"d\[Phi]1", ",", " ", "_Real"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"d\[Phi]2", ",", " ", "_Real"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"d\[Phi]3", ",", " ", "_Real"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"d\[Phi]4", ",", " ", "_Real"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"d\[Phi]5", ",", " ", "_Real"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"d\[Phi]6", ",", " ", "_Real"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"d\[Psi]1", ",", " ", "_Real"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"d\[Psi]2", ",", " ", "_Real"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"d\[Psi]3", ",", " ", "_Real"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"d\[Psi]4", ",", " ", "_Real"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"d\[Psi]5", ",", " ", "_Real"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"d\[Psi]6", ",", " ", "_Real"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"dl1", ",", " ", "_Real"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"dl2", ",", " ", "_Real"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"dl3", ",", " ", "_Real"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"dl4", ",", " ", "_Real"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"dl5", ",", " ", "_Real"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"dl6", ",", " ", "_Real"}], "}"}]}], "}"}], ",", " ", 
     RowBox[{"Evaluate", "[", "tCmat", "]"}]}], "]"}]}], ";"}]}], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{{3.7579501536372213`*^9, 3.7579502448503714`*^9}, 
   3.762479246284301*^9, {3.7660202827039537`*^9, 
   3.766020283308607*^9}},ExpressionUUID->"553182a7-9cea-4f47-8882-\
beec436aeb18"],

Cell[BoxData[
 RowBox[{
  RowBox[{"cGvec", " ", "=", " ", 
   RowBox[{"Compile", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"x", ",", " ", "_Real"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"y", ",", " ", "_Real"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"z", ",", " ", "_Real"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"c1", ",", " ", "_Real"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"c2", ",", " ", "_Real"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"c3", ",", " ", "_Real"}], "}"}], ",", " ", 
       RowBox[{"{", 
        RowBox[{"\[Phi]1", ",", " ", "_Real"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"\[Phi]2", ",", " ", "_Real"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"\[Phi]3", ",", " ", "_Real"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"\[Phi]4", ",", " ", "_Real"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"\[Phi]5", ",", " ", "_Real"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"\[Phi]6", ",", " ", "_Real"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"\[Psi]1", ",", " ", "_Real"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"\[Psi]2", ",", " ", "_Real"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"\[Psi]3", ",", " ", "_Real"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"\[Psi]4", ",", " ", "_Real"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"\[Psi]5", ",", " ", "_Real"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"\[Psi]6", ",", " ", "_Real"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"l1", ",", " ", "_Real"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"l2", ",", " ", "_Real"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"l3", ",", " ", "_Real"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"l4", ",", " ", "_Real"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"l5", ",", " ", "_Real"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"l6", ",", " ", "_Real"}], "}"}]}], "}"}], ",", " ", 
     RowBox[{"Evaluate", "[", "G", "]"}]}], "]"}]}], ";"}]], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{{3.7579503843265905`*^9, 3.7579504105139475`*^9}, 
   3.762479246284301*^9},ExpressionUUID->"1a448c10-284c-4342-b4ff-\
a2e7501611d5"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"IK", " ", "module", " ", "for", " ", "the", " ", "manipulator"}], 
   "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"SetSystemOptions", "[", 
    RowBox[{"\"\<SimplificationOptions\>\"", "\[Rule]", 
     RowBox[{"\"\<AutosimplifyTrigs\>\"", "\[Rule]", "False"}]}], "]"}], 
   ";"}]}]], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{{3.7610291669789305`*^9, 3.7610291989192696`*^9}, 
   3.762479246284301*^9, {3.766020291332015*^9, 3.766020292042607*^9}, {
   3.76610483831822*^9, 
   3.7661048396794615`*^9}},ExpressionUUID->"25d510af-fd79-4515-b93f-\
ead734a7ae99"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"samplex", " ", "=", " ", 
   RowBox[{"Inner", "[", 
    RowBox[{"Rule", ",", " ", "qx", ",", " ", 
     RowBox[{"{", 
      RowBox[{"0", ",", "0", ",", "0.75", ",", "0", ",", "0", ",", "0"}], 
      "}"}], ",", " ", "List"}], "]"}]}], ";"}]], "Input",ExpressionUUID->\
"bac0aeff-af07-4a91-8e7a-c00de184b830"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"li2", " ", "=", " ", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"(", 
        RowBox[{"atp", "-", "bs"}], ")"}], "[", 
       RowBox[{"[", "i", "]"}], "]"}], ".", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"atp", "-", "bs"}], ")"}], "[", 
       RowBox[{"[", "i", "]"}], "]"}]}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", " ", "6"}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"li", " ", "=", " ", 
   RowBox[{"Sqrt", "[", 
    RowBox[{"Together", "[", "li2", "]"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"lirule", " ", "=", " ", 
   RowBox[{"Inner", "[", 
    RowBox[{"Rule", ",", " ", "l", ",", " ", "li", ",", "List"}], "]"}]}], 
  ";"}]}], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{{3.757778647844147*^9, 3.757778651233771*^9}, {
   3.757778691274675*^9, 3.7577788112976513`*^9}, {3.757779020422772*^9, 
   3.7577790271602993`*^9}, {3.7577800739995217`*^9, 
   3.7577801027437167`*^9}, {3.7578119883594103`*^9, 
   3.7578120314561157`*^9}, {3.757814282931091*^9, 3.7578142855084243`*^9}, {
   3.757814397397463*^9, 3.757814412510234*^9}, {3.7578145457418075`*^9, 
   3.757814577963826*^9}, {3.7610284101795235`*^9, 3.7610284150110474`*^9}, 
   3.762479246284301*^9},ExpressionUUID->"fdae6534-3e44-4fb4-a997-\
7ce294a18158"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"lval", " ", "=", " ", 
   RowBox[{"Inner", "[", 
    RowBox[{"Rule", ",", " ", "l", ",", " ", 
     RowBox[{"Simplify", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"li", "/.", "alsrules"}], "/.", "bsrules"}], "/.", "datap"}], 
      "]"}], ",", " ", "List"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"clval", " ", "=", " ", 
   RowBox[{"Compile", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"x", ",", " ", "_Real"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"y", ",", " ", "_Real"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"z", ",", " ", "_Real"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"c1", ",", " ", "_Real"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"c2", ",", " ", "_Real"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"c3", ",", " ", "_Real"}], "}"}]}], "}"}], ",", " ", 
     RowBox[{"Evaluate", "[", 
      RowBox[{"l", "/.", "lval"}], "]"}]}], "]"}]}], ";"}]}], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{{3.7578120338577023`*^9, 3.7578120423236523`*^9}, {
   3.7578121552323136`*^9, 3.7578121669407835`*^9}, {3.7578122034071684`*^9, 
   3.7578122035609007`*^9}, 3.75782241921238*^9, {3.7578624644265757`*^9, 
   3.7578624650130863`*^9}, {3.757953358206552*^9, 3.7579533595423536`*^9}, 
   3.757953422619008*^9, {3.757953607954527*^9, 3.7579536326369853`*^9}, 
   3.761029450503719*^9, {3.761029851275093*^9, 3.7610298568959336`*^9}, 
   3.762479246284301*^9},ExpressionUUID->"0ff006fb-4a38-44d2-b11b-\
6d8b1c4a87fd"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"sin\[Psi]", " ", "=", " ", 
   RowBox[{"Together", "[", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"Simplify", "[", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"atp", "[", 
            RowBox[{"[", "i", "]"}], "]"}], "[", 
           RowBox[{"[", "2", "]"}], "]"}], "-", 
          RowBox[{
           RowBox[{"Expand", "[", 
            RowBox[{
             RowBox[{"aj", "[", 
              RowBox[{"[", "i", "]"}], "]"}], "[", 
             RowBox[{"[", "2", "]"}], "]"}], "]"}], "[", 
           RowBox[{"[", 
            RowBox[{";;", 
             RowBox[{"-", "2"}]}], "]"}], "]"}]}], ")"}], "/", 
        RowBox[{"(", 
         RowBox[{"-", 
          RowBox[{"l", "[", 
           RowBox[{"[", "i", "]"}], "]"}]}], ")"}]}], "]"}], ",", " ", 
      RowBox[{"{", 
       RowBox[{"i", ",", " ", "6"}], "}"}]}], "]"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"cos2\[Psi]", " ", "=", " ", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"atp", "[", 
             RowBox[{"[", "i", "]"}], "]"}], "[", 
            RowBox[{"[", "1", "]"}], "]"}], "-", 
           RowBox[{
            RowBox[{"Expand", "[", 
             RowBox[{
              RowBox[{"aj", "[", 
               RowBox[{"[", "i", "]"}], "]"}], "[", 
              RowBox[{"[", "1", "]"}], "]"}], "]"}], "[", 
            RowBox[{"[", 
             RowBox[{";;", 
              RowBox[{"-", "2"}]}], "]"}], "]"}]}], ")"}], "/", 
         RowBox[{"l", "[", 
          RowBox[{"[", "i", "]"}], "]"}]}], ")"}], "2"], "+", 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"atp", "[", 
           RowBox[{"[", "i", "]"}], "]"}], "[", 
          RowBox[{"[", "3", "]"}], "]"}], "/", 
         RowBox[{"l", "[", 
          RowBox[{"[", "i", "]"}], "]"}]}], ")"}], "2"]}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", " ", "6"}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"cos\[Psi]", " ", "=", " ", 
   RowBox[{"Sqrt", "[", 
    RowBox[{"Together", "[", "cos2\[Psi]", "]"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"sin\[Psi]rule", " ", "=", " ", 
   RowBox[{"Inner", "[", 
    RowBox[{"Rule", ",", " ", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"Sin", "[", 
        RowBox[{"\[Psi]", "[", 
         RowBox[{"[", "i", "]"}], "]"}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", " ", "6"}], "}"}]}], "]"}], ",", " ", "sin\[Psi]", 
     ",", " ", "List"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"cos\[Psi]rule", " ", "=", " ", 
   RowBox[{"Inner", "[", 
    RowBox[{"Rule", ",", " ", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"Cos", "[", 
        RowBox[{"\[Psi]", "[", 
         RowBox[{"[", "i", "]"}], "]"}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", " ", "6"}], "}"}]}], "]"}], ",", " ", "cos\[Psi]", 
     ",", " ", "List"}], "]"}]}], ";"}]}], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{{3.757814593716202*^9, 3.7578146115141315`*^9}, {
   3.7610284909028826`*^9, 3.76102851146861*^9}, {3.7610293645039225`*^9, 
   3.761029380837222*^9}, {3.7610329026396337`*^9, 3.761032903779313*^9}, 
   3.7610329661152554`*^9, {3.7610330938748283`*^9, 3.7610330948352346`*^9}, {
   3.7610334034220695`*^9, 3.7610334084221525`*^9}, {3.7610334726720924`*^9, 
   3.761033474550166*^9}, {3.761033633368535*^9, 3.7610336378388743`*^9}, {
   3.761033677918914*^9, 3.7610336821889496`*^9}, {3.761033917490863*^9, 
   3.7610339179203806`*^9}, 
   3.762479246284301*^9},ExpressionUUID->"246cf1f3-0575-4b1e-958f-\
a43326e98582"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"\[Psi]val", " ", "=", " ", 
   RowBox[{"Inner", "[", 
    RowBox[{"Rule", ",", " ", "\[Psi]", ",", " ", 
     RowBox[{"Simplify", "[", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{"ArcTan", "[", 
            RowBox[{
             RowBox[{"cos\[Psi]", "[", 
              RowBox[{"[", "i", "]"}], "]"}], ",", " ", 
             RowBox[{"sin\[Psi]", "[", 
              RowBox[{"[", "i", "]"}], "]"}]}], "]"}], ",", 
           RowBox[{"{", 
            RowBox[{"i", ",", " ", "6"}], "}"}]}], "]"}], "/.", "alsrules"}], 
        "/.", "bsrules"}], "/.", "datap"}], "]"}], ",", " ", "List"}], 
    "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"c\[Psi]val", " ", "=", " ", 
   RowBox[{"Compile", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"x", ",", " ", "_Real"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"y", ",", " ", "_Real"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"z", ",", " ", "_Real"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"c1", ",", " ", "_Real"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"c2", ",", " ", "_Real"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"c3", ",", " ", "_Real"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"l1", ",", " ", "_Real"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"l2", ",", " ", "_Real"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"l3", ",", " ", "_Real"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"l4", ",", " ", "_Real"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"l5", ",", " ", "_Real"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"l6", ",", " ", "_Real"}], "}"}]}], "}"}], ",", " ", 
     RowBox[{"Evaluate", "[", 
      RowBox[{"\[Psi]", "/.", "\[Psi]val"}], "]"}]}], "]"}]}], 
  ";"}]}], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{{3.7579537637872133`*^9, 3.7579538204474974`*^9}, {
   3.76102895794965*^9, 3.761028958599238*^9}, {3.7610290207294207`*^9, 
   3.761029022018952*^9}, {3.7610290709003243`*^9, 3.761029071219384*^9}, {
   3.761029517795692*^9, 3.7610295307054706`*^9}, {3.761029698358309*^9, 
   3.761029713532175*^9}, 3.762479246284301*^9, {3.7660203021128426`*^9, 
   3.7660203028314304`*^9}},ExpressionUUID->"fd711649-12f7-4dc4-9eb8-\
c7ea29a89ce3"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"sin\[Phi]", " ", "=", " ", 
   RowBox[{"Together", "[", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"atp", "[", 
           RowBox[{"[", "i", "]"}], "]"}], "[", 
          RowBox[{"[", "1", "]"}], "]"}], "-", 
         RowBox[{
          RowBox[{"Expand", "[", 
           RowBox[{
            RowBox[{"aj", "[", 
             RowBox[{"[", "i", "]"}], "]"}], "[", 
            RowBox[{"[", "1", "]"}], "]"}], "]"}], "[", 
          RowBox[{"[", 
           RowBox[{";;", 
            RowBox[{"-", "2"}]}], "]"}], "]"}]}], ")"}], "/", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"li", "[", 
          RowBox[{"[", "i", "]"}], "]"}], "*", 
         RowBox[{"Cos", "[", 
          RowBox[{"\[Psi]", "[", 
           RowBox[{"[", "i", "]"}], "]"}], "]"}]}], ")"}]}], ",", 
      RowBox[{"{", 
       RowBox[{"i", ",", " ", "6"}], "}"}]}], "]"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"cos\[Phi]", " ", "=", " ", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"atp", "[", 
         RowBox[{"[", "i", "]"}], "]"}], "[", 
        RowBox[{"[", "3", "]"}], "]"}], ")"}], "/", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"li", "[", 
         RowBox[{"[", "i", "]"}], "]"}], "*", 
        RowBox[{"Cos", "[", 
         RowBox[{"\[Psi]", "[", 
          RowBox[{"[", "i", "]"}], "]"}], "]"}]}], ")"}]}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", " ", "6"}], "}"}]}], "]"}]}], ";"}]}], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{{3.757814409970359*^9, 3.7578144828675833`*^9}, {
   3.757814648183466*^9, 3.7578146514937963`*^9}, {3.7610287962098875`*^9, 
   3.761028810941456*^9}, {3.761029898241517*^9, 3.761029912158701*^9}, 
   3.7610332667668953`*^9, {3.761033298382666*^9, 3.7610332992229013`*^9}, {
   3.7610340442749104`*^9, 3.761034048570808*^9}, {3.761034087900638*^9, 
   3.7610340885403256`*^9}, 
   3.762479246284301*^9},ExpressionUUID->"f9a4d8dc-991f-44e7-9780-\
85f39cf8e4bf"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"sin\[Phi]rule", " ", "=", " ", 
   RowBox[{"Inner", "[", 
    RowBox[{"Rule", ",", " ", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"Sin", "[", 
        RowBox[{"\[Phi]", "[", 
         RowBox[{"[", "i", "]"}], "]"}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", " ", "6"}], "}"}]}], "]"}], ",", " ", "sin\[Phi]", 
     ",", " ", "List"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"cos\[Phi]rule", " ", "=", " ", 
   RowBox[{"Inner", "[", 
    RowBox[{"Rule", ",", " ", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"Cos", "[", 
        RowBox[{"\[Phi]", "[", 
         RowBox[{"[", "i", "]"}], "]"}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", " ", "6"}], "}"}]}], "]"}], ",", " ", "cos\[Phi]", 
     ",", " ", "List"}], "]"}]}], ";"}]}], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{{3.757814146881531*^9, 3.7578142503919544`*^9}, {
   3.757814303080205*^9, 3.757814320351482*^9}, {3.7578143557878103`*^9, 
   3.7578143952369375`*^9}, 3.757814435941891*^9, 
   3.762479246284301*^9},ExpressionUUID->"e1f97253-5bb7-4f69-88a4-\
af74887eb380"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"\[Phi]val", " ", "=", " ", 
   RowBox[{"Inner", "[", 
    RowBox[{"Rule", ",", " ", "\[Phi]", ",", " ", 
     RowBox[{"Simplify", "[", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{"ArcTan", "[", 
            RowBox[{
             RowBox[{"cos\[Phi]", "[", 
              RowBox[{"[", "i", "]"}], "]"}], ",", " ", 
             RowBox[{"sin\[Phi]", "[", 
              RowBox[{"[", "i", "]"}], "]"}]}], "]"}], ",", 
           RowBox[{"{", 
            RowBox[{"i", ",", " ", "6"}], "}"}]}], "]"}], "/.", "alsrules"}], 
        "/.", "bsrules"}], "/.", "datap"}], "]"}], ",", " ", "List"}], 
    "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"c\[Phi]val", " ", "=", " ", 
   RowBox[{"Compile", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"x", ",", " ", "_Real"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"y", ",", " ", "_Real"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"z", ",", " ", "_Real"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"c1", ",", " ", "_Real"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"c2", ",", " ", "_Real"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"c3", ",", " ", "_Real"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"\[Psi]1", ",", " ", "_Real"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"\[Psi]2", ",", " ", "_Real"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"\[Psi]3", ",", " ", "_Real"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"\[Psi]4", ",", " ", "_Real"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"\[Psi]5", ",", " ", "_Real"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"\[Psi]6", ",", " ", "_Real"}], "}"}]}], "}"}], ",", " ", 
     RowBox[{"Evaluate", "[", 
      RowBox[{"\[Phi]", "/.", "\[Phi]val"}], "]"}]}], "]"}]}], 
  ";"}]}], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{{3.7610300087464046`*^9, 3.7610300096676483`*^9}, {
   3.761030086240991*^9, 3.761030096831218*^9}, 3.762479246284301*^9, {
   3.7660203091448154`*^9, 
   3.766020309817431*^9}},ExpressionUUID->"8ea14bfb-ae82-40b2-b8cd-\
8ec71abc322e"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"iksol", "[", "x_", "]"}], " ", ":=", " ", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"lval", ",", " ", "\[Psi]val", ",", " ", "\[Phi]val"}], "}"}], 
     ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"lval", " ", "=", " ", 
       RowBox[{"clval", "@@", "x"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"\[Psi]val", " ", "=", " ", 
       RowBox[{"c\[Psi]val", "@@", 
        RowBox[{"Join", "[", 
         RowBox[{"x", ",", " ", "lval"}], "]"}]}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"\[Phi]val", " ", "=", " ", 
       RowBox[{"c\[Phi]val", "@@", 
        RowBox[{"Join", "[", 
         RowBox[{"x", ",", "\[Psi]val"}], "]"}]}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"Return", "[", 
       RowBox[{"Join", "[", 
        RowBox[{"\[Phi]val", ",", " ", "\[Psi]val", ",", " ", "lval"}], "]"}],
        "]"}]}]}], "\[IndentingNewLine]", "]"}]}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"trigrules", " ", "=", " ", 
   RowBox[{"(", 
    RowBox[{"Join", "[", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"sin\[Phi]rule", "/.", 
           RowBox[{"Inner", "[", 
            RowBox[{"Rule", ",", " ", 
             RowBox[{"Cos", "[", "\[Psi]", "]"}], ",", " ", "cos\[Psi]", ",", 
             " ", "List"}], "]"}]}], "/.", "lirule"}], "/.", "bsrules"}], "/.",
         "alsrules"}], "/.", "datap"}], ",", " ", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"cos\[Phi]rule", "/.", 
           RowBox[{"Inner", "[", 
            RowBox[{"Rule", ",", " ", 
             RowBox[{"Cos", "[", "\[Psi]", "]"}], ",", " ", "cos\[Psi]", ",", 
             " ", "List"}], "]"}]}], "/.", "lirule"}], "/.", "bsrules"}], "/.",
         "alsrules"}], "/.", "datap"}], ",", " ", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"sin\[Psi]rule", "/.", "lirule"}], "/.", "bsrules"}], "/.", 
        "alsrules"}], "/.", "datap"}], ",", " ", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"cos\[Psi]rule", "/.", "lirule"}], "/.", "bsrules"}], "/.", 
        "alsrules"}], "/.", "datap"}], ",", " ", 
      RowBox[{
       RowBox[{"lirule", "/.", "bsrules"}], "/.", "datap"}]}], "]"}], ")"}]}],
   ";"}]}], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{{3.7610301631210976`*^9, 3.761030278791792*^9}, {
   3.7610303460112553`*^9, 3.761030481720507*^9}, {3.7610305149537916`*^9, 
   3.7610305363837256`*^9}, 3.761030569323786*^9, {3.761034182976674*^9, 
   3.761034188940518*^9}, 3.762479246284301*^9, {3.766020313758194*^9, 
   3.7660203144277916`*^9}},ExpressionUUID->"222e3285-7f22-446a-8c4d-\
8ab63ca36f8d"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"a", "  ", "=", " ", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"b", "[", 
       RowBox[{"[", "i", "]"}], "]"}], "+", 
      RowBox[{
       RowBox[{"rotY", "[", 
        RowBox[{"\[Phi]", "[", 
         RowBox[{"[", "i", "]"}], "]"}], "]"}], ".", 
       RowBox[{"rotX", "[", 
        RowBox[{"\[Psi]", "[", 
         RowBox[{"[", "i", "]"}], "]"}], "]"}], ".", 
       RowBox[{"{", 
        RowBox[{"0", ",", "0", ",", " ", 
         RowBox[{"l", "[", 
          RowBox[{"[", "i", "]"}], "]"}]}], "}"}]}]}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", " ", "6"}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"plotsrspm", "[", "qvals_", "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "base", ",", " ", "top", ",", " ", "llinks", ",", " ", "jointsbase", ",",
       " ", "jointstop", ",", "jlist", ",", "bval", ",", "aval", ",", " ", 
      "direction", ",", " ", "tempvec", ",", "lbinks", ",", "lainks"}], "}"}],
     ",", "\[IndentingNewLine]", 
    RowBox[{"(*", 
     RowBox[{"Base", " ", "and", " ", "top", " ", "plate"}], "*)"}], "\n", 
    RowBox[{
     RowBox[{"bval", " ", "=", " ", 
      RowBox[{"N", "[", 
       RowBox[{"b", "/.", "datap"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"aval", " ", "=", " ", 
      RowBox[{"N", "[", 
       RowBox[{
        RowBox[{"a", "/.", "datap"}], "/.", "leglparam"}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"tempvec", "  ", "=", " ", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"aval", "[", 
            RowBox[{"[", "i", "]"}], "]"}], "-", 
           RowBox[{"bval", "[", 
            RowBox[{"[", "i", "]"}], "]"}]}], ")"}], "/.", "qvals"}], ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", " ", "6"}], "}"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"direction", " ", "=", " ", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"(", 
          RowBox[{"tempvec", "[", 
           RowBox[{"[", "i", "]"}], "]"}], ")"}], "/", 
         RowBox[{"Norm", "[", 
          RowBox[{"tempvec", "[", 
           RowBox[{"[", "i", "]"}], "]"}], "]"}]}], ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", " ", "6"}], "}"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"base", " ", "=", " ", 
      RowBox[{"Graphics3D", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"Gray", ",", 
          RowBox[{"Opacity", "[", "0.3", "]"}], ",", 
          RowBox[{"Polygon", "[", "bval", "]"}]}], "}"}], ",", 
        RowBox[{"SphericalRegion", "\[Rule]", "True"}], ",", " ", 
        RowBox[{"Boxed", "\[Rule]", "False"}], ",", " ", 
        RowBox[{"PlotRange", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{"-", "1.3"}], ",", " ", "1.3"}], "}"}], ",", " ", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"-", "1.3"}], ",", " ", "1.3"}], "}"}], ",", " ", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"-", "1.3"}], ",", " ", "1.3"}], "}"}]}], "}"}]}]}], 
       "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"top", " ", "=", " ", 
      RowBox[{"Graphics3D", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"Gray", ",", 
          RowBox[{"Opacity", "[", "0.8", "]"}], ",", " ", 
          RowBox[{"Polygon", "[", 
           RowBox[{"Chop", "[", 
            RowBox[{"aval", "/.", "qvals"}], "]"}], "]"}]}], "}"}], ",", 
        RowBox[{"Boxed", "\[Rule]", "False"}]}], "]"}]}], ";", "\n", 
     RowBox[{"(*", "Links", "*)"}], "\n", 
     RowBox[{"(*", 
      RowBox[{
       RowBox[{"llinks", " ", "=", " ", 
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{"Graphics3D", "[", 
           RowBox[{"{", 
            RowBox[{"Purple", ",", 
             RowBox[{"Opacity", "[", "0.5", "]"}], ",", 
             RowBox[{"Cylinder", "[", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"bval", "[", 
                  RowBox[{"[", "i", "]"}], "]"}], ",", 
                 RowBox[{
                  RowBox[{"aval", "[", 
                   RowBox[{"[", "i", "]"}], "]"}], "/.", "qvals"}]}], "}"}], 
               ",", " ", "0.04"}], "]"}]}], "}"}], "]"}], ",", 
          RowBox[{"{", 
           RowBox[{"i", ",", " ", 
            RowBox[{"Length", "[", "bval", "]"}]}], "}"}]}], "]"}]}], ";"}], 
      "*)"}], "\[IndentingNewLine]", 
     RowBox[{"lbinks", " ", "=", " ", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"Graphics3D", "[", 
         RowBox[{"{", 
          RowBox[{"Purple", ",", 
           RowBox[{"Opacity", "[", "0.5", "]"}], ",", 
           RowBox[{"Cylinder", "[", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{
               RowBox[{"bval", "[", 
                RowBox[{"[", "i", "]"}], "]"}], ",", 
               RowBox[{
                RowBox[{
                 RowBox[{"bval", "[", 
                  RowBox[{"[", "i", "]"}], "]"}], 
                 StyleBox["+",
                  FontWeight->"Plain"], 
                 RowBox[{
                  RowBox[{"direction", "[", 
                   RowBox[{"[", "i", "]"}], "]"}], "*", "lb"}]}], "/.", 
                "leglparam"}]}], "}"}], ",", " ", "0.05"}], "]"}]}], "}"}], 
         "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", " ", 
          RowBox[{"Length", "[", "bval", "]"}]}], "}"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"lainks", " ", "=", " ", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"Graphics3D", "[", 
         RowBox[{"{", 
          RowBox[{"LightOrange", ",", 
           RowBox[{"Opacity", "[", "0.5", "]"}], ",", 
           RowBox[{"Cylinder", "[", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{
               RowBox[{
                RowBox[{"aval", "[", 
                 RowBox[{"[", "i", "]"}], "]"}], "/.", "qvals"}], ",", " ", 
               RowBox[{
                RowBox[{
                 RowBox[{"bval", "[", 
                  RowBox[{"[", "i", "]"}], "]"}], "/.", "leglparam"}], "/.", 
                "qvals"}]}], "}"}], ",", " ", "0.03"}], "]"}]}], "}"}], "]"}],
         ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", " ", 
          RowBox[{"Length", "[", "bval", "]"}]}], "}"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"(*", "Joints", "*)"}], "\[IndentingNewLine]", 
     RowBox[{"jointsbase", " ", "=", " ", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"Graphics3D", "[", 
         RowBox[{"Sphere", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"bval", "[", 
             RowBox[{"[", "i", "]"}], "]"}], "/.", "qvals"}], ",", " ", 
           "0.06"}], "]"}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", " ", 
          RowBox[{"Length", "[", "bval", "]"}]}], "}"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"jointstop", " ", "=", " ", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"Graphics3D", "[", 
         RowBox[{"Sphere", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"aval", "[", 
             RowBox[{"[", "i", "]"}], "]"}], "/.", "qvals"}], ",", " ", 
           "0.06"}], "]"}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", " ", 
          RowBox[{"Length", "[", "bval", "]"}]}], "}"}]}], "]"}]}], ";", "\n", 
     RowBox[{"(*", 
      RowBox[{"Plotting", " ", "the", " ", "configuration"}], "*)"}], "\n", 
     RowBox[{"Show", "[", 
      RowBox[{
      "base", ",", " ", "top", ",", " ", "jointstop", ",", " ", "jointsbase", 
       ",", " ", "lainks", ",", " ", "lbinks"}], "]"}]}]}], "]"}]}]}], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{{3.7606212169824395`*^9, 3.76062130137709*^9}, {
   3.7606213726896563`*^9, 3.760621372789935*^9}, {3.760622211390068*^9, 
   3.760622220773939*^9}, {3.7606223100099583`*^9, 3.7606223105336494`*^9}, {
   3.760622501535802*^9, 3.760622504984953*^9}, {3.7606226979464717`*^9, 
   3.760622732924444*^9}, {3.7606227934291143`*^9, 3.7606227938148146`*^9}, {
   3.7606228899050264`*^9, 3.7606228900365252`*^9}, {3.7606229817100506`*^9, 
   3.760622981957463*^9}, {3.760623122456271*^9, 3.7606233386482162`*^9}, {
   3.7606234472896943`*^9, 3.7606237023573503`*^9}, {3.7606238014661603`*^9, 
   3.7606238349259424`*^9}, {3.7606239077804537`*^9, 
   3.7606239404745502`*^9}, {3.760624035802245*^9, 3.7606240524396544`*^9}, {
   3.7606241301046133`*^9, 3.760624184949209*^9}, {3.7606242823482976`*^9, 
   3.7606243760224066`*^9}, {3.760624415661043*^9, 3.760624447765998*^9}, {
   3.7606245080101843`*^9, 3.7606248121915245`*^9}, {3.7606249624586425`*^9, 
   3.7606249678767276`*^9}, 3.7606260460988545`*^9, {3.7606261126914005`*^9, 
   3.7606261129454255`*^9}, 3.7606264901117444`*^9, {3.760627437908057*^9, 
   3.760627438077449*^9}, {3.7606276525069*^9, 3.760627676426536*^9}, {
   3.7606278251030717`*^9, 3.7606278479474697`*^9}, {3.7606634440027733`*^9, 
   3.7606635689738483`*^9}, {3.760676115287793*^9, 3.7606761380079317`*^9}, {
   3.7606777114882903`*^9, 3.760677733287753*^9}, {3.7606796877555923`*^9, 
   3.760679694662311*^9}, {3.760848930026038*^9, 3.76084908202394*^9}, {
   3.760849203851635*^9, 3.7608492215458126`*^9}, {3.7608492520706015`*^9, 
   3.760849275671698*^9}, {3.7608842574617014`*^9, 3.760884318669386*^9}, {
   3.7608843561812534`*^9, 3.7608843665469255`*^9}, {3.761031213800443*^9, 
   3.7610312526264877`*^9}, {3.7610348178508697`*^9, 
   3.7610349065366335`*^9}, {3.761035150030642*^9, 3.7610351517659564`*^9}, {
   3.761353293806657*^9, 3.7613533036324935`*^9}, {3.7613534126164074`*^9, 
   3.761353425853077*^9}, 3.7624795471388035`*^9, {3.7660209598887033`*^9, 
   3.766020963502613*^9}, 3.766268171851276*^9},
 CellID->888286073,ExpressionUUID->"e396b526-809a-4252-b5c5-62072c792aa0"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{
   RowBox[{
   "Now", " ", "the", " ", "dynamics", " ", "is", " ", "set", " ", "alright", 
    " ", "to", " ", "the", " ", "expected", " ", 
    RowBox[{"dynamics", ".", " ", "Moving"}], " ", "into", " ", "controls"}], 
   ",", " ", 
   RowBox[{
   "we", " ", "would", " ", "need", " ", "actuator", " ", "space", " ", 
    "dynamics", " ", "for", " ", 
    RowBox[{"that", "."}]}]}], "*)"}]], "Input",
 CellChangeTimes->{{3.761035174352238*^9, 
  3.7610352150155582`*^9}},ExpressionUUID->"68f0e04c-a9e5-459c-af7b-\
524ba1f8f15a"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{
  "Formulating", " ", "the", " ", "Jacobians", " ", "for", " ", "mapping", 
   " ", "the", " ", "dynamics", " ", "to", " ", "actuator", " ", "space"}], 
  "*)"}]], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{{3.7610470389825573`*^9, 3.7610470577762213`*^9}, 
   3.76247996755156*^9},ExpressionUUID->"217269b6-4ee4-4cd7-8e70-\
5aba54166fda"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"J\[Eta]\[Theta]", " ", "=", " ", 
   RowBox[{"D", "[", 
    RowBox[{"\[Eta]", ",", " ", 
     RowBox[{"{", "l", "}"}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"J\[Eta]x\[Phi]", "=", " ", 
   RowBox[{"D", "[", 
    RowBox[{"\[Eta]", ",", " ", 
     RowBox[{"{", 
      RowBox[{"Join", "[", 
       RowBox[{"qx", ",", " ", "\[Phi]", ",", " ", "\[Psi]"}], "]"}], "}"}]}],
     "]"}]}], ";"}]}], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{{3.7610470625326147`*^9, 3.7610471567177477`*^9}, 
   3.76247996755156*^9},ExpressionUUID->"93408f01-e2c8-4188-b00f-\
cc606f61bf2f"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"J\[Eta]x\[Phi]", "//", "size"}]], "Input",
 CellChangeTimes->{{3.7661520357943964`*^9, 3.766152044028039*^9}, {
  3.766152094822175*^9, 
  3.7661520968344097`*^9}},ExpressionUUID->"c929c3d2-3507-42bc-be2b-\
a39b0450c6de"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Size of the expression is:\"\>", "\[InvisibleSpace]", 
   "139.453125`", "\[InvisibleSpace]", "\<\" KB.\"\>"}],
  SequenceForm["Size of the expression is:", 139.453125, " KB."],
  Editable->False]], "Print",
 CellChangeTimes->{3.7661520973186913`*^9, 3.76615672432242*^9, 
  3.7662150703533726`*^9, 3.7662680904164853`*^9, 
  3.766291723061342*^9},ExpressionUUID->"31296d4f-fc77-47cc-934b-\
8f525f420d03"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"tJ\[Eta]\[Theta]", " ", "=", " ", "J\[Eta]\[Theta]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"cJ\[Eta]\[Theta]", " ", "=", " ", 
   RowBox[{"Compile", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"x", ",", " ", "_Real"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"y", ",", " ", "_Real"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"z", ",", " ", "_Real"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"c1", ",", " ", "_Real"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"c2", ",", " ", "_Real"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"c3", ",", " ", "_Real"}], "}"}], ",", " ", 
       RowBox[{"{", 
        RowBox[{"\[Phi]1", ",", " ", "_Real"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"\[Phi]2", ",", " ", "_Real"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"\[Phi]3", ",", " ", "_Real"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"\[Phi]4", ",", " ", "_Real"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"\[Phi]5", ",", " ", "_Real"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"\[Phi]6", ",", " ", "_Real"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"\[Psi]1", ",", " ", "_Real"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"\[Psi]2", ",", " ", "_Real"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"\[Psi]3", ",", " ", "_Real"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"\[Psi]4", ",", " ", "_Real"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"\[Psi]5", ",", " ", "_Real"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"\[Psi]6", ",", " ", "_Real"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"l1", ",", " ", "_Real"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"l2", ",", " ", "_Real"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"l3", ",", " ", "_Real"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"l4", ",", " ", "_Real"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"l5", ",", " ", "_Real"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"l6", ",", " ", "_Real"}], "}"}]}], "}"}], ",", " ", 
     RowBox[{"Evaluate", "[", "tJ\[Eta]\[Theta]", "]"}]}], "]"}]}], 
  ";"}]}], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{{3.7598499492634926`*^9, 3.7598499570905046`*^9}, 
   3.7598499905201273`*^9, {3.7598500526884804`*^9, 3.759850079896673*^9}, {
   3.759850507271087*^9, 3.759850556838687*^9}, {3.7609653185398006`*^9, 
   3.7609653193739057`*^9}, {3.7609653672443314`*^9, 3.760965368062296*^9}, 
   3.7610473181681166`*^9, 3.76247996755156*^9, {3.7660203315630093`*^9, 
   3.7660203326563835`*^9}},
 CellID->693982536,ExpressionUUID->"0e7898c7-a53e-429e-8052-10a1595d8ea1"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"dJ\[Eta]\[Theta]", " ", "=", " ", 
   RowBox[{
    RowBox[{"D", "[", 
     RowBox[{
      RowBox[{"J\[Eta]\[Theta]", "/.", "qrule"}], ",", " ", "t"}], "]"}], "/.",
     "rqrule"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"cdJ\[Eta]\[Theta]", " ", "=", " ", 
   RowBox[{"Compile", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"x", ",", " ", "_Real"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"y", ",", " ", "_Real"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"z", ",", " ", "_Real"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"c1", ",", " ", "_Real"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"c2", ",", " ", "_Real"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"c3", ",", " ", "_Real"}], "}"}], ",", " ", 
       RowBox[{"{", 
        RowBox[{"\[Phi]1", ",", " ", "_Real"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"\[Phi]2", ",", " ", "_Real"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"\[Phi]3", ",", " ", "_Real"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"\[Phi]4", ",", " ", "_Real"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"\[Phi]5", ",", " ", "_Real"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"\[Phi]6", ",", " ", "_Real"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"\[Psi]1", ",", " ", "_Real"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"\[Psi]2", ",", " ", "_Real"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"\[Psi]3", ",", " ", "_Real"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"\[Psi]4", ",", " ", "_Real"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"\[Psi]5", ",", " ", "_Real"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"\[Psi]6", ",", " ", "_Real"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"l1", ",", " ", "_Real"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"l2", ",", " ", "_Real"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"l3", ",", " ", "_Real"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"l4", ",", " ", "_Real"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"l5", ",", " ", "_Real"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"l6", ",", " ", "_Real"}], "}"}], ",", " ", 
       RowBox[{"{", 
        RowBox[{"dx", ",", " ", "_Real"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"dy", ",", " ", "_Real"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"dz", ",", " ", "_Real"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"dc1", ",", " ", "_Real"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"dc2", ",", " ", "_Real"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"dc3", ",", " ", "_Real"}], "}"}], ",", " ", 
       RowBox[{"{", 
        RowBox[{"d\[Phi]1", ",", " ", "_Real"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"d\[Phi]2", ",", " ", "_Real"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"d\[Phi]3", ",", " ", "_Real"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"d\[Phi]4", ",", " ", "_Real"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"d\[Phi]5", ",", " ", "_Real"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"d\[Phi]6", ",", " ", "_Real"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"d\[Psi]1", ",", " ", "_Real"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"d\[Psi]2", ",", " ", "_Real"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"d\[Psi]3", ",", " ", "_Real"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"d\[Psi]4", ",", " ", "_Real"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"d\[Psi]5", ",", " ", "_Real"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"d\[Psi]6", ",", " ", "_Real"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"dl1", ",", " ", "_Real"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"dl2", ",", " ", "_Real"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"dl3", ",", " ", "_Real"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"dl4", ",", " ", "_Real"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"dl5", ",", " ", "_Real"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"dl6", ",", " ", "_Real"}], "}"}]}], "}"}], ",", " ", 
     RowBox[{"Evaluate", "[", "dJ\[Eta]\[Theta]", "]"}]}], "]"}]}], 
  ";"}]}], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{{3.7579511408184476`*^9, 3.75795115464822*^9}, {
   3.7598501132448964`*^9, 3.7598501587991595`*^9}, 3.7598506004560976`*^9, {
   3.7598506453906927`*^9, 3.759850736029397*^9}, {3.7609654088568563`*^9, 
   3.7609654150932693`*^9}, 3.761047414827832*^9, 3.76247996755156*^9, {
   3.7660203350899897`*^9, 3.7660203356946397`*^9}},
 CellID->197224171,ExpressionUUID->"c02f5e7f-da15-46fe-b600-423d5d1572a8"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"simp", " ", "=", " ", 
   RowBox[{"J\[Eta]x\[Phi]", "/.", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"1", "+", 
       SuperscriptBox["c1", "2"], "+", 
       SuperscriptBox["c2", "2"], "+", 
       SuperscriptBox["c3", "2"]}], ")"}], "\[Rule]", "\[CapitalDelta]"}]}]}],
   ";"}]], "Input",
 CellChangeTimes->{{3.7661512775248275`*^9, 3.766151333610714*^9}, {
   3.7661513734878855`*^9, 3.7661513835636883`*^9}, 
   3.7661521194746323`*^9},ExpressionUUID->"e52215f3-4102-4eee-b889-\
3338b8d03488"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"simp", "//", "size"}]], "Input",
 CellChangeTimes->{{3.7661521047483273`*^9, 
  3.766152107484426*^9}},ExpressionUUID->"b3ac6f14-bb5b-4881-a446-\
eba38b2de380"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Size of the expression is:\"\>", "\[InvisibleSpace]", 
   "75.328125`", "\[InvisibleSpace]", "\<\" KB.\"\>"}],
  SequenceForm["Size of the expression is:", 75.328125, " KB."],
  Editable->False]], "Print",
 CellChangeTimes->{{3.7661521079451127`*^9, 3.766152121955271*^9}, 
   3.7661567245102973`*^9, 3.7662150704843087`*^9, 3.7662680905504065`*^9, 
   3.7662917232132454`*^9},ExpressionUUID->"cb8e04c4-7a82-4b81-bd44-\
1ae4fec3a615"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Det", "[", "simp", "]"}]], "Input",
 CellChangeTimes->{{3.766151793082045*^9, 
  3.7661517948824873`*^9}},ExpressionUUID->"b0027fe9-5571-43ca-9fc8-\
710a9ad485ef"],

Cell[BoxData["0.`"], "Output",
 CellChangeTimes->{3.7661517983146667`*^9, 3.7661521128611717`*^9, 
  3.766152240199045*^9, 3.766156731669195*^9, 3.7662150775509267`*^9, 
  3.766268098681753*^9, 
  3.766291730278202*^9},ExpressionUUID->"1afdcf3f-f54d-4918-bc86-\
6b216c511ac3"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"tJ\[Eta]x\[Phi]", " ", "=", " ", "J\[Eta]x\[Phi]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"cJ\[Eta]x\[Phi]", " ", "=", " ", 
   RowBox[{"Compile", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"x", ",", " ", "_Real"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"y", ",", " ", "_Real"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"z", ",", " ", "_Real"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"c1", ",", " ", "_Real"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"c2", ",", " ", "_Real"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"c3", ",", " ", "_Real"}], "}"}], ",", " ", 
       RowBox[{"{", 
        RowBox[{"\[Phi]1", ",", " ", "_Real"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"\[Phi]2", ",", " ", "_Real"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"\[Phi]3", ",", " ", "_Real"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"\[Phi]4", ",", " ", "_Real"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"\[Phi]5", ",", " ", "_Real"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"\[Phi]6", ",", " ", "_Real"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"\[Psi]1", ",", " ", "_Real"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"\[Psi]2", ",", " ", "_Real"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"\[Psi]3", ",", " ", "_Real"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"\[Psi]4", ",", " ", "_Real"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"\[Psi]5", ",", " ", "_Real"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"\[Psi]6", ",", " ", "_Real"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"l1", ",", " ", "_Real"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"l2", ",", " ", "_Real"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"l3", ",", " ", "_Real"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"l4", ",", " ", "_Real"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"l5", ",", " ", "_Real"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"l6", ",", " ", "_Real"}], "}"}]}], "}"}], ",", " ", 
     RowBox[{"Evaluate", "[", "tJ\[Eta]x\[Phi]", "]"}]}], "]"}]}], 
  ";"}]}], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{{3.7598499492634926`*^9, 3.7598499570905046`*^9}, 
   3.7598499905201273`*^9, {3.7598500526884804`*^9, 3.759850079896673*^9}, {
   3.759850507271087*^9, 3.759850556838687*^9}, {3.759850792885394*^9, 
   3.7598508068004107`*^9}, {3.7609654541141863`*^9, 
   3.7609654592633815`*^9}, {3.761047514640814*^9, 3.7610475322705135`*^9}, 
   3.7624799675580673`*^9, {3.7660203379633455`*^9, 3.766020338576994*^9}},
 CellID->105466891,ExpressionUUID->"2810c52d-62ef-4315-b520-229bd97503f1"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"dJ\[Eta]x\[Phi]", " ", "=", " ", 
   RowBox[{
    RowBox[{"D", "[", 
     RowBox[{
      RowBox[{"J\[Eta]x\[Phi]", "/.", "qrule"}], ",", " ", "t"}], "]"}], "/.",
     "rqrule"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"cdJ\[Eta]x\[Phi]", " ", "=", " ", 
   RowBox[{"Compile", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"x", ",", " ", "_Real"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"y", ",", " ", "_Real"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"z", ",", " ", "_Real"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"c1", ",", " ", "_Real"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"c2", ",", " ", "_Real"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"c3", ",", " ", "_Real"}], "}"}], ",", " ", 
       RowBox[{"{", 
        RowBox[{"\[Phi]1", ",", " ", "_Real"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"\[Phi]2", ",", " ", "_Real"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"\[Phi]3", ",", " ", "_Real"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"\[Phi]4", ",", " ", "_Real"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"\[Phi]5", ",", " ", "_Real"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"\[Phi]6", ",", " ", "_Real"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"\[Psi]1", ",", " ", "_Real"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"\[Psi]2", ",", " ", "_Real"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"\[Psi]3", ",", " ", "_Real"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"\[Psi]4", ",", " ", "_Real"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"\[Psi]5", ",", " ", "_Real"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"\[Psi]6", ",", " ", "_Real"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"l1", ",", " ", "_Real"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"l2", ",", " ", "_Real"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"l3", ",", " ", "_Real"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"l4", ",", " ", "_Real"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"l5", ",", " ", "_Real"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"l6", ",", " ", "_Real"}], "}"}], ",", " ", 
       RowBox[{"{", 
        RowBox[{"dx", ",", " ", "_Real"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"dy", ",", " ", "_Real"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"dz", ",", " ", "_Real"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"dc1", ",", " ", "_Real"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"dc2", ",", " ", "_Real"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"dc3", ",", " ", "_Real"}], "}"}], ",", " ", 
       RowBox[{"{", 
        RowBox[{"d\[Phi]1", ",", " ", "_Real"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"d\[Phi]2", ",", " ", "_Real"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"d\[Phi]3", ",", " ", "_Real"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"d\[Phi]4", ",", " ", "_Real"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"d\[Phi]5", ",", " ", "_Real"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"d\[Phi]6", ",", " ", "_Real"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"d\[Psi]1", ",", " ", "_Real"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"d\[Psi]2", ",", " ", "_Real"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"d\[Psi]3", ",", " ", "_Real"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"d\[Psi]4", ",", " ", "_Real"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"d\[Psi]5", ",", " ", "_Real"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"d\[Psi]6", ",", " ", "_Real"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"dl1", ",", " ", "_Real"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"dl2", ",", " ", "_Real"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"dl3", ",", " ", "_Real"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"dl4", ",", " ", "_Real"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"dl5", ",", " ", "_Real"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"dl6", ",", " ", "_Real"}], "}"}]}], "}"}], ",", " ", 
     RowBox[{"Evaluate", "[", "dJ\[Eta]x\[Phi]", "]"}], ",", " ", 
     RowBox[{"RuntimeAttributes", "\[Rule]", 
      RowBox[{"{", "Listable", "}"}]}], ",", " ", 
     RowBox[{"Parallelization", "\[Rule]", "True"}]}], "]"}]}], 
  ";"}]}], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{{3.7579511408184476`*^9, 3.75795115464822*^9}, {
   3.7598501132448964`*^9, 3.7598501587991595`*^9}, 3.7598506004560976`*^9, {
   3.7598506453906927`*^9, 3.759850736029397*^9}, {3.7598508439012628`*^9, 
   3.7598508501222677`*^9}, {3.7609654856719255`*^9, 
   3.7609654909593306`*^9}, {3.761047551150771*^9, 3.761047567230802*^9}, 
   3.761291205480133*^9, 3.7624799675580673`*^9, {3.7660203404229736`*^9, 
   3.766020340993182*^9}},
 CellID->22203563,ExpressionUUID->"676e6b6f-236e-4544-befe-822f5fa6c76d"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"Dynamics", " ", "in", " ", "joint", " ", "space"}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"c\[Eta]", " ", "=", " ", 
    RowBox[{"Compile", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"x", ",", " ", "_Real"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"y", ",", " ", "_Real"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"z", ",", " ", "_Real"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"c1", ",", " ", "_Real"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"c2", ",", " ", "_Real"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"c3", ",", " ", "_Real"}], "}"}], ",", " ", 
        RowBox[{"{", 
         RowBox[{"\[Phi]1", ",", " ", "_Real"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"\[Phi]2", ",", " ", "_Real"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"\[Phi]3", ",", " ", "_Real"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"\[Phi]4", ",", " ", "_Real"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"\[Phi]5", ",", " ", "_Real"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"\[Phi]6", ",", " ", "_Real"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"\[Psi]1", ",", " ", "_Real"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"\[Psi]2", ",", " ", "_Real"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"\[Psi]3", ",", " ", "_Real"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"\[Psi]4", ",", " ", "_Real"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"\[Psi]5", ",", " ", "_Real"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"\[Psi]6", ",", " ", "_Real"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"l1", ",", " ", "_Real"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"l2", ",", " ", "_Real"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"l3", ",", " ", "_Real"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"l4", ",", " ", "_Real"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"l5", ",", " ", "_Real"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"l6", ",", " ", "_Real"}], "}"}]}], "}"}], ",", " ", 
      RowBox[{"Evaluate", "[", "\[Eta]", "]"}], ",", " ", 
      RowBox[{"RuntimeAttributes", "\[Rule]", 
       RowBox[{"{", "Listable", "}"}]}], ",", " ", 
      RowBox[{"Parallelization", "\[Rule]", "True"}]}], "]"}]}], 
   ";"}]}]], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{{3.748001704847921*^9, 3.74800172617784*^9}, {
   3.74800188388621*^9, 3.748001891188755*^9}, 3.748002614895648*^9, 
   3.748006764249453*^9, {3.748016526757662*^9, 3.748016540478498*^9}, {
   3.7480177469107037`*^9, 3.7480177553027*^9}, 3.748017844593629*^9, {
   3.748706807337864*^9, 3.748706865881987*^9}, {3.761048394701045*^9, 
   3.761048431120722*^9}, 3.7612912010671067`*^9, 3.7624799675580673`*^9, {
   3.7660203443875237`*^9, 
   3.7660203450441265`*^9}},ExpressionUUID->"74ac1b8e-5243-473a-bd1f-\
2a87273011d0"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"tempJn", " ", "=", " ", 
   RowBox[{"D", "[", 
    RowBox[{"\[Eta]", ",", " ", 
     RowBox[{"{", 
      RowBox[{"Join", "[", 
       RowBox[{"qx", ",", " ", "\[Phi]", ",", " ", "\[Psi]"}], "]"}], "}"}]}],
     "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"cJn", " ", "=", " ", 
   RowBox[{"Compile", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"x", ",", " ", "_Real"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"y", ",", " ", "_Real"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"z", ",", " ", "_Real"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"c1", ",", " ", "_Real"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"c2", ",", " ", "_Real"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"c3", ",", " ", "_Real"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"\[Phi]1", ",", " ", "_Real"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"\[Phi]2", ",", " ", "_Real"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"\[Phi]3", ",", " ", "_Real"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"\[Phi]4", ",", " ", "_Real"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"\[Phi]5", ",", " ", "_Real"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"\[Phi]6", ",", " ", "_Real"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"\[Psi]1", ",", " ", "_Real"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"\[Psi]2", ",", " ", "_Real"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"\[Psi]3", ",", " ", "_Real"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"\[Psi]4", ",", " ", "_Real"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"\[Psi]5", ",", " ", "_Real"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"\[Psi]6", ",", " ", "_Real"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"l1", ",", " ", "_Real"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"l2", ",", " ", "_Real"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"l3", ",", " ", "_Real"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"l4", ",", " ", "_Real"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"l5", ",", " ", "_Real"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"l6", ",", " ", "_Real"}], "}"}]}], "}"}], ",", " ", 
     RowBox[{"Evaluate", "[", "tempJn", "]"}], ",", " ", 
     RowBox[{"RuntimeAttributes", "\[Rule]", 
      RowBox[{"{", "Listable", "}"}]}], ",", " ", 
     RowBox[{"Parallelization", "\[Rule]", "True"}]}], "]"}]}], 
  ";"}]}], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{{3.758674812832159*^9, 3.7586748277681866`*^9}, {
   3.758675090958074*^9, 3.758675162411634*^9}, {3.7610484512211695`*^9, 
   3.761048477920763*^9}, {3.761291170913514*^9, 3.761291190303776*^9}, 
   3.7624799675580673`*^9},ExpressionUUID->"738ea7ad-4276-4901-a2bd-\
23c161b609fa"],

Cell[BoxData[
 RowBox[{
  RowBox[{"TrackRoot", "[", 
   RowBox[{"thetai_", ",", " ", "phii_"}], "]"}], " ", ":=", "  ", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "nvec", ",", " ", "Jmat", ",", " ", "\[Delta]phi", ",", " ", 
      "loopcounter", ",", " ", "tempphi"}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"nvec", " ", "=", " ", 
      RowBox[{"c\[Eta]", "@@", 
       RowBox[{"Join", "[", 
        RowBox[{"phii", ",", " ", "thetai"}], "]"}]}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"loopcounter", "=", "0"}], ";", "\[IndentingNewLine]", 
     RowBox[{"tempphi", " ", "=", " ", "phii"}], ";", "\[IndentingNewLine]", 
     RowBox[{"While", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"Max", "[", 
         RowBox[{"Abs", "[", "nvec", "]"}], "]"}], "\[GreaterEqual]", " ", 
        RowBox[{"10", "^", 
         RowBox[{"-", "10"}]}]}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"loopcounter", "\[GreaterEqual]", " ", "100"}], ",", " ", 
          "Break"}], "]"}], ";", "\[IndentingNewLine]", 
        RowBox[{"loopcounter", "++"}], ";", "\[IndentingNewLine]", 
        RowBox[{"Jmat", " ", "=", "  ", 
         RowBox[{"cJn", "@@", 
          RowBox[{"Join", "[", 
           RowBox[{"tempphi", ",", " ", "thetai"}], "]"}]}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"\[Delta]phi", "=", 
         RowBox[{"LinearSolve", "[", 
          RowBox[{"Jmat", ",", "nvec"}], "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"tempphi", " ", "=", 
         RowBox[{"tempphi", "-", "\[Delta]phi"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"nvec", " ", "=", " ", 
         RowBox[{"c\[Eta]", "@@", 
          RowBox[{"Join", "[", 
           RowBox[{"tempphi", ",", " ", "thetai"}], "]"}]}]}], ";"}]}], 
      "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{"Return", "[", "tempphi", "]"}], ";"}]}], "\[IndentingNewLine]", 
   "]"}]}]], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{{3.758678566576553*^9, 3.7586785814430494`*^9}, {
   3.7586789430493174`*^9, 3.7586790242045345`*^9}, {3.7586791604153166`*^9, 
   3.7586791994835634`*^9}, {3.7586792633415117`*^9, 3.758679357381527*^9}, {
   3.7586795583048596`*^9, 3.758679577960926*^9}, {3.758679659906976*^9, 
   3.758679665117222*^9}, {3.761269676674922*^9, 3.7612696842843227`*^9}, {
   3.7612997600231647`*^9, 3.761299760243039*^9}, 
   3.7624799675580673`*^9},ExpressionUUID->"c3560887-e7f9-4f75-919c-\
493780290e1c"],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{
   RowBox[{"We", "'"}], "ll", " ", "need", " ", "a", " ", "root", " ", 
   "tracker", " ", "for", " ", "FK", " ", "computation"}], "*)"}]], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{{3.761047606828167*^9, 3.7610476224181595`*^9}, 
   3.7624799675580673`*^9},ExpressionUUID->"79d8ce91-acfc-4ec2-927b-\
987b2157947f"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"qsol", " ", "=", " ", 
   RowBox[{"Join", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"0", ",", "0", ",", "1.1", ",", "0", ",", "0", ",", "0"}], 
      "}"}], ",", " ", 
     RowBox[{"iksol", "[", 
      RowBox[{"{", 
       RowBox[{"0", ",", "0", ",", "1.1", ",", "0", ",", "0", ",", "0"}], 
       "}"}], "]"}]}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.766020376836546*^9, 
  3.76602039966304*^9}},ExpressionUUID->"a57ebd25-20d0-46dc-9be0-\
536da5c12ab2"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"tempx\[Phi]", " ", "=", " ", 
   RowBox[{
    RowBox[{"qsol", "[", 
     RowBox[{"[", 
      RowBox[{"1", ";;", "18"}], "]"}], "]"}], "+", 
    RowBox[{"RandomReal", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "0.01"}], ",", " ", "0.01"}], "}"}], ",", "18"}], 
     "]"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"doubledotsac", "[", 
    RowBox[{
     RowBox[{"q_", "?", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"VectorQ", "[", 
         RowBox[{"#", ",", "NumericQ"}], "]"}], "&"}], ")"}]}], ",", 
     RowBox[{"dq_", "?", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"VectorQ", "[", 
         RowBox[{"#", ",", "NumericQ"}], "]"}], "&"}], ")"}]}]}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "bla", ",", " ", "Mval", ",", " ", "Cval", ",", " ", "Gval", ",", " ", 
       "LHS", ",", " ", "dqe", ",", " ", "qe", ",", " ", "J\[Eta]x\[Phi]val", 
       ",", "J\[Eta]\[Theta]val", ",", "Jx\[Phi]\[Theta]val", ",", 
       "dJ\[Eta]x\[Phi]val", ",", "dJ\[Eta]\[Theta]val", ",", 
       "Jqe\[Theta]val", ",", "dJqe\[Theta]val", ",", "M\[Theta]val", ",", 
       "C\[Theta]val", ",", "G\[Theta]val"}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"(*", 
      RowBox[{
      "Perform", " ", "FK", " ", "for", " ", "the", " ", "configuration", " ",
        "and", " ", "task", " ", "space", " ", "variables"}], "*)"}], 
     "\[IndentingNewLine]", 
     RowBox[{"(*", 
      RowBox[{
       RowBox[{"bla", "=", " ", 
        RowBox[{"AbsoluteTiming", "[", 
         RowBox[{"TrackRoot", "[", 
          RowBox[{"q", ",", " ", "tempx\[Phi]"}], "]"}], "]"}]}], ";"}], 
      "*)"}], "\[IndentingNewLine]", 
     RowBox[{"(*", 
      RowBox[{
       RowBox[{"Print", "[", 
        RowBox[{"bla", "[", 
         RowBox[{"[", "1", "]"}], "]"}], "]"}], ";"}], "*)"}], 
     "\[IndentingNewLine]", 
     RowBox[{"(*", 
      RowBox[{
       RowBox[{"tempx\[Phi]", " ", "=", " ", 
        RowBox[{"bla", "[", 
         RowBox[{"[", "2", "]"}], "]"}]}], ";"}], "*)"}], 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"tempx\[Phi]", " ", "=", " ", 
       RowBox[{"TrackRoot", "[", 
        RowBox[{"q", ",", " ", "tempx\[Phi]"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"qe", " ", "=", " ", 
       RowBox[{"Join", "[", 
        RowBox[{"tempx\[Phi]", ",", "q"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"(*", 
       RowBox[{
       "Getting", " ", "the", " ", "velocities", " ", "of", " ", "the", " ", 
        "configuration", " ", "space", " ", "variables"}], "*)"}], 
      "\[IndentingNewLine]", 
      RowBox[{"J\[Eta]x\[Phi]val", " ", "=", " ", 
       RowBox[{"cJ\[Eta]x\[Phi]", "@@", "qe"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"J\[Eta]\[Theta]val", " ", "=", " ", 
       RowBox[{"cJ\[Eta]\[Theta]", "@@", "qe"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"Jx\[Phi]\[Theta]val", " ", "=", " ", 
       RowBox[{"-", 
        RowBox[{
         RowBox[{"Inverse", "[", "J\[Eta]x\[Phi]val", "]"}], ".", 
         "J\[Eta]\[Theta]val"}]}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"dqe", " ", "=", " ", 
       RowBox[{"Join", "[", 
        RowBox[{
         RowBox[{"Jx\[Phi]\[Theta]val", ".", "dq"}], ",", " ", "dq"}], 
        "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"(*", 
       RowBox[{
       "Compute", " ", "all", " ", "the", " ", "extended", " ", 
        "configuration", " ", "space", " ", "matrices"}], "*)"}], 
      "\[IndentingNewLine]", 
      RowBox[{"Mval", "=", 
       RowBox[{"cMmat", "@@", "qe"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"Cval", "=", 
       RowBox[{"cCmat", "@@", 
        RowBox[{"Join", "[", 
         RowBox[{"qe", ",", " ", "dqe"}], "]"}]}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"Gval", "=", 
       RowBox[{"cGvec", "@@", "qe"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"(*", 
       RowBox[{
       "Computing", " ", "the", " ", "derivative", " ", "of", " ", "the", " ",
         "Jacobians"}], "*)"}], "\[IndentingNewLine]", 
      RowBox[{"dJ\[Eta]x\[Phi]val", " ", "=", " ", 
       RowBox[{"cdJ\[Eta]x\[Phi]", "@@", 
        RowBox[{"Join", "[", 
         RowBox[{"qe", ",", " ", "dqe"}], "]"}]}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"dJ\[Eta]\[Theta]val", " ", "=", " ", 
       RowBox[{"cdJ\[Eta]\[Theta]", "@@", 
        RowBox[{"Join", "[", 
         RowBox[{"qe", ",", " ", "dqe"}], "]"}]}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"(*", 
       RowBox[{"Map", " ", "of", " ", "the", " ", "matrices"}], "*)"}], 
      "\[IndentingNewLine]", 
      RowBox[{"Jqe\[Theta]val", " ", "=", " ", 
       RowBox[{"ArrayFlatten", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", "Jx\[Phi]\[Theta]val", "}"}], ",", " ", 
          RowBox[{"{", 
           RowBox[{"IdentityMatrix", "[", "6", "]"}], "}"}]}], "}"}], "]"}]}],
       ";", "\[IndentingNewLine]", 
      RowBox[{"dJqe\[Theta]val", " ", "=", " ", 
       RowBox[{"ArrayFlatten", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"-", 
            RowBox[{
             RowBox[{"Inverse", "[", "J\[Eta]x\[Phi]val", "]"}], ".", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", 
                RowBox[{"dJ\[Eta]x\[Phi]val", ".", 
                 RowBox[{"Inverse", "[", "J\[Eta]x\[Phi]val", "]"}], ".", 
                 "J\[Eta]\[Theta]val"}]}], "+", "dJ\[Eta]\[Theta]val"}], 
              ")"}]}]}], "}"}], ",", " ", 
          RowBox[{"{", 
           RowBox[{"ConstantArray", "[", 
            RowBox[{"0", ",", 
             RowBox[{"{", 
              RowBox[{"6", ",", "6"}], "}"}]}], "]"}], "}"}]}], "}"}], 
        "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"(*", 
       RowBox[{
       "Map", " ", "the", " ", "matrices", " ", "to", " ", "the", " ", "task",
         " ", "space"}], "*)"}], "\[IndentingNewLine]", 
      RowBox[{"M\[Theta]val", " ", "=", " ", 
       RowBox[{
        RowBox[{"T", "[", "Jqe\[Theta]val", "]"}], ".", "Mval", ".", 
        "Jqe\[Theta]val"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"C\[Theta]val", " ", "=", " ", 
       RowBox[{
        RowBox[{"T", "[", "Jqe\[Theta]val", "]"}], ".", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"Mval", ".", "dJqe\[Theta]val"}], "+", 
          RowBox[{"Cval", ".", "Jqe\[Theta]val"}]}], ")"}]}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"G\[Theta]val", " ", "=", " ", 
       RowBox[{
        RowBox[{"T", "[", "Jqe\[Theta]val", "]"}], ".", "Gval"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"(*", 
       RowBox[{
       "LHS", " ", "of", " ", "the", " ", "dynamics", " ", "equations"}], 
       "*)"}], "\[IndentingNewLine]", 
      RowBox[{"LHS", " ", "=", " ", 
       RowBox[{"-", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"Inverse", "[", "M\[Theta]val", "]"}], ")"}], ".", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"C\[Theta]val", ".", "dq"}], "+", "G\[Theta]val"}], 
          ")"}]}]}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"Return", "[", "LHS", "]"}], ";"}]}], "\[IndentingNewLine]", 
    "]"}]}], ";"}]}], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{{3.74748440757664*^9, 3.747484409507562*^9}, {
   3.747484461677616*^9, 3.7474845482674875`*^9}, {3.747484580327173*^9, 
   3.747484599645011*^9}, {3.7474848161103525`*^9, 3.7474848183136363`*^9}, {
   3.747484853619799*^9, 3.7474848714698343`*^9}, {3.7474849021801157`*^9, 
   3.747484904289808*^9}, {3.7474849682701597`*^9, 3.7474849703898525`*^9}, 
   3.747485067490321*^9, {3.7474858814676027`*^9, 3.747485888809555*^9}, 
   3.747485928463986*^9, {3.747486162078972*^9, 3.7474861680139165`*^9}, {
   3.7474862079841194`*^9, 3.7474862510275145`*^9}, {3.747494313873737*^9, 
   3.747494377109394*^9}, {3.7474957232390165`*^9, 3.747495767668152*^9}, {
   3.74764017577621*^9, 3.7476401832002497`*^9}, {3.7480054810702963`*^9, 
   3.748005546272901*^9}, 3.7480056046499023`*^9, {3.757950439782325*^9, 
   3.757950569326189*^9}, {3.757950623141141*^9, 3.757950709744218*^9}, {
   3.757950755080717*^9, 3.757950774280817*^9}, {3.7579508501169844`*^9, 
   3.757950868096898*^9}, {3.757951002004713*^9, 3.75795100977565*^9}, {
   3.7579512289435077`*^9, 3.7579513288255033`*^9}, {3.757951424558215*^9, 
   3.7579515576140785`*^9}, {3.757951664084346*^9, 3.7579517277402735`*^9}, {
   3.757952357405804*^9, 3.7579523804612427`*^9}, {3.757952608230666*^9, 
   3.757952632743451*^9}, {3.7579526969170275`*^9, 3.7579527179374623`*^9}, {
   3.757952778186175*^9, 3.7579530716083097`*^9}, {3.7579531335043707`*^9, 
   3.75795314602946*^9}, {3.7579538274467583`*^9, 3.757953830240122*^9}, {
   3.75795389012076*^9, 3.7579540595329423`*^9}, {3.7579542879657555`*^9, 
   3.757954328713045*^9}, {3.757954617697354*^9, 3.7579546326152024`*^9}, {
   3.757955528194253*^9, 3.7579555321223373`*^9}, {3.757955575544798*^9, 
   3.7579557198491306`*^9}, {3.7600251382015257`*^9, 3.760025214906492*^9}, {
   3.760025271970461*^9, 3.760025291128994*^9}, {3.760025418433078*^9, 
   3.760025425017371*^9}, {3.7610305882240114`*^9, 3.7610308332628527`*^9}, {
   3.7610315623168178`*^9, 3.7610315735368743`*^9}, {3.7610344205983667`*^9, 
   3.7610344224482164`*^9}, {3.7610476568816824`*^9, 
   3.7610476911578436`*^9}, {3.761047731522089*^9, 3.761047795362996*^9}, {
   3.761047862176386*^9, 3.7610481549305077`*^9}, {3.761048507980896*^9, 
   3.761048552352975*^9}, {3.7610487115161724`*^9, 3.761048712216196*^9}, {
   3.761273663707091*^9, 3.7612736664770637`*^9}, {3.7612749544710035`*^9, 
   3.761275035221036*^9}, {3.7612753542850766`*^9, 3.761275389974563*^9}, {
   3.761276117887458*^9, 3.761276118290227*^9}, {3.7612926181930976`*^9, 
   3.761292634293437*^9}, {3.761299537850651*^9, 3.761299544745693*^9}, {
   3.7612995753741164`*^9, 3.7612996305254903`*^9}, {3.761299945838954*^9, 
   3.761299966734703*^9}, 3.7613582215808496`*^9, 3.7613588583134966`*^9, 
   3.7624799675580673`*^9, {3.7660204075265446`*^9, 3.7660204080615673`*^9}, {
   3.766020800212582*^9, 
   3.766020802618195*^9}},ExpressionUUID->"6f42105c-e9fc-430e-902b-\
43620046db6a"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"\[Theta]init", " ", "=", " ", 
   RowBox[{"qsol", "[", 
    RowBox[{"[", 
     RowBox[{"19", ";;", "24"}], "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"d\[Theta]init", " ", "=", " ", 
   RowBox[{"ConstantArray", "[", 
    RowBox[{"0", ",", 
     RowBox[{"{", "6", "}"}]}], "]"}]}], ";"}]}], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{{3.761269799348199*^9, 3.7612698526037364`*^9}, {
   3.7612748829611845`*^9, 3.7612748986212497`*^9}, 3.7624799675580673`*^9, {
   3.766020424512712*^9, 3.7660204343556843`*^9}, {3.7660204650852556`*^9, 
   3.766020465693906*^9}, {3.766020526604846*^9, 3.7660205319498158`*^9}, {
   3.7660207439634676`*^9, 3.7660207470337095`*^9}, {3.7660207847609015`*^9, 
   3.766020790977341*^9}},ExpressionUUID->"240222c3-201a-45dc-9f67-\
fa29ff3e22db"],

Cell[BoxData[
 RowBox[{"d2\[Theta]init", " ", "=", " ", 
  RowBox[{"doubledotsac", "[", 
   RowBox[{"\[Theta]init", ",", " ", "d\[Theta]init"}], "]"}]}]], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{{3.7612996698119493`*^9, 3.7612996903961353`*^9}, {
   3.761306637196088*^9, 3.7613066453193274`*^9}, 
   3.7624799675580673`*^9},ExpressionUUID->"a34727f9-71f0-49e6-87ed-\
b01500c37033"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"-", "9.133799967092848`"}], ",", 
   RowBox[{"-", "9.133825157659507`"}], ",", 
   RowBox[{"-", "9.133783348981268`"}], ",", 
   RowBox[{"-", "9.133783348981265`"}], ",", 
   RowBox[{"-", "9.133825157659505`"}], ",", 
   RowBox[{"-", "9.133799967092852`"}]}], "}"}]], "Output",
 CellChangeTimes->{3.7660207551121864`*^9, 3.766020805827376*^9, 
  3.766043309752605*^9, 3.766050694295879*^9, 3.766052400982693*^9, 
  3.766054509994832*^9, 3.7661025956206026`*^9, 3.76610494451939*^9, 
  3.7661512405740013`*^9, 3.7661567321359468`*^9, 3.7662150780186605`*^9, 
  3.766268099352372*^9, 
  3.7662917317473593`*^9},ExpressionUUID->"8f41c5f6-11ad-42ab-a02b-\
3c6e399df50a"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"tempx\[Phi]", " ", "=", " ", 
   RowBox[{
    RowBox[{"qsol", "[", 
     RowBox[{"[", 
      RowBox[{"1", ";;", "18"}], "]"}], "]"}], "+", 
    RowBox[{"RandomReal", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "0.01"}], ",", " ", "0.01"}], "}"}], ",", "18"}], 
     "]"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"tic", "[", "]"}], "\[IndentingNewLine]", 
 RowBox[{"dynsimac", " ", "=", " ", 
  RowBox[{
   RowBox[{"NDSolve", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{"doubledotsac", "[", 
         RowBox[{
          RowBox[{"q1", "[", "t", "]"}], ",", 
          RowBox[{
           RowBox[{"q1", "'"}], "[", "t", "]"}]}], "]"}], "\[Equal]", 
        RowBox[{
         RowBox[{"q1", "''"}], "[", "t", "]"}]}], ",", 
       RowBox[{
        RowBox[{"q1", "[", "0", "]"}], "\[Equal]", "\[Theta]init"}], ",", 
       RowBox[{
        RowBox[{
         RowBox[{"q1", "'"}], "[", "0", "]"}], "\[Equal]", 
        "d\[Theta]init"}]}], "}"}], ",", "q1", ",", 
     RowBox[{"{", 
      RowBox[{"t", ",", "0", ",", "0.47"}], "}"}], ",", 
     RowBox[{"AccuracyGoal", "\[Rule]", "13"}], ",", " ", 
     RowBox[{"Method", "\[Rule]", "\"\<Adams\>\""}]}], "]"}], "[", 
   RowBox[{"[", "1", "]"}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"toc", "[", "]"}]}], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{
  3.761048802310381*^9, {3.7610488359995127`*^9, 3.761048915946347*^9}, {
   3.7610491758731337`*^9, 3.761049267722969*^9}, {3.761268370422258*^9, 
   3.761268370491316*^9}, {3.7612697337841682`*^9, 3.7612697393140645`*^9}, {
   3.7612698352378273`*^9, 3.7612698438241425`*^9}, 3.7612735508276167`*^9, {
   3.7612737245468025`*^9, 3.7612737268268433`*^9}, {3.7612748490580606`*^9, 
   3.7612748523781815`*^9}, {3.7612752616956415`*^9, 3.761275263309377*^9}, {
   3.7612755005038643`*^9, 3.7612755034681597`*^9}, {3.761276279302758*^9, 
   3.7612762948330107`*^9}, {3.7612763648127265`*^9, 
   3.7612763686574717`*^9}, {3.7612767337422295`*^9, 3.761276734291529*^9}, 
   3.7612999366325016`*^9, {3.7613000172783036`*^9, 3.761300044200635*^9}, {
   3.761300131724306*^9, 3.7613001944188976`*^9}, {3.7613008120833197`*^9, 
   3.7613008535632696`*^9}, {3.761300883655382*^9, 3.7613009026743994`*^9}, {
   3.7613009472744455`*^9, 3.761301062552153*^9}, 3.7624799675580673`*^9, {
   3.7653728144068675`*^9, 3.765372814585766*^9}, {3.7660205932018204`*^9, 
   3.7660206057546434`*^9}, {3.7660207936803226`*^9, 
   3.7660207940520983`*^9}},ExpressionUUID->"4defafd0-c05d-4e79-97f1-\
8dc4bd4a2b64"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"q1", "\[Rule]", 
   InterpretationBox[
    RowBox[{
     TagBox["InterpolatingFunction",
      "SummaryHead"], "[", 
     DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = 
      "Ready"}, 
      TemplateBox[{PaneSelectorBox[{False -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquarePlusIconMedium"]], 
                ButtonFunction :> (Typeset`open$$ = True), Appearance -> None,
                 Evaluator -> Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> 
               Dynamic[{
                 Automatic, 3.5 CurrentValue["FontCapHeight"]/
                  AbsoluteCurrentValue[Magnification]}]], 
              GraphicsBox[{{
                 GrayLevel[0.6], 
                 AbsolutePointSize[5], 
                 PointBox[{1, 1}], 
                 PointBox[{2, 4}], 
                 PointBox[{3, 2}], 
                 PointBox[{4, 3}]}, {{}, {}, {
                  AbsoluteThickness[1], 
                  Opacity[1.], 
                  LineBox[CompressedData["
1:eJwBMQPO/CFib1JlAgAAADIAAAACAAAA4ScLwZmZ6T/ACPskWpOYv4AjHgZ5
3Os/cnpQh5xu1j/qWn1XCVDuP5K7ih5ptuc/r+pongFN8D/CUK87BHLxP46d
cUQ/bPE/ujUa8/qu9j9TbqBw1aPyP/TWyyAhFfw/neDJZqDG8z+QAqdF9GsA
QM1wGePDAfU/VsVD/9nXAkCidscSKDf2P6Bp73exDQVA/B1wDMFX9z+TpM3k
wfUGQDzjPoyykPg/7M3Z+O7ZCEABSgjW2LT5P3pl9LwNcgpAbCYw0z/T+j86
ypori9cLQL0gflb/Cfw/lpOs9xIqDUCTvMaj8yv9Pw4alcoYNg5AT3Y1d0Bm
/j+pB2LLtyIPQLClAv7Nmv8/NnA5bbjSD0BLO2UnSF0AQFrcILXmpw9AsTLc
klX5AED+sDHBQukOQNp6UGP9igFAbZ+lR/sLDkD10dd20SgCQNHi3Mj38wxA
42MO5MXDAkAZdr6AZb8LQJRGQrZUVANArv7zEMKHCkA4OInLD/EDQLBlMO3M
IglAnnrNRWWDBEA3d8OX6skHQNf3wBnbEgVAD3D3ndNyBkADhMcwfa4FQHOK
7Wak/wRA8WDLrLk/BkC/MhCgYawDQNJM4msi3QZAwss/TmVLAkCGc6iEq3cH
QIsIg92+BgFA/OprAs8HCECrPCvgePD/P2VxQsMepAhAKXVLE0Xg/j+RSBbp
CDYJQPRz0a7WJ/4/kFqZaBPFCUDN4sX5uLj9P4J7LytKYApAvh1MbRmT/T82
7cJSG/EKQHzT1YZwwv0/3W1pvRiOC0B2LZ/10lT+P0c/DY2wIAxAVrX8MJA7
/z+DS2C2aLAMQElWzbMzPQBAsmbGIk1MDUCi9bAadCABQKTSKfTL3Q1AYexd
q+EpAkCJTaAId3sOQFyS/ndEhgNAQAPGdkIWD0BHWcLdahwFQLoJ6Umopg9A
vd1CiejSBkCTjw8wnSEQQPiVkXD08QhAq0KpbbNqEEBsk2Azxi4LQCyTGthZ
shBAYCBYjj+gDUAnaxVkFgARQMwfdA9ySBBAg+uOIqBIEUBj/5rHgMsRQNFn
q5SZmRFAL++xNeOlE0Dwt3AR
                   "]]}}}, AspectRatio -> 1, Axes -> False, Background -> 
               GrayLevel[0.93], Frame -> True, FrameStyle -> Directive[
                 GrayLevel[0.7], 
                 Thickness[Tiny]], FrameTicks -> None, 
               ImageSize -> {Automatic, 
                 Dynamic[
                 3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])]}, PlotRange -> {{0, 5}, {0, 5}}], 
              GridBox[{{
                 RowBox[{
                   TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox[
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"0.`", ",", "0.47`"}], "}"}], "}"}], 
                    "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Output dimensions: \"", "SummaryItemAnnotation"],
                    "\[InvisibleSpace]", 
                   TagBox[
                    RowBox[{"{", "6", "}"}], "SummaryItem"]}]}}, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
               False, GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
               BaseStyle -> {
                ShowStringCharacters -> False, NumberMarks -> False, 
                 PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            BaselinePosition -> {1, 1}], True -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquareMinusIconMedium"]], 
                ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                None, Evaluator -> Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> 
               Dynamic[{
                 Automatic, 3.5 CurrentValue["FontCapHeight"]/
                  AbsoluteCurrentValue[Magnification]}]], 
              GraphicsBox[{{
                 GrayLevel[0.6], 
                 AbsolutePointSize[5], 
                 PointBox[{1, 1}], 
                 PointBox[{2, 4}], 
                 PointBox[{3, 2}], 
                 PointBox[{4, 3}]}, {{}, {}, {
                  AbsoluteThickness[1], 
                  Opacity[1.], 
                  LineBox[CompressedData["
1:eJwBMQPO/CFib1JlAgAAADIAAAACAAAA4ScLwZmZ6T/ACPskWpOYv4AjHgZ5
3Os/cnpQh5xu1j/qWn1XCVDuP5K7ih5ptuc/r+pongFN8D/CUK87BHLxP46d
cUQ/bPE/ujUa8/qu9j9TbqBw1aPyP/TWyyAhFfw/neDJZqDG8z+QAqdF9GsA
QM1wGePDAfU/VsVD/9nXAkCidscSKDf2P6Bp73exDQVA/B1wDMFX9z+TpM3k
wfUGQDzjPoyykPg/7M3Z+O7ZCEABSgjW2LT5P3pl9LwNcgpAbCYw0z/T+j86
ypori9cLQL0gflb/Cfw/lpOs9xIqDUCTvMaj8yv9Pw4alcoYNg5AT3Y1d0Bm
/j+pB2LLtyIPQLClAv7Nmv8/NnA5bbjSD0BLO2UnSF0AQFrcILXmpw9AsTLc
klX5AED+sDHBQukOQNp6UGP9igFAbZ+lR/sLDkD10dd20SgCQNHi3Mj38wxA
42MO5MXDAkAZdr6AZb8LQJRGQrZUVANArv7zEMKHCkA4OInLD/EDQLBlMO3M
IglAnnrNRWWDBEA3d8OX6skHQNf3wBnbEgVAD3D3ndNyBkADhMcwfa4FQHOK
7Wak/wRA8WDLrLk/BkC/MhCgYawDQNJM4msi3QZAwss/TmVLAkCGc6iEq3cH
QIsIg92+BgFA/OprAs8HCECrPCvgePD/P2VxQsMepAhAKXVLE0Xg/j+RSBbp
CDYJQPRz0a7WJ/4/kFqZaBPFCUDN4sX5uLj9P4J7LytKYApAvh1MbRmT/T82
7cJSG/EKQHzT1YZwwv0/3W1pvRiOC0B2LZ/10lT+P0c/DY2wIAxAVrX8MJA7
/z+DS2C2aLAMQElWzbMzPQBAsmbGIk1MDUCi9bAadCABQKTSKfTL3Q1AYexd
q+EpAkCJTaAId3sOQFyS/ndEhgNAQAPGdkIWD0BHWcLdahwFQLoJ6Umopg9A
vd1CiejSBkCTjw8wnSEQQPiVkXD08QhAq0KpbbNqEEBsk2Azxi4LQCyTGthZ
shBAYCBYjj+gDUAnaxVkFgARQMwfdA9ySBBAg+uOIqBIEUBj/5rHgMsRQNFn
q5SZmRFAL++xNeOlE0Dwt3AR
                   "]]}}}, AspectRatio -> 1, Axes -> False, Background -> 
               GrayLevel[0.93], Frame -> True, FrameStyle -> Directive[
                 GrayLevel[0.7], 
                 Thickness[Tiny]], FrameTicks -> None, 
               ImageSize -> {Automatic, 
                 Dynamic[
                 3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])]}, PlotRange -> {{0, 5}, {0, 5}}], 
              GridBox[{{
                 RowBox[{
                   TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox[
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"0.`", ",", "0.47`"}], "}"}], "}"}], 
                    "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Output dimensions: \"", "SummaryItemAnnotation"],
                    "\[InvisibleSpace]", 
                   TagBox[
                    RowBox[{"{", "6", "}"}], "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Order: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["3", "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Method: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["\"Hermite\"", "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Periodic: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["False", "SummaryItem"]}]}}, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
               False, GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
               BaseStyle -> {
                ShowStringCharacters -> False, NumberMarks -> False, 
                 PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            BaselinePosition -> {1, 1}]}, 
         Dynamic[Typeset`open$$], ImageSize -> Automatic]},
       "SummaryPanel",
       DisplayFunction->(
        ButtonBox[#, Active -> False, Alignment -> Left, 
         Appearance -> {
          "Default" -> 
           FrontEnd`FileName[{"Typeset", "SummaryBox"}, "Panel.9.png"]}, 
         FrameMargins -> 7, BaseStyle -> {}, 
         DefaultBaseStyle -> {"Panel", Background -> None}, BaselinePosition -> 
         Baseline]& )],
      DynamicModuleValues:>{}], "]"}],
    InterpolatingFunction[{{0., 0.47}}, {
     5, 3, 2, {106}, {4}, 0, 0, 0, 0, Automatic, {}, {}, 
      False}, CompressedData["
1:eJwBYQOe/CFib1JlAgAAAAEAAABqAAAAAAAAAAAAAABe6DoOJLvkPV7oOg4k
u/Q9VsyfNb1PuT5+Wn9cF0/JPmlnFw8o+9I+Qyvh9dCP9D5WPv7zazACPwrn
C23vGAo/38cMc7kAET+yiShopUUsP7tXZQt3BTg/TjVbsQ30QD+/vgPdX+VF
P0pHZmSl1GE/5J6L0fIvbj8/e1gfoEV1Pwwn69VGc3s/PL9uR4Hbhz969fOR
r/6QP1WLMICeD5Y/MCFtbo0gmz/c2SaX64WgPyEjF3eQe6M/ZWwHVzVxpj+q
tfc22mapP+7+5xZ/XKw/vHKQvo7CsD8A5qzx3VazP0RZySQt67U/iczlV3x/
uD/OPwKLyxO7PxKzHr4aqL0/h0HmMY1IwD+FKb0EDb3BP4MRlNeMMcM/gPlq
qgymxD9+4UF9jBrGP3zJGFAMj8c/erHvIowDyT94mcb1C3jKP3aBnciL7Ms/
BzCracofzT+Z3rgKCVPOPyqNxqtHhs8/3h1qJsNc0D8n9fB2YvbQP2/Md8cB
kNE/uKP+F6Ep0j8Be4VoQMPSP0pSDLnfXNM/xNBjpwHK0z8+T7uVIzfUP8KB
vXfMjNQ/R7S/WXXi1D/L5sE7HjjVP08ZxB3HjdU/1EvG/2/j1T9YfsjhGDnW
P92wysPBjtY/YePMpWrk1j/lFc+HEzrXP0hrhkykfdc/qsA9ETXB1z8NFvXV
xQTYP3BrrJpWSNg/0sBjX+eL2D81FhskeM/YP5dr0ugIE9k/+sCJrZlW2T9c
FkFyKprZP79r+Da73dk/dTApLFQV2j8r9Vkh7UzaP+C5ihaGhNo/ln67Cx+8
2j9MQ+wAuPPaPwIIHfZQK9s/uMxN6+li2z8QUAjk6HbbP2nTwtznits/wlZ9
1eae2z8b2jfO5bLbP3Rd8sbkxts/zeCsv+Pa2z8jGPqwdhHcP3lPR6IJSNw/
z4aUk5x+3D8kvuGEL7XcP3r1LnbC69w/0Cx8Z1Ui3T/1apFJfjvdPxqppiun
VN0/P+e7DdBt3T9kJdHv+IbdP4pj5tEhoN0//m9N7z+m3T9zfLQMXqzdP+eI
Gyp8st0/XJWCR5q43T8DKB02jM3dP6u6tyR+4t0/U01SE3D33T+z/Ux69QXe
P+RVyi04Dd4/FK5H4XoU3j/0/6Ou
     "], CompressedData["
1:eJyt1wkwVf//x3FrikJEpAWFLC0urmydQ0gSSpZUlGRJQkqRlCiKFFoolEq2
ylqRck6WSgmJkOLas+8Spf/n5n0m/Wb+M7//zP870zzmvL7Pmff5UjdfCTu3
bfvZWVhYDqBfTGehXzXcpg9MzIex/1aW/+M/G1+0ufrrSpKr+GTyApEu2Cb8
FNIdpHYD6P6v71PF7hWzOXVh/r5Z91tMkENO4yUGyHGQ2quh+9/ex+3/9X1k
4K4MvI8MvM/fvRo6fbijAHcP/Mf7KPzH+/wwM/lz579VllT1X9Dek29kbPdM
FEnqivDNR74Bt8CuAJ3F7ek72JD0n7snJKff4zSoDbsldIFrtvy589+a++iz
tGXbz3xb9hbbXUj11x+yzZDaILU/gy5y0/Qd/5vTd9PfGfx5jyzQD/Zw6I7H
bvpzh9L7P/zPf99/OXRWZSonMV/HcLAaaRDM41GO3ALywj4A3XBO6587/dzT
d+dpTL8HZRvs/dDd2V2TyrxzEUz/D6md6kae2cVXecsQVePxjbXIb+zvqj4g
e8DXsHdCt0/i5Z87A0fY/txVurPiz3usAbtgt4eu0/hTCvPOfVDY5F+pneqC
lx/dY12kTIQ82CVhg7weerHdEhkFBsJ+BjoWac8/d7hOZj9j3h26+wljvscw
yAc7K3TGHvrJzDuF7tOmevwrtVOdRRaX+9t3WsStlU8ry5FytoHNr5Dy4A3Y
TaAbr/lxkHnnqLLGn7seW3f/eY+DoBvsI9B9KJJJZN5pLZzWrfhfqZ3qUkqT
sVjnDcScU20vbyOTdBb135ghB+z3oTNWNf9zZ83Na7nMu1kpOetPzVABdqpz
uKrvybwjEjKtUsy/UjvVnU78ZJO1fA8Rn3Zr0xNkUO+awxlIT/A47M7Qxa2O
2sW8I7PxczLzrva8ydWnZigNewx0jVdjuJh3xI5Peyb5X6md6uT0y21+H3Qh
PIQ+mnG4uhDOMgmiP9HzdnAj7POhy6jr02DeUXamnWfeTQkw5WW+RxKoCHs6
dLdfydoboztbQ6Yle/+V2qnOpTrtjtROT8In00RSFhl1s9ZsOTIM3A+7LXSf
FHdwM+9cmYizZN5dxZX7xY/5/QNvwF4HHb6yL3gLumNa3PvHQOe+f6R2qmO5
Nifw3e/jhDn9zewKpHZwf/Ab5DpQB/bRq9NdhULN69PojtjgMiHm3esXlW/4
zVAc9iro0t96/VzH/H6kH/6jzinvf6R2qovL1fO7tPMKsVTfWiESKWdfxH8R
qQ7qwJ4KnXrBtxAf5j2ad91J5nst5bE5jpQAv8CuCZ3E1LUEXnTnpWbIH32J
uH+kdqorOZRqE6ERT0h7bfO9ijxw7oDpZaQnqAZ7BXQdPwSzXNGdw1WqrB7I
nqnngS7IbtAD9nboHrLaBJZtH8b2Jur/scHZ9R+pnerim1RfWmxKIhz0C6V2
IsVKNOrNkMvB47AnQaecsFXTGt35Ndc8ZDdye7zOPCvkVvAn7FRnNK8l6ji6
80jm+R81nv78R2qnuiet9lYClmlE5CM1DhGkkLv1DV6kGHgP9nzo9Mb4pHHm
90sE89rA/DxW4h7TmmE17Juge1jxrbZ42zBWKuX5xyPe9LqZUjvV7ZW/rfVY
M4/o2Ld39TPkbsuLExnIPeAA7A7QbWfdNpm3Af08GOexlUDGBji9ykXGgIdg
N4duqd3A45Wmw5jjEtY/atiEPZkptVOdVR2HZ55DISH4QWUyHxk1y3dJLjIa
FIZ9J3SGR9TYBnQkSfmO83uHkS1j+cW9yEZQDnYj6Fpa1qrHGw1jLc9i1jFt
+qahMVNqp7rFez5oVKwuISavatdUIU2uHF3zHmkMTsEuDp2IM+v5em1JcofE
x5EG5I2dGjp1yJugFexUJxwZ5LnGAP05uiHpwTTn8+KjM6V2qislyxr9x8qI
1by/IoKQ6317RPxmqAj7B+jOfbgQexKXJI8p6or6I7l8H2w6geQGT8B+Hrrr
u38drNYexp7muTgzfbTA2m2m1E510dY22jvrK4mV9NGXNkiVWRx9Vkg6KAd7
DHSnjuUsPbdeknyx90TGeeQp3eanAcgAkID9DHS+udHvNdTR3fcxb5hOjXdU
zJTaqe7I2bBqXo1PhFbCV1ZBpFO9I+9cpDOIwX4MOn9FYpu0Jvrc5Q9jlUOG
PqioWj7Dh7BTnbLKr3w7xWFM3XN7DlOVVKfCmVI71UnMd1tqcKOOOGsr+dMI
udqlokEXuQY8B/ty6OSGJ012qkmSnBeXiNsiz47efGKFDASpneomxOYdNpRB
n39pR52ZrrIsPDZTaqe6F7pF34fGvxDJ1cEXx5GbOFar9yM3gymwE9Ad8B+O
laBLksmnWK5KIb9/DWxdivwBpsBOdSRpsmxYbBhbrxC4gGmT/2npmVI7AZ3/
dQ29k/IMYlsrp/tp5OTUhhUnkD9BM9jPQFcp5y5/lCZJRr3ca+KN9LHh3HIY
6QfGwF4FXdu7sVBlzmHszZZ7J5la6qhcnym1t0L32pVzT7NoC/rPH9dsR7IY
JBY0ItlAPdjfQHe75rdUrxz6uf1dZeIg0jNSZaITeRT8Bvtd6NL42ualdQ1h
b/eJ/XiEPLLts1jaDKn9EXSKyvYug7PaiZcc+3nGkEOGmRv6kCNgAew06OZr
adypl0B/rtOMohhI3fgI4doZHoed6nLHA87alw5hp2PVDzAtX9x7fabUngPd
W/0WNqehb8RWvlwfV6S7dw5mjzwMmsH+DjoL657WRQslSSEjJWdxpE19Q4vw
DEVht4auK6F3rWXKEKZ3dGoe0yVqtw1mSu2d0IXQJNh+1XcTKb6LXdi/dBPn
t10JG0fPIeBD2EOhs01TUvflliTt/ORcziAZsk4px5CN4F7Y90Dnm/M2/Xzg
EBYb2h3ItJ/7WdlMqf0EdHPGClpsCvuIG10XdzkgC/ccvb8DWQzehJ3qWFpK
xV9NSpByCRcl3yOlLi1uJZErQFnYWaHbrGkm9Nt6CCtx5G2cQs5Kvab+e4bU
bghdWAPeLVI1QGzMmK+zBHnCcU+t0AwNYL8E3aUR0d6MLglyecuzrlxkAGbZ
mDrDlbCHQxcRYsdIlBnC1jBsY5gem+fBlzRDag+HTje465LakSHizOvJtPVI
UVu3FhXkIjAQdj3oCp7UPJGpkiB3yRrzKSJPedGDxZH+4D7YX0EXr+RQFdU/
iOk+kzvN1LlThi96htR+G7opM8nQZQIjxGXhiCgp5A/rvJViyEkwEvbf0GXM
eZwWlitB3k26lh2NzHYIX3QOmQHGw54J3Q2B1t+1mYNY9tSZKKZmjrcN6mZI
7dHQGf3gfL7v4ShRnqLJOIDstN5w0gbZBVbCvgW696ZfXcRvSJAy1o/OrELy
BZwSEUbOA6VgL4XO6H5frrvHILZuV58GU967+wQ9Zkjtm6GzMk4OvaD3nRAy
dZiKQJo6LNILRG4FRWDfAZ3B1xHVxiMSpOiGm419yIpIjqeVyA/gItg3Q7dZ
oLDNWX4QO+cyacTUd0rH7MAMqd0Qurikd2um6sYJwxcvFWd/Hifeppy7P4ae
34FGsN+GLgK/7RdoIEEqzzOzuI6cZ/9Y+yiSH6TDfh06+tp3myoYA1iclEZ4
OZLP1668YobUrgLd1Qsyg7MOTBBJ900+CSAFrIIafjlPEIJgCuxR0P2yH0lz
EpQgnbxmnz6FvKwV+tscGQY6wD4F3Z6SAyyZ4QOY4Fp2yQxkaDf/XeZzCEjt
ttCVWDh9J0cmiT36GjLlSBf/HJYnSFdwH+zvoQv4vHCB3UdxcovMkrqTSPW9
raybkVrgNtiDoKtgC+MRXz+AzXLo+70UaT1i/4H5vAOk9nLo9p87e4TX+xeh
L2flvgzJLawqzYqcBxrC7gzd4cHNjdfOipMDV3/V5CC5HHcq+SDngIOwe0F3
nd9ltU1pPxb2+VHKTiR3WS7fHuRskNqvQnfomX9r4OgU8blms3E0Uu2KVcoR
pCbYCPth6Ew/W9lrSYuTPZWdko7I9ecbzogiMbAb9m3QyZyux+uV+7EHeivN
apGV7iNeX5EVILVLQ/fK2zh8wQIW8nFH4glxpFlm0zg3cjv4FPYS6No2uCk9
vLiMNPho4MkftowsPm+z1wI9vwY3wt4DXbXAFr+U633YnZinCxKRkaYMkYfI
yyC1V0HHU118yCeZhSxe925vMFJVQJ7bDbkOfA07L3SJvAcMs5OWksrbs0Pl
kpeSVqIOWYZJf1WAPRm6AsZ6vdGRXsxJ3dVwEFnzaK/lOLIapPaX0L24LVwl
rc5Kzju4QlkVGXRZa70oMhjkg52Erm1QuJLlyhKycpc2SxiSxepzxqnIv5bD
3g+dRe74tV6jXiz/gOvgN+SVq2zrBpHhIAE71fkHnjETKWYlW+6FRcsjnZfq
zpuNPAC2wn4WOj/Hm166GxaTej/0tXuRfe4/4hN0/qoFewB0ae+Ctlbc6sEu
qJQ0v0UqXVkbV4VUBENhpzqpgn163JvYSG9jDnYJZJ5R9sMxAzbyOegDuyx0
ki3Sagn3F5FunEaqbomLSLvlggmMhEXkftAFdinoJCcW8X7r7cauqGdkNCEH
JQdke5H94FXYl0PnWyzps7eIjXRhlbPxRfamRhVuQvaBrrCfhk6WnYO1MFmE
VHM9VZadIkK6n7m2uCxJhDwKroNdDjpZyYiKy6rdmPL8T9bnkX3LmzquIXtA
FdjloDPZfKVWUIWd5FagZyshR97oTY4ps5Oj4FzYzaDT2VCidI0mTFbqqoY8
VRImL+1M4NinKEyGgW9g14OuO/VJnubJLmz9PtdxJeTLfqFZukgCxGCnuqmA
S/svRLGT9jzdiulILol+HscZ7oedPXC6+5DLPaIrLkjStwq9iJMQJGtHPBnk
UkHyI6gM+yfoTkz1THkTnZiB/8M0N+TowZsFZ5Aj4CbYqc7q2pflft3spElq
NFcqUjS88vK2GZrCvhs6tW8lJZ5XeMntSalWD67zkvJr98pGXeYl14HUrg3d
5UuiLaP0Tuxy8wrjLmRZyduO38j3YDjsVLc1SiJJfhEHuUBT3t4GadxT3Dou
+lch2C2gW/S8b0nFFBfp5l18+AjbbPLzkZViqhNc5BDoDrs4dHjSp+KdD79h
xz8Uk8bI5F/y2o7IJJDaqc7Um+9lhiYHqS/JubAbmWaY4+Q1QwPYzaF7/HVi
v4cR+tx+uG3JRVMW0sDhhOCQPvo8Bx/DTkK3eTXfzg/4Nyz1Ta1gIfJbaPHK
BmQHSO1Ul7Gzsvj7Fg4yMv5LA92Yg7x8L+hsNnoOB6/B/gQ691gV6xfkEKEZ
kviULBkiRgvtNfmzh4hOkA12Q+jUUwQ3cFR1YMeuO0WPfOzAxHlTLwug52Ug
tVPdveyVwc7m6OsQETn4CJm+/NzKJcgMcDPsydD5fRF3WnKthAjl8rzJ3VZC
HKwd1OOUKCGUwIhZ03sNdOt+YDoKjh3YpbWFAmLIIyXauppIT5DaqU5pwSv3
T1s5yA3Xt7yU3MZBBleMnTuFns+DG2FfB924E6u/1v4e7GHhpQWZJj2YuVSI
3oKgHkwfbIe9H7qj3uLZQRPt2PmPKrVHkG9tNyZGI0tAaj8CXTu/9tcf2hzk
/LSg7C06HGRmjnHhNe2/CsHeDZ00jZsIL2LBX0vMOZmdz4ILhFWXWZex4Dxg
AuwS0E0lm7XtDGvHLGyHaBuR88u+8rkj+UFz2H9B5/zBqN1/BQd5snqq+yty
sG40k3+G/rAfgi5txL+x+RAP3m+Kx5114sGfnhzMUPbhwYvAeVun9xzoOshs
fFSyHUvzwy40ICN2NQ/zLG/HwsFHsLdBd3LNxo+i4+zkQrWmx35I1YzUrVHf
/yoG+xnoDnuu4Hx+QRA/YjG+bHOQIL5jk5zoxnBB3Ae8CDvVWYltU0vMacO0
U722hCF1JPk/ksxnEIfdHDqbwoS7x/PYScG6GuEOZPlO1c2tz/66EHY76ES4
pjyCqkRxBy/+jMoKUXxwu/geoS+iOIv5tI6wi0GndEm3/p1JG1a0vi0wHXku
huXNtxkWwL4Wuidx1rWeruykbfvviB7kHZGbxSUH/2oP+zPoopq5bj7REccZ
d9l6c3FxXGpTzRX+jeK4HtgHO9WNi57vLfjWimnimcP3kP5ZK1NaZqgO+wh0
qZZTY0Lz2Mn48Bvp0ciY/MS2bXPZyZvgfdjToBtpP6EbXLAcf99mcsiZXI43
lzUWBL3+ayHsXdAp2N0wmR3dinXu2yz8LaoVu1Atd1gh+q8dsK+ErlgsZXt6
Fhs5QdxQ18pmI6eGDv/8lPlXFnJ6L4EOn/vs5I+r0nhVZIsmGSmNZwVMDAbf
lMaTwWLYlaH7/qrWm2HYipVVuNS9QJ7dEbl/9ua/lsI+DJ034+trE2M2Mkh1
ZGM78kfx87TdW/56EfaT0L0cO0eousriae3xP1oPyOI/DmTN3ecpi3eB0bAX
Qve9I5Hdb6oFO1iVXmmFNPh6WzplhgdgH4auaSI/4ucXVjIn7IdQ7FdW8sSS
R3z99aykL5gPext00cLivBc1FfCAehYFSXUFPE3465jtBgU8AfSC/SJ0eKrT
qEB2C1ZgWza7O6sF25G9p2QDerYCSdg1oXPUv5Q6ZMtKphrfjozdw0rqKzo2
vbJhJTeCGbC7QHf411EJ/e+r8bm0HnrxyGq8MKVQsnRqNf4BnAO7K3QbnC51
lLu0YDzKGQIJyERbcojzYAuWAM6BHYPO2dLu8b0aFvJVx6Ed1rUs5NFT66Is
P7GQXmAp7K7QDdabvZZ5sxbPyvz55uurtXhC0WDLplL0DL6EfQQ61ydbF7VI
tWDrIjTXPEaK9SsPLJVuwURBOuzO0OUezpn/XJeFrJPifOarx0L6LvRzNNzA
Qp4EG2F/Ad15t/SMY78UcVZ5RU3pn4q4Fp+8wRQrDbcAxWCnuoiAlshjzc0Y
fixmnz7SRHewOhe5BVwPexh0hy/6Rcib/iaK1zC2FW79TSTxxViMG/0mksFy
2H2gW60WnVokpITH9L2MOrRACX/Sf6I/e5ESXgGmw06Drks4aFt2fDPGF+fx
8BQy33Qg/RfyOTgX9nboQq+wXDrOOUVESnP1SXNNEbybjm/sY/1rDOyR0F14
hMfLz1XGHy1urqjiVsY9rSwfXpivjAeAz2A/B53/XvFbefuaMVGf8+YByBLu
s3Vz7Zux16Aw7Cehi6XTo56n/iQ6k24e93/4k1gY9+Ttx8S/DsF+D7oVjFWt
v78o4xddRIIf1ivjQrHaVZXNyvgqMA72VdDxvCQvpKxsxsrVo10PIYXs2t05
ZJsxQbAUdi7ongy5XgrSmySyr147ZLdxkrj/89SBddqTRAKYB/tz6N4J70v+
eVYFTxW/eOtxoApekG2SYxCqgr8B82Evhc7UJHWv8UQTZtKp85MX2fJroUA6
sgk0gn0zdDGW199vXjhBSBkEcK0TnSDuuzuY3xH4qzzsd6BbmP0gImxIBVfw
Hfe0HFTBdW357XR+qOBGoAbsVJc2mcbBUdaEJTg8V3v5vgmryNeXOISey8A7
sCdDxx8lML+zZZzYejTiWlvbOKHyrSK4sWGcUAYtYBeGjqeTFWvaQMfFT5j4
vNSh42PG7mksm+n4ICgFOx90jcesJT7ebcLiAt9UhyJNGqQs9O+hrwt4A/Y6
6BbWbD5Z9eA7cfjIZGnjo++E0+nWAfvEv3rBvgQ6j9AkqzofOt7pe/l7nTcd
v7RGxM/pDB2PAKn9CHTmanO6yBNN2NLIGs5jSMm62F4t3yZsGSgGuwnVyUsu
9vQcI4wuhMqFHB0jTpw/uPu66xjhA5rCvgK61t8jEYwoOs6RqeE5F3l9k1h2
y206ngEugL0WOh/p66oV5ui+7Nf7Z5Dh5T7vLC2asDBwMeye0LUnzNUXVBsl
XP1y7VQ0RolDxZpdRbRRwgV0h70POtZbA2qlt+j4hzOKemuRI+dDXm9MQt+f
C9N2w84OneKE12NWWhMW0BXjnK7YhNHfhdy/gp6VwNOwy0GXdSQotGNqmBje
t1KXn3WEeN5p2bVsfJjIBcdgfwbdWVGxjJfh6H6DAq8r8m5ll9KzG3Q8DuSA
PRy6UzcthLbzN2F2NQGzfvM1YbGGBprD6PkGaAu7N3Qvbr1dxv5qiGhdM2fx
6jdDxDzvduO8/CGCB+yAvQg6oa5fXGIedDw9/QG2DDm15CbHVfT7hGXptK9h
nwfdy4CpoTyOJuymoff5/ci2VN/HtpxNWDMYBXsedOzutPkT5kOEZHx67Aqr
IaJhdNj5jPEQ8QVcATs3dEW+jAiDvXQ86LmbvwdSOCVUeegAHdcE02BvhO6g
/1CO8w8G9stOY3Q+0ktPQUVggoF5ghOwO0B3tpBPWK99kDibH3Hk0LdBYt21
jqSYhkFCBQyCPQQ63oSF1b4mdDzqAW3Ve2Sb/Pckix10fBJ8Cjs/dFKq99fs
7mNgCt9yBDiQPvp7A7n7GdgxUBb2ZdCxn/ct6PUaJO6945AR8h4kds9dESvo
NkhYg/dhnwOd85cJi2oNOn5oXUGHiSYdV8toaGvUQ79vQXvYj0H3VD9P9FoL
A8tzWJiggVwZbO5g0MrApMAc2DOgs2mWWfiLa5DYfmF/ogT3IPFrVa7uwO8B
YhK0gN0euutrfQPcpOl4h2mp6kIZOr6nkWtr6lo67g32wH4buiYOO+UFdQys
RH3BgZxaBham+DHqHXoOAV/BXg/d7CnLMyeiB4hZhyTNY24iBQ7waIQPEGwg
F+y80CUn7/Zy4kP/3TFPzXB+Op7VysnySZSOvwG/wn4buvfbs1RryhjY53yb
RT7IulNhVZHlDOwTWAP7a+j67fOa3OUHiGWBl6ZCVw0QW+4ElE5KDhCbQGof
he7T9cXDX8ZU8CtKuMi37yr4VSP5NF9WOv4IDIG9Bjpyd/JinWwGtngs7khT
FgOjO9++O+8xA1MCRWF/Bp2sI+tTe/Y+InHeXcvjXH1E0VIB3a2DvcRr8B7s
66Ar6pUSmv0Q3akgitIeqeDNKhlttBwVvAmk9g/QqVyasyXhJgPrePYT10ba
GY+/PB3DwGzBFtjXQLex4mmiZk430cxulCT6vJvwYySPDdzrJs6AX2C3gC6q
XIqTYa2CC345eEtrtwp+7Uu5YZSDCl4EOsDuD12X0TLzH4EMrCBry+IIpCFn
3pu2s+gumA97C3RXtRIZa706iZ/Sl70LvDuJr5X338Tu7SQ+g72wJ0EXpy94
x4lNBe//tl/3GqcKPi6LZaXxop8/5Kbl7pze3aG75yS4mu7OwA7fuSNQ6sbA
7MPm5Ct7oK8TeAj2WOjm67+f+KjVQRCkSSybdgfxy2oN1iXTQYyCD2FfCZ3R
vovbfRKUcUHzqtLwZGV81s54fdNMZXwN6AC7LnQKkWVOZrsZWFyvxNv2XQzM
yvYVtt+GgVmAN2BfAd39x5ypwXxtREPEfTF1gTaiYD2buNp4K5EDvoI9DzoO
pc6pfD1lvMj6zKFaQ2X8qBndW9JMGXcDfWHXhK7LJH27gRH6eohcT67bzMAk
V8unHNrCwMRBG9iboYteg78+191M4Dq798b1NhPnF+X4FFQ2E/6gIuzJ0I03
Z67OaFXCS8IE7Zu6lPC1kdeMbg0p4avBSthZW6a7dwovNs3RY2B95RX10bro
74us3X5q+gzsCNgFeyF0u+d3eNsONRHGpbQhqZEmQoltdH9XbRMhD2rB7grd
c1v/VQ1PlXA+2U0Xr+Qr4Qr8bu+4XynhauBi2Cugu4efL5Bfz8Aqq35m5mkx
sOeTjosdMPTnGyyDPQY6rtbLx10mGcSxh+FSn38yCCdDMlyniUHsBR1hF4au
KPBGqQz6kHHi1uJxjFDCfcW+lYdHo/cBDWBnQJdnzdL8SBV97kambl+PjNu2
P2l4HboPcsCeBV1a3MUHSbMYROZKzdc5XAxC5ffpnvCaRmI1eBf2F9AF97HZ
J9so4efYlvh4OijhZJZXiImrEn4cvAK7FXSj5pKl4Yroc5AW0iGO7B7x29hE
Y2CdIA32XujIMClHmZUNBE4zLfCVbSDOseQFjAx8JYJBadiboQuODHLzpSnh
czctPVuproQ/34mb79ZGXxcw1GB6N4VuaZ7//Y/yDCyR3hxphzRgOIuvXsXA
9MG7sAtD1+V2oMdk4xditu/bhFKk1gONxru8Xwh9cPzE9M7vPt2l7e2Izpml
hMtG9A3d4FPCgwqPPa5E/198GVSFPQm6FXyL3HzlGFh2cqUlD/I4V9ztOnTX
C0yHfTF0Z9i0xrk/1hMlh2v6TZHbMop2s92oJ3aCubAnQ1fbdLxI+icN57Tf
ICPPib4uKisuGPMo4bvAmH3T+23ott16USQny8DGDDxSc1ei70vZ5swL6G43
OAS7IXT3pW5dnWVbTzjPt5tcgOQZi1gUL1VPLAB3wl4GXTCdRsQM0vBXNblL
CidouOksH6FKFiV8nHPaGNhvQTd42PJegwwDi+fJCnFFLlSx26aN7gqBsbB3
QmfysDZSp/sz8apWIEoE6f0kpO1UxmciEMyB3Qu6gfp1NYs6aLhDdtKyfQM0
PJ116b3dYzQ8CMyCneruzavmjpJmYG9sL41KI20fVp78he7uBotgj4FO1sSe
zD/2mRDg+xq5E7niR0lonNZnYg3IBvtW6MhVbubxX2h4zl3lwzztNPzuQIjf
YDcNPwe+g70cuvpSt9B9kgwMP/rm+pAE+vlQJCWmcjkDkwY1Yf8InXvODscV
fbXE/O8627/31BK5SybiXmbWEs/AobHpPQa6oJyeObNzaXgIu79EWwENv5R+
YfnZNzTcGoyCfW3udBdrYaHmtpSBtQuJBU0tQX8/hDeLfVvGwHaBzbBfhU4u
dUjKzbGGuNLrUX1ofw3hk9i98pVcDeEHesBuBF3UpU/mjVdpeKS99J1Vt2l4
cKa0cHACDR/OmPY27AzoCi/zRj9bhH7/fr9sZIicH3o9QGsxA+MDO2DPg047
Vs3qaks1sVUNu5XDqCbav6jfuZNQTfwAlWG3h26gnW29oicNp7UIWvedRF+H
xfVbOAJouI3YtI7N0/tt6NR6/fmNRdCf923zxRsWMrBSf1W+WlEG9hZMh10R
uhKWOkGr2ioi2S1z49eqKmJyD3+RX3QVIbR32iuw90GnXXaH33MnDdeM3b7h
hAMNP8+mdN/OhYYfBqNgj4eO5Wa51HJ0b96x1QeyhBnYk0L3nHTm+4FzYB+/
Md3xsk7oqptVEXFS2nWHTKqIofV03l7BKoIHm/Yc7GugS7cQe/TAhIaz598t
r7Om4e49OnoptjT8DrgW9rWW010CX0bxbyH0uZPpveEyUjXr49BldFcF7IQ9
Fjq9hIYnHmUfCenH7PHb334kHAN5ldPDPhKnQX7Y7aFz1xzW/r6BhnNn9TAM
0L0KmcBHbNtpuAVolTm9S0D3P36Yu4U=
     "], {Automatic}],
    Editable->False,
    SelectWithContents->True,
    Selectable->False]}], "}"}]], "Output",
 CellChangeTimes->{3.76602076602591*^9, 3.7660208076994905`*^9, 
  3.7660433101899776`*^9, 3.7660506945432997`*^9, 3.7660524012254953`*^9, 
  3.76605451036462*^9, 3.7661026098430805`*^9, 3.7661049459833236`*^9, 
  3.766151241527458*^9, 3.766156732723591*^9, 3.7662150786267176`*^9, 
  3.7662680998181*^9, 
  3.766291732416976*^9},ExpressionUUID->"86bce6ca-aa6b-407f-b206-\
b6a5351c3956"],

Cell[CellGroupData[{

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Actual time consumed: \"\>", "\[InvisibleSpace]", 
   "0.5796656`6.913692525952518", "\[InvisibleSpace]", "\<\" seconds.\"\>"}],
  SequenceForm[
  "Actual time consumed: ", 0.5796656`6.913692525952518, " seconds."],
  Editable->False]], "Print",
 CellChangeTimes->{3.7660207660399027`*^9, 3.7660208077274747`*^9, 
  3.766043310313941*^9, 3.766050694574546*^9, 3.7660524012464333`*^9, 
  3.7660545104180017`*^9, 3.7661026099290323`*^9, 3.7661049460222797`*^9, 
  3.766151241664359*^9, 3.76615673280954*^9, 3.766215078726986*^9, 
  3.766268099845106*^9, 
  3.766291732489935*^9},ExpressionUUID->"90e8e7b6-880b-4174-b85c-\
0152f06b1f13"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"CPU time consumed: \"\>", "\[InvisibleSpace]", 
   "0.2809999999999988`", "\[InvisibleSpace]", "\<\" seconds.\"\>"}],
  SequenceForm["CPU time consumed: ", 0.2809999999999988, " seconds."],
  Editable->False]], "Print",
 CellChangeTimes->{3.7660207660399027`*^9, 3.7660208077274747`*^9, 
  3.766043310313941*^9, 3.766050694574546*^9, 3.7660524012464333`*^9, 
  3.7660545104180017`*^9, 3.7661026099290323`*^9, 3.7661049460222797`*^9, 
  3.766151241664359*^9, 3.76615673280954*^9, 3.766215078726986*^9, 
  3.766268099845106*^9, 
  3.766291732501927*^9},ExpressionUUID->"5fca3dcf-8603-4819-9898-\
01fd91094f9c"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"qsolac", " ", "=", " ", 
   RowBox[{"q1", "/.", "dynsimac"}]}], ";"}]], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{{3.7612884757160397`*^9, 3.761288497257904*^9}, 
   3.7624799675580673`*^9},ExpressionUUID->"82324c37-1ea4-424d-b5eb-\
b1c29a4f068a"],

Cell[BoxData[
 RowBox[{
  RowBox[{"\[Theta]ac", " ", "=", " ", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"Mean", "[", 
      RowBox[{"qsolac", "[", "i", "]"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", " ", "0", ",", " ", "0.469", ",", " ", "0.001"}], 
      "}"}]}], "]"}]}], ";"}]], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellChangeTimes->{{3.76128858726665*^9, 3.7612885911321645`*^9}, {
   3.761288628499945*^9, 3.7612886794803324`*^9}, {3.7613000538033595`*^9, 
   3.7613000542083826`*^9}, {3.761300217497883*^9, 3.7613002179723835`*^9}, {
   3.7613007502676125`*^9, 3.7613007634156857`*^9}, {3.761300869084998*^9, 
   3.7613008699118*^9}, 
   3.7624799675580673`*^9},ExpressionUUID->"bf1220a1-6a05-47b2-bc4f-\
ff761430dc46"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{"Trajectory", " ", "Tracking", " ", "Control"}], "*)"}]], "Input",
 CellChangeTimes->{{3.76132272446243*^9, 
  3.761322731601326*^9}},ExpressionUUID->"de204513-ad7f-4d28-9295-\
45afacd250a0"],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{
   RowBox[{"d2x2d2qe", "[", 
    RowBox[{"qx_", ",", " ", "dqx_", ",", " ", "d2qx_"}], "]"}], ":=", " ", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "J\[Eta]qval", ",", " ", "J\[Eta]xval", ",", " ", "Jqxval", ",", " ", 
       "dJ\[Eta]qval", ",", " ", "dJ\[Eta]xval", ",", " ", "dqe", ",", " ", 
       "Jqexval", ",", " ", "dJqexval", ",", " ", "d2qeval", ",", " ", "qe"}],
       "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"qe", " ", "=", " ", 
       RowBox[{"Join", "[", 
        RowBox[{"qx", ",", " ", 
         RowBox[{"iksol", "[", "qx", "]"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"J\[Eta]qval", " ", "=", " ", 
       RowBox[{"cJ\[Eta]q", "@@", "qe"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"J\[Eta]xval", " ", "=", " ", 
       RowBox[{"cJ\[Eta]x", "@@", "qe"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"Jqxval", " ", "=", " ", 
       RowBox[{"-", 
        RowBox[{
         RowBox[{"Inverse", "[", "J\[Eta]qval", "]"}], ".", 
         "J\[Eta]xval"}]}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"dqe", " ", "=", " ", 
       RowBox[{"Join", "[", 
        RowBox[{"dqx", ",", " ", 
         RowBox[{"Jqxval", ".", "dqx"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"(*", 
       RowBox[{
       "Computing", " ", "the", " ", "derivative", " ", "of", " ", "the", " ",
         "Jacobians"}], "*)"}], "\[IndentingNewLine]", 
      RowBox[{"dJ\[Eta]qval", " ", "=", " ", 
       RowBox[{"cdJ\[Eta]q", "@@", 
        RowBox[{"Join", "[", 
         RowBox[{"qe", ",", " ", "dqe"}], "]"}]}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"dJ\[Eta]xval", " ", "=", " ", 
       RowBox[{"cdJ\[Eta]x", "@@", 
        RowBox[{"Join", "[", 
         RowBox[{"qe", ",", " ", "dqe"}], "]"}]}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"(*", 
       RowBox[{"Map", " ", "of", " ", "the", " ", "matrices"}], "*)"}], 
      "\[IndentingNewLine]", 
      RowBox[{"Jqexval", " ", "=", " ", 
       RowBox[{"ArrayFlatten", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"IdentityMatrix", "[", "6", "]"}], "}"}], ",", " ", 
          RowBox[{"{", "Jqxval", "}"}]}], "}"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"dJqexval", " ", "=", " ", 
       RowBox[{"ArrayFlatten", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"ConstantArray", "[", 
            RowBox[{"0", ",", 
             RowBox[{"{", 
              RowBox[{"6", ",", "6"}], "}"}]}], "]"}], "}"}], ",", " ", 
          RowBox[{"{", 
           RowBox[{"-", 
            RowBox[{
             RowBox[{"Inverse", "[", "J\[Eta]qval", "]"}], ".", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", 
                RowBox[{"dJ\[Eta]qval", ".", 
                 RowBox[{"Inverse", "[", "J\[Eta]qval", "]"}], ".", 
                 "J\[Eta]xval"}]}], "+", "dJ\[Eta]xval"}], ")"}]}]}], "}"}]}],
          "}"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"d2qeval", " ", "=", " ", 
       RowBox[{
        RowBox[{"dJqexval", ".", "dqx"}], "+", 
        RowBox[{"Jqexval", ".", "d2qx"}]}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"Return", "[", 
       RowBox[{"{", 
        RowBox[{"dqe", ",", " ", "d2qeval"}], "}"}], "]"}], ";"}]}], 
    "\[IndentingNewLine]", "]"}]}], "*)"}]], "Input",
 CellChangeTimes->{{3.761357705308257*^9, 3.7613579208925123`*^9}, {
   3.7613579744139676`*^9, 3.7613579760137863`*^9}, 3.761358139313758*^9, {
   3.7613588844716215`*^9, 3.76135890091999*^9}, {3.7613590409088917`*^9, 
   3.7613590414639683`*^9}, {3.761359200099277*^9, 3.761359207138487*^9}, 
   3.7613844858873262`*^9},ExpressionUUID->"f76345d3-3112-45c1-814d-\
9f48927c635d"],

Cell[BoxData[
 RowBox[{
  RowBox[{"d2x2d2qe", "[", 
   RowBox[{"qx_", ",", " ", "dqx_", ",", " ", "d2qx_"}], "]"}], ":=", " ", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "J\[Eta]qval", ",", " ", "J\[Eta]xval", ",", " ", "Jqxval", ",", " ", 
      "dJ\[Eta]qval", ",", " ", "dJ\[Eta]xval", ",", " ", "dqe", ",", " ", 
      "Jqexval", ",", " ", "dJqexval", ",", " ", "d2qeval", ",", " ", "qe"}], 
     "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"qe", " ", "=", " ", 
      RowBox[{"Join", "[", 
       RowBox[{"qx", ",", " ", 
        RowBox[{"iksol", "[", "qx", "]"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"J\[Eta]qval", " ", "=", " ", 
      RowBox[{"cJ\[Eta]q", "@@", "qe"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"J\[Eta]xval", " ", "=", " ", 
      RowBox[{"cJ\[Eta]x", "@@", "qe"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"Jqxval", " ", "=", " ", 
      RowBox[{"-", 
       RowBox[{
        RowBox[{"Inverse", "[", "J\[Eta]qval", "]"}], ".", 
        "J\[Eta]xval"}]}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"dqe", " ", "=", " ", 
      RowBox[{"Join", "[", 
       RowBox[{"dqx", ",", " ", 
        RowBox[{"Jqxval", ".", "dqx"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"(*", 
      RowBox[{
      "Computing", " ", "the", " ", "derivative", " ", "of", " ", "the", " ", 
       "Jacobians"}], "*)"}], "\[IndentingNewLine]", 
     RowBox[{"dJ\[Eta]qval", " ", "=", " ", 
      RowBox[{"cdJ\[Eta]q", "@@", 
       RowBox[{"Join", "[", 
        RowBox[{"qe", ",", " ", "dqe"}], "]"}]}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"dJ\[Eta]xval", " ", "=", " ", 
      RowBox[{"cdJ\[Eta]x", "@@", 
       RowBox[{"Join", "[", 
        RowBox[{"qe", ",", " ", "dqe"}], "]"}]}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"(*", 
      RowBox[{"Map", " ", "of", " ", "the", " ", "matrices"}], "*)"}], 
     "\[IndentingNewLine]", " ", 
     RowBox[{"d2qeval", " ", "=", " ", 
      RowBox[{"Join", "[", 
       RowBox[{"d2qx", ",", " ", 
        RowBox[{"-", 
         RowBox[{
          RowBox[{"Inverse", "[", "J\[Eta]qval", "]"}], ".", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"dJ\[Eta]xval", ".", "dqx"}], "+", 
            RowBox[{"J\[Eta]xval", ".", "d2qx"}], "+", 
            RowBox[{"dJ\[Eta]qval", ".", 
             RowBox[{"dqe", "[", 
              RowBox[{"[", 
               RowBox[{"7", ";;"}], "]"}], "]"}]}]}], ")"}]}]}]}], "]"}]}], 
     ";", "\[IndentingNewLine]", 
     RowBox[{"Return", "[", 
      RowBox[{"{", 
       RowBox[{"dqe", ",", " ", "d2qeval"}], "}"}], "]"}], ";"}]}], 
   "\[IndentingNewLine]", "]"}]}]], "Input",
 CellChangeTimes->{{3.761357705308257*^9, 3.7613579208925123`*^9}, {
   3.7613579744139676`*^9, 3.7613579760137863`*^9}, 3.761358139313758*^9, {
   3.7613588844716215`*^9, 3.76135890091999*^9}, {3.7613590409088917`*^9, 
   3.7613590414639683`*^9}, {3.761359200099277*^9, 3.761359207138487*^9}, 
   3.7613844858873262`*^9, {3.766051835856407*^9, 3.7660519789358935`*^9}, {
   3.7660524245541687`*^9, 
   3.7660524336798472`*^9}},ExpressionUUID->"eed8f222-605d-483f-83a4-\
a9d86eaa8b6e"],

Cell[BoxData[
 RowBox[{
  RowBox[{"qe2dqe", "[", 
   RowBox[{"qe_", ",", " ", "d\[Theta]_"}], "]"}], ":=", " ", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "dqe", ",", " ", "J\[Eta]x\[Phi]val", ",", " ", "J\[Eta]\[Theta]val", 
      ",", " ", "Jx\[Phi]\[Theta]val"}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{"(*", 
     RowBox[{
     "Getting", " ", "the", " ", "velocities", " ", "of", " ", "the", " ", 
      "configuration", " ", "space", " ", "variables"}], "*)"}], 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"J\[Eta]x\[Phi]val", " ", "=", " ", 
      RowBox[{"cJ\[Eta]x\[Phi]", "@@", "qe"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"J\[Eta]\[Theta]val", " ", "=", " ", 
      RowBox[{"cJ\[Eta]\[Theta]", "@@", "qe"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"Jx\[Phi]\[Theta]val", " ", "=", " ", 
      RowBox[{"-", 
       RowBox[{
        RowBox[{"Inverse", "[", "J\[Eta]x\[Phi]val", "]"}], ".", 
        "J\[Eta]\[Theta]val"}]}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"dqe", " ", "=", " ", 
      RowBox[{"Join", "[", 
       RowBox[{
        RowBox[{"Jx\[Phi]\[Theta]val", ".", "d\[Theta]"}], ",", " ", 
        "d\[Theta]"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"Return", "[", "dqe", "]"}], ";"}]}], "\[IndentingNewLine]", 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.761357705308257*^9, 3.7613579208925123`*^9}, {
   3.7613579744139676`*^9, 3.7613579760137863`*^9}, 3.761358139313758*^9, {
   3.7613588844716215`*^9, 3.76135890091999*^9}, {3.7613590409088917`*^9, 
   3.7613590414639683`*^9}, {3.761359200099277*^9, 3.761359207138487*^9}, 
   3.7613844858873262`*^9, {3.7613850260359755`*^9, 3.76138512255931*^9}, {
   3.761386742526838*^9, 3.7613867646512976`*^9}, {3.761386801981901*^9, 
   3.7613868485084877`*^9}, {3.7613869077563896`*^9, 
   3.7613869113450565`*^9}},ExpressionUUID->"6f68d697-90ec-4edc-9ccd-\
e5aa6e836709"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"To", " ", "recover", " ", "the", " ", "required", " ", "\[Tau]"}],
    "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"find\[Tau]", "[", 
    RowBox[{"qe_", ",", " ", "dqe_", ",", " ", "\[Tau]dash_"}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "J\[Eta]x\[Phi]val", ",", " ", "J\[Eta]\[Theta]val", ",", " ", 
       "Jx\[Phi]\[Theta]val", ",", " ", "Mval", ",", " ", "Cval", ",", " ", 
       "Gval", ",", " ", "M\[Theta]val", ",", " ", "C\[Theta]val", ",", " ", 
       "G\[Theta]val", ",", " ", "Jqe\[Theta]val", ",", " ", 
       "dJqe\[Theta]val", ",", " ", "\[Tau]val", ",", " ", "d\[Theta]val", 
       ",", " ", "d\[Theta]ival", ",", "dJ\[Eta]x\[Phi]val", ",", 
       "dJ\[Eta]\[Theta]val"}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"(*", 
      RowBox[{
      "Getting", " ", "the", " ", "velocities", " ", "of", " ", "the", " ", 
       "configuration", " ", "space", " ", "variables"}], "*)"}], 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"d\[Theta]ival", " ", "=", " ", 
       RowBox[{"dqe", "[", 
        RowBox[{"[", 
         RowBox[{"19", ";;", "24"}], "]"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"J\[Eta]x\[Phi]val", " ", "=", " ", 
       RowBox[{"cJ\[Eta]x\[Phi]", "@@", "qe"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"J\[Eta]\[Theta]val", " ", "=", " ", 
       RowBox[{"cJ\[Eta]\[Theta]", "@@", "qe"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"Jx\[Phi]\[Theta]val", " ", "=", " ", 
       RowBox[{"-", 
        RowBox[{
         RowBox[{"Inverse", "[", "J\[Eta]x\[Phi]val", "]"}], ".", 
         "J\[Eta]\[Theta]val"}]}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"(*", 
       RowBox[{
       "Compute", " ", "all", " ", "the", " ", "extended", " ", 
        "configuration", " ", "space", " ", "matrices"}], "*)"}], 
      "\[IndentingNewLine]", 
      RowBox[{"Mval", "=", 
       RowBox[{"cMmat", "@@", "qe"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"Cval", "=", 
       RowBox[{"cCmat", "@@", 
        RowBox[{"Join", "[", 
         RowBox[{"qe", ",", " ", "dqe"}], "]"}]}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"Gval", "=", 
       RowBox[{"cGvec", "@@", "qe"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"(*", 
       RowBox[{
       "Computing", " ", "the", " ", "derivative", " ", "of", " ", "the", " ",
         "Jacobians"}], "*)"}], "\[IndentingNewLine]", 
      RowBox[{"dJ\[Eta]x\[Phi]val", " ", "=", " ", 
       RowBox[{"cdJ\[Eta]x\[Phi]", "@@", 
        RowBox[{"Join", "[", 
         RowBox[{"qe", ",", " ", "dqe"}], "]"}]}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"dJ\[Eta]\[Theta]val", " ", "=", " ", 
       RowBox[{"cdJ\[Eta]\[Theta]", "@@", 
        RowBox[{"Join", "[", 
         RowBox[{"qe", ",", " ", "dqe"}], "]"}]}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"(*", 
       RowBox[{"Map", " ", "of", " ", "the", " ", "matrices"}], "*)"}], 
      "\[IndentingNewLine]", 
      RowBox[{"Jqe\[Theta]val", " ", "=", " ", 
       RowBox[{"ArrayFlatten", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", "Jx\[Phi]\[Theta]val", "}"}], ",", " ", 
          RowBox[{"{", 
           RowBox[{"IdentityMatrix", "[", "6", "]"}], "}"}]}], "}"}], "]"}]}],
       ";", "\[IndentingNewLine]", 
      RowBox[{"dJqe\[Theta]val", " ", "=", " ", 
       RowBox[{"ArrayFlatten", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"-", 
            RowBox[{
             RowBox[{"Inverse", "[", "J\[Eta]x\[Phi]val", "]"}], ".", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", 
                RowBox[{"dJ\[Eta]x\[Phi]val", ".", 
                 RowBox[{"Inverse", "[", "J\[Eta]x\[Phi]val", "]"}], ".", 
                 "J\[Eta]\[Theta]val"}]}], "+", "dJ\[Eta]\[Theta]val"}], 
              ")"}]}]}], "}"}], ",", " ", 
          RowBox[{"{", 
           RowBox[{"ConstantArray", "[", 
            RowBox[{"0", ",", 
             RowBox[{"{", 
              RowBox[{"6", ",", "6"}], "}"}]}], "]"}], "}"}]}], "}"}], 
        "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"(*", 
       RowBox[{
       "Map", " ", "the", " ", "matrices", " ", "to", " ", "the", " ", "task",
         " ", "space"}], "*)"}], "\[IndentingNewLine]", 
      RowBox[{"M\[Theta]val", " ", "=", " ", 
       RowBox[{
        RowBox[{"T", "[", "Jqe\[Theta]val", "]"}], ".", "Mval", ".", 
        "Jqe\[Theta]val"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"C\[Theta]val", " ", "=", " ", 
       RowBox[{
        RowBox[{"T", "[", "Jqe\[Theta]val", "]"}], ".", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"Mval", ".", "dJqe\[Theta]val"}], "+", 
          RowBox[{"Cval", ".", "Jqe\[Theta]val"}]}], ")"}]}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"G\[Theta]val", " ", "=", " ", 
       RowBox[{
        RowBox[{"T", "[", "Jqe\[Theta]val", "]"}], ".", "Gval"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"(*", 
       RowBox[{
       "Mapping", " ", "it", " ", "to", " ", "the", " ", "required", " ", 
        "actuator", " ", "torques"}], "*)"}], "\[IndentingNewLine]", 
      RowBox[{"\[Tau]val", " ", "=", " ", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"M\[Theta]val", ".", "\[Tau]dash"}], ")"}], "+", 
        RowBox[{"C\[Theta]val", ".", "d\[Theta]ival"}], "+", 
        "G\[Theta]val"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"Return", "[", "\[Tau]val", "]"}]}]}], "\[IndentingNewLine]", 
    "]"}]}]}]], "Input",
 CellChangeTimes->{{3.7613595454656625`*^9, 3.761359560746158*^9}, {
   3.7613595969757338`*^9, 3.761359754285674*^9}, {3.761360596085878*^9, 
   3.7613606260185304`*^9}, {3.7613606915156937`*^9, 3.761360741591067*^9}, {
   3.7613866295630875`*^9, 3.76138668743645*^9}, 3.7613870287202606`*^9, {
   3.7660208248824296`*^9, 3.766020825524042*^9}, {3.766020878335142*^9, 
   3.766020884673648*^9}},ExpressionUUID->"ec0f4811-c668-4326-870f-\
8ca96fa7160c"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"h", " ", "=", " ", "0.001"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"tf", " ", "=", " ", "\[Pi]"}], ";"}]}], "Input",
 CellChangeTimes->{{3.761357253392726*^9, 3.7613572543927374`*^9}, {
   3.7614019142198973`*^9, 3.7614019366686053`*^9}, {3.762044407858102*^9, 
   3.7620444081878996`*^9}, 3.7620746837242985`*^9, {3.7621345318572655`*^9, 
   3.7621345337941704`*^9}, {3.7621345824241467`*^9, 3.7621345854304795`*^9}, 
   3.7621600810509243`*^9, 3.7653752302241435`*^9, {3.7653753721149673`*^9, 
   3.765375397054531*^9}, {3.76537548905297*^9, 3.7653754893814416`*^9}, {
   3.765378506678501*^9, 3.765378506804457*^9}, 3.76604340265689*^9, {
   3.7660438337778378`*^9, 3.7660438338967466`*^9}, 
   3.766044421126148*^9},ExpressionUUID->"17fd3b01-cc7a-4742-94c1-\
29bdc871081c"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"scale", " ", "=", " ", "2"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"xparam", " ", "=", " ", 
   RowBox[{
    RowBox[{"xp", "*", 
     RowBox[{"Sin", "[", 
      RowBox[{
       RowBox[{"\[Omega]x", "*", "t"}], "-", "\[Delta]x"}], "]"}]}], "/.", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"xp", "\[Rule]", 
       RowBox[{".6", "/", "scale"}]}], ",", " ", 
      RowBox[{"\[Omega]x", "\[Rule]", "2"}], ",", " ", 
      RowBox[{"\[Delta]x", "\[Rule]", 
       RowBox[{"\[Pi]", "/", "2"}]}]}], "}"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"yparam", " ", "=", " ", 
   RowBox[{
    RowBox[{"yp", "*", 
     RowBox[{"Sin", "[", 
      RowBox[{
       RowBox[{"\[Omega]y", "*", "t"}], "-", "\[Delta]y"}], "]"}]}], "/.", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"yp", "\[Rule]", 
       RowBox[{".6", "/", "scale"}]}], ",", " ", 
      RowBox[{"\[Omega]y", "\[Rule]", "2"}], ",", " ", 
      RowBox[{"\[Delta]y", "\[Rule]", "0"}]}], "}"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"zparam", " ", "=", " ", "1"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"trackedpath", " ", "=", " ", 
  RowBox[{"ParametricPlot3D", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"xparam", ",", " ", "yparam", ",", " ", "zparam"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"t", ",", " ", "0", ",", "tf"}], "}"}], ",", " ", 
    RowBox[{"PlotStyle", "\[Rule]", "Dashed"}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"xtrack", " ", "=", " ", 
   RowBox[{"{", 
    RowBox[{
    "xparam", ",", " ", "yparam", ",", " ", "zparam", ",", " ", "0", ",", "0",
      ",", "0"}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"dxtrack", " ", "=", " ", 
   RowBox[{"D", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "xparam", ",", " ", "yparam", ",", " ", "zparam", ",", " ", "0", ",", 
       "0", ",", "0"}], "}"}], ",", " ", "t"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"d2xtrack", " ", "=", " ", 
   RowBox[{"D", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "xparam", ",", " ", "yparam", ",", " ", "zparam", ",", " ", "0", ",", 
       "0", ",", "0"}], "}"}], ",", " ", 
     RowBox[{"{", 
      RowBox[{"t", ",", " ", "2"}], "}"}]}], "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.7613228710995455`*^9, 3.7613229338072643`*^9}, {
   3.7613229717197113`*^9, 3.7613229924332485`*^9}, {3.761323056294459*^9, 
   3.761323063431486*^9}, {3.7613230935147333`*^9, 3.761323116484309*^9}, {
   3.7613231715116434`*^9, 3.7613232635758147`*^9}, {3.7613233342857313`*^9, 
   3.7613233427313495`*^9}, {3.7613234277744284`*^9, 
   3.7613234703159227`*^9}, {3.761323500522591*^9, 3.761323519522687*^9}, {
   3.7613235627538815`*^9, 3.76132360029436*^9}, {3.7613238042034082`*^9, 
   3.761323866842725*^9}, {3.761350401416315*^9, 3.7613505297105846`*^9}, {
   3.7613519914028378`*^9, 3.7613520759289*^9}, {3.761352126174652*^9, 
   3.761352126528895*^9}, {3.7613526141864405`*^9, 3.7613526407571125`*^9}, {
   3.76135302390882*^9, 3.7613532395565195`*^9}, 3.761353327969242*^9, 
   3.761353515330392*^9, {3.761378004913282*^9, 3.761378013873143*^9}, {
   3.7614002082160625`*^9, 3.761400271063797*^9}, {3.761400365462055*^9, 
   3.7614003909724703`*^9}, {3.761401799575118*^9, 3.761401862926381*^9}, 
   3.7620444228681545`*^9, {3.762074606887117*^9, 3.7620746234571753`*^9}, {
   3.7620767755381055`*^9, 3.76207678334164*^9}, {3.7620769074514513`*^9, 
   3.762076911401518*^9}, {3.762130649043781*^9, 3.7621306491467404`*^9}, {
   3.7621311928247366`*^9, 3.762131192902674*^9}, {3.762131446473667*^9, 
   3.7621314466262503`*^9}, {3.762131659643694*^9, 3.7621316598437357`*^9}, {
   3.762132223234342*^9, 3.762132228260418*^9}, {3.762133966134097*^9, 
   3.7621339715243015`*^9}, {3.762134018143243*^9, 3.762134029542445*^9}, {
   3.7621342946406517`*^9, 3.7621342957841177`*^9}, {3.7621345504741535`*^9, 
   3.762134552168556*^9}, {3.762159036363986*^9, 3.7621590377172327`*^9}, {
   3.7621593191498103`*^9, 3.7621593192437553`*^9}, {3.7621596055129905`*^9, 
   3.762159606779257*^9}, {3.7621597647059155`*^9, 3.7621597824257727`*^9}, {
   3.7621600659885426`*^9, 3.762160071527383*^9}, {3.7623142520546317`*^9, 
   3.7623142521705837`*^9}, {3.765364970910555*^9, 3.765364975164097*^9}, {
   3.7653652841039515`*^9, 3.7653652895628376`*^9}, {3.765365350036725*^9, 
   3.765365354229933*^9}, {3.765365420602191*^9, 3.765365426614168*^9}, {
   3.76536550475704*^9, 3.7653655050149217`*^9}, {3.765372458007103*^9, 
   3.765372462032825*^9}, {3.7660259226198916`*^9, 3.7660259233754587`*^9}, {
   3.7660264643121705`*^9, 3.766026465347554*^9}, {3.766034619280404*^9, 
   3.7660346489658213`*^9}, {3.7660347182664766`*^9, 
   3.7660347183514676`*^9}, {3.7660352018676596`*^9, 3.766035201965622*^9}, {
   3.7660356001036024`*^9, 3.7660356039163804`*^9}, {3.7660438282328234`*^9, 
   3.766043830811178*^9}, {3.7661049747061977`*^9, 
   3.7661049753632355`*^9}},ExpressionUUID->"3c4102e4-dca7-4b2c-9cf6-\
6e6ac92535aa"],

Cell[BoxData[
 Graphics3DBox[{{}, {}, 
   TagBox[
    {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[2], 
     Dashing[{Small, Small}], Line3DBox[CompressedData["
1:eJxN1X1Uk2UUAPDBLETniPGlxyGILJyhQIgxUB4JTEdqSxBUdBJMT1I6RMAp
CZg4cUIIOM6K+FIRUMCh8dGUPWM4PoR9va+iCDRArRjWECkhVCLP4Xm759x/
fn/ce88995y7NJq/bZ85iUTaMJPkmbTw/i9w2JxyZY91OS+A9DZGgV/4rexe
Jg6flXUEfPNnLpj1HY69zf0LcJjR06kMfnoROe2aqC/vEQZXle7cz7asRm49
MtLzcw4G8WRpKEV4E3lSw8TFZXo9rMg2Phwsuo3cIGOsidbqoHQ/ja3KUiK3
yqqaBL9ooLVdsW/og1bkFkUMw5SmE0belxQwku8ifxBVEfQZuR26n3N55P1S
jTyOn56d298CzRLkdpGHdMhFITUTAi6EHO+eqFShHnlC7ZoQlqoOxp+MfyY+
gCE3FZzuKWXUwjPeOT7ODYS/jKwIszVWQHL9xyvpY4SXkuhGj/XF8LTBLPPm
Ihz565RJmwH6Wcj7dWeVg8f/PPH52V30VFBesPpRsRfhJfcCnj22+RF4ZKqT
SpYQTtty1JiaUA7uv7Jc/90k0fdwmJWWxpOCo41+oy+aCT+TQssb3lsH0rIy
iqbjCH9yjJHMCpKBQJ3MYWge4YKhzM1XYDNYQ3E+ce1dYj+9X14Nl7epgHv3
pSJmiRY5cyiQM7+9AxQlNtEiEruQ8wx2y4MXqwF1nD/hTOlAft7anjq8SAf4
MZ90kkfuIC9o52TnhuvBEzYXjqQokO/aRmXu88VAcY1yfJlvI/Ivglznx4kx
sPFpqY3vFuLeeEdsXwX3Y0BE5b7OkFQhj79AVf5GwYH/jSbdkMsl5K577Ej5
TBxc0CQe563OQ+5TuXvEyxsHlJbOwm7KWuSbTYMRh1fgYPtjX9qBsFw4661u
086smfqcwtF1blsvIT9fH0LJeYiBVgfF4N7d1cg5MRF01sz8dYpYcyHnJnK3
U6firwIMSMQXVX8YGpAvmOPvF87WA59jkxKnegXyIL8YC6d5OrBQhYPPF6uQ
v/fDxNdb16uBWfWKj+4PtCMP6OIetJF2gOK+waQpURdyroBdSH6hAg9EGnOv
b7XIu4TVKsF4M0hnugWrJ3TIHU8JtamXZcCU/A/5bzMMuZHfK9nzfj2oce9W
hEcT/sbW43pZbi34cJU/Sy0lPGzBkucCWiWwvMcgb3xOeFrOdbNBVSEwVXJl
VnQcedTlOyMDgafBvId1PYGehBvStZZ+jiehS4FoLMSL8OUHh6PrtxdA7bD/
Oz85Ed5vv1/JNiuHu5JMHOUU0Tcr8XsfQboUlmm8P1ipIHxDSjl2ObEOfrop
VP4Vn/BQ6RG6e6wc7pAz+8JK9chvTSfz/TtbYGFxc+PQEWJvnpPsKb8XbVBz
tDHSao4G+W1WS59VQifMEgK4u+cucndj9/E3bRo41z42ddNfrcjNXcVj+Td0
sCG4u7JiXIk8eO7jzFCZHmK9EoNLShPyZWPh4t/PYTB/vt6k6CfuTXXCSI3R
Y9BfzN2RcaIGedHa4XVJc3AoGz/k2bS0DHnsgYW8NDccetDlSVdWiZHP/heV
RRB35r/IZ/1f3U6OlA==
      "]]},
    Annotation[#, "Charting`Private`Tag$3320#1"]& ]},
  Axes->True,
  DisplayFunction->Identity,
  FaceGridsStyle->Automatic,
  Method->{},
  PlotRange->{{-0.29999999999999755`, 
   0.29999969467702964`}, {-0.2998835915154122, 0.29990383443003527`}, {0., 
   2.}},
  PlotRangePadding->{
    Scaled[0.02], 
    Scaled[0.02], 
    Scaled[0.02]},
  Ticks->{Automatic, Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.7661049669643326`*^9, 3.766104975699476*^9}, 
   3.7661512444477625`*^9, 3.766156735190198*^9, 3.766215081893302*^9, 
   3.7662681007325983`*^9, 
   3.7662917339141417`*^9},ImageCache->GraphicsData["CompressedBitmap", "\<\
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\
\>"],ExpressionUUID->"0234f084-cfe4-47fd-b449-7194ac05d4cc"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{
     RowBox[{
     "We", " ", "assume", " ", "that", " ", "we", " ", "are", " ", "within", 
      " ", "the", " ", 
      RowBox[{"SWZ", ".", " ", "We"}], " ", "try", " ", "to", " ", "track", 
      " ", "a", " ", "3", "D"}], "-", 
     RowBox[{
     "Lissajous", " ", "Curve", " ", "with", " ", "no", " ", "change", " ", 
      "in", " ", "c1"}]}], ",", " ", "c2", ",", " ", "c3"}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"scale", " ", "=", " ", "1.5"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"xparam", " ", "=", " ", 
     RowBox[{
      RowBox[{"xp", "*", 
       RowBox[{"Sin", "[", 
        RowBox[{
         RowBox[{"\[Omega]x", "*", "t"}], "-", "\[Delta]x"}], "]"}]}], "/.", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"xp", "\[Rule]", 
         RowBox[{".6", "/", "scale"}]}], ",", " ", 
        RowBox[{"\[Omega]x", "\[Rule]", "2"}], ",", " ", 
        RowBox[{"\[Delta]x", "\[Rule]", 
         RowBox[{"\[Pi]", "/", "2"}]}]}], "}"}]}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"yparam", " ", "=", " ", 
     RowBox[{
      RowBox[{"yp", "*", 
       RowBox[{"Sin", "[", 
        RowBox[{
         RowBox[{"\[Omega]y", "*", "t"}], "-", "\[Delta]y"}], "]"}]}], "/.", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"yp", "\[Rule]", 
         RowBox[{".3", "/", "scale"}]}], ",", " ", 
        RowBox[{"\[Omega]y", "\[Rule]", "8"}], ",", " ", 
        RowBox[{"\[Delta]y", "\[Rule]", "0"}]}], "}"}]}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"zparam", " ", "=", " ", 
     RowBox[{
      RowBox[{"1", "+", 
       RowBox[{"zp", "*", 
        RowBox[{"Sin", "[", 
         RowBox[{
          RowBox[{"\[Omega]z", "*", "t"}], "-", "\[Delta]z"}], "]"}]}]}], "/.", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"zp", "\[Rule]", 
         RowBox[{".2", "/", "scale"}]}], ",", " ", 
        RowBox[{"\[Omega]z", "\[Rule]", "4"}], ",", " ", 
        RowBox[{"\[Delta]z", "\[Rule]", 
         RowBox[{"\[Pi]", "/", "2"}]}]}], "}"}]}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{"trackedpath", " ", "=", " ", 
    RowBox[{"ParametricPlot3D", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"xparam", ",", " ", "yparam", ",", " ", "zparam"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"t", ",", " ", "0", ",", "\[Pi]"}], "}"}], ",", " ", 
      RowBox[{"PlotStyle", "\[Rule]", "Dashed"}]}], "]"}]}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"xtrack", " ", "=", " ", 
     RowBox[{"{", 
      RowBox[{
      "xparam", ",", " ", "yparam", ",", " ", "zparam", ",", " ", "0", ",", 
       "0", ",", "0"}], "}"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"dxtrack", " ", "=", " ", 
     RowBox[{"D", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
        "xparam", ",", " ", "yparam", ",", " ", "zparam", ",", " ", "0", ",", 
         "0", ",", "0"}], "}"}], ",", " ", "t"}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"d2xtrack", " ", "=", " ", 
     RowBox[{"D", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
        "xparam", ",", " ", "yparam", ",", " ", "zparam", ",", " ", "0", ",", 
         "0", ",", "0"}], "}"}], ",", " ", 
       RowBox[{"{", 
        RowBox[{"t", ",", " ", "2"}], "}"}]}], "]"}]}], ";"}]}], 
  "*)"}]], "Input",
 CellChangeTimes->{{3.7613228710995455`*^9, 3.7613229338072643`*^9}, {
   3.7613229717197113`*^9, 3.7613229924332485`*^9}, {3.761323056294459*^9, 
   3.761323063431486*^9}, {3.7613230935147333`*^9, 3.761323116484309*^9}, {
   3.7613231715116434`*^9, 3.7613232635758147`*^9}, {3.7613233342857313`*^9, 
   3.7613233427313495`*^9}, {3.7613234277744284`*^9, 
   3.7613234703159227`*^9}, {3.761323500522591*^9, 3.761323519522687*^9}, {
   3.7613235627538815`*^9, 3.76132360029436*^9}, {3.7613238042034082`*^9, 
   3.761323866842725*^9}, {3.761350401416315*^9, 3.7613505297105846`*^9}, {
   3.7613519914028378`*^9, 3.7613520759289*^9}, {3.761352126174652*^9, 
   3.761352126528895*^9}, {3.7613526141864405`*^9, 3.7613526407571125`*^9}, {
   3.76135302390882*^9, 3.7613532395565195`*^9}, 3.761353327969242*^9, 
   3.761353515330392*^9, {3.761378004913282*^9, 3.761378013873143*^9}, {
   3.7614002082160625`*^9, 3.761400271063797*^9}, {3.761400365462055*^9, 
   3.7614003909724703`*^9}, {3.761401799575118*^9, 3.761401862926381*^9}, 
   3.7620444228681545`*^9, {3.762074606887117*^9, 3.7620746234571753`*^9}, {
   3.7620767755381055`*^9, 3.76207678334164*^9}, {3.7620769074514513`*^9, 
   3.762076911401518*^9}, {3.762130649043781*^9, 3.7621306491467404`*^9}, {
   3.7621311928247366`*^9, 3.762131192902674*^9}, {3.762131446473667*^9, 
   3.7621314466262503`*^9}, {3.762131659643694*^9, 3.7621316598437357`*^9}, {
   3.762132223234342*^9, 3.762132228260418*^9}, {3.762133966134097*^9, 
   3.7621339715243015`*^9}, {3.762134018143243*^9, 3.762134029542445*^9}, {
   3.7621342946406517`*^9, 3.7621342957841177`*^9}, {3.7621345504741535`*^9, 
   3.762134552168556*^9}, {3.762151220457632*^9, 3.7621512208234515`*^9}, {
   3.7621512804093337`*^9, 3.762151281034975*^9}, {3.7621603283884325`*^9, 
   3.762160336352874*^9}, {3.7660208284383945`*^9, 
   3.7660208290660343`*^9}},ExpressionUUID->"b1948d09-9550-4bb1-a30f-\
adaeef8e13e9"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
   "Getting", " ", "the", " ", "task", " ", "space", " ", "desired", " ", 
    "data"}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"xtrackdat", " ", "=", " ", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"N", "[", 
        RowBox[{"xtrack", "/.", 
         RowBox[{"{", 
          RowBox[{"t", "\[Rule]", "i"}], "}"}]}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", " ", "0", ",", " ", "tf", ",", " ", "h"}], "}"}]}], 
      "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"dxtrackdat", " ", "=", " ", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"N", "[", 
        RowBox[{"dxtrack", "/.", 
         RowBox[{"{", 
          RowBox[{"t", "\[Rule]", "i"}], "}"}]}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", " ", "0", ",", " ", "tf", ",", " ", "h"}], "}"}]}], 
      "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"d2xtrackdat", " ", "=", " ", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"N", "[", 
        RowBox[{"d2xtrack", "/.", 
         RowBox[{"{", 
          RowBox[{"t", "\[Rule]", "i"}], "}"}]}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", " ", "0", ",", " ", "tf", ",", "h"}], "}"}]}], 
      "]"}]}], ";"}]}]}]], "Input",
 CellChangeTimes->{{3.7613524953604007`*^9, 3.7613525472780066`*^9}, {
  3.7613532218973722`*^9, 3.761353222774206*^9}, {3.761353489653301*^9, 
  3.7613534935858107`*^9}, {3.7613535574648843`*^9, 3.761353563625015*^9}, {
  3.761353664334781*^9, 3.7613536695122747`*^9}, {3.7613537816977434`*^9, 
  3.76135378381973*^9}, {3.7613572508989*^9, 3.761357261613242*^9}, {
  3.7614018844395447`*^9, 3.761401889904394*^9}, {3.7620443608872204`*^9, 
  3.762044385870079*^9}, {3.7660208336413956`*^9, 
  3.766020834319006*^9}},ExpressionUUID->"6dd6ac95-7821-43f1-a0af-\
3c077c929a28"],

Cell[BoxData[
 RowBox[{
  RowBox[{"Manipulate", "[", 
   RowBox[{
    RowBox[{"Show", "[", 
     RowBox[{
      RowBox[{"plotsrspm", "[", 
       RowBox[{"Inner", "[", 
        RowBox[{"Rule", ",", " ", "q", ",", " ", 
         RowBox[{"Join", "[", 
          RowBox[{
           RowBox[{"xtrackdat", "[", 
            RowBox[{"[", "i", "]"}], "]"}], ",", " ", 
           RowBox[{"iksol", "[", 
            RowBox[{"xtrackdat", "[", 
             RowBox[{"[", "i", "]"}], "]"}], "]"}]}], "]"}], ",", " ", 
         "List"}], "]"}], "]"}], ",", " ", 
      RowBox[{"ListPointPlot3D", "[", 
       RowBox[{
        RowBox[{"xtrackdat", "[", 
         RowBox[{"[", 
          RowBox[{
           RowBox[{"1", ";;", "i"}], ",", " ", 
           RowBox[{"1", ";;", "3"}]}], "]"}], "]"}], ",", " ", 
        RowBox[{"PlotStyle", "\[Rule]", "Red"}]}], "]"}]}], "]"}], ",", " ", 
    RowBox[{"{", 
     RowBox[{"i", ",", " ", "1", ",", " ", 
      RowBox[{"Length", "[", "xtrackdat", "]"}], ",", " ", "1"}], "}"}]}], 
   "]"}], ";"}]], "Input",
 CellChangeTimes->{{3.7613525345514493`*^9, 3.7613525995739975`*^9}, {
   3.7613526599376373`*^9, 3.7613526775718026`*^9}, {3.7613527102595987`*^9, 
   3.7613527122490945`*^9}, {3.761352869532798*^9, 3.7613529143848333`*^9}, {
   3.7613533580700583`*^9, 3.7613533829595847`*^9}, 3.7613534488123856`*^9, {
   3.7613590997995305`*^9, 3.7613591120796824`*^9}, 3.761378063381733*^9, 
   3.7613788109738035`*^9, 3.761379733803532*^9, 3.7613801143101573`*^9, 
   3.761400228368084*^9, 3.7620440983334084`*^9, {3.7620444439193106`*^9, 
   3.7620444644426937`*^9}, {3.7620746923915167`*^9, 3.762074711820612*^9}, {
   3.7620773419399176`*^9, 3.7620773590111437`*^9}, 3.7620872228394556`*^9, 
   3.762313505913313*^9, 3.7660208943461304`*^9, 3.7660223303972197`*^9, {
   3.7660434208005943`*^9, 
   3.7660434260490303`*^9}},ExpressionUUID->"5ee0f74f-65b1-4566-abb3-\
a063a9ad6111"],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{
  "Getting", " ", "the", " ", "joint", " ", "space", " ", "desired", " ", 
   "data"}], "*)"}]], "Input",
 CellChangeTimes->{{3.761353683146286*^9, 
  3.7613536934821053`*^9}},ExpressionUUID->"7c992002-940b-4278-a1fc-\
6fb15090923f"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"qddat", " ", "=", " ", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"iksol", "[", 
      RowBox[{"xtrackdat", "[", 
       RowBox[{"[", "i", "]"}], "]"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", " ", 
       RowBox[{"Length", "[", "xtrackdat", "]"}]}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Theta]ddat", " ", "=", " ", 
   RowBox[{"qddat", "[", 
    RowBox[{"[", 
     RowBox[{";;", ",", " ", 
      RowBox[{"13", ";;", "18"}]}], "]"}], "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.7613537116034575`*^9, 3.7613537876310115`*^9}, {
   3.76135597226995*^9, 3.7613559726815443`*^9}, 3.7613560035410776`*^9, {
   3.7613590866596575`*^9, 3.7613590903799686`*^9}, {3.76207233446491*^9, 
   3.7620723417577667`*^9}},ExpressionUUID->"00f75995-b536-4eb4-8aeb-\
1519e15d01b7"],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{
  "Given", " ", "actuator", " ", "space", " ", "initial", " ", "conditions"}],
   "*)"}]], "Input",
 CellChangeTimes->{{3.762480340332751*^9, 
  3.7624803524657745`*^9}},ExpressionUUID->"f75ece8d-134d-46e3-add7-\
c1fd6a9e251c"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"\[Theta]dinit", " ", "=", " ", 
    RowBox[{"\[Theta]ddat", "[", 
     RowBox[{"[", "1", "]"}], "]"}]}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"\[Theta]dinit", " ", "=", " ", 
    RowBox[{
     RowBox[{"iksol", "[", 
      RowBox[{
       RowBox[{"xtrackdat", "[", 
        RowBox[{"[", "1", "]"}], "]"}], "/", "1.3"}], "]"}], "[", 
     RowBox[{"[", 
      RowBox[{"13", ";;", "18"}], "]"}], "]"}]}], "\[IndentingNewLine]", 
   RowBox[{"d\[Theta]dinit", " ", "=", " ", 
    RowBox[{"ConstantArray", "[", 
     RowBox[{"0", ",", 
      RowBox[{"{", "6", "}"}]}], "]"}]}]}]}]], "Input",
 CellChangeTimes->{{3.761383669462309*^9, 3.761383670063341*^9}, {
   3.7613837888301287`*^9, 3.7613837992082405`*^9}, {3.762072434237854*^9, 
   3.762072443699433*^9}, {3.7621576335224066`*^9, 3.762157649153469*^9}, {
   3.7623141306309137`*^9, 3.7623141363020124`*^9}, {3.7623141882068872`*^9, 
   3.762314195013359*^9}, 3.762314284434818*^9, 3.7623143200206194`*^9, 
   3.762314377860535*^9, {3.7624807982424994`*^9, 3.7624807988923855`*^9}, {
   3.7653732874505553`*^9, 3.765373304330877*^9}, {3.765374715026353*^9, 
   3.765374716917265*^9}, {3.7653748759981976`*^9, 3.7653748877191887`*^9}, {
   3.76537501877498*^9, 
   3.7653750213734016`*^9}},ExpressionUUID->"9d1aa19a-a72f-43f5-a9c2-\
b47991e7ef30"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "0.9926778429004636`", ",", "1.0167330666733765`", ",", 
   "0.8160422854899234`", ",", "0.8160422854899234`", ",", 
   "1.0167330666733763`", ",", "0.9926778429004636`"}], "}"}]], "Output",
 CellChangeTimes->{
  3.762480799262527*^9, 3.762510585226432*^9, 3.7633008425162477`*^9, 
   3.7648639638860903`*^9, 3.7653728776076202`*^9, 3.765373239010132*^9, {
   3.7653732995930347`*^9, 3.7653733046706853`*^9}, 3.765374372884328*^9, 
   3.7653746141178865`*^9, 3.7653747176240215`*^9, 3.7653748889050984`*^9, 
   3.7653750220000615`*^9, 3.765375237154701*^9, 3.7653754029311037`*^9, 
   3.7653754947107544`*^9, 3.7653772998312464`*^9, 3.7653785168024707`*^9, 
   3.7660197057630997`*^9, 3.766020980375559*^9, 3.7660433112433786`*^9, 
   3.766043429663411*^9, 3.766043844218362*^9, 3.7660444294991837`*^9, 
   3.7660462406266074`*^9, 3.76605069759877*^9, 3.7660524019231434`*^9, 
   3.7660524422890577`*^9, 3.766054512668701*^9, 3.7661026281400566`*^9, 
   3.7661049862025795`*^9, 3.766151245023433*^9, 3.766156735683895*^9, 
   3.766215082374048*^9, 3.766268101450167*^9, 
   3.766291734518771*^9},ExpressionUUID->"5267b4f7-4f30-430b-b453-\
50707773bd11"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0"}], 
  "}"}]], "Output",
 CellChangeTimes->{
  3.762480799262527*^9, 3.762510585226432*^9, 3.7633008425162477`*^9, 
   3.7648639638860903`*^9, 3.7653728776076202`*^9, 3.765373239010132*^9, {
   3.7653732995930347`*^9, 3.7653733046706853`*^9}, 3.765374372884328*^9, 
   3.7653746141178865`*^9, 3.7653747176240215`*^9, 3.7653748889050984`*^9, 
   3.7653750220000615`*^9, 3.765375237154701*^9, 3.7653754029311037`*^9, 
   3.7653754947107544`*^9, 3.7653772998312464`*^9, 3.7653785168024707`*^9, 
   3.7660197057630997`*^9, 3.766020980375559*^9, 3.7660433112433786`*^9, 
   3.766043429663411*^9, 3.766043844218362*^9, 3.7660444294991837`*^9, 
   3.7660462406266074`*^9, 3.76605069759877*^9, 3.7660524019231434`*^9, 
   3.7660524422890577`*^9, 3.766054512668701*^9, 3.7661026281400566`*^9, 
   3.7661049862025795`*^9, 3.766151245023433*^9, 3.766156735683895*^9, 
   3.766215082374048*^9, 3.766268101450167*^9, 
   3.7662917345237694`*^9},ExpressionUUID->"403fe135-2f94-49f3-a2eb-\
123b9642bc57"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{
  "Computing", " ", "the", " ", "initial", " ", "velcity", " ", "of", " ", 
   "the", " ", "legs"}], "*)"}]], "Input",
 CellChangeTimes->{{3.7623144206209145`*^9, 
  3.762314440002963*^9}},ExpressionUUID->"dd3d7b45-cb4a-40f5-a6f7-\
67f4b6e5c353"],

Cell[BoxData[
 RowBox[{
  RowBox[{"d\[Theta]des", " ", "=", " ", 
   RowBox[{
    RowBox[{
     RowBox[{"d2x2d2qe", "[", 
      RowBox[{
       RowBox[{"xtrackdat", "[", 
        RowBox[{"[", "1", "]"}], "]"}], ",", 
       RowBox[{"dxtrackdat", "[", 
        RowBox[{"[", "1", "]"}], "]"}], " ", ",", " ", 
       RowBox[{"{", 
        RowBox[{"0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0"}], 
        "}"}]}], "]"}], "[", 
     RowBox[{"[", "1", "]"}], "]"}], "[", 
    RowBox[{"[", 
     RowBox[{"19", ";;", "24"}], "]"}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.7624808997612443`*^9, 
  3.7624809112948556`*^9}},ExpressionUUID->"dc8f197a-dae9-4ebf-9d80-\
193eba5fe73c"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"einit", " ", "=", " ", 
   RowBox[{
    RowBox[{"\[Theta]ddat", "[", 
     RowBox[{"[", "1", "]"}], "]"}], "-", "\[Theta]dinit"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"deinit", " ", "=", " ", 
   RowBox[{"d\[Theta]des", "-", "d\[Theta]dinit"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.7621514628769417`*^9, 3.762151474844116*^9}, {
   3.762151588421119*^9, 3.7621516127832108`*^9}, {3.762314033312557*^9, 
   3.7623140389305043`*^9}, 3.762314207785319*^9, {3.7623143809855576`*^9, 
   3.7623143904992056`*^9}, {3.762314444517091*^9, 3.762314453761223*^9}, {
   3.7624809163594975`*^9, 
   3.7624809178360386`*^9}},ExpressionUUID->"8171d244-b115-44df-9631-\
6d0a7a6b0692"],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{
   RowBox[{
   "For", " ", "now", " ", "the", " ", "controller", " ", "gains", " ", "are",
     " ", "kp", " ", "and", " ", "2", 
    RowBox[{"\[Sqrt]", "kp"}], " ", 
    RowBox[{"(", 
     RowBox[{"as", " ", "given", " ", "in", " ", "Sadiq", " ", 
      RowBox[{"et", ".", " ", "al", "."}]}], ")"}]}], ",", " ", 
   RowBox[{
   "so", " ", "that", " ", "it", " ", "is", " ", "critically", " ", 
    "damped"}]}], "*)"}]], "Input",
 CellChangeTimes->{{3.7613514136863985`*^9, 3.761351451656163*^9}, {
  3.7620724561293235`*^9, 
  3.7620724637689524`*^9}},ExpressionUUID->"1935f903-1fce-4cd4-899d-\
aef047283060"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"controlparams", " ", "=", " ", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"kp", "\[Rule]", "2000"}], ",", " ", 
     RowBox[{"kv", "\[Rule]", 
      RowBox[{"2", 
       RowBox[{"Sqrt", "[", "2000", "]"}]}]}]}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Kp", " ", "=", " ", 
   RowBox[{
    RowBox[{"kp", "*", 
     RowBox[{"IdentityMatrix", "[", "6", "]"}]}], "/.", "controlparams"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Kv", " ", "=", " ", 
    RowBox[{
     RowBox[{"kv", "*", 
      RowBox[{"IdentityMatrix", "[", "6", "]"}]}], "/.", "controlparams"}]}], 
   ";"}], "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{"Module", " ", "for", " ", "error", " ", "dynamics"}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"errordyn", "=", 
     RowBox[{
      RowBox[{"NDSolve", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{"e", "''"}], "[", "t", "]"}], "+", 
            RowBox[{"Kp", ".", 
             RowBox[{"e", "[", "t", "]"}]}], "+", 
            RowBox[{"Kv", ".", 
             RowBox[{
              RowBox[{"e", "'"}], "[", "t", "]"}]}]}], "\[Equal]", "0"}], ",", 
          RowBox[{
           RowBox[{"e", "[", "0", "]"}], "\[Equal]", 
           RowBox[{"\[Theta]dinit", "/", "3"}]}], ",", 
          RowBox[{
           RowBox[{
            RowBox[{"e", "'"}], "[", "0", "]"}], "\[Equal]", 
           RowBox[{"d\[Theta]dinit", "/", "3"}]}]}], "}"}], ",", "e", ",", 
        RowBox[{"{", 
         RowBox[{"t", ",", "0", ",", "tf"}], "}"}]}], "]"}], "[", 
      RowBox[{"[", "1", "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"errordyn", "=", 
   RowBox[{
    RowBox[{"NDSolve", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"e", "''"}], "[", "t", "]"}], "+", 
          RowBox[{"Kp", ".", 
           RowBox[{"e", "[", "t", "]"}]}], "+", 
          RowBox[{"Kv", ".", 
           RowBox[{
            RowBox[{"e", "'"}], "[", "t", "]"}]}]}], "\[Equal]", "0"}], ",", 
        RowBox[{
         RowBox[{"e", "[", "0", "]"}], "\[Equal]", "einit"}], ",", 
        RowBox[{
         RowBox[{
          RowBox[{"e", "'"}], "[", "0", "]"}], "\[Equal]", "deinit"}]}], 
       "}"}], ",", "e", ",", 
      RowBox[{"{", 
       RowBox[{"t", ",", "0", ",", "tf"}], "}"}], ",", " ", 
      RowBox[{"AccuracyGoal", "\[Rule]", "25"}]}], "]"}], "[", 
    RowBox[{"[", "1", "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"e", "[", "t", "]"}], "/.", "errordyn"}], ",", 
   RowBox[{"{", 
    RowBox[{"t", ",", " ", "0", ",", " ", "tf"}], "}"}], ",", " ", 
   RowBox[{"PlotRange", "\[Rule]", "All"}]}], "]"}]}], "Input",
 CellChangeTimes->{
  3.7613506069284325`*^9, {3.761350753557888*^9, 3.7613508137451725`*^9}, {
   3.761355881432501*^9, 3.761355883101313*^9}, {3.761382971025942*^9, 
   3.7613830445470963`*^9}, {3.7613831628931227`*^9, 3.761383200055295*^9}, {
   3.76138334232922*^9, 3.7613833550290284`*^9}, {3.761383509936771*^9, 
   3.761383590660505*^9}, {3.7613836802161956`*^9, 3.7613837844336524`*^9}, 
   3.7613838357217236`*^9, {3.7613838693946915`*^9, 3.7613838985049086`*^9}, {
   3.761384314561078*^9, 3.761384317369481*^9}, {3.7614019784413376`*^9, 
   3.761401978637283*^9}, {3.762044154865078*^9, 3.7620441570861926`*^9}, {
   3.762072482009589*^9, 3.762072511298828*^9}, {3.762132789004161*^9, 
   3.7621327971984787`*^9}, {3.7621330894582787`*^9, 3.762133092381611*^9}, {
   3.762133380993032*^9, 3.76213338912438*^9}, {3.7621584190981264`*^9, 
   3.762158460224626*^9}, {3.7621588600698647`*^9, 3.7621588750252876`*^9}, {
   3.762313988385563*^9, 3.7623140067847853`*^9}, {3.762314051268772*^9, 
   3.7623140850939245`*^9}, {3.762314481414152*^9, 3.76231449286487*^9}, {
   3.7653748025052657`*^9, 3.765374807187154*^9}, {3.7660243078015575`*^9, 
   3.7660243097664423`*^9}, {3.766024348748148*^9, 3.766024353925152*^9}, {
   3.766043657239329*^9, 3.7660436683401814`*^9}, {3.766043772642003*^9, 
   3.7660437753634405`*^9}, {3.766043882385595*^9, 3.766043886678322*^9}, {
   3.76604393367551*^9, 3.7660439474269896`*^9}, {3.7660462017586956`*^9, 
   3.7660462093646917`*^9}},ExpressionUUID->"6f4de4f6-36ad-4b43-bf3c-\
532a57f2864e"],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    TagBox[
     {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1:eJwVlXc41Y8Xx2VTCklIEoWUMuPW/XzODdmyMrIzUkqy90wUZUbZe0f2lj1D
ZO/rWteOhGT8vr9/znnez/s5z+v89X5fNrFWNyclISF59N/4/yaro+2ZFbNB
r5QGVjo7f4erS9/uckSoQN5gB+ft599hv+CW2Wi4Eag15qSGqH+Hwh0YZMi3
gPnzXDifW99hnunpXlm4NSzuWxJ2SL/De9Z2uvxqOyhPVlXu7u6EDD79RJJ8
J+Aok9/5GdoJ9eK/BDWS3MCpMW+wXakTxmT8GtPDveBezv51U9JO2Oc/xe/e
6ANJWhlYhaIOCBAesk2vfg3DLxaP2Aw6IPmeJfleXgD0OiiNVqS3w6BROG98
eAhMF1MJhtC3QaHITYnZllA4LgiIqUpvBSfxiAmnxjBwjn2NeYppBXIwuJpc
HQGHMx5aAQYtwPFgs+x33ifwF1nUQ5OaQP0F69jn8ETo+xi8qXC3Hk5JQF2U
bBJMUz43/ZFRB78qbRhmWpKAfbRWqm30G5TVDpU6NCZDcoOOoZtcLUi1JB0l
VKfCo7NnwkYUq4BHtl91CZMGiSOlqzSRlUDbQZEqUpEGngpaJnkzFdDbZSnb
XpIO/uVBqc/flIPBgGjoZl4mELxfj4rulgBOy4Jw90YWqHCsfnfWL4ErI9Gi
/jlZUDt24RTaUgzL40cjbJnZ4JcUbHo7uQicZtsvSyflwvdR/Eka3wLQNf9n
F8zxBfKiHlkFkRYAuijQOhL3BebV2xc/nvoK5CvhllbReUDzte1m/M08CNvS
L44K/wp7l6iOGGqy4cO5GGw9XQFobt68dWoyC34Wvrkkpl4A1+hf9GSRZ4He
sv48x3gBsN1mz5OwyIAkf7n2iEuFgOw/PDebnA5zXKK51GaFkMDFYJVASIOX
eidttlYLgUrLc7XUIRWKd3c0LISKQEo70LyjLQX2Igi3JxyKwHvDIkz/Ugr4
dFUetBwVQZFslZbdVBJ8RJ6+jaYvgeN4x5jLQvEwOqrx/LRmCcgp1XjFXY0D
Dkd48Dq6BMiPG7I3uWIhM5+ZyYqrFB6JXWW9Lh4NqwqkuzNPSoHd8s2TcOXP
ILi4NqqVWwrT3O+Yx55/gqpLLYk40TJQVnKcvVgXCUfVBb6lzmXgiGepzPj9
EaR04sz5a8tA8cKUxbVbH6Er1O46k0w57IbOvJaqCofpE1zli9oVYPC5V437
QihcSaCL0Y+rgB4x9FEkWQg8vfPXvQ9fAU9XnZ6Xjn+ALdteyepnlfDmIS8d
VW4Q3D5Tc1UwvxJeR5Dc+ZAcCG65mdTpW5XwTLls7UPyOyCf8+wJdqsC2eSz
Ng01ASDvbVlIVl8FzTos5/SG/SGYXeujM3k1sCEbA9j9N3BeU0DX5EM12K2F
bNdq+wF/6/i8WGINyMXw0r+09AFrk7b2nNkaUHts3PirzhtKjopyL/HVgiuz
1K/KC96AiAfa0BTWwp2S2WtvOj3At9/hoeefWkgaFw66le4OrdaPxX9jvgHS
E5JYG+gGqlkShxON34DxIGri2N4FIqWv4NWo6mBuJ0bur7MzjOHPNLUq1gHF
p/BmY38nMGVdfFswUAeebj9nr9Q4wN0WBVpJu3rIIsgdtQXaAv1Axg/xiHpw
nZigs5+0gTkCaaRAcT3oi7BclbltA8Ek1ZdYf9eDxfDqvzO/rcH0zPn502cb
IKgS68Hd9hIkOOxyyEUaYHNTYXQ53QoId6+L/bJtgI3KM5c4fZ9DuULA/nx4
A5yXHqYc97SE949m68aLGmD77PznWb9nIOYUq9C21QDTjx+OReVawNuik8YJ
to3gcIHAxadnBgYNFlc/hjfCht27uqloUxDubVp+V9QIhr6v/0VNm8DEmpuD
w1YjLH2V+8Do9RgKD4bvPGdsAp7bEmKGI8bgf1KU5LFwE0hSzRxXixvDrWur
gUq2TSASpayWdcYQyCXkVCXDm0DW66SZ0i99GJFJOydR1AQOr4Vv2o3rga+Z
fhL3VhMM//Ny7v7xCIYSu0r3bZrBNVJnnYJXC3Lz+dx+hTVDe89ewJ6aJnjX
+uEWCpvBXDX2TqvfQ7g2jv3et9kMcb/w/AMkGnC09Dm0jaEFTj9TxwTJq8PP
vW3NWqEWeGs2PkIbrQbuzHn4LJsWcD5k/2WpqApqV2kyEsJaILR1vC1LTwV4
RM2ffyxsAS4WvJPgjQfQq3Zxx2uzBSafq5TmrysC94cPJ7VtWkF3Ojf12bos
7MUu9SqFtcKumKZKB4UsdOXcj5IsbIXxpjq78asy4Nh+yHlzsxX0XC+19HtK
g+LwowVuhjZgJLlldalcCjgXSnNZhdrgrVe1KnFHEjrJXt6msGkD6Thq8bGg
e5DI2PlvP7QNENQkxwOPA/vLPA2/CtpgO635TMRdHFyEKcWJX20QYT+tKU2N
wivXB4+LX7XDukWPi14hBhReYrOoQ9vh44fFEuEqCeA24d8w+NoOe4PqGaJd
4jAkT+lBvd4OawshOua0t6EA2W4yoOsA7qKknU0xMQgUItAW3+gA/FXGPrNn
ooCwfvts8LwD0pWH8cMLwsBM92W6KLADlBLifysKCsMvkhge6pwO8Okv6v7g
LQRpRIeSImIHkDMOP/UQFQTaCoFeqif/9eT4ZVaxtuswl3vhvMGbTlDmp2LY
ruSHb4k0hkVpnZD5XrK3rewa2ATMr+jPdsIn7eB9kW5eUHDrFy76r6fLfMPP
sSzwwBXrBhcqru9g01zNnEXFAyNa8VRFxt9BNTLkrL/pFShSCHpA5f0dyPtt
wyTiuSEIdYnUT/wOw3nVTUZTXIDyaHJTTX0H04FMz98OlyH9zynQ1+sCTqFB
/osLF8Fzaf9NoWsXbL1sNjFtZAedSWIXZUwX9PRtO33JvgCnWpp1C0e6oNWL
MjTjEyssVBQlU+51Ae46X0NoPAvUfUki6p3vBkoBnsWNL+fB9qO7I6VWN9xw
3XiasXAOlN5a1uo5dMMz3fUMdfpzwOOuQ174sRt6IgxNLkoywaipaLhefzfc
vSNXOVrDCDiR1bwC1R5gDZJnY6WiBzbesW2KVz1w7ZbXRnz/afjN1n5XL6QH
bsem5B+l0UEGaVoHRU8P6FzNmRl6dhK8d8Lo9dZ6QNDqTbG9Pi3oLntpF5z6
AVesxnY0HtEA3U+9eV3FH9BWJJf54BUVLLTI3yiw/AHqoy5nv76jhPpKcTuK
wB+QetiXM5ZLAfbJZ08UtP+AN4ExTpI05GBVYR5Myt0LVQzjsR2XTsBNeTXO
E6K90Dv0KHXiKQn8GsUWHUv3Qt3XdGNKu2PU/t/ZoYMnveD9qFg6EX+A3n5/
bPHPqRcKqTm/1eX+Q3fZV/7+fdsLsmwkHAWv91FXtPHibk4v4Pj4A5e191Ds
j7yvf6p74ftcDKO4xi56aBR9b7urF+KNHU7qPNpBvX1emW+u90J2qQqHht82
6t/Mkbci3Ae4mRNLnfKbqJwmLSxL9UFv0HUWsdBfKM3Cn17iwz74LN8/UVKz
gb6n6t6ed+yDv2x0ulcvr6EPPlf4zwX0wUUSzebzxBWU/loay+znPiiL2+dl
rVlGIxTcsPiqPniQf2Ltyjsi+nD8Sc/U9z4IWZJSue6ziDK/UDeenOiDzpvN
GAm/BTTmwzW/saM+cNaufRiVPYcm9Q5/H5D8CV1dHtTV5jOoyeMmg36NnzB3
2WuaLwePcm/lb/SZ/QQ2mhs+hNVpNOOs/9kf/j+BUVRD8YPCJPo0zSa9+9NP
aLvGpWx1egLlFzMQ78r6CfObY50fpsfQPC1RvY7On/AU+3rfOHMEfbl4aa1t
/Cc8CqN7Qhs/jAo6n/RqXf0JMm2b8jPxQ2hJNCGl6XQ/IBtaV6BuAK2aCF2u
Ve8Ho/ownjH7PtTdyt29xrQfyP/x31wq70WRI4vT1fb9oGslEr1M2ovWXwLh
iqh+cIyYmlo07EZ9C/ibyzL74QXi9qSCswuVvsesVVrRD41cZf7rG51om8ma
S9FYP9SyJj/UKGlH3/4eOVm40g+aenHB9lltqIJfc/zXg354PRJ0PJ3Zivak
xzZ84RiAgICi82WtzegAUZ4m02QATMoP/qk5N6Ab0Xz3X9sOAOXQWsl+az1K
q0jlY+Q7AN0uLGKp7PUoLq9573zKAETs6M1VlteieoapotuFA3C1kCDb/64G
dTzj+6q3YQA6LxOTRy2q0VwbIL6dGQDPC/Onf96vRFu5OK6Ybw7AnUcCTATp
ChTff2B078QgTNcTo9kelKPMt6uG/3IOQuh+MOkrj1LUd1+0zdJ4EG6Mnq20
vl+ExueeJZN9NQgTb+oFnwUVohX6Wyi39yBQbGuE1Y8UoGvfvpaNJw6CSo6f
YQv9V5T6VfBW+ddByMy53ic5kIdyXba6+bFuEL7+lY9QTPuC6rzmz1CaHgT5
aioNmqc5qJ0oDYFvYxA6qcMLf+hmo8HzixcpjgchBW9ZL6WThTbLpkfWcgyB
nYStyzubDPTWKc43Nw2HIDiWyqiOMRVVqD2qp305BGzS9s5Uqimo2cvJgwWP
IcgfyS8+GZmMxvTG2CfGD8FID5UFo1gSWurjUuCWNwT/nFwbSC8lor3COqva
tUPgq3vDj3YmHqWMPGdGPzkE6nV1ogGBsehlme3E1dUhsPWX3yCxiUGxuz/H
2w+GgLp4JjvPJBq1eRSq4cM+DLZ6IxpT5p/QiYsnpbb0hoF0LXkXh49Ad3uW
PHueD8On7KuRg0wRKKN3e1WO2zD4q2ym+qmFo3KEN8KmscOgTEzmXJ0JRU0j
zF5C7jBcdFkLpxELRT2lpXIuVA8D32lNb2aOELQ4g4RrYGwY7GXivinmvUd7
tKcNCpaH4dfgoyGHgCCUSP0t+v3+MJyxljfSsQpEOZ67MdxnG4HTiWSxL3Xf
ooG3dkjKHo1AVFJa4HaeH+rqJH99wXIEnvsJptq3v0af1cVpMruPwN/viN70
qi8qpyKV45gwAhMEJpFmNR9U4lPUQMbXETimHIyxCfNG+aaXjobqR+DmyEbM
dJEXSmUdqiE+OwIerFMaiyc80J2yWQ+L7RFQ3pY6G1vnhi4c3c76RDEKvY56
0bggV7Q1ePJgl3cUaNb9d47lndGyIUFePswoFIg8fPf3rhOazuGnpqMwCrTJ
Bt2pGEfUL58/o+LFKHhlN7mf1LJH7Xc8eokeo8Aln39u2M4ONUX79llCRiHw
dqKkdawtKtnjpOJSOArd2sHtOpQ2qDDzd5fsxlGYfjipOC33CuUy5Egb7R+F
fxcbMyR4rdET6817mJ1RmFV+TJru/QL9JcbCbUk1BkpnHjFLST1H8R7PlWNY
xqCJUu1C+llLtJ6OMWX/zhhUq/y7ojtugRZomnfxK40Bw7v46ZC+J2hifMWO
rsEYuLMsWz7oN0c9BYwUq73GgPMDxuvFrin60qHIYSV0DJh1JocmWExRg1qK
pAspYyBxmHtlV8oExSp/2XZrHoNpidJZn1Jj9EbkMceXwTHYDvyRoLFjhLJP
qstPLIwBi5Ci30CYIfrvxd94LM04eC4KMabu6KHLJUrtL9jGQYzzQWjSN110
7CBxK+76OCT/C+W6+fERWvVeRvZQeRxy21mYM8y10ZyBaBsBo3Hwox2ucDTW
QqPZ12INXo2Dj2OgReoTTdT5S8Sv2vBxsCWpIl6M0ECfbi+wraeOAwzRJXtV
qKPa2Dv3OUrHgSzhepXZohp6uwsf7Tk8Dns1fmvMxqooD5Nocz5xHKqK28yw
6iroOf2A9am/48AsORKB2VZGt1cEpIB9Am5+mrorZa6Izon4WFkLTIBA4oQo
uYgC2u828CkRnYCTJLy32E/Lo0Un3VaPjScgK9PyJuWyDJqi0cMsaPvffTqr
V+PSfTQ89vI949cTUFtXP5W9LY3aXG+PrE+fABuZBLbT/FLonPmcd1LZBNyV
2Mpz0JZEtZJIXni3TUDApw+HMx/uoXfOYSRxSxNQP076UZIJh35R0RTg3J8A
sx8CFw9aUZQj0IaF5OQkmFo9S/9sj6Ckx9nrdTcmYfREckHR/h3UHtM6moj8
5/Ob5f3tw6ALdoRmrweT0GtlGbtXKoF2Etli4dUktEWfe7KbfBvFcov7X/KZ
hO0T5OZbWWJovoGGzXHYJGzyH7DHVomi4T+DZOuKJ4GnNGuL50AYJafLEk5s
noTvmYm/bl4XRh1lmy96DU6C2B+fQwFTIVS35uA3ujsJu+9LL7OO3kK7dlim
Oain4N7DCyxPXW+iqJBY5xHLFGxlX1Zo5hdAuTKskr7dmYI1Y12382X86Ef8
u6AExSkAF7z2aMg1lPJChqOn/hQMnT/1EXHkQ5dDppRQzylAfYZm2p/woPqd
++IcIVPQShf4aNX6KtpDfp77KHEKaq1x3jmvr6BFLip/axumgFJBxI6/gwu9
UvJ8Lv7nFIzYyEkz7l9Go9YDfnjMTkG3qJ8ZXuQy6mpan45QTEOhWu7xI59L
6Gr8ROhF5mlARX+uEa9yoIYje26HPNOwrZNVajHKjkoqC6nXyk1DSw9Pda4l
G1oSoIzEP5oGbTrNPESWFeVpfMbnYTkNNqe+KegIsqC04ilH2PfTEFHanULJ
w4y623xbYo+fhrScmCefhc6h67ljAwd50yC5mG2ZL8uE9nOeza35MQ0LQvgf
8WGMqIzerag4/DTwi0dnJTQzoBWRij7um9MQE84mZ0vCgD6gaLyeQIOH/E6b
OW6uM2gAl+rl04x42KdY8FLtpEPrYYrZkw0PWqcySBV9TqHCrvsnDK/jgaTh
4OFVVlr0+ae3u90ieAicEmEd2KNG00qY1xAsHtjHTJnX56hQ5g3hkYvKePgr
fve3DJ4CVTnV0P1B8z9ej/vgm3Vy9O01laZDAzzYOjA536IiR/dNn+dPvsSD
u0uk6KEmKWrM8Nu5xhEPuiZUXSmfT6At31ylYj3x4LN5KEckkKChrIEjOsF4
iKkwzpFgO0Z2WhlSxaPw8FIjPXV95BDRt4+2Yk7Aw1bnaFJk2gHC+yOLdCAP
D1lDGdhM433kvbtgd1EpHmaNQhTPq/5Ftq5VfAqrxUNQdES/r8Ie8s2v7YZK
Nx4uRc1GvDfcQR7eWdDqXMUDA+f7Bc69LaRq0epy9jYePhG080lEt5BLkX9W
Ag7wMM470NrutIksb5D73D81A9M9BPUf534hqvHvFa8wzYBvZMPppal1pEyB
iZmMfQZEQ4w+JySuIT7p3Ln112eAiKw58MquIAvquQ6JIjNwg78uc+fGMqJE
IoLzvDsDykd7MnwcSwiLnuTgXcUZuOLJRE/gXETy6R8fl1nOAEL7RWsvdhZh
+kbsiLSdgTKc5CmSPgLi8vzVR3vXGciQ5pXEnCYg0q1e14QDZ4BvUNBjMxGP
5NhRbdOHzwB9qBJd6uI0Qn855NtG9AxUiQtny8dPIeNuCRp52TNgJfbZhVFw
AsFd4+F4XzgDrx+P4HlOjSMZQ3lEy8oZcH3cWk+xPYrYCtV68HXMgAH9rV3c
/DBCvTiemUqcAUtnpqsB9waQlx9NbX1/zYADraBxmnU/0n9vBft4bwYulHSd
QTJ+Iglx+30c1ATgk3xHeHO9DyFX8I07PEMAhYB1JMylF7HcpbGYOE8Ayb3b
1nHxPxAxddaDaF4CvKP4/dLqQjcSc5zU6nyLAKF8Pgtf1r4jJHl8YdriBAjz
pdu/1NWJdFFJ8JyTJcDXBGJSXm47YlKrpRr6hADYf1t/e4nNiHAZCyOrNQH0
cnw/0x01IaRfx/qTnQhgQnJRMvxiE5KSZKhd/JYAO4dg+MWlAbGN5mTFhhHg
7xNJD8vSekQynDDWHP0fz86W6/XvOoTw+onhUA4BHO4KWbuJ1SJF7nycRsUE
WJ0j0TNYq0Z8HZZnFqsJYM7MS5lUXIVwWbw0/9tFgGuTNE6dTyuQLSNBXt9B
AtTHCGz6aZUjjTpbRNopAqQYhP6TVi1DTBQcX7BvEMD+h8tkvXkJIiwlcTN9
lwD0p3rKvb2LEVLs/oYAySyomlllKacXISkCnnbA8J+OcedUO1mI2PLgxNpZ
Z2FPSHKlRLEAkbxEuqvKNQs81151HfN9RQj0/q4mIrMweVnaLs/tC1JEI4dd
uTsL8UIc+WZ3cxFfUtojO+lZGDp8n8lHk4NwbX/weaM5C8/qafwtujKRrVUV
qdOG/2mDH/nV9RlI4zwDxacns/DwxvW3Pf9Fqclw5Nssp1l4PWHEwktIRYR7
tRWEvGdBtjpK35E0FSHtYD1V9XYWjvQdNqJupCApVfEh36Nngf93jMjnuCTE
tthI7WHKLBSV1n3RbEpEJL9cPjuZMwup6Lb3nEECQohPj1qvnoUCfVPWJw2x
SFGUhY5T8yxIpGqrkLyLQXxDrrGRdM+CM9mstLphNMLlkxfPMDULg/PWgjW3
PiFbLtZGMQuzwGbzibmEPwpptBW6zL0xC8Li+TTcQpGIiVlpmijJHIRsLTc+
NYxAhA2cntRSz8ET+dXyB37hCKkWhk+GYQ7qokriO4rDkBTZ2lxtrjmQjjKy
GxAIRWxxXlZ4/jnQ6oy8dnsjGJHE3Lv1TGQOfgXWSbeFf0AI/C1FrtJzEGz2
86YAVRBSxB1gT6Y8B2Jz3HaFQ+8QX3b52+8150CD/e33T8VvEa7T3ZXxT/7j
C5JVi0f4I1uUIW481v/x/ezJRz6+QRqPVZGvTnNwngN3OzPZDzHdHKivfzsH
FegZ8pkxX8TYNVS7InQO0mqMekWYfBF9MqX1r5/n4Fq/elahpg+ida7pQmLW
HMhw8V4onfZC1BM8i6IK5uBj+6no9hBPRIX3jnxwxRxUciiYf1H2QOQwhY4e
7XOAc9FcSP/litxvfEHn0DsHSrl+DTkDLoikIl/ai5E5yBwxrDFodkbuGiT2
6RHngN2zrnGx2RG56fPhxh3qeSBrfTb5ALVD+Gnlm4To50GF78r7x3a2CG8E
ue41lnnolhvs6C6wQTjT3QJY+OZhIzKCV1vqFXLxpjgHveA8LE4/8Uq4ZY2w
lW+VUEnMQ1wwhi1vwQo52/GMsCM7Dx8dzHRH3Z8j9OpXXdZV5mH5jMHstK4l
cmocf2ZBex7Gigu5hqSfIZRr2sigxTyIyFoZJd2xQPboZT4XB8yDHsfRI95k
U2Q7+sSt3JB5IGL05Ul+miCbXLUtKZ/mIVnxMeXjkybIsqjo77DMeaCPOJbX
ijJGFms33r37Og++1vz8fj1GyJxMLqdP+Tz0/3btb/M0RCZ1uB68apsH1adp
5Heo9ZGxmck5ix/zgOCsMYp4XWTIMtrNaHgeTMfWdT40P0J63emzHyzOg73C
z5XMr9pIY9IRmQDVAkRmNrA9J3uIfLtWFXPlzAJcurCaQi+ogVQXOQixn18A
Llf1zefm6khJ86rhSd4FUHJKdh8hqiKFyll/SG8tgEGq0wPktiqSP2T6fv/2
ApCnLQUcnlNBMoljlUsyC/AjyKajPVwJSbOJUp15sACnvKbj1swUkaR9tcUR
rQX4QlN6009KAYk51cHU/mQBDgREeY+55ZD3guXWGf4LsBJZWMdmLo10Cg8v
OAQvwIUZZqOqMCmEWmzX4H7UAljxQ+JCqyTihxFXmktfgLNBf8f85e8hjXe1
m4rzFoB3qzHwYRQOIUGd7rwu/Y93NfBP0wAgbpLlfFwtCzCwfajG8wBBKqSH
Eze7FuC+WkqdBgcW2ZHZZW4YWACVdxPnuvbvILaK4hTGcwvg9kF2JH1IArF8
WD4TT7YIVRcfmynRiSFZWsM6VicXIUvl8MZfYVFkQWf3B/bsIpSQ9jK4PxZB
HhuIfxvnWgQ2qw3ymGEhJMFIWyyXfxHM57rOvuMQQiYeO31xFV6EYtzKnz8v
BBGdJ+UxrJKLIGPvJXwDvYlEPR1mWJJfhHvxryisyQWQAcvdtxVqi/C7TDPJ
fPg6omot7qT9eBHUzmUbmydfQ2SdyzUivReBblVOK6TiKuLnOtxp9nYR7j7i
KeUbvoI0uu/eEw1dhG88m+SzR9wI6iMu2J/43//OjvTST7kQ99famSmZi8Dp
rnoskX0ZqXrjxGH7dRHElh12lzc5kduB5acY6hZB2rD+WpjwJcT+/fBrfOsi
nNnK/lO1fhEpCt7d/9qzCBjG8IdkFeyIQIT40oOpRUjGjgUOWrMhV+LKW94f
LsLJnsaMjSfMiEnCMFafgghZ5OQBDz3PIUlJu8XX6YggJsP4gSeRCWFPF0/p
ZCfCQdvu9ZB/jIhupjZrzBUibIUon355mxH5nO0U+uwGEWq2gh4puDAgZ/PL
PamxROj3LxAuPkePqBYM/xmWIsJuNJ5SbvI0Ely0+yJTkQipb3gPSuLoENpy
cT0ZPSKU7N8aJJc8iZDWl4v7uRL/y7c/oS4sVEgOHWPGoS8RbmYrCH5iokTU
9V4wOQURYfWKZCcHOwWSusO5+SyOCKdJd3NfKZIhStJuRrNpRIiEx5yKtqTI
dthgt34eETrQ6y+/ppxApAUCc1S+EWGv1i3WioME+diOBkj+IAKT0sIJRqdD
7Lzpb1MxPBG2i0Jc5db3sbePM3F8m0RokJErvhe/h/WP0b94gXQJVP/sdoh4
7WCHxBj26c4uQegfqtPfQraxvH0tQyRXliBswGtvunML6/zCtfi36BKcuN+/
8evGJrad6lbowv0lMMgJdxUy38CypM6+GNVagnc1fA/CClexz9DP8l0WS0B3
4r6CJWYZWzWqxFPnvAT9NPniSbuLWFqHE2RF75agx9FEMGBxHqtLXzadFrME
RIFfh6Pkc9jcXMuaT7lLIKyWKVuoSMAeyFyKDqxZAvbLxAC3CjxWidDv4NG9
BBU1UrorIVPYNRbklunGEmi38OfG+o9ig1UyiHIMy+B9b4UuWW0Qe8v/TMpN
kWVYeCr7maanD9tb46zHpPmfnq+VvF/bjX31e4Zp33EZKLk6N+mG2rEM/Io9
05+XwT+NPT27thlbwbJMvDyyDO/IROXup9RiDanekZmdX4G0sAuSjNdLsSLz
EzJKl1bg62y8D0GxBEvdJBgoyrsCP76vaBMcirFFniP0FOIrQB/dOLs5W4il
2OHlyNBagVN+4XF6SD72y1yrBDFyBXSIqZqHn9OxPo1s7r3xKwBpv5/cKE3D
aiW9rKtIX4HHg1f3a8ZSsST6zDLvSldA3E3Pyg2XgtXoN9fgH1yBNce0Nv7R
BOx+A/nLF0yrcImKVfc5VRRWLlEy9Vf4Kryh0mvXd/THBrT3TvrGrsKHtNa1
Roc32NZNQ5ZzaauQqlCRHOPth70v7fYBU7oKjZxFkjFlvljJpWIn3+FVcHla
8WpewAuLFbmqxMS+Bq3umTz3Uh2wgm1Uf8TT12AvlvaZwJAZ9vxGl4xX+ToE
//V6+0dZChvTVnWC7NkvmCvJxtx9cQKLvXjvmNNsE95/L6lpJm+6ex1PP+dh
vwXxb4NqBNy97+ZlMT4ttf0NjuQeuSbK9+66Txn0X/ffhjeUrBvbwwd3bLAS
igkf/0A0PvZISrXyzn6itMlK6A48FFCryPB2vdP7KsbYKWUX8NJJT38KS9zB
yHIdTSbvge0HRq35R/8wHfcxWbi4vxCo/jbP3Gy6Mr0wGkPI3Yf+emui/IMT
Vee4b1gaZv+Dy6GPDb89H6v8eYLal7XmAOTkuz6vP1msLKW2y+jtOITy7qd2
NbmllTfO0VuatBzBe5J3vsISuZUbwTtMIkPHkHKzyHWnxqOSOyDglrUlCe4m
noKP1v5zJUF3fExykQSXv/OywU4zqVJuvv9v6csTOI8vUdfv0kVUOtuaP2Ve
O4HjvC/1JqT4VeWDslgFZkdS3JFfbTZ8xlWuH1i6k+2Q4rYoFknr4/Qqk4d9
Sl7akeHSFayyrV8+rtx/ihi7/CPDnf+Ou/iNRaPy4mGYno0rOe6rmeka8Uig
ckE2qJOanALnl7BZd8t+u6KJpws4gihwFEGB0B9LibGkziC/TEOJa7t6YTCD
8hqmPOkK0hRGiYsILLYovSCA6bmLbVFnoMKtPpm4kqA/LLFnGathHEyF+/OC
et7hiKuyXTVRk46ZGkfLG6LsmkFbaYLBZmZ+pMZ5Bvrqku+fxTxb6/4zEUWN
q6mnvBKHMmFeJRtJM0ZT4x7WSrIrezFhvGhez7jHU+N2TPIXJreZMHGjHRfU
M6hx3MljZMwF5zBDLtqhB+XUOP9AZvlNU2aMQpWti9o4Na4Rf+NNVS8TRu0l
ebv/JDWuZDig7O8nJowOVxRzzfR/POx8+oAeE8YisLKYZ44aN6Vwdj1j9CzG
T5dk/d8qNY6fLJdm+ysj5tv+B5OMI2ocj537vxcVZzAt+ZcKx0locFHvp7zz
N05jukwKj+nJaHDBdyYs9LlPY8Y7B+LcqGhwclOtHud8TmH2Yi4Mq9LT4Ege
Jwdd5aDBHD/Iu+rPSIPDvRLSmsVRYyjJwL6aiQbHjPbVuphQYZiemzDwsNLg
fvHxmUSkUmAuXNo20rtAgzvQLBLtaSLHcPW/yQ+9SINTlYoYU50jw/AHnD9s
uUSD++jqoexBQYYRuput+O8yDa7oTR9NBS8p5n8ZVj1M
       "]], LineBox[CompressedData["
1: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
       "]], LineBox[CompressedData["
1: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
bQYRRkrxu+Y/bkocUWTPddcuQsz/AC0DL+Y=
       "]], LineBox[CompressedData["
1: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
47DIj0RWTD5D4y8PFTYXX7xen00s+z9HHjbf
       "]], LineBox[CompressedData["
1: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
       "]], LineBox[CompressedData["
1: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
       "]]},
     Annotation[#, "Charting`Private`Tag$6558#1"]& ]}, {}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, 
     Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
     Charting`ScaledFrameTicks[{Identity, Identity}]}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{All, All},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.7613829859316444`*^9, 3.761383045101779*^9}, {
   3.7613831637860217`*^9, 3.7613832006159706`*^9}, {3.761383346598961*^9, 
   3.761383355589196*^9}, {3.761383520566715*^9, 3.761383591344102*^9}, {
   3.761383682459908*^9, 3.761383723786825*^9}, 3.761383770791484*^9, 
   3.7613838397743945`*^9, {3.761383891353101*^9, 3.7613838991445312`*^9}, 
   3.761384317911081*^9, 3.761400286076778*^9, {3.7614004029190154`*^9, 
   3.7614004052057033`*^9}, {3.7614019740436373`*^9, 3.7614019855821657`*^9}, 
   3.762043502324664*^9, 3.762044158585606*^9, 3.762072067180552*^9, {
   3.7620724883259754`*^9, 3.7620725118305287`*^9}, 3.7620725645485*^9, 
   3.762074718830673*^9, 3.762075943179553*^9, 3.762087029832982*^9, 
   3.762130284971553*^9, 3.7621306635539417`*^9, 3.762131206447016*^9, 
   3.762131461364042*^9, 3.7621316683607426`*^9, 3.762132247050333*^9, 
   3.762132805807129*^9, 3.7621331287208176`*^9, 3.7621333899499083`*^9, 
   3.7621340493047113`*^9, 3.762134316187156*^9, 3.762134602373766*^9, 
   3.7621556772657857`*^9, 3.762157657991407*^9, {3.7621584229139414`*^9, 
   3.7621584609072075`*^9}, 3.7621588756979017`*^9, 3.7621590454707766`*^9, 
   3.7621593273121395`*^9, 3.762159624507114*^9, 3.762159800172615*^9, 
   3.762160111325614*^9, 3.762236291807293*^9, 3.7622363550460606`*^9, 
   3.7623134709485226`*^9, {3.7623140652455564`*^9, 3.7623140855415344`*^9}, {
   3.7623144737222977`*^9, 3.7623144937452955`*^9}, 3.76248094651071*^9, 
   3.762510585503785*^9, 3.7633008428785524`*^9, 3.7648639644987597`*^9, 
   3.7653728813817434`*^9, 3.765373312597495*^9, 3.7653743733275084`*^9, 
   3.765374614635717*^9, 3.765374721681349*^9, 3.765374807973843*^9, 
   3.7653748943921633`*^9, 3.765375025191177*^9, 3.7653752402274446`*^9, 
   3.76537540618079*^9, 3.765375497577098*^9, 3.765377302735674*^9, 
   3.7653785203580923`*^9, 3.766019708457432*^9, 3.7660209838035946`*^9, 
   3.7660243115544105`*^9, 3.7660243546377473`*^9, 3.7660433116649504`*^9, 
   3.7660434331893845`*^9, 3.766043669009764*^9, 3.7660437757622113`*^9, 
   3.7660438485277405`*^9, 3.766043887270331*^9, 3.7660444325614285`*^9, 
   3.7660462106999903`*^9, 3.7660462434832535`*^9, 3.7660506978527374`*^9, 
   3.7660524021861963`*^9, 3.766052444981427*^9, 3.7660545129539137`*^9, 
   3.766104819130224*^9, 3.766104989673775*^9, 3.7661512454252243`*^9, 
   3.7661567361566296`*^9, 3.766215082791787*^9, 3.7662681019578767`*^9, 
   3.7662917350744753`*^9},ExpressionUUID->"7f37e844-fd52-4ef6-8725-\
c7073176c92a"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{"Now", " ", "sampling", " ", "the", " ", "errors"}], 
  "*)"}]], "Input",
 CellChangeTimes->{{3.7613572079652653`*^9, 
  3.7613572144129558`*^9}},ExpressionUUID->"584b3d93-696d-46d5-ad96-\
38ca4aaa914e"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"edat", " ", "=", " ", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"e", "[", "t", "]"}], "/.", "errordyn"}], ",", " ", 
     RowBox[{"{", 
      RowBox[{"t", ",", " ", "0", ",", " ", "tf", ",", " ", "h"}], "}"}]}], 
    "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"dedat", " ", "=", " ", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"e", "'"}], "[", "t", "]"}], "/.", "errordyn"}], ",", " ", 
     RowBox[{"{", 
      RowBox[{"t", ",", " ", "0", ",", " ", "tf", ",", " ", "h"}], "}"}]}], 
    "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.7613572177330513`*^9, 3.7613572442227306`*^9}, {
  3.76135727897293*^9, 3.761357283021503*^9}, {3.761359508455934*^9, 
  3.761359513225772*^9}},ExpressionUUID->"935dc525-e36d-4b3a-988f-\
248ad9cba1a5"],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{
  "Finding", " ", "the", " ", "second", " ", "derivative", " ", "of", " ", 
   "the", " ", "desired", " ", "joint", " ", "angle", " ", "values"}], 
  "*)"}]], "Input",
 CellChangeTimes->{{3.7613846936964893`*^9, 3.761384707090025*^9}, {
  3.762073192503157*^9, 
  3.7620732048731003`*^9}},ExpressionUUID->"057a78be-086e-47f0-9810-\
cd732941c833"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"tic", "[", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"d2\[Theta]ddat", " ", "=", " ", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"d2x2d2qe", "[", 
        RowBox[{
         RowBox[{"xtrackdat", "[", 
          RowBox[{"[", "i", "]"}], "]"}], ",", " ", 
         RowBox[{"dxtrackdat", "[", 
          RowBox[{"[", "i", "]"}], "]"}], ",", " ", 
         RowBox[{"d2xtrackdat", "[", 
          RowBox[{"[", "i", "]"}], "]"}]}], "]"}], "[", 
       RowBox[{"[", "2", "]"}], "]"}], "[", 
      RowBox[{"[", 
       RowBox[{"19", ";;", "24"}], "]"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", " ", 
       RowBox[{"Length", "[", "xtrackdat", "]"}]}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"d\[Theta]ddat", " ", "=", " ", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"d2x2d2qe", "[", 
        RowBox[{
         RowBox[{"xtrackdat", "[", 
          RowBox[{"[", "i", "]"}], "]"}], ",", " ", 
         RowBox[{"dxtrackdat", "[", 
          RowBox[{"[", "i", "]"}], "]"}], ",", " ", 
         RowBox[{"d2xtrackdat", "[", 
          RowBox[{"[", "i", "]"}], "]"}]}], "]"}], "[", 
       RowBox[{"[", "1", "]"}], "]"}], "[", 
      RowBox[{"[", 
       RowBox[{"19", ";;", "24"}], "]"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", " ", 
       RowBox[{"Length", "[", "xtrackdat", "]"}]}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"toc", "[", "]"}]}], "Input",
 CellChangeTimes->{{3.761359899525172*^9, 3.761359908405185*^9}, {
  3.7613790220347166`*^9, 3.761379027808425*^9}, {3.761384357889218*^9, 
  3.7613843596122456`*^9}, {3.762072846993036*^9, 3.7620728898126*^9}, {
  3.762073017484767*^9, 3.7620730573710537`*^9}, {3.762073176187484*^9, 
  3.7620731796245327`*^9}, {3.7620735946068125`*^9, 
  3.762073601853396*^9}},ExpressionUUID->"7cbf0650-a3f4-4360-a1c1-\
585d1e04f741"],

Cell[CellGroupData[{

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Actual time consumed: \"\>", "\[InvisibleSpace]", 
   "2.0898031`7.470620366903887", "\[InvisibleSpace]", "\<\" seconds.\"\>"}],
  SequenceForm[
  "Actual time consumed: ", 2.0898031`7.470620366903887, " seconds."],
  Editable->False]], "Print",
 CellChangeTimes->CompressedData["
1:eJwVzn0o3AEcx/HjD/w4TZKHmFxuRUOHPCQ7fiyTXYqMcq5zamhr3RXOw/nD
efpnW3aLE13adeN0HsomTyvmEsWmeWgtHfOQQ/dzN6WJJN/PH59e/737CCqU
hS/deDzeU5qlyLzZ48mxWYogLz0ZXuf+Hqpj6x/1ksvzki4DWRteMD5Bbtj/
7sKA8xXBFzJb+ioLNou0Uvjx308TzEubOoN8jdD/K1nRFJoIZ54LO6DgWdUQ
lKsyVmGRvTRgnrSLc/kL6GTrVXBwx/wZDls/zEKrw2GDcaprt+9kji4hGF6t
dYlhsfJAdUzOpQgaodTQ1gsVTHKEjxfHbl9HGOHlToyzjMxsmZS/JnPNlifn
DMd+OnFpTvkcq2+dvtn3pT8Kq+iALBu7nYSB/glb0Fu7uw9f6P78h5rhRY9D
Un0XJ4R7Nk0ydDZYWNjvkxl5RKbHz36De9GSX2EPOPa3a0H5kHRWs8VR5Lp6
pBKm5ie2w7qLtzpoyLvqg8Ya2wBcco0ewjA7sxhNyrpvl+BNUPvFY1LcqF2O
QU8W/AOWb5asx5KdfgW1OegOOBgZGV9eOCMn3Xv6k5pJjzdMiJ581yYyGcl7
FbAEBg==
  "],ExpressionUUID->"c9abb919-4e61-40b4-9316-e052d2960a1a"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"CPU time consumed: \"\>", "\[InvisibleSpace]", 
   "1.953000000000003`", "\[InvisibleSpace]", "\<\" seconds.\"\>"}],
  SequenceForm["CPU time consumed: ", 1.953000000000003, " seconds."],
  Editable->False]], "Print",
 CellChangeTimes->CompressedData["
1:eJwVzn0o3AEcx/HjD/ObWyQNzeRyijx0aLbEzQ8hpIhbOdc5xWTprnDG+WO3
mX8kTpzoksvD6WzKQ4bJwyUrNmFCOo9rt637uaNEJO37+ePT6793H0GJMq/U
hcfjpdLM+aatzgccm6zwddeTgTWuLVAdWRvSRa7MZ7cayOrA3NExctN2dAB9
zr4JxskUaUUybBBppbD9/Ec/zIyf+gf5GqH3BFlS/yQWTmcJP0JB+ushKFe9
XIX5tkKfedImzuAvoJOiV8HBfdMAHLa0zUCL3W6FUaobl0UyTRfjB6/XWsVQ
ojxR/SZnnwvqoNTwoQsqmLggD3eO3b4JMsLL/QhHEZn0blL+hswwmRPPGI7t
++PU/OVzrP79l9vjR/RHYRGdkEWf7ybhY++Yn/Ch9uAYFuj2rqBmeMntlFTf
RwnhoVUTBx1vzSzs8UgK/kUmRM98hYdh2RsBnhy741xQPiUd5awklFxXj5TB
FzmxjbDmolkHDZnX3dBYZe2Fy85PpzDAxiyFkbKOu2V469t4EU6K67QrEejJ
/L7D4q1X65Fkk1dudRq6vXZGRkYX503LSdfOnmcNpFsl468nd+dE/UbyPxmX
BIo=
  "],ExpressionUUID->"ae063c45-9230-437f-b75a-70c076ace1c0"]
}, Open  ]]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"\[Tau]dash", " ", "=", " ", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"d2\[Theta]ddat", "[", 
       RowBox[{"[", "i", "]"}], "]"}], "+", 
      RowBox[{"Kp", ".", 
       RowBox[{"edat", "[", 
        RowBox[{"[", "i", "]"}], "]"}]}], "+", 
      RowBox[{"Kv", ".", 
       RowBox[{"dedat", "[", 
        RowBox[{"[", "i", "]"}], "]"}]}]}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", " ", 
       RowBox[{"Length", "[", "edat", "]"}]}], "}"}]}], "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.7613594737460403`*^9, 3.76135953468592*^9}, {
  3.761384376448566*^9, 
  3.761384376573496*^9}},ExpressionUUID->"e584b57f-8d92-4a8a-9522-\
2209a658c14a"],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{
  "Mapping", " ", "\[Tau]dash", " ", "to", " ", "the", " ", "required", " ", 
   "torque", " ", "values"}], "*)"}]], "Input",
 CellChangeTimes->{{3.761359931735376*^9, 3.761359967315246*^9}, {
  3.761384716466054*^9, 3.7613847405373535`*^9}, {3.7620732651483717`*^9, 
  3.762073273482604*^9}},ExpressionUUID->"dd9dc9a2-16dd-4df9-84cd-\
2bfa80606aba"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"\[Theta]idat", " ", "=", " ", 
   RowBox[{"\[Theta]ddat", "-", "edat"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"d\[Theta]idat", " ", "=", " ", 
   RowBox[{"d\[Theta]ddat", "-", "dedat"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.7613572978625293`*^9, 3.7613573323130875`*^9}, 
   3.761384238978449*^9, {3.7613842809093356`*^9, 3.7613842950102468`*^9}, {
   3.7613843254338417`*^9, 3.761384333109438*^9}, {3.762073474850888*^9, 
   3.7620734874284863`*^9}, {3.7621559488704004`*^9, 
   3.762155955746498*^9}},ExpressionUUID->"17579a91-9caf-450c-807e-\
dda5d9e86549"],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{
  "Initial", " ", "condition", " ", "for", " ", "the", " ", "other", " ", 
   "simulation"}], "*)"}]], "Input",
 CellChangeTimes->{{3.7621561868422565`*^9, 
  3.762156195055558*^9}},ExpressionUUID->"0a975fb9-5e21-468c-85eb-\
94d2ac8a8137"],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{
  "Since", " ", "the", " ", "matrices", " ", "are", " ", "all", " ", "in", 
   " ", "extended", " ", "configuration", " ", "space", " ", "we", " ", 
   "need", " ", "the", " ", "data", " ", "for", " ", "all", " ", "the", " ", 
   "other", " ", "variables", " ", "also"}], "*)"}]], "Input",
 CellChangeTimes->{{3.7620733419715776`*^9, 
  3.7620733703284407`*^9}},ExpressionUUID->"b25ee0cb-0c61-43fe-bc9b-\
2a889955e320"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"tempinit", " ", "=", " ", 
   RowBox[{
    RowBox[{"Join", "[", 
     RowBox[{
      RowBox[{"xtrackdat", "[", 
       RowBox[{"[", "1", "]"}], "]"}], ",", " ", 
      RowBox[{"iksol", "[", 
       RowBox[{"xtrackdat", "[", 
        RowBox[{"[", "1", "]"}], "]"}], "]"}]}], "]"}], "[", 
    RowBox[{"[", 
     RowBox[{"1", ";;", "18"}], "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"qeidat", " ", "=", " ", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"tempinit", " ", "=", " ", 
       RowBox[{"TrackRoot", "[", 
        RowBox[{
         RowBox[{"\[Theta]idat", "[", 
          RowBox[{"[", "i", "]"}], "]"}], ",", " ", "tempinit"}], "]"}]}], 
      ";", "\[IndentingNewLine]", 
      RowBox[{"Join", "[", 
       RowBox[{
        RowBox[{"TrackRoot", "[", 
         RowBox[{
          RowBox[{"\[Theta]idat", "[", 
           RowBox[{"[", "i", "]"}], "]"}], ",", " ", "tempinit"}], "]"}], ",",
         " ", 
        RowBox[{"\[Theta]idat", "[", 
         RowBox[{"[", "i", "]"}], "]"}]}], "]"}]}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", " ", 
       RowBox[{"Length", "[", "\[Theta]idat", "]"}]}], "}"}]}], "]"}]}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.7613600277549977`*^9, 3.761360033865288*^9}, {
  3.761360139944888*^9, 3.7613602175748196`*^9}, {3.761360371676195*^9, 
  3.7613603779959717`*^9}, {3.761382627633966*^9, 3.7613826298666825`*^9}, {
  3.7613827230352373`*^9, 3.7613827260684814`*^9}, {3.761384895839926*^9, 
  3.761384896437567*^9}, {3.7620733148161135`*^9, 3.762073320808685*^9}, {
  3.762481081152134*^9, 3.7624811001820254`*^9}, {3.762481139562225*^9, 
  3.7624811400578012`*^9}},ExpressionUUID->"48723449-800d-412c-a079-\
5db36246558b"],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{
  "We", " ", "need", " ", "the", " ", "first", " ", "order", " ", "data", " ",
    "of", " ", "all", " ", "these", " ", "variables"}], "*)"}]], "Input",
 CellChangeTimes->{{3.762073375353546*^9, 
  3.762073412223482*^9}},ExpressionUUID->"ec7147fc-57bb-491e-a7d4-\
12843ce9abd6"],

Cell[BoxData[
 RowBox[{
  RowBox[{"dqeidat", " ", "=", " ", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"qe2dqe", "[", 
      RowBox[{
       RowBox[{"qeidat", "[", 
        RowBox[{"[", "i", "]"}], "]"}], ",", " ", 
       RowBox[{"d\[Theta]idat", "[", 
        RowBox[{"[", "i", "]"}], "]"}]}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", " ", 
       RowBox[{"Length", "[", "d\[Theta]idat", "]"}]}], "}"}]}], "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.761386866319034*^9, 
  3.7613869453198466`*^9}},ExpressionUUID->"45953ea4-991c-4873-a975-\
fb547a5c60b0"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"tic", "[", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Tau]vals", " ", "=", " ", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"find\[Tau]", "[", 
      RowBox[{
       RowBox[{"qeidat", "[", 
        RowBox[{"[", "i", "]"}], "]"}], ",", " ", 
       RowBox[{"dqeidat", "[", 
        RowBox[{"[", "i", "]"}], "]"}], ",", " ", 
       RowBox[{"\[Tau]dash", "[", 
        RowBox[{"[", "i", "]"}], "]"}]}], "]"}], ",", " ", 
     RowBox[{"{", 
      RowBox[{"i", ",", " ", 
       RowBox[{"Length", "[", "qeidat", "]"}]}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"toc", "[", "]"}]}], "Input",
 CellChangeTimes->{{3.761359786275607*^9, 3.7613597863253536`*^9}, {
   3.7613605776358643`*^9, 3.761360589667437*^9}, {3.761360632645977*^9, 
   3.7613606365261693`*^9}, {3.7613607443648343`*^9, 
   3.7613607457255373`*^9}, {3.7613607889754686`*^9, 3.761360819475357*^9}, 
   3.761386701022391*^9, {3.7620738082871923`*^9, 
   3.7620738129360495`*^9}},ExpressionUUID->"2e089e2d-42a8-45aa-b7c1-\
7fb31712c9e5"],

Cell[CellGroupData[{

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Actual time consumed: \"\>", "\[InvisibleSpace]", 
   "1.958876`7.442521943157916", "\[InvisibleSpace]", "\<\" seconds.\"\>"}],
  SequenceForm[
  "Actual time consumed: ", 1.958876`7.442521943157916, " seconds."],
  Editable->False]], "Print",
 CellChangeTimes->CompressedData["
1:eJwdzFkowwEcwPFRmtvDKGfOXGNF7oQ/kTTKCoWxlKOmHDE35T7mSGyMiLkS
ypVlzmQPJseDJUeOpf74Ox8Qwu/n4dvn7WublsNJ16DRaCHQHUfPWkSnCIvi
0jaUlsBwFIMZRfft/eBCye/MLJhc2nWBfsyW2c2BDkqjMNRQIUtGG5cEI6jM
K+sO3XVUMuZBYYW/F/o5pVWPrnwxxlHBLbmDPpobm6yB19ZMg3Ww91w/H02i
N4+iz31xy/9WSs9RiWBacwP/CbemaEduTDCqkLPzbsDo7IAe9LhTbKOnTRE7
W57D6GZirA4XjCqy4vHBjn6NoAcdimiY5JaT+hQRyMz+ujSgCFZNvccVqDqb
uEIPxD3vqLKJQ78G51kFTmh8tbMvmkNGh6I81am9GhSzwlfQ4YLMQ0sjihio
es61AtmNknhn0LWVzET9Irvr0BPORSe6PyaXoP6vDYPo91uYGlVrizZdQL6v
cBtdfFO9MMFV3rfCDax2PdtF5Vpze+7gXoRFYQSYQrJ1uWDtpUyWCgq5P97l
oM8R30wEtjxJpUPgH1oj90Y=
  "],ExpressionUUID->"4de293aa-5d43-4827-a0e5-7758ad2b75b2"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"CPU time consumed: \"\>", "\[InvisibleSpace]", 
   "1.9059999999999988`", "\[InvisibleSpace]", "\<\" seconds.\"\>"}],
  SequenceForm["CPU time consumed: ", 1.9059999999999988`, " seconds."],
  Editable->False]], "Print",
 CellChangeTimes->CompressedData["
1:eJwdzFkowwEcwPFRmtvDKGfOGGNF7oQ/kTTKCsXGUo6acsTclJvmSGyMyC2h
XFk2V7IHk+PBkiPHUn/8CQ8I4ffz8O3z9nXMyONm6tBotHDonmtkL6FThE1p
eTtKS2a4SsGskoeOAXCp7HduHuSVd1+iH/MVTgugi9osEjVVyXlo84poDJX7
5tyje65qxiIorgryRT9n9BpR5RdjEhXdkbvok7W5xTp4Y88y2QD7LowL0VR6
6zj63J+4+m/16AUqE83qbuI/+c4S7cyPD0NVCk7BLRiXG9yLnnRJHYz0KWJ3
22cE3UpJMOCDsSV2AiHYOaAT+mhAEU3T/ErSmCJCWLlfVyYUwa5r9L4GNedT
1+ihtPcdVbdw6TfgIrvIDU2qZQageWRcBCrQnDlrQSk7SomOFGUf2ZpRxGDN
c74dyGmWJTFBjzYyGw2M6WlAT7mXXejBhEKGBr02DaHfb5FaVKsv2XIHhQHi
HXT5TfPCAtcE3ypPsNbjfA9V6C3se4H70TbF0WAayTHkg/VXcnk6KOb/+FWC
/sdCKwl4xhwbHQb/AFc49tA=
  "],ExpressionUUID->"9a02be3b-64e6-48c5-8e5e-1ee351fd2daa"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Show", "[", 
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{"ListLinePlot", "[", 
     RowBox[{
      RowBox[{"\[Tau]vals", "[", 
       RowBox[{"[", 
        RowBox[{";;", ",", " ", "i"}], "]"}], "]"}], ",", " ", 
      RowBox[{"PlotRange", "\[Rule]", "All"}]}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"i", ",", "6"}], "}"}]}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.7613608257859325`*^9, 3.7613608302696505`*^9}, {
  3.7613701735349503`*^9, 3.7613701830890083`*^9}, {3.761371428274297*^9, 
  3.7613714873054843`*^9}, {3.7613796095719557`*^9, 3.761379649052349*^9}, {
  3.76137990919776*^9, 3.761379910972228*^9}, {3.762158500564521*^9, 
  3.7621585141447554`*^9}, {3.7621585971242948`*^9, 3.7621586146252823`*^9}, {
  3.7623135163916836`*^9, 3.762313516977992*^9}, {3.7653753385748725`*^9, 
  3.76537533898164*^9}},ExpressionUUID->"996466ae-cbbd-415b-8afb-\
aa0636f562b3"],

Cell[BoxData[
 GraphicsBox[{{{}, {{}, {}, 
     {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.006944444444444445],
       AbsoluteThickness[1.6], LineBox[CompressedData["
1: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
/gwjwxW3S/rZ1cwkO7ni4ytt91/LyQJXLOj3rmaBLznHFTf+zPOvSyGXuKLU
8caxy3vINa4Yv7nh8ZdispIbdrgmK/ve5/nd0PPld43Fb3l+N6jm9jwnauX5
3bAxKj9kUk83mt8Nfb793j9Hj5zjBlG3Xi7Xp5JL3ND5Q+SecwvINW74mjbY
ZLQTWWktpoYMLR/gRdZei4o2ho+EUWSsxe/T4QeSpGSntXi0UM+vxx6efy2E
uYUWw0/w/IrvN/w/1YorPP9aSOQ+gb0reP61aPN9yqzGFzy/O6JvvKzz/MLz
uyNYu++1tL88vztsdYzG2Hah41sndxyY9nLOxX5kgTum9umvVaVHznHHiBaL
XTsnkEvcMXO01+F+M8k17lglCGpjsYCPl9ehn8ENGCwla6/DpUzXphsuZKxD
XsnRnUM8ef51yDVPyp4WzPOvw/Ckw2M0Ynn+dRAV9JEdEfL863C+xehHt2ye
fx0eT91rP3kPz78eE3vPPKF3hOdfD9nDsl8vinj+9XA19v+7/hLPvx56o7JS
L97i+ddD2zNiWX0Fz78eD4JEnWqf8vzrkbJy6JRDr3n+9cia/Wij1WeefwOm
vbukc+0nz78BenEHr/ZS9PJv/g1oMyzv5AxVstMG9PfpYjFLnSzYABujfSWD
Nck5G+AXEbP82SByyQaEvz9sHqhHrtmA06+77v82mqzkgW9p9llWk8jaHmhz
/I5e0nSe3wPRyYZLD5jy/B4Y6tNp+KH5PL8H1si+JEgX8fwe0Kga4Lp6Kc/v
gWk1bbI1nHh+Dyj7jVE54sbzb8R/v8ZtGbuR598IZyenA1u9ef6NKK+87/kl
kOffCDP3ijBDAc+/UfEXYnPcsliefyM+/rk1yTOZ59+IhX9axnmJef6NaK/+
tv9qGc+/CZ08hyZN387zb0LggG0aqrk8/ya4vvo+5+J+nn8T5u5benDdEZ5/
E2oWhV1tc4Ln3wRBGy+NxDM8/yYo90zr0baE598Ek3TriRuv8vybUVN56WPp
TZ5/M0a+rsvrXc7zb8aztPi79g94/s0IUTW7llDF82+G7cRen4485/k3QzfX
JfdGHc+/GTOEz2c9esvzb4baiXODHn/i+T3RW0cr9e43sronkmzePT3TxK/H
E6MHPV6e3UI29MSnUTcWblFeR6/PEya7Xraf3oFs44nps0IutHYmO3mis7/h
uZPqZE9PfKufZeLaiyzwxLiq9MhO/chCxfcvCb24dyA5xxMetj0nTB1CLvCE
fYCv+lU9cokn9rjsSzQ3IJcrXv/dqIqLhuQaT6it1B84YSK5wRPWC+6kb59C
VtqCh/XH1raZQVbfgphIz/OOs8jaW/D609DLBXPIhlvQdtWibS3zOP8WDD1d
6jXbmvNvwa6hT9ZGLub8W1BXsnXHmSWcfwsO1F6c9mE559+C3+1yHPs4cf4t
GF80cbCxC+ffArVCt33L3Dn/FrSW1nf29uD8W3Dt9pL1MZ6cfwtG+49+KvLh
/Ftw/b8XobIAzr8F8dfqXbJCOL8XJOE39ksFnN8LBVe11iRGc34vfCsW7Q2K
5/xeOPmlTYJrMuf3gs7X4IHzhZzfC8+/Tw8aKeX8Xji8+fzh9jLO7wXn5xdu
V2dzfi9s9V9cf2gH5/eCj3lN16DdnN8L+1YNWjhzH+f3wvQ/o863Pcj5vWC/
Vepy8TDn90JL6dxFQcc4vxfyHx2Sjj7J+b3QcfR2o2enOb83Rpr5zEs4x/m9
4dyt+8MxFzm/N4Y/qXr93xXO742PK0viNpdyfm+Mbp59WbWM83vjhFiwe9td
zu+NSSp640bf5/zeiBoXEXDmIef3hplOePisKs7vjdN/T1hfe8r5vRFf7PLF
rJbze+P4IS+Pi3Wc3xs1L/1Kjeo5vzdEPmfU8t9zfm8YnDNB/8+c3xthziXr
Yr9yfh8MLD2S9vE75/fBybMzimx+cX4ftK1d8fZIM+f3gcWGq/qdFX83/+X3
wdmFDcHObck2PrBz0Kk/0Z7s5IMOP9d6tetE9vTBTGP5oIVdyAIf7Cpe3ShT
Jwt9MKv75O/VPck5PlDxcRk2oA+5wAdVZarJS/uRS3zgbq05QjyAXO6Dr11X
qVzXJtf4oDA9cmDTEHKDDxZaKYcM1SMr+SLv2FRt6xFkdV+c3ena1XcUWdsX
gsfZczMNyYa+MKx/WHFiPOf3RVTSl2Plkzi/L1Jy979+M4Xz+2JO6E6vP8ac
3xd3lJ2Wdgbn94Xd30Xb+szm/L7oLLsL7Tmc3xcVk3rMGTqX8/viya+ZR4ZZ
cn5fbPD3DNO15vy+aGqWnRi4iPP7YtOe3fa97Di/L8zU3daoOnB+P/zdtuvp
z2Wc3w+L3nS8/nIF5/fDBqnx4DInzu+HuBc3Pxas4fx++HZywmixG+f3w9fm
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
zf0n4OaYJyF/+PN1pUTkXa8va+TP31UTYawfZvaeP59XT4ReWMvrZ/z5vWYi
/vS/cfRuB+4/EZVBs/eeU+H+E6E97e6VvDbcfyJu6t7tImql9QNGiZijvzfC
7w+vn0jEg5WntJc2kS0SYd7Z7b0Rr0ewScRaea8XvXi9gkMiynYPb9fwiddX
JALv2tld5/UO7onwc+x6L5vXQ3gmIq7XvpCNr8gBidizYoKd8Qtef5GIggP9
HFWfk+MTcTbnvOi/J7weIxH3esT8yKwkyxLh3PZ+4vIHvD4jEU25Xay17pHz
EvHfMvnsqju8XiMRvqefuaffIhclwiUOFxbw+pGSRISfG2re9iq5NBEd4huV
TvL6k/JEXJ7T86PreXJlInqk1nfueZbXdyRCV+/JinOnyPWJaFRf9NKlkNd7
JCJVULi141FyUyLUX6xLPHiI138koabycf68A2TVJByDh8qbvbweJAnvRiWI
BLweRzMJoz/JbPvk8PqQJDh2VLE6uJWsn4S7M8eHGWfxepEkID3t1c107j8J
FtMjo+3F3H8Sfh7xWf48lftPwsGc8vWuSdx/EiKUlI7Xx3H/Sej812PCOl6f
5JSEP50iP7/m9UvuSThxb3/d6lDuPwmqZtYaVYHcvyKf6GmYtR/3n4RxI0p0
L3lx/0mYd8m5/bjN3H8S8m3G6u7YwP0nIaObLKwjr8fKScL20La9t/B6rbwk
jFhZ8+4Br+cqSILemeyWySu4f0W+ml1WmUu5/yScXLvm2Tc77j8J2wzmH1qw
iPtX7B/b0rO5Vtx/EtSs53b6xevPapKQfs84a54595+EjbXd12XN5v6ToFw6
OeiVCfevyDdw4O3Rxtx/MiaVTnD2NeL+k7Hsx/sppydw/8nYO6zQ9jevp9NM
hsrQ1mNGo7j/ZGiqTbPzGc79J2O/WfW0Q0O5/2SIkhavfTmY+0/G6Poelb15
fR+SMfZUcqo5r/+zSIb+3vFJvr25/2SMPBF0J6cH95+MA5MfONzoyv0n43rF
yRGfO3H/yZgWLzHtwesRPRWvd/fzvePacv/JqLzVbZHNX14/mYyff2VzNvwh
xyfjiqQhOuonWZgM1/HJXbJ4faQsGVEva2sOfub1lsn4r43737PvyXnJuGeW
vu7GG3JBMjwu1gyqeEkuSkZa7UWdal6vWZKMxk0FXrVPyKXJkKTqqtc9Ipcn
Q3wp48/L++TKZOx+Fz6x9i6v50xGuenS809ukeuTMWHT1oz718kNyXBec/l8
6WVyUzIcIiwmn73A6z9T8Dlmr9LBs2TVFMiEDv1lp3g9aAqUhlTFRR4na6Yg
Z/C+Oet5/at2CiQV0xysD5L1U9C+XuPc2H28XjQFnTYe8e2+m2yUgl5V8ZGf
eL2t4mylqPOgulI52SIF1mYN8pwMsk0K0scG7/Pl9bsOKbB6OaOTRSqvh03B
4wdnLvdJJLsr5v+0qaIuhuyZguigJ8ZHIsgBKcidENHiF8r9p6Aetb2NeX1x
fApujQlNaPXh/lMwqvWh3XlP7j8FOr23hAR7cP8pSLK+0zLRnftPQV7DlqqP
a7j/FFQcft5j9yruPwUdjmTvs1vO/Sv2d+yIrHZLuP8U3JvWvf4Yr6cuT0HE
nAfSFVbcfwpOC5t3tJvH/afAwb9Lp4Nm3H8KDt1Mvb9gJvefgmF3O7R8NOb+
U/BgulJckhH3n4pJZkpewyZw/6nYlSA8f34M95+KTsOmbrQdyf0rtufHhr0Z
xv2nwkZP6Zu/DvefitWaY2+1G8j9p8IuOLeDqC/3nwqdq6/y+vbi/hV+JTiy
g9ezW6QiwkxZa4ga95+Kmls/Pu3uwP2nQrnqvb5OW+5fMZ/V5pvbWmn9vHsq
jkR3q+j9m+yZCpn98jkp38kBqTDTejG4zRdev58KpUPj13p9IMen4viqmt61
b8jCVFzsHDh2wUuyLBUWHdNOnXzG6/1T0Ty2cP+AKnKeYv/UBqlGPiAXpOL8
D9+Kl+XkIsV89426zi7j+wMU+9dxyckd18mlqaj943r7F99vUJ6KfTt/LV54
nlyZCtVL++btPc33E6SiaUn7Y02F5PpUDHx1MNGigNyQimSvMQ/SD5KbUmEi
0hfX7OX7D9JwdtmYS/q7yKppSN9S7bppG1k9Db2Vb4QelZE103DgUmqnrxK+
XyENexuvqxmmkfUV2126xWxIJBumYdEGJZ/cGLJRGnI+TqqqEvD9FWk4t8K6
qGsI2SINa86+7gp/sk0agqTyZ5u8yA5p2NOuo372Rr4fIw03zpS/v+LO/adh
/2fhiA9ruP80rPB8W6e+ivtPQ2tWUP/xy7j/NKgtf3VnkR33n4aBE2793WzD
/afB3OjO4cT53L9ivi6i6l1zuP80+Hw6mVDE97fkpWFl3suTt4y5/zTM3n7W
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
zEcHySpyjKq+3nVMGllVDuXEy1+TvchqcrycOfFHgx1ZXY7Sx4t1lk8ha8hh
aW8vuKVF1pTj0ivvvrOUyFpy+Fa//HH+Jf17CtpyoODp4FnXybpyFDTKdt86
QNaXw9Z+QczyVLKBHHMyx5V/2UI2lMM5UZCSakeeIIdrt83Xxk4hG8kh7Top
+okW2VgOf58u5UlKZMihNnrU8Vl1pv9sKoeL7u1JSqVkCzlmTB7qcuUg2VKO
Z1M3mqalkW3kkH2trnHyJtvKMU4tf9aUJWQHOXZo9fDWnEZ2lMMwe05w60Cy
kxzN1QKX98pkFzm2dm+a/Pw1/fsT7nJET3/Z+vgm2eP/X0/gpSeHyZ5yrNrZ
kFQnJvso+qoPd2n0IwcoXs+0FXadl5ND5GhMPL92uAn/+xZy6EY9zrUaQo6W
ozj2Za/gDuR4OTrnd79y+P2sf06W4/IpWdHbu2ShXPH7/lDzyEKyVI7XdZFZ
vjKyTI70/xbIroWQt8pxe9xM5UGryTlyTPueVhNmRs5V9JXlYfx6ODlP0Ydh
x0F2Xcn5ciTZZ4pufZ35zwVyPB9tsW3uI3KhYn+uspx/9yy5SI7IrhW5jjnk
YkVflV2Pf4kml8hhcm9keOo68hXF/hMs7THeilwqx+77V32fjyOXybF22PZj
kj7kcsX+ndjtnnUz/fshFXKM1jJ72rOWXCnHiEUbnj6/Sq5W9J+b/+T4AXKN
HO8Mx9empZHr5Bjoov/T24dcL0fC18JhTkvJH+SQVCgF2s4gN8hRO2v8T5sh
5EY57hV4HbBTJTfJ0UN0Y/LVKpN/bpYjqsxx/+dcslI2QvXenB2xmaySjR6q
RyL8ppBVs2Gi9UvtfluyWjakC1U9cWfGP6tnQ3RnwLnzMrJGNjq9CmhvtYas
mY3jnZes/DSKrJWNiQ++PdzRNP2ftbPR7XV8pPNlsm422r5f4D0playfDVvR
/9V07/FQdV8DwIUkSUiSkCRJkkQhaSVJheRxS5JQUZJESZIkqVSSQjNmztwn
lSRJKt0klUqSJAlJEiW3JOndv/es+fP7OTPn7Ptmztp7R9+avBZtzICcWJvt
qvpoUwYULXp2XvMHnudizoAHK9w9zYvRlgzw+Smbv+Ew2oYBIzzk7zFd0cCA
hA1H0r5NRtuT798UL3T6spC2IwOsH6Y+L8lHOzEg/MhGn6VxaFcGcK9b975b
gXZngFSG1eWECWhvBkSM3JuxqMmati8DlAJUHilcRvszYHyKhmN7NDqI5L+W
Y1Zvjw5mQNXIknONyuhQBvjP35f0q96KdjgDdrS0jJ96AR3JAL93MmvWR6Gj
GTBnesPqS0vQsQyYobZHT0kJHc+AidNf1iXUWdJOZMCVES3HFEToZFKfu/Ls
BbvQKSQ9a401/wN0Knk+z0lbbSw6nQHr7WT8297heTuZDNiit7j3pRDNZICc
Xse3p7vQFAMKRvZ4vwM0nwGdO62c/4xFi8nzPnDqTN/Pp32JAX0nxoyPEaPz
GKB7xE3+bRS6gAHrklZXLF+KLiLlO/A2vEIZfZu0l847ozY1WNC+x4AytUqu
yiV0KQMWXHz3X9VedDkDJsdwjUXL0RUMmPv4u23qBHQlaV+rDzBPfDKnXc2A
sQtVvNhX0bUMmKXmF//oALqetKeSyUZSLuhG8v3QoU2rtdAtJL3ncpdda59H
u40BQz/q62bdRHcwoMHfZMHNI+gu0v9+LQtd54nuZcDoTw+Oq05HDzBg+xYQ
NfTgeUhDJL/VHpV3H6ClmHB2/zmNwtNoWSZMuHz69H1/tDwTLmRXOTXPQSsy
wSescZ3Gv7m0lZmQomlbGfgCrcYErx1bb5VmozWYMEam0WThdrQWE77OnGDz
2Aaty4SRnft6gxXR+kzIGJEQoltvStuQCaKS1EudF9HGTJBRHfuych/alAk9
0V7NT1ahzZkwou/Zr9rJaEsmZI5MXDL0dg5tGyYUaU/6EBGNBibwG3paJkxC
2zNh4JJo3+ebJrQdmeCeUfKwyQftxATVxTc/KgzNpu3KBJtypW7/bLQ7E86V
Gmu32KK9yf109hxKbzSm7csEQwXH5REJaH8mVHz7cWy/PjqICVqO18MLy2bR
DmZCxNVqTe0QdCgTNK7FX7w6Bh3OBPXbTfaRuUa0I0l+x6qP3rQGHc2EIPFc
zcTembRjmRBgYXv+VQY6nnjA+qLzQnQi+XyB1o6BBjxPK5kJJtTzUVUJ6BQm
eDrPzqgzQKcyITJDebHqsxm005mQe2LJ1L070JlM6Ag8sGGcGprJhPS1cZPf
FBnQppjAuvhl99P1aD7Jz761Z35Io8VM8L27Oc1ePJ32JXJ9TsbZJ87oPCbE
GW8pievRp13AhMaC5SZBWegiJoAjSy5mMfo2E76/Kw2+93ka7XtMaL81eveC
FHQpE8yTr6z+aIYuZ4KfWqd60Ts92hVMkPbo7Lgfj65kgv2al91DM9DVTDAa
I1wR8nIq7VompIVFq47ag64n5WW9JKxGB93IhNbe7/vflunSbmGC8pPAAIUd
6DYmlB+KstkxEd3BBO+OurWK8VNod5H28lT5AuuVDu1eJkR/7RCdnYYeYILs
zMKMn1HatIfI9fqsm/nlWrSlssGRfdHl3WS0bDbomn7O2LRjMm35bKhYYVDj
9RDPW1PMhqB95ivzJqKVs8FY+pb5jtBJtNWyQYNaWZN+X4O2BnH02h1TJ6K1
ssH/sx1M2D6Rtm42MD2WHw1/qE5bPxvydFKOzdNEG2bDPa/JiX47J9A2zoai
ok/Xf5ar0TbNhqHtRRs6ddHm2eD73fX+mr3jaVtmw0Cdo+aUKlXaNtng+mZK
jscsNGRDpYdVXl8ins9pT9JztH7bvwZl2o7ZADPMtXZZoZ2ygbRpKa7hONqu
2dDGscw1+ziWtns2xDt/Lsk8p0jbm1z3UcmrdhlD2zcbTCf/HG4dpUDbn+TH
MM6w8r487SBixT0XUmNH0Q4m6RuxYdjQUo52KKkvxn5eVq8s7XCSnpgGtU9X
ZWhHkuvDri9GhkvTjs6G5OEtq6TnjKAdS/LT062U/+EffZ5ePKmPIzZ/1Db8
pZ2YDV27A9eYNA/STs6GRhme3L/NA7RTSPpdi8cld/bRTs2G1Cff/J9G9dBO
J/WXNNRZ9q+LdiYpj+At7n/VO2kzSXoHryl/nttGmyLXW3f2Obh+os0n1w+E
VKxoqactJvWvP+X4iDmvaV8inzdxqd454iHtPPJ5yvCqkUPg3f93AXF2VVv6
iYe0i8jnH7Vc/7vhNe3bJP/67/z0uutp3yPtvd943XnbT7RLs4HilCVkSrXR
Liefz6p5NvpuB+0Kkv8LCSb9t7toV5LP/5KZw9booV1Nyiu18k9cRB/tWvJ9
31cX0p/+ol1P0mO7x+Wj7iDtRvL517f+rY8aot1C2ufnqdXjyodpt5H0qaz7
uTdF6t7/uyMbwh8f4cgWjKDdRdqHoThJVCdNu5d8XmH87AApWdoDpD25b5pq
Pn0k7aFsEG9M6NJaIUdbigVgnD5DK3QUbVniK2Pc556Upy3PgmBDjozvldG0
FYk3uJcyXirQVmaB/J9Q/a7vY2irkev3Y/K9x46lrUGuf/b4W22kRFuLBVJe
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
zwVYOcrPeQe6gAspOTW3V5mjC7mgcyymZ+RvfP9TRNrbahX12DvoYi64Bryy
zD2Ivs2FJN3R4cxl6BIuJDzXqXQYjb5H6vtE6vbLFfh+6gHp/269vpWn0KVc
SKz7lX/FDV1G2n+Wf+KqCehyLhjmj2nlvcX3Y0+5UP+9s6MoS/K+jAvSl8bn
HluHfkH6Zw1lO0kbXUnu/67yWlADvp+r4kLjmX697Wx0NRf8nWM5Zv7oGi4o
Xvpkf10XXUvSI3ik19eI7wfruOASVeXaTaHrSfs49arlkj+6gdRfJqdXXxfd
SPoHP9z4egm+n2wm84PpsrsMG3QLFyIz5V/8vYnvN1tJ++OaHn4/H91G6qfX
X8XiGr4fbSf9QXYbW2EOuoOk95ezr28Ovl/9zgWb0/OjjKaju8j3tQ5MjGLj
+9lu0v9XXQm3mYTuJeVjGJsbn4bvd/tJfvoeDy8Zgx4g7UWLeyr+EL4fHiTX
VZafsvmD75OHyPetdY13R6CHSX7qH6bP/orvo6V4YPO391fABrQ0D3ydeYnq
b/B9tiwPisZ+C3FciZbjAYyY8HagBN+Hy/NAvPTcnxnz0Ao86LJVHlUjxPfp
iuT7Ka4zZTTRSjyobXRNu5KC7+OVeXDp+/yI98P4vl6VB5Zu7r+TwtFqPDCP
MPDOb8L3/eo8sN/peXe9G1qDBynKNzccfYDxApo8cE1z2Wphhtbige6aw7ql
dhhvoEPuX1g7coouxiPo8sC7hvFl35AibT0emB6cOfP9W4xn0Cf3O2Fmsigf
4x0MeFBeeseHexzjIQzJ/bNnjB8ThPESRiS/cnq39yzEeApjkl/nguI2FTna
JjzQqLaO9PuC8Rmm5PufN7u8uyVD24wH8Sm2V9aewngOcx7k+Wr9/bgR4z3m
k88vusIKnYfxIJY8uBfb2/dvFMaLWJPv3xd3m4v+0LYh119XSu+1/03blgfK
/4X0V3zspw2kvi5NYM3d20vbjkfGgynPRMrdtO154B/cyfJ3+kHbgdyP6/8n
Y1c7bUceSOWOdft17jPtlTxo/JK/Mr6wkbYT+bz8Fa0Q/lvaLuTz1UbaXuJn
tF2J7Y1VfZqv0HYjnjO5+FXKDTq+x53k58SE1VT6S9qepP29/XVU9uY72t7k
86kLNUVvm2j7kOexzjal17TS9uUB9bP2y4p332j7kesbV9g078D4JH9S38mj
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
QPg/lfXBnA==
       "]]}}, {}, {}, {}, {}}, {{}, {{}, {}, 
     {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.006944444444444445],
       AbsoluteThickness[1.6], LineBox[CompressedData["
1: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
/6KAHiuNqP5aqDp8meyRNp3qr0XpnNjmA9emUf21iP7xcdlhZbJ8LX5Hn6ib
uXgq1ffBsqzLDweKp1B9H4x86ndw8DtDqu+D8deXf+hnSnb3wQlltYJ8vclU
3weeo82G2NdNpPo+mH4hXKVxvwHV94GWxfakEeETqL4PnNxXWPGXjKf6vmix
GTDjj8E4qu+LUw96mPTX0Kf6vkg8kPMgTUmP6vvCfupqPb3msVTfF37qC6x2
NupSfV/4tE6/XfpjDNX3ha5NYdLk1tFU3xd9eiYOuNWLrOSH20N6B1mPGEX1
/fB1zMW4WGMdqu8Hef+ys44lI6i+H3hVQ47P+atN9f0QfcRCZrNkGNX3gxpH
tH1k8RCq7wdu47i6VRpaVN8P/KDUgQUJg6j+OoTz/NfltWlS/XXQLshzborR
oPrroLSz6apLT3Wqvw4BWf2+xsnUqP46cEcZHzPy7Ef116E+MrXvmZ2qVF9x
fqO+tkrfVKj+Osi3eRslWPWg+v4omjrv0YWSblTfH/KYz75TdLtQfX8URApf
Xlv471JnfX/Y7QpJOuHS0mmuP7CTF7A0+WenC/xR5tf1cHD6l06XKY7bvIg2
mVrXabniuPL9pNPtTzqttB5KNQVbOjSPdFpnPbhnn9zLe3dnbmd9hRfuOxGY
+LrT7oq/H1d3k+tf32nueqjlnPG/G9HY6YL14LyfLvE60tTpMsXxmhlndj9t
6bR8PVBv+Fq3sa3TSgHwM3N+axarhM76ATA89/PN4NiunYbCVc72H8KUO+0e
ALUj7y83rO/Raa7i+PE2F19nlU4XBIC/TeWt0Lx3p8sU528Ovl+s16fT8gBw
h63nferRr9NKgbBr3O6V8KY/1Q9EzZrQG09eqFH9QKhV7t93+9oAqh+I/CuG
0tKD6lQ/EPbnKutO8TWofiCqcvb9eRGiSfUD4VdxOmS2w0CqHwiV2L+jGqcP
ovobcG1pppKKxmCqvwHTx7vbyr6RsQFOpU6S47e1qP4GWD4JO7q+cAjV3wCR
+OSFyuihVH8DLIoWzPm1YhjV3wD+6VKtj+O0qf4GlFx+knWmnay0ETa9TJZs
fjic6m+EgeqzqIl7RlD9jdBeXF/SsHkk1d8Iztrh0fIxOlR/I5aPuxz0Ip1c
sBG/xoQvDPxJLtsI74nm5VudR1H9jYi16p0ecJmsxMHfZv7XOr3RnVbjwHCw
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
q/vuLVO3kTnZqDNafal6Fzk8G3avP5Zyi8jcbIxuC1qve5jMy8asOSOfXj9O
5mfjfj/tFu8zbP6z8SVTWNHlEpv/bNgIjrrlX2Pzn43zRbt2Tr/N5j8bHzRE
stsP2Pxno+bO8fluT9j8Z+NSjOGOb9Vs/rPhlm5yKFbO5j8bj3t3rFd9z+Y/
G4NuHK0Wf2bzn43jpgktw7+z+c/Gktw913b/YvOfDdvr1nP02tj8Z8PHfr93
URefTivx4ZD1Y4ZeT7IyH7YBrid29yGr8HFApl0zXJ3ch4+CDesOiQeT1fgQ
/InQUx1O1uSjS3OSVexoshYf1+5cV/+mR9bmo1kaHL96IlmHD5vRN6S3ppJ1
+bj/5u+yacZkfT7WtVqX5M0mG/DhNa/5aMd8siEfI6ZNW+lpSZ7OR1rb/Pwr
tmRjPko3eSborCCb8ZE6uqJ3tBMZfKhPvTPlyWqyBR+escLfE7zIlnzUpa9z
4fqRbfhQSc1yfRhItlOc39bi76gQsj0fg13uTdsYTnbi42l1gMrZGLIrH1+3
+4R1TSC78zFgVMcWSx7Zmw+z+KhRGZlkPz5WpI1yuScgB/DB3zfToI+MzFH0
/1VZZLmNHMrHmcGVOfG7yOF8tMfX6Z7dR47mQ28az+ZbMZnLR+yD7iqjj5ET
+Xi7a9/K5afJPD5Wby2dyT1PzuAj3yrxwMHLZD4fofKVhx/fIIsUnh4zv/UO
WcaHxzkLn5GV5Hw+zqW3as17Si7gY55r4yr3F+RCPsITgvVj5OQiPsb8rkyQ
viMX8/HQes36I5/IJXw4n1j/6to38gk+lnWxqnnWRC7lY0eBlXf9H/J5Pnps
K9v0q51cxgdnWxe1rsq+nb7Gx9Y696mqvcjlfAjtptUM6Ee+q5gv5/t9BmmQ
K/iYrMm7OliL/JiPogmnOwYNJ1fxsfH9sTKN0eQaPqaPedS9nx5ZzsdzJ879
7gbkOj5eiN8OaTUk1/PxaUvyhy9G5AY+LFccn/HKlNzIx5Laaz3uziU3KcaL
BjmetiC38FHrq6xXYEVu46Oi4dOm5CVkpRz8tNQz919BVs7BQKPBWdZOZJUc
VLVprRy/mtwnR7EeTc/r4UlWU4zXv+8s9yFr5kC5HZLT68laORiXbWGTwSFr
5+C/dpNot01knRyEtcWPnRRJ1s1Byu24Ra2xZP0cLJqZ++Z6AtkgB4d2GPzM
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
kWK5i8RnhpDlXwrT77XVp5j1pTjyr0NvuojlX4pZk7JsDzMbSpFnNMl6rJjl
Xwqru1ydXGZjKZ6V/Hevl4TlXwrHojK7MGZIcS3224E3zBZS2PS0f2EpZfmX
ouvw7DfFzDZSDNw970JfGcu/FOZJfTasZ7aXYmkp/+d1ZicpEk032g7PZfmX
okPDKiqI2V3xex0vRV9h9pbi4qiQZWp5LP9SfN7a/Y8zc4AUU/4ODtnFzJFC
K8b60nvmUCkeBc17qbeV5V+Kp1O33l3LHC3FUP2/GQXMXCke3+wYXsWcKEW5
xHZLn3yWfyk+6CeVzGbOkOLmKMuj65n5UgwwMo6TMIukGKX3e+RFZpkUW+79
l1nLnC+FZ/915d22sfxLYfJ+TeUo5kLF/eV2aJ8Zc5EUbyQ/F9szF0vBu/r4
rB9ziRQ1E37+imA+IUWcwff2FOZSKXbODHooYD4vhf+TgUF5zGVSFBbGVW9n
viaFk4tjvwLmcsXvu2nS53/H70oRcP/OIxlzhRTfNpZ485kfS2F7Le1iInOV
FP+1/5NvYq5R9ON/6I4Xs1yK4SFmsUuY66Tw27qkxYi5Xgp5YorJUOYGxf36
JW1eK7uejYr78Vhb/+fMTVJMusstPM7cIkWsw7n2NOY2KVRS7EasYVaSQf9s
XVdDZmUZdNdpF/9j94OKDLcm5w8pZ+4jU5xfxTqbWU0Gi5E9sYJZU4bkiWYt
GsxaMshG2oZUsvtTW4aB5q9L0pl1ZOirKiuZz6wrw3214cG/WB70ZcjW1Gze
y2wgU1zP0Sb2zIYyZL38Nrud5W26DG8+63Tbw2wsw6V0V54ls5kMJout7tWz
PEMGv9eZlUnMFor+JleKRv4v/zJ8tzo76BR7PtjIMDOwcaUVs50MMcrDHJ6z
5429DE3736j5MDvJMEivIfUbe165ypC+qfbSJmZ3GU5fCjjWwp533jLc8Jjm
Ec7sJ0PLx1d3mtjzMkCGqiFaPwKZOTLse5/y6C173obKYBb5bONK5nAZKqaV
3LjOntfRMhwoOvdsCjNXpvje2L0rjz3fE2WQGKjrKTHzZNgfddTbk70fMmTY
2tPA5TJ7n/BleLbFoPdwZpEMofdXB21i7x+ZDKpD1vNvs/dVvgxnL3f4aDMX
yJDie7PJn73fChX+EGhyir0Pi2SIWL1jejt7XxbLsEtX5f185hJFP1X2tons
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
u/AueZkjRWDW0TE8QTJE5igyXuvkl8RvkpM5mtzPew+UQ9UHyxxDzq9ofgIj
fWDB/x1L+v/wqXenK/2VOU4EOSdr+OcP9socT443e9aw1q5fMieQ4y0/8kjN
/6fMiSKIXhr6TLupS+Ykcn42Kl1KXp0yJ5P+2BY2Ku/aF5lTiBckvhl/tVXm
VPL5V5cH7PM+yJxG/h7cuj4o5KXM6cSc1OX1w57InEFcctx0RGi+zExihxHb
jYZfuf1/s8n5nF746tvsKpm55HpPFJ+V+1wnM59cz0irqNkv38ssJPdnbGBr
8o0WmcXk+p6kvhqf9llmKfk+T/1qedA3mTPJ/Xn6sPmRbpfMWaS/6iYULU3o
ljmbXM+0VpWXnT0y55D2vC9WCl/7R+ZccrxF894ZFPTJnEfON/9KUbPGP5nz
Sf+82LKzfv6gkv+7QARWMd3Gjv6DZS4kz8vbCdYF5+RkLhJBW+dg81llQ2Qu
Jv1hhOLFy9/kZS4h1xvDWTBbU0HmUvL8Z01OuLlomMxlpP3iLKY6ByrKXE6e
D+feXaw/M1zmCuL/9t8ILFSSuZKcr7f005D3I2SuIsezCK1nyY+U+THpT5Xm
etaGKjJXi0BxfMrW+qWjZH5Grm/aQy0bS1WZa0SgpfmIm1iOriXj96wkcdM6
NZnryfXe8bqc3YJ+Rcark179odDRMr8h4zV8RW213BiZG8jzetOOA7xk9Hsy
nz3RO/1dW13mRhHEnvH6WpKJbibeM9Vr1NyxMreS61uVffVNKbqNtKe9Z7Hh
ynEyfya/l1288kc9up3MT5tOz7HZOl7mDvJ8SylaNOQrupMc33DtUucwDZm7
RFAjZWqOGEB3k/P1Hhy37NgEmXvI9R2Y5DV8lKbMv8nvqReFOqShe0Xg7PuE
0a81UeZ+0r5FEaJZAvQ/EajnjPRtMtSSeZAYok2GZqplo+XEUBQ/YmmRubbM
8mLoFP8e15SPVhBDyeBnTUetJ8msKAbPp5VHhLfQSmIIH+dQaQeTZVYWg8bN
qgS3UrSKGEY/S67q0tWRWVUMhm1pzeE+6NFi8JtzdH8RH60uBs09h3bfakSP
E4P4cEn+f3q6MmuIofBYxtxfW9CaYij/HPZmJg+tJQYd39pTU9+jJ4khdvhq
m/pJejLrkPP1TKtavAmtJwbu6l3TQxlofTGkb85btOkl2kAMzONbBg0ZP0Vm
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
       "]]}}, {}, {}, {}, {}}, {{}, {{}, {}, 
     {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.005555555555555556],
       AbsoluteThickness[1.6], LineBox[CompressedData["
1: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
N9koHbIFT4o8eVpym6WjYnNbyBmlEXIjHY5DTtzITiJbpaOwOcS7hTNSbm46
jOIqta+nku3TUX1O/dgkVW25nZnzubfh26AMskc6yqMyy7b3GyW3fzrqNaR7
vTLIYenQ3LjTzreXjty8dFyed/L6u0Vkfjr0Z0aIdBPJgnQs9VksHnmJLGb2
LxWde6KoK3dxOoK9Wj7azyeXpcNY9UsvcQy5Ih22p5Z35J8jV6ejMvN+qf1v
sjQdvDLnn4/NaP1LfTrOT3vboBVCbkiHaYzXCO3j5MZ0XFDtL5V9JcvSYbBX
ca+L4Wi5m9Ox1UFQvs+D3JqO1OrBlw6UkDvSMfmo4h0fGVkhAxfqXp/+qqUv
NycDbgNWexrbkdUykMntfckkh6yZARvlq8d+3iDrZGBNUOjIsN5j5DbIQHRt
75bq+WSjDLj/Teh1KpJsloHh09XWhJ0gIwNZsbKan1/IVhlQHr5wionBWLm5
GTB125FmtIlsn4FqFZdznyRk5wwY/h5/aMtdskcGytPyFhapjJPbPwM/o7d4
5i4gh2VgoKZX72URZF4Gho3P7FVzlMzPQPeYuyu+NZMFGXCeuvzGq1EGcosz
8Npw0hbBWnJxBi7dqFL6k04uy4DJ3kXZ4y6SKzLwdqr1rwGd5OoMLPm9elTV
5PFySzOwPutP2zBXcn0GTu1ScJwtITdk4AfH0GL4LXJjBtLebcmtUpwgtywD
PiX/zVSbQW7OQHovda1x3uTWDOybXzf6dxG5IwPNin3mpt8lK2TibIKZ7ZOe
E+XmZGKP5DL3rRlZLROomaN9yJusmQmnCdg/tYisk4nYR8kPAxvIBploKHiX
569I67uMMsGfaHlvggnZLBMxpmUhu7eQkQljn7E+9/PIVpnoymgruniFzM3E
5ai1XVs7yPaZKFpW6fnQYJLczplwXpzU2GlP9sjEgr4bjR/zyf6ZuJnxYXNw
NTksE1GGH9Zcf0/mZaL43MxfzzUmy83PRO/C28bli8gCpr4nT7ZPDyaLmfMp
Gjo+cg+5OBNNuZPORjaQyzIhlXALZvwlV2TiWnDrkcMTp8hdnck8L7kfZPZk
aSYyJ7yediuRXM9cD3VBZMgxckMmknoGHXr8gtyYifCbs59G9jSSW8bcr9o7
8z20yM2ZmHRLpYfxVHJrJrr/xg14bEnuyES+4hsXJ0eyQhbzfSVrPx9A5mRh
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
r+T5IzXKVyvJg1WNurfbZspnK2Oezy8FLi8qB8hdngf7ZboHRyVQ/ltFHspX
vHK1mEz5cpV5SH++0OB5I7k6DyLrdac/xFN+3dk8nFVUfeU5hfLxpHlQLdLZ
7PSUfIl53pRMlS4lU/5ePXN+oXUpO00o3+9GHvTP6p358IrckAezCVGOZVmU
L3if2f/qE+PHcyifsJE5X089pagW8jPmeT0/MEewg/IRZcz9Cl5QosHmKzbl
gbNi/N9+v8nNeWi30HAN+Y/yHVvyUJJpUrDCkfIhW/Ngfi3VVdKP8ifbmedt
4O+k1TXkjjw0Dl1Ytz2A8i2789A8o/v1UH3Kx1TIx40dO/bqPiIr58N+eeC1
glTK5+TkI+7g2oz5oyjfUzUfaD440TeczQ/Nx8+EMt2Ge+TB+ZDZVHC9JlM+
qWY+2ucNLJidQh6RD4s8zsuFTWSdfFg+rFWIn6cnt34+/srWyjoKyAb5MP19
e0PpT7JhPs4+Ge3EX0X5sEb5uH9ixtndh8km+bhg89Lxmwrl15rlI+/vs1Gh
7mTzfPhfefXW+BIZ+ehYl5Glr0v5uxb5mGW49c+yaLJVPtoie6gdeEq2zof6
5uP7Z8+k/GBuPiJevChRyifb5sPs7c33Cj/I9ow9TnGnraZ8Y8d8SD2v1hQc
JTvng9NryJAZapS/7JqPXtF7jDh+bD5zPgyXubf1u0X2yUfUGKtZVpMoP9o/
H1WDhzVXpZODmXhRO5+uayGH5WPuWH67kTXlX0flQ21NpLp5OZmXj2fXOUMi
VSmfOyEfKi+OPv3sQ+bnwzzq/SLRTXJ6PoLnqkzbOpnywwX54Id4xUVmkUX5
0JtpNehsK1mcj0zve5emrKL888J8iO9MDHl4nFycD83hm3pVDKF89hLmfFsC
bc+GksuY562dO+/3Y3I58zy1Pin1Maf8+Ip8eF2QuantIlfmI3xmttF3BTbf
Ph8r9ctmhhqTz+aj2b3n3MGuZClz/4O/GV7LJV/Kx4GW8h/iK+T6fMzZ75/M
6yTfyEfAGd87vIm0PqAhHz/ib16QOJHvM/d339Gl17PIjfmo0zKxH3KB/Cwf
2tPcn4S2k2X58NmxRtrGrmdoysdOT8XOxHXkZub6a3sGTU0nt+TjTfl27R/n
ya35iI0z/NDwjdyejwXp6y9c0qf1Fh35eDfnrbjBjtydj0rxHof2VLKCGLem
buqccp6sLIbdzGbn+G9kjhi2vF+8L/q0HkRVjMSYxVYB9uz6EDF8N6aU9k0n
DxZj8h+35HM1ZE0xytriniV9J48Qo60gTOg+jtar6IixecSzgo0OZH0xbnvP
erU1i2wghsbaYWtyL5INxeiZ+Kvp7i+ykRjSJOuYcYa0nsZEjL33+epCZ7KZ
GH0fD8kYkks2Z47/a83zw1fJEONRTsm3DX/JFmLsU19bPWYarfexEqP008lR
Sh5kazFu7lPT+MWuH+KKEfRuV0qPu2RbMdx8izz0erPrlcQYPG7u7nXmZEcx
Phke1N0fwK5fEsP7Zq9Glf1kVzEWCAOOJTxj1zOJIbbusWuwOq2P8hHj4YDL
aacXk/3FqLK46haynRwsxsyD/bStjpPDxBjmlLVrygdylBjmLxc+NhxF67d4
TP1GDj81bw05QYze4V2GHmlkvhiG1y7r7aslp4vxwms9v/MXWcCUn526bPNk
Wl8mEqPzoP56mStZzNy/c992B+0gF4rxT+242oi75GIx+jWPFj3m0Hq3EjG+
TOocVj6PXMbUJ/pVljCEXC6GtmHim6xD7Po6MdytkhR3s+vtKsU4coD35LIW
rcerZq5nW591PVaTzzLnm3/Um5tKlopxv5kpVku+JMbnIZFKhp3kejFOzdjp
Um1E6wVviLHI9kW/dR7kBjH0PY587VdMvi/GH5/Inw8fkRuZ67Fx/4DKAbR+
8ZkYEVY5BqWLyTIxfszLnXwwhtzEPE/hSgMuniQ3i2FtOeHk16/kFjG6swxU
NAez6zvFTH/yWZ8FRuR2MX6+WXFnmzW73pOp36URdsc9yN1iVJc+ze5KYNd/
ShDwWDds2W6ysgRmT2IV9p1j14NKELUiTVflCVlVgugB1++E/mTXh0rwd/T1
3l/Z9aeDJdh9U/203xSypgRayWNfdi4jj5DgOYfvm+FB1pEgYXmVw4REsr4E
CqJJxQ27yQYSNLm4T+WdJxtKYJz9pOfMp2QjCQ7P+z3o9y+yiQRq72atujx4
gdxmEkSs4pwsmEo2l4B76LZZmA0ZEqzb3nVzgzfZgjmfg199bPhkK+Z84gep
Li4lW0sw4tyV3VYXyFwJAqO89Ve/JNtKMMTWIdWtm2wvQcGyb1fjhtH6ZUcJ
dF8nPN5vSnaWoNdA7yMPVpNdJeCt/DlflV0v7SHBqqKQ5GWZZB8JpoXPDBH+
R/aXoKolRbmpnhwsgXt2hcGcd+QwCfiC741FSrS+O0oCt7K8vn10yTwJSqY8
rYqcS06QoF1T4c5PBzKfub4/53MjwsnpErz7+2RCr3yygHF/JbuCSrJIAp/D
X6+Z3iWLJQgbfD/q6VdyoQQPxr/azO/Hrp+XYFvGoqA5E8klEgwXTyrpsmLX
00ug4XzxU40buVyC+2cnIyOBXV8vQeXS3PzNe8iVEnD8hjfPk7Lr7SUY5PBy
3Bh2ff9ZCX6oKS1X72bX3zP7u+1Z3ns4/T7AJeb+chpHKZuR6yX4GXP2FGct
+YYE2qZuA4cEkxuY67ftw4jxOeT7ErT529+1qCA3SiCyuDjO4xb5mQQ9umcM
EraQZRKcEV1IrVOh30tokiBJ0TfhnwG5WYJ443k/sZjcIsHXAfMepmxhf99B
gshk/+FP4sntEhikPaieuof9vQcJJmhs3S+QkrslqDAye/bzBfv7DwUI/j5l
uesfsnIB8tJXtDZq0e9JcAogWJB1xnYWWbUAp0PfljyyJ6sVoPGI5Z5NoeTB
BcjKLj3QlkvWLMDllraK1EryCCbe2ZGHx98j6xTg88RB+be/kfULMKPg/KYo
Nfo9DYMCvN7ZR9loCtmwAC2cZ0Efl5ONCsD5rLX/Px+ySQEW7DokDEojmxVA
+WzQlAUHyeYF8J+wwn/oVTIKUKU7yvr7e7JFAcom1lY/6MX+HkkBLMYPLD8/
hmxdgA1rP2gdtmB/n6QAi230/u51IdsWYF9/oVVxHPt7JQUo7Fb7tmc32bEA
3e/9Pv8nZX+/pABeA+KmnXlJdi1Ajb7mqYa/ZI//6+nO43pq3v+BJ0mbUKmE
JFuSKKlo8ZKQJISkOwkhyVYhikJIQkjSe9/fkj2EkIQQUtYkWxKyJUmS3/k9
Ptd8/7ofz4e78z5nzpyZOdeZuSYbnaa2i63vRflXorJhNkI/2NCDvDIbFk3t
5jmHkGOzoel6YmN4PDkuG64DX6qzsskJ3PWtD3xUfp6clI3guKrfRs/IydmI
+z3CYHYzOSUbL5cN0FSYUf6ZtGyMf73iQZMzOT0bfn/LV/gHkjOygS6dK46s
ZvlysiExfPPNkOXD4Wfjd5bOlbV5LH9ONk60eQyvrSDLs9FjrPvY4B8sn042
uvQpqKkwonw8udmoM1zdaboj+QR3/mN7nX4yjZyXjcH5S+7MW0XOz0bbUEO/
7+nkgmzccb1ku+0EuTAbxQ42c6zKyMXZ2DH539MrX8kl3PGyvu8P70z5iUqz
Me137hbDoeQyrjxHVQsu+ZMfZqNc1+HpquXkp9mIaJtiM3g3uSobRoKaLR+O
kl9x5fffwVe5d8k12XBQdHZa/Zlcl43qlz9ivDpRfqb6bJiu+HDAZAjL75SN
3fkZez75kRuzEWVzKPBmFMv3lI3NIw69UqWRW7Mxf6Fz3125LP8TDw+mdjVZ
W0rW4uGQ6pZ6YT3LB8XDcYvEpXbalK/KgAdR9ABfG1NyFx5mLBi0dMAAsgkP
/jqBtwY4k815uGq8fu6g8eSePDy8P9/GPpBsxcPmPi8sR7B8W/14MEk94+G5
hmzDg75tfuLEbWQ7HsKKTrwMzCQP42HFucigRUqyEw8pRidr1p4lu/KwM9k/
cecNsjsPFxZ36it5zPKPcb9XdO52fi3Zm4eICWaryptYPjIe5v73s8sXbcpf
5sfDV+MeCn0z8lQe4DbNZvBA8gwezALCDvi5kIN4uLS3y/sVE8ghPHh+GWR+
YBY5jIc35rF9C1j+tXAevmw62/7dWnIEDwb/5Z/unEKO4mHtIdi7Z7F8cjz0
bu62PFJNjuXh7++2Zdn55Dge3n+6alNaQk7gwfp9v0P/nrL8czycqvh83ukD
OZmHT0vebF36m5zCg8uIkl8yXcpnl8bDsMxwveru5HQecooT8rvbkjN40Ct/
1Bo4ipzFw/YjTuUHfMl8Hup7hA5/HEwW86Bx37SHOduvRs79/rS+yf/Fk9U8
bDHzWSLeSc7l6mfcxOu1PPKJ/3//P+2zzyXncfWr3Y/StQXkfB4qovsuLyol
F/DQq9uYVYYvyIU8lL7r/OC/z+Ri7v49np6S85dcwsPeu2V7WzpRPsNSHi7m
+tZNsmT5Fnkwn7J1m9Ce/JCHIbu8Fzd4kp/yMHW039YJLL9iFQ+Ro8OeC1j+
xVc8rFvqHf5zBbmGB5WqwMI/iVzHw51Xab9V6eR6HmIM1/3RlLB8jjxMGTGu
x9yT5EYefJecmV5wldzMQ+P9XSKLcnIrD6+l+36ve8PyP/KR7JASUtlA1uKj
9a3jNbf2lM9Sh49691k2QmOyAR8eVee3tevH8mXy8Sqp97OFTmQTPpbpT7a4
w/JpmvMxLqnjOIeZ5J58VOmazMhayPJr8jHxj4uXxhpyPz5Q7qq3ZBvZho+Y
kVXK8kyyHR+39eqMPFQsHycfnQKsJ6rPkZ34yPaf5m1SQnblY/Yat39JT8nu
fKxeq4r9Usfyd/Ix0C1EFPKb7M3H9vdW6+/oUn5THz7Gvyn4N8qC7MfHw/Jf
tkdsWb5XPi7KDzX1cCPP4KNwR+ScXZPIQXxIWh2D//1HDuGjqOji+1VRLD8s
Hw5f72q8SyCH87G+xlEctIscwZXHrLzCUgE5ig/PqT3njDnG8snyYTB0xMqz
l8mxfJjl3mocfJ8cx8fw5/J3kpfkBD6EQ/Z5mH9j+We584md82u3BuWzTeZj
Zk15J22W7zaFs8mV+A1sv6c0PrprfXX76cDy9fKh33PYxGVe5Aw+JgybKnwX
QM7io2JzL+fQBWQ+H/Y3Fuk/iWH5fbny7f3HfGoyWc79vU3O7FsZZDUf/g1j
S7wU5Fw+juscmltwhuUD5sM3er2F8w1yHnc/8s7/OP6YnM+H7mOb2kHvyQV8
HJ6bXS9j+YsL+RgR9rqdpQ7lNy7mw275A6ssc3IJH/1zPL2NBpFLufK8+ndR
2kiWb5kP769vt2j7kh/yEd/u5oGkYPJTPnYGbTjYEkmu4kPn04stsfEsPzMf
6yYUzvyyk1zDx6WDrR0j+OQ6PoylSw+8ziXX8+FVWtscfInlc+ZD3MtnyEOW
b7qRj8tjIodMriY3c89Dqk3j9S/kVj4+NIQmeP5j+Z8FcLD6WHi2M+W71hJg
yCJVgb0VWUeAwpuxkcphZAMBFrQMu95rDMuXLYB1xMWbGdPIJgI8dGiM0p9P
Nhdw46uC45uiyT0FuPi3MfXXZpZfW4DbH5J+R+0n9xPATm9s02uWH9xGAC3n
3gmBeWQ7AXi6LVtvF7N85ALE1OUbej4iOwngrOHV9eQ7sqsA53wTUvo2kd0F
GJo+ZcUBbZa/XYDmJfJCbTOytwBHvcPXrh1I9hFg4/x1u9+7kP0EyHhxT2OW
D8v3LkB1ztRb14PIMwTYy/v0ZvgScpAAHmG7fCQsn3uIAPdT+/3slMrywwvg
tFf8dl02OVyAtfe/G77LIUcIuPGQbvSUi+QoATK/Pet4/g7LJy/Ant6Bd/pU
kWMFkPaNPrejnhwnQLs/1je/tZITBFidFfozsBPLv8+Vx7seHgW9yMkClF4L
OGRlT04RwNioVSuZ5ddPEyDvSNf4Wn+Wr1+AUVG7mybMJWcI8NxhebR6BTlL
gO0vj37omETmCxA5d9KsReksv78A3RXjzl4Tk+UC/DvOb2d1kqwWoHbXNKf4
q+RcAT6GLJr46AHbD0AAbf9qN/s35DwBzqguaW9rIOcLcOSmrqJKk/Y7KOCO
1/9WV0djtn+CAH9ntvfZxvaHKxbgj95Vr2fDySUCdDY3+GvrTS7l/v+Yr6vi
Z7D9FgTo7baWfzuc/JAr/5Mn1pqvJj8VoGlcTlv4VnKVAHr7Y+xOHGD7M3D1
bX6v1t8Kco0A+ifOR3idJddx13P4v2U72P4T9QJ0yDPrcP8x289BgENL2w82
fk9uFGC5akTlzF/kZgH+i7/R6WBH2v+iVYDQUfcLH5ux/T+EkMdFfjGxIWsJ
Md4wb+80V7KOEBu631Kk+ZANhJitUdL/RhDbL0SI1pgyg7YIsokQw6PbBzqx
/T7MhbDx2dIasYPck/v3jJg/vENsfxHu731+T757mNxPiOvHRn1tPU+2ESJs
0dxK29tkOyGGLU3Xm1XJ9iMR4lC35vWbPpKduOP1LBqQ00J2FSIju4fuAz3a
H8VdCF394b2aLNj+LUK8nOoa2p3tr+ItxKxzITdHuZF9hGj4UT49eBLZT4i3
Nvfb1v7H9nsR4sj7bdf2LyXPEOKGo4PgaDw5SIjMJO3t13eSQ4RodwkJz3ls
fxgh4Ncj7usRcrgQyQYVq9sVkCOE2B6kXNmV7VcTJYS23qMFvavYfjJCRMeL
fQfXk2OFuJI6yWpEKzlOiMpsi1fuBrRfToIQlzKnb/XqyfbfEaLTDw/98Xbk
ZCG2nLBeNsGdnCKEbaifcrwfOU2I9B4dT40NYfv1CPEqW7zTM4qcIUSvvhH2
LgnkLO789h07MCSNzBdiQdiNgj58tr8PV/9E7UXGuWS5EHkaBS7tC8hqIb5W
jN/87Q45V4g1+n/XPX/O9gMS4q7HSIviT+Q8IfiqWaE5f8j5QjQOOTtmN9sf
sYA7fljelRU92P5RQsQmnK7wH0wu5upLlOm6wW7kEiHO3h1zpMMkcqkQG7/y
Fr4IZvtNCfH7cZrsFNsf6qEQRdgYtnU9+akQ9dLnB2emkquEGDnUaFzfbLY/
FVffHqUv+HKYXCPESe+SL2fPk+uE6PDV9k0C25+xXohnukNG4hnbz0oIt73e
XzU+kBuFGDPxw7/LzeRmIWaG+Q730KL9t1qFcBk0b093A7b/lwiDM37tbWT7
d2mJ4Gd51/VeD7KOCJ3tpZuUfckGIkw3cY3cMJjtFybChE7TvgWw/R9NRJCO
OdF1oBvZXISVN7uX/vYi9+T+XhbQ644v219MhLG3rNrzAsj9RCjpNSl+Cdv/
zEaEj2sObXGeT7YTwVnwsLtmJNuPTASe3w230lVkJxHujxj5PoPtx+Yqwrm2
5u4hm8juImh7lz/os4PtXybCwUP7DGrZ/m/eXHmk6ZSos8g+3PEl7TUjxWQ/
EdKCZ+QPYvtNThXhqmNp3fvj5BkiZEs99srZ/nVBIhT2Tjg+9wo5RISFliFj
urP9J8NEqOh62vvBPXK4CNeWzTq3/TE5QoRhKquD7tXkKK68Rrx//fUd209N
BN99yQckn8mxIhS4Vxyf9pMcJ0L//GP2Gmz/yQQR/uz60fko228wSYRb/onT
gth+k8kiaOwf9r0d298whTufP7X1h9n+iGki2Dht8ZrK9ltMFyH/e+3XRlty
hgivfjY2HHQkZ4mwwHDvxJGjyHwRBKbi70/HsP0SRejd3PHDmolkuQhfjhwf
YjyNrBZhiFvipaNB5FwRtArnZo4PI58Q4eIit7MvFpPzRNi4/K9FzApyvgjd
bPcVaa8lF3Dl2e59TtZGtj8jd74rPz6w2UYu5u6XQdqIc7vIJSKcSSyoGHuA
XCrC07RlOff45DIRQrrsOzdLTn4ogr+G5e/qI+Sn3PUu014WfppcJUJp8piu
dRfYfpAifN194+2SInKNCOsadr35cItcJ0JXp736EQ/I9SKE/rodUvOU/E2E
1n/OD0NfkRtFgGP5iifvyc0iGGVkD/H/Sm4V4ejkPfrXmtj+k2KIck50dG4j
a4oxz0LDStVh/v+sJcYCh6QA005kbTHUh50EW0zIOmJcW2Dd9qUHWU+MDYun
xAT1JRuIkVtT1HLFlmwohrHT1n39HcldxLB6KnLdMZJsJIZsQ69PH0E2EeNK
q67a14dsKkbK7Ohl6ilkczFeFoeP1JpFthBjmOCbbmgouacY41cMeHFmIdlS
jE9NZif1l5GtxHje++mWubFkazGma8dPPxlP7ifGr1/dLNttIQ8QY2nsldf+
qWQbMTzs9/Cz95JtxVivL/SrySLbibFngPa3wWKyvRj3771JXqUiD+PKd8dU
3TPHyI5iPOy6LL7pDNlJjLrgWc9GXCI7i+GyZ2ifmGKyqxhtXc2mHbtDHiVG
TuKwxe/Lye5iXD0mmmdZSfYUY8KJHZ7TX5MhRmGZSevWOrKXGCezIrLOfiV7
izHm7tGu75rI48XosMpwUdc2so8YyuIz+906LPiffcVYNKEsa4EB2Y87v3M7
Y3YYk/25+93NzPqoBXmqGL2EUum9PuQAMW5WzP3x2YY8g7vfcZuM9IeRA8U4
vdetrb8LOUiMI4uv5Xl6koPFSN82xWnmOHIIV15XzOKX+JFDuesZOHN7/HRy
mBj9LLxm7Qwmzxcjc6TFh6x55HAxui23cJNHkBdx9f190qSjK8gRYqgsd5nn
rSFHcvW/IlGcv4EcJYZfF97rC8nk5WI8srGuvLCTvFKMkRdnp+TvI0eLsePE
9o+nD5FjxZjh8aMtV0xeI4bnm5prMhU5ToyEKKVL1jHyejGimjYHpZ4hJ4ih
U3ej3/oC8kYxDvy6kr34GjlJDFvbS/kBt8mbxWiqMNzg9oCcLIbuIe3aPk/J
27jzX/bre4eX5BQx4g6OEL1/R04VIyLXtP5GPTmNqy8Hvj+W/SDv5p7XnZah
G1vI6Vz9t/yVGNgu/H/eJ8bkIY9H2emQM7i//2y2658hOVMM59ruq8u6kbO4
8mka9V3Yk5wtxq0pz/9F9iXzxShdHyJysiULxRDO7HPvzzCyWIx6k92phS5k
Kdf+eetUbPYky8WwvNmk8BpHVorx7cnVdhp+ZLUY1noVNRcCyDlc/Z94YHLM
bHKuGNLK2FGDwsjHuPYi5OXhqkXkE2KsvjE2e9cy8imufJca6bnHkvPE4P0u
+PV+Pfks93txZ+ft3UTOF8N+Usx41xTyBTG8HJfIq3aTC8Twnth5/cYD5Mvc
7+lUX+/FJxdy5TluyrYLUnKRGIaO1ednHCYXi+E4t+Pc+uPkG2K8uOATu+ks
uUSMxL19mo0vkW9z7ctuow+ya+RSMWZdFIxzuE2+J4be5vEGBWXkMu55ObLX
zfsJuZzrj8I6lN96QX4oRrbtoHt+NeTHYrj+2Gp/9yP5Kde+aCm/+34nV4oh
0e9meuMXuUoMB5OwbM82cjX3fOzqtiFPa+H//Ip7vn2uFwzUJ7/h6vtajaCs
ruQaMYqPz56sbU6uFSP0YzhvlSW5ToyWTedQ2Y/8UYxWpzo3DCbXc/e7/56d
MgfyFzGmPR1nr+VK/sb1jy4q6/me5AYxfqRPWXzJm9woRv/MqpZuk8hNYnyf
8/n50mnkZjHkC6x1r8wit3Dnu73Xps6h5FYx8jtv9poTTm7jylfZOEkdSdaQ
4HtID/63lWRNCd6rBQ7Oa8laEuQv6qe/bgNZWwLe09kDz28h60hgovqQ3LSD
rCeB4eska4d0soEE9X/utkVkkg0leFaRZC7kk7tIcOqI7/IyKdlIgsQh1W3/
1GQTCZwiv5bYHSebSqBROfxO4BmyuQQJIfO1Nl4kW0iQ4zo8RnqV3FOCdr3C
TItvki0lONlbXv/mLtlKgrOXLza2VZCtJSh5GT7EvJLcT4K1ZaEH7F+RB0iw
ZnzkYK9asg13vnMnfgmoJ9tKMF9ypSqsgWzHlU/L3p9Lm8n2Ejy4ss0lto08
TALbkwsl67QW/c+O3Pn+/OWQoEd2kiDZQqcuvgvZWYJp3ecXxZmSXSXYPK3i
SnRP8igJpDttXy6xJrtLsKvZpXeoDdlTgkKHuxun2JMhgd3IS60eTmQvCVzW
VR0cNIrsLcGZYo0pRiCPl6D9rHZ9mseRfSR4XnHW4Pkksq8EkRP+dLk4jewn
ge+AHLusWWR/CWZMFodGzyFP5cq7XYFi4gJygAR9v1dpWC4hz5BAz6Fm+dfl
5EAJlo3O+3IplhwkQR9Nh8Qd68nBEjjcHN07IIkcIsFG75t3zbaRQyW4d/D4
jsqd5DAJzo1/My17L3m+BEs8ffvPOkgOl+BFRYVmVwF5kQR+16I+3JSSI7jy
Hab1NF5NjpRgrzL1rt0xcpQE6WYNJZWnycu5+lY15NbW8+SVEgw863h3yBVy
tAQFt5sqyovJsRJoqldVxd4mr5Hg8xj+O+MycpwEFQ0rvxx/RF4vwfD4Tz99
npMTJBC00/1T/Yq8UYJAo5LWVbXkJAnWiWxa2tWTN3Pnr2HXsPs7OVmChQ0P
35r/Im+T4G/mwHuiVnKKBFarB53oq7n4f06VYHvc6xR5R3KaBAHfZ82y7kTe
LcHr/ZkWAiNyugR34tQPTMzJ+ySI7Zkdv6MXOUOCr6HrzP5YkzMlOLxlpnyJ
DTmLO77D6D6PhpCzufNd5bPLYziZL8HoE8nvpa5koQRbC3SGdvAkiyXQuvlx
fvhYslSC3fO9Nhf6kOXc877FJq27P1nJPW+J5xJXTCerufvfST+kKIicI8Gg
cbAyCiXncvVPuPpO6ALyMcn/Xx8boo4gn+B+b+28ii/LyKckCLr5n71jDDmP
89MXUdFx5LMSHNfotPv4BnK+BKY/O+/9sJl8QYIDJYarrVLIBRJ41zuOnLGL
fFmC2/aqquR95EIJBhccDD11kFwkwZxejper+ORirr65KFraS8k3JMid3MfY
RkUukWBM6xPtibnk2xL8c299uOgkuVSCXuFFCZvOku9xv28V9jfrIrmMa98S
DAKPFpLLJSiu/Lf18nXyQwkym2PSSm+TH0swtV4W8eQ++akELf1Ku798SK6U
QCfSVvT2GblKgi+Vf3/VVJOrJTj0ZVvft2/JryQYGtOxT3Ud+Q13f3cVfX30
mVzDPb/5rbtvN5BrJQi5/ufvxV/kOq69qtR2z2klf5TAOHqRz4F2Ef9zvQQN
IeHWG7TJXyRYeXnSrXn65G9cf9hpifvYLuQGCbK76cX36UZulOB8w4bk1u7k
JgnGm3QLemhJbpbA2q3PT3VfcgtXPut+Bq+3IbdKsM2hNsVnCLlNgh2mEzca
O5I1pNAavHrUc2eyphTSwqICkRtZS4o7a3dqzQNZW4r+o2279h5H1pHiXsCf
188mkvWkGOYesmavP9lACssHR+6Om042lGL3cN/3TbPIXaT4U5ZVJA8hG0nx
dF5L6JR5ZBMpWuvKLzYtJJtyxz+9/Wl2JNlcisjAxDy3FWQLKRJO9pnyLIbc
U4rwT09UMXFkSykKog0u620gW0nh9Nd2r3AT2VqKB9vEVkO3kftJoZz2fGlB
KnmAFB9qfKPH7yHbSHHSIGz43f1kWynaPUs7NjWLbCdFosD7bRmfbM+V77c/
ZZMl5GFSuB2xWXtTQXaU4sb7MY88cshOXPm2K/x44hjZWYrxB3qeszpNdpWi
cUP5yF3nyKOkqHg8J7rpItldirm/3cJCCsmeUphv+KR5pZgMKTKd62db3iJ7
ceXhciV8/V2ytxT2pbXWFQ/I46Uw3li73+Yx2UeKoV3GnltfSfaV4kji5rRb
1WQ/Kbq1tzPu9pbsL4VMt8R3znvyVClWj3rlKP1EDpDid8y/22+/kmdIMfrO
SSPrRnKgFNN3JuvOaSYHSeHvpH08o5UcLEWn+BuatzSW/M8hUnTwCdRq0SKH
SqF5bsLpgbrkMCn6mtp3DuhEni+FyzuB2bqu5HApBj2yK+V3Iy/i7u/NVXaX
upMjpEi+o+Va2YscKYWtdeKXH33IUVLsc42fojeAvFyKa4czgnvZkldK8Z9H
ROch9uRoKZ7V7l820pEcK8W74rOxXs7kNdz9slrVz2cUOU6KrKjwBF9P8nop
0ryHJ0z0Iidw1xO1qe+48eSNUkju/Vjl4UtOkiJlw7DFjv7kzVKsO1Gt2S+A
nCyFabHS2yiQvI2rfyMd7f7OJqdIEZI3+HzNHHKqFAdaPT+VzCOnSdHSYl50
eCF5txRF5xd7bF9CTufKb0FlyLxl5H1SLPDqY+W6ipwhhdeVz9v0V5MzueOF
NaQ/jyNnSSG+88ZDnUDOlmLNlZhdq5LIfCkizP9LdEkmC6UwuDvFuGU7WcyV
72fdied3kqVSxMq9rFbvIcul4DnmZQ3ZT1ZKseN791NvMslqKfpMGxaVkU3O
keL547wbXkJyrhQBvRZd/SwhH5Pib3n7kAMK8gmufT3vnznyMPkUZ4XOyspc
cp4UjxIa69aeIJ+VYtKIxxpGeeR8KaIeRZ9TnyNf4K4/Ot3A/SK5gGs/hjb9
u3OZfFmKHx5Re4OKyIVc+195sfD1dXKRFGF+x3ctvkUulmJqXdfmD6XkG1x7
p3fiX0QZuUQKn+6z5DUV5NtSaG9+9C7kCbmUO//zLdceVJLvce2V20HPsdXk
Mu73dyTMPPmaXM55wAadnu/ID7n7y4uataWO/FiKIat7e73/RH4qxcPRS0sm
fCVXcvV/x4CP8gZyFXf/X9mo2n6Sq6WIfuD7b8Zv8ispPr9f2KBqJb+RYkXu
jKRf/8g1UjyWNajHto/8n2u59ty/Z1SaNrmOa38GHr/1QJf8UYpT0h1XjTuR
66WoG7JzekAX8hcpyodkJO4yJn/jyq9t67jrpuQGKf5981L87k5u5PoLv2NC
217kJq7+T8p1CLIiN0tR09M6dHNfcgt3fS9/9j08gNwqRZvccEvpIHIb13+v
mBFfb0fWkKHJ/oSB7jCypgwvrum7WA8na8lQ2jKtxcWZrC3DqF3LA31HknU4
W/lPmu1O1pNh59jqp+GjyQYy7FvZ6V+UF9lQhqW6dy6tGkfuIoNRUMduMT5k
Ixk8dp3WWjWJbCLDjitX05b6k01lSPzY7+j8aWRzGZSfyxYGziBbyBC288LZ
8bPIPWUYFvFENDyYbCnDfl3LPr3mkK1ksH20dVT7MLK1DMc6d6x/N5/cT4a6
59kjri8kD5ChZaSbmSSCbCODqfbb9HVLybYy8H/tkvovJ9vJMFXs6me1imwv
g/XSV7u+xJCHyTCNt2Xx+TVkRxlCJvV5lrSO7MSVb9T5N94JZGcZuhT7JXdI
JLvKsPlz1aWiTeRRMiQFRu1JSCa7yxA4uq3ZcTvZU4bH5zNb3u0gQ4ae6lEZ
B9LIXjIUXfx6fcwesrcMN2IL9nzcSx4vQ66V+vueDLKPDLOeXfjkcJDsK4NF
8t8NZYfIfjI8KVunXson+8tQ7TpqaXsReaoM7/9OvHFQQg6QYcKgM+dt5OQZ
MkhSU8adVZIDZXA/92AJDpODZCjTEQ24eYQcLMNG/r9432PkEBn+TWsfefsE
OVSGlbcvfBt/mhwmQ/xily6FZ8jzZbD33VkyIp8cLoNrwK3u6gvkRTLIe3bQ
MrtEjuDqg+b07ZuvkCNlcLMokX28So6S4bPD+tlTisnLZVz7n6g+cYO8krsf
nt/SDW+Ro2WYtPyt0ZI75FgZjnSJti+8S14jw+nUM2+Ny8hxXH3+edMxvJy8
nivPXsU9Tj4kJ3D1efN1Yctj8kYZ5syou4hn5CQZymMmxmx5Tt4sg98q7etF
L8jJMkTu9DjZ9pK8TYaRxzq5urwhp8gwPDpzdlQNOVUGvR7N3YS15DQZ2h2c
vqy0jrxbhkMbbs/99ZGcLsMZw8TPlp/J+7jn2yHDdOxXcoYM0pghzxd8J2dy
x9dZ4bbpBzlLhrfXN7jwfpKzZbgzMPH+yV9kvgw5vofaX/9NFspwsb6h4uEf
spi7/1Gn8fovWSrDtZuavh//keUy5Gfrfvvabun/rOTaQ8vvjg3tyWoZCga9
NfregZzDtX92eun1Hcm5XPvnuDenRpd8TIa4V7L5z/TJJ7j2I2Z5/u1O5FNc
eVzulZvfmZwnw/UhLz1kXclnZRhY+GpZqjE5X4bnutPcl3cjX5BhpuPcw/5m
5AIZPH+MOjO4O/myDGcPmoR16EEu5MqvpWfO857kIu78t2/df8ySXCxDtnNS
z41W5BsyzN49epyvNblEhmhJUyfjfuTbMnzo9GzN0/7kUhkMWi2SsgeS73H1
sdf3QbMHkctkqMpNjzUZTC7nrm/p0LBSO/JDGbaJ239Osic/5tozC+8ejsPI
T2VYYmvz6aUDuZJrH5XvQ1KHk6u44727sNJhBLlahvrCygGPnMmvuPZ1f1Li
alfyG64+jKhdbzSKXMPVn3/juue6kWu5671ZGezlQa6T4Uf1y9GPPMkfZXAw
2VsSDnK9DFeO2/78Nob8RYbvMR+urxtL/iZDJU/P7Z83uYFrzyvvzNg0ntwo
w5bZS401fMhN3P3IH7g2fiK5WYbJBkj64Utu4drfFz/sI/zIrTLsHrBly7PJ
5Dbu/ALtN06YQtaQ46yvc+9TU8macnwJqFrUPYCsJcdTu/kzN0wna8uRr6X3
6cUMso4cQ2NNbdwCyXpyDNp02+DALLKBHNqCJYc+BZEN5UiXudzzDCZ3kcO3
Mu7I7v/IRnL0/brK4XkI2USOh78Wh/ULJZvKcXul2DVyLtlcDn/3eRdyw8gW
cmyWfHv3aR65pxxpkw5cHLiAbClHtk+mW1g42UqOzzpuiw4sJFvLYRp6x+3m
InI/OWrX7Sn4uZg8QI7oz/frrJaQbeRYoX5U6BNJtpXDqvmD97KlZDs5grcF
rt4dRbaX41rQwoDcZeRhcty6H1Z1YznZUY5Xiv3G1SvITnLs/OLT/H0l2Zn7
/W6lqZrRZFfOLyLudI4hj5Lj29ylF7rHkt3lUOhbBVmtJnvKoSevkPddQ4Yc
fqgQ911L9pJjmW+Un1Uc2VuO2I31qu7ryOPliPggOd15PdlHjuK6yhWa8WRf
OZwG1VZ9Z/aT46/C6M+LBLI/Vx/Ux2/f2ECeKofBdQO/3I3kADlk1esSdyeS
Z8iR2mfCwmVJ5EA5bmhd/+uziRwkxykf74l9NpOD5ejf1M2niTlEjmdzdrbc
3EIO5a7XrCksM5kcJuf+q46ft5U8X46ro374DtpGDpfjqL3t/c/Mi+TYsk2k
c3w7OYJ7foYqf0WlkCO58p69lz9wBzlKjjuxeb+qmZfL8cFhge7+VPJKOQI3
fX8wdic5Wg7NfaenfWeO5cq37G8KL428hnt+3veL89pFjpNDXrChdy3zejkK
V81J3LabnCBH0ILuWX33kDfKUT6wY+Ql5iQ5ruxO+Dk9nbxZji7i+6PeMydz
zxcvcNTaveRtclQ2LW5sv4+cIsfAucFLdjGnytF2JvmQ8X5ymhzHu3puzWTe
LcfUghd2phnkdDnMh19M38e8T471/e1P6h8gZ8ixMXb37k3MmXI0ODgNamTO
kqNMtHbTgkxythxzh548eJ+ZL8eGpJFRrgfJQjnazVvyT8AsluPrnUPTNLLI
UjlUdX0XzGWWyxGqN8/pIrNSjoXHc64bH2L9P9d+JQWbLWHOkcN1yu1BF5lz
uefHbMZf3WzW/3PHa522bybzCe56fCw/CJhPce3PCmPNt8x5XPunnfaiH4/1
/3LcvfsmfgFzPvf8K6NfCJkvyLHoYKbmE+YCOZ7cPvxJn8/6f64+7up4yIO5
UI7EKfr6UcxF3PHFXbwOMhfLETY8xvMK8w058Gy3Rg1ziRzdkq+kdBCw/l+O
rd7znvRlLuXq68Syek/me3I0voy4FchcJody1fZlS5nL5ei+NeVZAvNDOXgF
JZ12Mj/m+qNHcr1M5qdy9Dy8rkzAXClHjY18rpS5iutP5m3KlzFXy3FuzfLn
EuZXclQpS0r4zG/k2Df+c1IGc40czVdHau1grpXjNU9/+nrmOq7+LytcFsH8
kbt/NWdmTGeul6Pp2kQdN+YvcsTUPEvpzfyNaw8dih9rMDdw9V+9qKGalW8j
V59DeledZ26SI2mlX8Ze5mY5Jln49VjE3CLHGnHCKhfmVjmmB7sf7MDcJse0
4x/Sylj90FAgw/RtQBazpgKhpts/hDBrKbB7rNM0S2ZtBQaNmZhaxeqnjgIf
rvQ7cJBZT4GcDf2jpzAbKPDHO6ePFrOhAtn1XeVn2PPRRYFusy7+XsBspIB3
dIe+nZlNFCh0nmJ1jj1/pgrIVL++/8dsrsDtB3Oy/rLn2UKBU3deGfOZeypw
L+9luAuzpQKuZ87v/L/2wUqBoX/vpoQzWytQVBwf0sTal34KjJ5k3XEr8wAF
mh5b7ejCbKPAybzHb7JY+2WrQLiLzMSS2U4B0bl3lmLW/tkr8N/+v+16Mw9T
YPkQ38vZrP10VGDuZ9sZxsxOCsg9/11LYe2vM3d+6QMM/7D22VWBhECN4ZHM
oxQ43aHe8TFr390VMDKbaDia2VOBbR3WXpez/gEK6Pk/CurI7KWA74prJYtY
f+KtgMcHcbdrrP8Zr0Cl+93RPZl9FHj1STUhmvVXvtzfx6UPuc76Nz8F+ofX
fjdh9ldgpIPugXmsP5zK3Z+wILMjrP8MUMA9Zvi676x/naHA8fe/LzgxByrw
3E3/RSzrj4MUuPnpxsuTrP8OVmDpqrRrn1j/HqLAKu+LKdbMoQpoVJ4aGsjG
A2EKhMjL87ex8cJ8BS4bre+Xx8YX4Vz57dWJqWbjj0UKZG1/Ie/AHMFdf3DQ
hUFsvBKpgN/Sp6d92XgmSoFO3S7tjWDjneVcfT6+cMYWNh5aqUDAbofWbDZe
ilYgry1xx3E2vorlzmfiidZCNv5ao8DjU30C77PxWZwC9WuHZ1ay8dt6Bcwe
eF96w8Z3CQpIvuXdec/GfxsVSNZ8e/UDGx8mcc+Tnb24jo0fNyvgtPvnoho2
vkxWoHF0lumLVaz/V+Di9NXHy9l4NEWBuIefHK6z8WoqV743goV5bDybpsCL
fn1+itl4d7cC42sFzqlsPJyuQNmvoQtWsvHyPgX2jHaOn87G0xkKnON1ThzO
xtuZ3L+/sVjRJYL1/wokvjk76SMbr2dz1zvPq9tVNp7nc/XbsmdpBhvvCxWY
cle6ciF7HxBz7UfPEe2Hz2f9vwLOJx2S/7L3CTl3vQN+/Shm7xtKBT53qQnY
wd5H1AoIWwIlvnNY/89dz8JjL3XY+0uuAlfv+BgWs/edY1z7xE8ekjCb9f8K
tEOhhwN7PzqlwF/j4NFv2ftUngLay0847pvJ+n8FvLL7mHuy96987v481/9W
y97XLihgvuzuhbRprP9XIHNjcdxQ9n53mWv/XKfY3vdn/b8C6fl37i9l74dF
Cph2y1rSgb0/FnP1KdiomcfeL29w7U9qVvxQ9v5Zwv27JKXxygTW/yvQtgsL
JrP311IFpo+0LHnC3m/vKfBsU2Lfuez9t0yBYI+i1W/Z+3G5Agdcva/83/vz
QwUWuSzQeMverx8rUNCYMDKUvX8/VeCa9dfIx+z9vFKB65FmByax9/cqBWKW
Tc+/xN7vqxWoKtJ4ZOfC+n+uvW5J+JTF4gNvuOeV17+1nRPr/xWI7hvUMcKR
9f8K1OpGd7rD4g91CiwrKDMcPJT1/1x/JnmgnzKE9f8KvOxWrvWGxTe+KFC9
cmiLqy3r/xWI1ZhQn2bD+n8FAvXXPH8xgPX/Chwt614ymMVTmhSYkLLn1Jq+
rP9XQDnfiXe5D+v/FZi8Y+Hm9ixe06qA2jIpYhyL57QpMM/z9eRkFu/RUCLx
7zvHQgvW/ysRG/nJ7Lc56/+V2LDL/689iydpK5EVEfV2Hos36Sjx6Jfk9l4W
j9JTItLB7/RlFq8yUKK5Q4mgjsWzDJXICYtO7WzI+n8l1g1UrxtuwPp/Jaa6
3Vg6Q4/1/0pMjhs0L1qH9f9KfDxjH7xLm/X/Sgy96ThLocX6fyV04/cFXdBk
/b8S8/k5oaUarP9XIqrhyZLnbSz+r0QV1q5/38ri/0p08XmX/q2Fxf+VWH99
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
/72ezTfNUGF9cK89a9h81EwV4h2MYlew+apZKmzwv6ReeJ2czZ3Pp6whs6+S
+dzzKuvd3vcSWcgdP6Z0kOt5sliFe+cspH3PkKUqeDhuizI4SZZz7Z/2zh0N
uWSlCjYFit+P1GS1CjdGT790Vk7OUeH6my6PMsTkXK79CgkZs5LN/z2mgvD2
ac2JbH7wCRWGnzrQvXcG+RRXn/8lbWtg84vzVJDr/Jx4bSf5LFd+qavC924n
53P36+iaxyFbyBe4+tp+q7h/IrlAhVGpva59Wk++zN3vw1c9j68hF3Lti/MP
45XR5CIVdGKcxtovJxerEGmoc/fDEvINFboM+H5SyuZjl6jgPD6mIYjN177N
XW+k0R6DOeRSFVa0BaRcCiLfUyG5+nz10hnkMq6+BJXuM5tKLldh8eAuisJJ
5Idc+75D33TxBPJjrr/qPq5Wbyz5KVd+DWNNcz3JlSqopXuUvqPIVdz/P+TE
wdoR5GoVXuvaf0x0IL9SYdvAfUJTNj/+jQq7Pi08k8Pmz9dw5TF8+FD3fuRa
FfpOTza405tcp8Kd7jWTZ/Ugf1Rh5b0XP16Zsvn/Ksxw/Nu22IjN/+fKf9O9
FfWd2Px/FbRiqscv12Xz/7nnZeSF5M9abP6/Cle3fh0UqcHm/3P3d7OBS80f
Wm/QrMLM56Lc/9h6hBYVDp1z3VnG1iu0cu3Z5UUVXl/IbSrkm13YeuoDWUON
XxHXpL3fkTXVePfMeHDqK7KWGn2NPXo3PCdrq2E2+kHirCdkHTUEegsmXygn
66mxT7E1xeIe2UCNuGulDnG3yIZqNPFKJ1YUk7uokfSp+4PBbP2HkRr1PyaW
bGLrQ0zU+JfQMPQRWz9iqobeo8M6A06RzdVY8kB7euxRsoUaY+6LOxeqyT3V
eH+682hdOdlSjf2fP72eIiJbqfEy5l7z/myytRqhJVOTHx0g91Nj1C+DrSZ7
yQPUOHVQ8GdqGtlGjbxSQV3qdrKtGivHHfYrYutx7NT46hFi84ut17FXIzFx
esKgdeRhakTOs5s4O5bsqEbareQ921aQndQQ2/2ZcjKS7MyV/x77nc8Wkl3V
WL318ph/YeRRamiNmBRrHUJ2V2PIjNV9x84ie6rhMbh6yrwAMtS4njGwJWEy
2UuNYW0/rDPZ+idvrnwjam/nsvVR49Wwi5A2FLL1Uz5q3B5Qml0+kuyrxvb5
OsWvnch+aniuaF3+ZSjZX41Hzv78ZlvyVDUuj5T7aQwgB6hxeo8iqUMf8gyu
Prz/7arTkxyoxosdE9fomJGD1Dg802OkNltPFszdn+KNm9ux9WYhamh8PBfQ
wtajhapRGb0/5xtbrxamRoCqILXmL1v/p8bFyJc/HjWz9X9qmLqra4t/sPV/
alx1Ll5w8gtb/6fGfaPXS3kf2Po/7nnof/Tf5hq2/o87/vwnvSNesvV/avgE
d77rW8nW/6kh9eigM5it34tW49nzJQ902Pq+WDU05V8G1fzf+j81NirGGV26
ztb/qTEzvc/O/YVs/Z8aD8+MOLD4Ilv/p0ajjrPDyLNs/R93vyyfzNU5ydb/
qdF+6L0+j46w9X9qpJs8WCtSsvV/XP2YnDl/sYSt/1PD+u/DN3Z8tv5PDdEH
799fM8mpargmCpUn2HrKNDWC7md/Wp62CP8PHLK1DQ==
       "]]}}, {}, {}, {}, {}}, {{}, {{}, {}, 
     {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.006944444444444445],
       AbsoluteThickness[1.6], LineBox[CompressedData["
1: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
VZo/kpvl26/L75FJ78mtSdhVLHmg85bckYQh1j3HlDWw7/+TcfpGaF8rdj2A
SjKcfg2W1NWR1ZPR/fqAs55PyFrJ4A+Rhn9j1xfoJGPDq8ePw+6T9ZMh0lS+
/+cO2TBZvv+3zDPyFtkkGRrljTs7rrPrC5Ihsejqv+0K2TIZJZufvHxTQbZO
xhWzvI/2/5Htk6HeJ1N2/Qy7HiEZcZ1PG6ax6yc8knHRvaIqt5Tsn4x70lCb
ziPkUPn4LgsinIvY9QvJGDTYeuH5AjIvGQFu7w5o7Sfzk7ErYUnx1jyyVP56
eiWrLu9g1zsko1p1Y46GjFyYjFc9xFHOYnJJMvxVpN0OCchlyeivXmTQmsH6
T4axsUb7tFTWfzKmFA3aFJDE+k/GpdN/fI/Esf6TYX6+z/C30az/ZOjMEfpp
R7D+k/H06mOXFSGs/2Tc6j/uV2Qg6z8ZAz7fNircyvrnwWjZUI1qb9Y/Dz+m
OojbtrD+ebC8U39uoBvrn4dWrz9J051Z/zz53yOlH8vZ9Tf6PBzmQM3dnvXP
Q+Pw/tdD2fU6JjzMWVg5LsWa9c9Dc035ZIkV65+HpG+L6nZbsv55GPH8guEB
c9Y/D+9+xBocBOufh87q5ruFc1n/PMwavmpYPrueyJ+HmjNa/XYZsf55mH94
V5HQkPXPQ9M4sy+JBqx/Hu4nbKnn6LP+eTi41C/MmV2/JOVhkMG5cksd1j8P
D1WOH5qkzfrnweLTObN+Wqx/HnS05vE+arD+eTD+siu0kl0vVcGDl+aygXm9
Wf/y7WFVvJHTk/XPg13OZFsLZdY/D8tGL/g5oJNdz8XDyJVWy56z67OaeYgs
vbpsfzu5lYdVA7V/b/lK7pCvX9DFdfrs+i6lFCR3H+/R9I6skgKfKdfH7m4i
q6dgrbC/xPYVWSsFP1RiTqk8Z9eLpSAzL5lXVkvWT0GXffvV3GvIhinoyLY2
61tNNkmB7aSek07cYteXpaDK0+Km3XWyZQpqIlKGtV8iW6fg6/3Vo7LPk+1T
UDRsdN2Es+x6tBR8XxBmVXGS7JGC3h7PAlYfI/un4NmvqpWvismh8vl2PWjw
KWTXz6XAdXbwlO/7yLwUVLfNnR6+m8xPQZTxsc+/c8nSFDQf3OAeLmHX28nz
zbkj+i4gF6agVpsf7ZtBLknBmoqpY17zyGUpOPDCNH5NArs+T/56HJvdF2PI
lSl4fbUjxCCCXJ2CJesv9xEFk2tTcLTLkk0d21j/Kai7PzJwnS/rPwUeBi/N
TrPrC1tT4HJyZE1/N9a/fP02ROh6OrH+U+HhlDHjv/Ws/1Tsnfe1Z1871n8q
3l9bvMNhFes/Fbc0J33Lt2L9p8Ir3bTPx8Wsf/nrvRz/wdCM9Z+Kb72TMrbN
Z/2n4tqG321HZrH+U7HWb8rod0as/1RE6d0YqGPI+k/FpzP+1Wsmsv5TUXvs
7uoEdv2lcypmNvB3HhvF+k8Fh+N87Jk261/+83UfMrtqsf5T0bvplfFYDdZ/
KmQFXw8u6sv6T4WT4G6zqyrrPxUDXCa2RXVj/adCYnC2StTJrjdNxem1UwML
f5ELU+G6a3Fz2XdySSqmqZ80uNZKLkvFvf7TF1Z/YNenpoK/IXLs4zfkylTc
Vl7+/OkrcnUqdLxdNj+rI9emwnpVxKXax+x6VvnyW2u/3r9Pbk6Fg8WZ9hu3
ya2p2J/gUv1fJbkjFVsODOYeucyuf01Do86uHjvOk1XScPlyuVvSGbJ6GqLL
5mz3PUHWSkNyXOOhVUfZ9bJpUFOKE007RNZPQ1evenv1fLJhGq7Z3O54v5ts
koaFJYODLuWy63vTEF+ZdUciJlum4Z1Fzx4efLJ1GkSTVmkbp5Ht01D5auGA
Luz6X+c0mI4+2lzJJXukYYuaf15GBNk/DW+HbZi9MpgcmoarE6xP99nGrh9O
w6Ntulo3vMm8NPRNObUhdjOZL1++pZFnvIksTYOue0ZuswPrPw3jTLKFOXas
/zQs7ajhmK1i/adBMnzWgpZlrP80dHL3fRMsYv2n4YLjr2yjhaz/NPha6Y2o
mcP6T4Pr8j4Sf2PWfxpULuz4rTqV9Z+Gfq4XVuZNZP2nYe8GF+H0saz/NByb
wbl+WYf1nwaHh40t1sNY/+l4kpLf7dlA1n86viof7OeizvpPxzj7hr5verH+
09Gtc4nylu6s/3QYPXzwsbGTrvfWT0f5sLC7Tr/IhulwDJ1+8HEb2SQdod//
Rlh9ZteXp2NX14eW59+RLdMRwDmlPqmRbJ2OPol7aqQvyPbpGFkjEXd5wq5H
T0f7ZqnNlgdkj3TUFx4ccPM22T8d673vVo+vJIem43lTP37SJXb9ejpSTgWs
qi8n8+TjXykNmnmazE/H+AdXXqQeI0vTEeR4s/hZEbvePR1XT42IHX+AXJiO
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
b7qa3tCYRO6Qwfqp169F90Yr/EeGgP4Dy0qCyEq5QJXpqFVDyd1ycWd7o43+
hVEKq+TC2P/JNmM3slouTmV9kkSoktVzoRL/8vWPIzoKa+bCp68dp8iGrJUL
I/OaBwbfRyqsnYv9282ubFtI1slF2ebX7XqZIxTWzUXLD07hkmfDFdbPBTdz
+8Dn+mSDXPAX3w+vD9ZW2DAXJr/8NW2uDlPYKBdWY4tGmGiSTXLRfD/rYbrr
UIXn5uJPpGrQ6uNDFIZ8/b4/N0lRJpvnwmbFEcepNloKW+ai27n2YcvyByts
JV+/6L6lj9oHKWwtz39r3PoaS7JNLiwPrlxpvn2gwvby9XvtWzX2k6bCjrnY
0WCuFrmQ7JwL+/xtS8zFGgq75cJQ4H0+5t0AhT1yIfJKyJ88n+yTC55hs8kq
If37Gv65ONF7Z+nbZnWFOfLxBvFWX+eTQ3NRuPUg9/WEfgpHytdvzbKsG7V9
FObK1z/m+szcZDWFE+TrU1rcYjOzt8K8XPjfnavz662qwuny7Sn0MU+VqSjM
z4V6dMPN7lY9FRbloiLyt65vZ3eFpfL1fVpxueJ4N4V3yN9vX78M7uKprHBe
LqoHdAomj+yq8P5caE3ttXfJIyWFC+XzF93emq/dueD/u1j+8zunJ4ky/yhc
kgtrrVL3TV1/KXwiF3nXB7Wohf5QuCwXSi/57Tmf2xQul2+f9JJNyp5fFa6Q
r++y2wPyKj8rfEW+fiKV7L+X3itcmYv6Fk67zsUmhavkr2c+va335XqFq+Xj
R1hEcgWPFa6Rv18togb/s7ylcK3850v1y093HFa4Tm6dDt698DLFv5dSL//5
hw+XXXh3V+FG+XKhb/iWy08Ubpavj9Nuc92rrxRukXvC9AsX9v+/nu4+LoY3
WgB4kiRRkiQkSZIkSRLqSCUVkiSVpFIpEiVJUkkqqSSJfd+dfZFQhKSSfkkI
SUiSUEmSkITkPvfumfvn97Pt7jyvs82cOadD6t6zoD3NMjEx7pPUfWehN9kg
0tywV+oBYrvzkuU536Qe/N/xXDhy81Cf1DIM0LaVq0jx/ym1HAOM7/QPu1vz
S2oF4vcnB8fPGZRaiQFhw0a17jo2JLUKAwbWnOrpjpCp+D+rMaAuqCRLXzBM
ag0GFLce2RtcJyv1FPL6m83GlweHS63NgKjhf73+zRohtS4DnHfsObXORV5q
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
45PIgRzGwWm19Pglc6AmXCtXTI9vGgcS395Zu5ke/0wORAm323+m50c2B+LM
xiZupOdPLumf8mo5Jj2/mByYNvlqbQk9/7gceNk0quUKPT8pDqhayS05Ss9f
CQfGL/rWbkrP73wOPNxq/LaUnv8FZH6ONpg3jV4fRRxoNtxU70mvn2IOiILs
Hu6h11cp+XylFB1/ev1VcODd6LsN8+j1WcWBP8Ovdjyj128NB44uVPd0o9d3
LQesE0tNC/9//XMga19yZAe9PzRwoMls+4x+ev9o5EDmUS/LVnp/aSbz/WHo
fYref1rJfJO/eX8FvT+1cYB/P9i6jN6/Osn8drhmOm4lvf6JHdsoK3r/6yXj
r+eQY0/vj30cEN91VDJcSK9/DmjmeSp20fvrIAd+P/t9MoHef2W4oPO2OP8H
vT/LcqG8c4H7isn0fsAFq5MaZ0PU0PJcCFDUiQwdQ+8PXLj4Z1KvozxakQuV
2Y2j5f7h+UOJC9rxNg9z6PPLWC5s/uBiLteLVuHCnqCR65w60apc8NKMmLyr
Fa3GBaXkG4wdjWh1Liy6IP/cpg6twYWQvtxHP+nzoyYXfE1LU47con9vcCE3
//7onmtoLS64DJ+7af5F+vcHF6KWe0SuFaJ1uGBc/yLQnkn/HuGC4cHFJlNO
ovVI//hPb7qfQv8+4UKnLPi7xqENuKAxy/VZcST9e4ULE78ZmAzsQBtxQa+e
c0jVj/79wgWTeGblyE1oEy7EDpsk07iG/j3DhejcycsO26DNuJDyqDh2lAX9
+4YLJUHj7wfPQ1tw4UmAl65Yl/69wwV5madZ5ZPQllzIYldpFo6lf/9w4dWr
tNuxw9HWXLgZeypt1gD+frPhglmkW/z5brQdF1482yBUfIu258Lj+llDNs/Q
DlxYcSv0hMc9tBMXUke+8ncsQ68h4204J3ZiIdqZCw6Vc96XU2gXLhgEXz+z
PBftSr7/0TUx5xjajQuNHO3xL2PR7lzIOPHr7efdaA8umLq4arb4o7240JK2
rvLcRrQ3FyJaprU6O6B9uPDo+Z/9T5eifcn7v83LmT8P7c+FlyfVloRMRweQ
/pZT2RU3Hh3EhS0hOea7R6CDyd/fm81e9hP/f9jBhcu/NonaO9GhXNAVVm3c
3oQO48LpFRNu1DxA7yHza8KIJ8PL0BFkvKZ5ijQvoiO5MKDbbTWGg47iQo3g
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
       "]]}}, {}, {}, {}, {}}, {{}, {{}, {}, 
     {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.006944444444444445],
       AbsoluteThickness[1.6], LineBox[CompressedData["
1:eJw83HlUjO3/B/CJSkhCKE9RJKESQpb0jqQkQrRYSiVt0kqrpn3ap2lmmqkQ
iiIkWxHGlsiSLSGMhBCVNYTffE+f+/f885zXc7nmc73v+3pPnPMcOu5bV27q
w2KxrJRZrP/9u/efTnP1sBj2lW+nQP8Bxn5vUuT/nSArYYlHZPZxveNkVZx0
uh9yyO8YWQ1Tk91PJYiPktXhptKdmJ1TTtbEzD533dTOlZG1sUxj9PIDGgfI
Y+EgbBneXFxM1sW1MZ+DbdbtJethyvt71zLMisj6ODCl35mdGYXkSag2qXmR
0SYiG0Dq2zJte5qAbIQpjxU11QJ4ZGNYW5s3pI/OJk+F/p0TWrMfpJKngT8l
VOnot0TydIw+cfrozSg22QQp6pJLxRfCyTPgN+z4PcnMIPJMWA6+Pahxjyd5
FiydroS4D7Qnm2JvjNwfxZdzJb2ejYYHS3Z2f1pLnoPHmwuGde/YTJ4LuyEL
/f4MCSTPg7LV5cluv0PIZvi2XOvC7ITt5PkwDC+LKKiIJJvj7qf15qPTYshA
1dtfhV8HsHvNBp6otes+MYijdQt4fhq+zs8wntYtUJCRrDx+cAKtL8CycuMk
xwdk9gJo+HqOmBybSOsLcXxGh8veIUm0vhDhD+fOKcwksyxh9abza+NXZt0S
Z+OKOZ+tk2l9EWYPMTQITiezF2FUv8Xnzp9j1q1g/VNQoP+SWbdC23/uz9u+
M+uLkb/mecI4VgqtL4axi1Fm2x9m3RrPVw01ntHF7LeGudIy9rcnzLoNtk11
8FaoYdZt0PXbJmOqgFlfgpZ6aanpZmZ9CeSWOJjenMas2+J0ycSVOd1MPlu4
OhWe1Klm8i9F33/LrZXDmPWlMNtz/cFDA2bdDgM1wpt/Sul5su2QmxL59X0O
83yXIbtZN3QYmPVluGlqodb4gXk/y1FXcmlqloB5P8thZzA0gGvGrNtj/shd
upNb6f3CHr+vxx/Yn8q8b3ts/uV4eZERWWKPLb8bRlndY+7HClhm1DtKw8hY
gYkJP4usNcjsFViu/675SA3dL8kKxNqOls53I7NW4rTm23pteTJWYvCDoZzP
9rG0fyXWuYYY38/fQftXotpojL72G+b+roJv6AJb1elkrELu383KD+Oiaf8q
fD+U+zn/XhTtXwXvZM8nqePJLAcoXXg0/2ok9QMO0NMSFPnfi6D9DlgfrFJR
YECWOMBv2YJC39Rw2r8aO6W6Gz61Ud+wGqc++T0ztSWzV8Oy59kM54pttH81
ap/odK1VJ7PWYMKSvbq2CWG0fw2CIrwqjbpCaf8aDNy7NEjZnSxZA9ubsGl7
yPTdEebBR3yuLCXDERB927ynNpj2O6I+/LfzjoVkiSNspm3q43w5iPY7oVtv
xRtDKzKcMPVn7Obuevp+YTthgsaPN5UOZIkTKg3uHzos2Ur7neHxeHVB9bMA
2u+MKz+VHSJYZLYzRJdg8FR/C+13xsozq6xurvGn/S542xRwyjTNj/a74Pqo
h3kDL/vSfhf0GTB5xhQ5ssQF4jDnsZmWPrR/LQb8mGevkulN+9eiz8sfhgVP
6PuSvRar2J5n/jMkS9bCeNkA4fZEL9q/DjqTfmsJpZto/zqciHffvsGCzF6H
dWn+Raf3e9L+dch2f5LAUSWz1mNb4Vi5qh0etH89xndLfxt0udP+9Sg7ssHn
9mayZD3qLmutSWjZSPs3YF7c/i/TNpKxAT8b3pVceeVG+zdgr9/ZnjG+ZMkG
FL9+nO7c5kr7XfF+QtDU/X3JcMWfKSMKv4/fQPtdEXbecrTm8vW03xWf3ZeV
te1YR/vdMGSH2nOjk/TzRtsNLubXtC91udDnuWHWoBPh20zIbm4wuDj0mHaM
M32+Gy7mL9girHfqdZEbipNCFY6MIUvcEPzVpHB+hGOvpW5Qe2wyRbtpDc3f
iF+lixMnzyNrb8SptCWGc0pW0/yNcPH8LNAbRnbbiMrzar/rkxxo/kbMPdbo
pfhnFc3fCKvwgtOV4WTJRozTctl9pHslzd+IIt2LBU3RZJY7fl093z1Ygazt
juLyt/dMclbQfHdsqo5X0dchu7nj9uqENfUn7Gm+O/outNKWW0oucseTYSVW
zreW03x3qAUMPuTRnyx1x2Ob7U/f2y6j+R74/vdoTTXfjuZ7wORc2a7CV0tp
vgf0Xj0222hKdvNAKd/vXCPPluZ7QH64Wv6tz0tovgeam6NKRjqRJR7oCixR
4FyyofkeqDi2Uv/LVDLLEyfePa8y2m9N8z3h4p+4d8gYMjyRXzhdMbRwMc33
xESzfgZTRpPZnqif+z1Zq9iK5ntCL8nq0CgjssQTlsLTFn1rFtF8Tyxi/xpw
0o7M2oT8zMd1Kq8saf4m8DaZLO2MImMTpi965DNHney2Ce0D19+9fXohzd8E
H7sGS64LuWiTLJ+LvzuLLNmERRFNxyeWLaD5m3DxwUVevQOZ5QVB86HFRn3J
2l6we7fphukJC5rvhT+lpwbd30x288Ic9vmK11pktheCSwQKLo2g+V7YuT7C
clQOWeIFpQ0pc4csI0u98ETotWnSIDJrM9qtVUYVF5rT/M0Yre6p+H4sGZsh
P3tXvNzh+TR/M1rfNr6qnUNmb0bPxsvBI2+a0fzNst9vSq/ddSNLNsM/hHfg
Yfc8mr8ZBWGB1X35ZJY3PI/EvDabRtb2xv4PL/ptvk+/H4U31i1Z9tJ9O9nN
G6qvbjmPGE1me2Pb4sFjNl+bQ/O9MbRLsW5uCFnijTkJ4Z+idMhSbywYvf3B
4Huzab4PNM7M3S9NJGv7yH7/rODdNJsMHyS77TnzstOU5vvAbXrfsW1lZLYP
rsXee/jIk1zkgxGLP+bs1CFLfCB1+d6qJ51F831gW+iv6l5EZvmiLm72KzN3
srYvajNrm8rGk+GLYWbmjwTvZ9J8X/waau31uYLM9sWrhT8vVYSTi3wxX7Mk
+5IFWeIL2wkHn2kok6W+eNt90q3s0Qya7wcrI9k7KCZr+8H7QOGg+cFk+GHD
1rF3JlmQ3fxQKXegz5ghZLYfPlx8zRncYkLz/cD7e+NA13GyxA83vk8ddDaZ
LPVDDrfvtY0uZJY/THSGz202Imv74/MN84k68mT4o2u2wuEJT6bTfH809e07
9W0Fme2PvQkJWxw55CJ/mJ4Y4B/oRpb4Y4+1Tvyk2WSpP6bLcW12DCWztiDp
7/k9nu3TaP4WDAwrOtZYS8YWPG2sf35rD9ltCx4ZDbixMIbM3oJrEv1V05zJ
RVsgGvhPkDuDLNkCrf/mvdo4lCzdgsHiyIt5HVNpfgCal+HTlFtk7QAYSQuc
xh8iIwALTm/RCkkluwVgfEdiqpo3mR2ArHI/DYXF5KIAaH+eFww9siQAK+Qm
u19SIEsDoFM6tiX5tTHN3wqPEceHpF0la2/F4k5lk7oSMrbiVdnDCrNksttW
ZHa0qL31IrO34kHAbuWLi8lFW3HozD6POn2yZCvWz2Ar/upPlm7F5zumrP2N
U2h+IBrlp34sEpNVA9G0dqDTi3Vk7UDE+434u1abbByIX46Dbw9pNaLzBaLB
OvTN7wNk+0CIXC7kDfcnuwVigaWVu4sxOTAQVs+udlz9akjnD8TKmS+HOVST
uYGYtyngDmsHuSgQPNsjS+oWkCsCESg62rC/H1ki84Abd0U3DXrdEIjnNrzW
/ByyNBBpoSvOl60hdwbCfcL1GZf+I7OC4Dvmi+VL6WTKH4SmkTf6yO8nawfh
xO2Yogl+ZOMgWGoM8LcxJiMI7/9Muev1bRLlD0Lycp81MWfIbkHYNdNMlBZL
DgyCu1OWbYYlmR2EzzaHzNj9ydwg1A6sW+V5eyLlD4Lw6MnkmbnkiiB4tti1
fnUkS4Lgn9g/a6cmuSEITxZwq41e6lP+IJiMrD6yv4TcGQT9SY7X+vqSWcEY
ELR3i6URWTUYTso1mps/T6D8sqvMUnDzPUU2DgZf497dpZFkBKNyTPmoQfPJ
9sFY8vx4V5kc2S0Yf1WHaI69qkf5gzGzKdMvlENmByOy1vP8blsyNxjr8mv/
7lUhF8k+T2nCuJi74yl/MGqmdhgY8smSYDwIZ+lXriE3BOPzotRJAzXI0mAU
DnVcPeupLuUPRtPKkHszdpJZITgTafFQwZWsGoKsIWXi/dpk7RCMijT3HNky
jvKH4E3Ef/GO+8gIgbeVnLWXJ9k+BE1DBw9dOJ7sFoKDFl8Wfnw9lvKHwCHy
uLXnfjI7BFf+Vucc8CJzQ/BpQpfwlB65KASTpvs2ct/oUP4QvH8W9WDGfrIk
BDeszf8r2URuCIHTcs85z3XJ0hBs+HeiVvpKm/KHQP/lDJfyvWRWKJ6r/szF
RrJqKHy7no/cOYasHQpJ1mPNhLNjKH8o6q7FWq+dRUYolPdeV7tUOZryh0Kt
4OGHU4Zkt1CcyLxjPrtUi/KHorPeI816LJkdih7ByqWtBZqUPxSq9u6DlIeT
i2Sfd3f8uguZ/1H+UBQ6cm/9USBLQrFU7nlPbcwoyh+Kr6dnpY/6pkH5Q6Hu
FDGm24/cKcszUs/LtUWd8oeBW/ZF1d6JrCpz7YXG67dGUv4waL93Cbm5gGwc
hma7BQccT4+g/GH4Wp47y28y2T4MN+1qPyruHk75w8AaFZM3aSg5MAxtt2MV
GxPVKH8YLPf6qPb/MYzyh2GdtSjrsje5KAwPJhtvUHgylPLL5unucr29hCyR
nW/xnm2jzw6h/GEo7dic9m0SWRoG9getpFX5qpQ/DFXH760y7U9mbYN0oNGt
xR0qlH8bulWz3AzqB1H+bWBPz1w6er8y5d8G9WcT4rTYAym/bD8r/ctE5wGU
fxucxm3auXBqf8q/Dfb/3kf7KilR/m3oZP3i73quSPm3wdokr/3FcQXKvw2q
dmezjDjylH8bisJD0tLW9qX8svP0qfj8xbAP5d+GcPHjZ77/WJRf9uuf1dc/
3/3vQm/+bXCLvmjf1/xPrztl5836mL6w+VevWdvhNubZld3bu3utuh3avgk2
6kO+91pb5sH7txwu/dJr4+2QvopIc53f1WvI1q/u/rO++GOv7beD/aJxvWld
W6/dtgMra/stb3vV60DZ+rV7Rxb1f95r9nZI2vw3+cx50GvudrCuN+qMqLvS
6yKZnZL78K+ye10h2396xGPX85fMe/PLPt+kJUFp6f1eN8j8+ZDCWjzrtXQ7
ivr12TN016ted8ryTr8RXbm7rdescEhWHu0YWPKx16rhcDuo/0bFsavX2uGQ
Lh+3NeTZl14bh8N4g8+3yk3fe41wdBrzmm52dPfaPhwNg4eGSaJ+99pN9uvD
PXQz+//tdWA41Fklo8VLWejNHw7tgpepjgK5XnNl58mMj5Z70afXReGoc3yz
UzhRvtcV4WC/msIfEabQa0k4lHbPl4+7qNjrhnBg4fWchypKvZbKPr/e/8Ww
9f173Sn7vIjirLnlA3rNigB72n3zpT0De60aAbdf63iL7Ab1WjsCnJn7dCfs
Vum1cQSUrsrxO7sG9xoR0HcNPd+wV7XX9hFoeLf1nKbdkF67RSB0ItSaf5AD
IxA481K2yr6hlD8CTgq+PceXDaP8EbCWh97NX+SiCEhvtTStOaBG+SNgGcN9
scphOOWXnadjvMJluRGUPwLKK7TUio+SpRFoGids/L5+JOWPgPc2xxFnldUp
fyS+3rhV2HmWrBqJ6CmDp+f5aVD+SISHSPcc+W8U5Y9EzaPjx2beJCMS3WvK
Jk2J+Y/yR8JhiuBBnpEm5Y+EWsu/bYFScmAkmuXGP67iaVH+SMzr130xcNFo
yi9bT9HrzusmF0Wi8O2IBUblYyh/JObof6vUMNam/JHY5Snhr0ojN0RCdeG8
siutZGkk2hpH3Pc316H8kdBzf/HVNp/MikJ5gmLXxm9k1Sisuf2s7Ij9WMof
hU+TxHLTysnGUTjzaPmTD/3GUf4oLOjXM7zZg2wfhTlLooR9JGS3KKiM5Jq5
aupS/iisPPCyvSuczI6C+63fSWcekrlRcFhv/75q2njKH4W/kbN+t2eTK6KQ
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
vvB5ZTKZk4oGb92gOiGZm4oVZ0qizQ6QRamYFzZBtfI0uUiWXzNLT6+OXJqK
ml/nz4ibyBWpODi+6JryO3KV7PNi1a1jf5IlsrzVg2d19XfudV0qBq0JyHYf
RW5IRX251tL7k8hNqYh438974VyyNBVSNfXnlbbktlRUKs8p01lH7kyFMtfl
SrY/uTsVO+dtnvQnmsxKQxBvWaNPJlkpDR3f/l16uJOsmoYZlX4fcISsnobt
v+OXHDpP1k7Dw65ZT9XukPXT8HZvjCjmBdk4DV3K1jGvO8imaXDRzkhcynLp
NdLw9JJ5WaUq2ToNiXed34zUIdunQTr23szoqWSnNOSn7hG8sCC7peFO48U/
FivJ3mlY22zou8+dHJgG/a0vH/YNIYenocrn8VyPBDI7DRpHhuVdzCVz0rBb
P7tldDGZm4Yl92w1ok6QRWk4X7lkZuMVclEa3rRkmhg/JJfKnle2+uDU1+SK
NHz5+Uki/UauSsPnmBGLZimu7bUkDZ3ZAmHGCHKdbP+lkAqpHrlB9vyuVmdO
n0Vukp03IGhi0mKyNA3rj5XseOhIbkvD5XJ3jq43uTMN3SUnLYLDyd1p2Dbo
cMl5DpmVjvdsp6P9xWSldFy/Vee8qoysmg6NL4OLCqrJ6ulw0rWIablO1k5H
YH1g+4QnZP10GKWfaPN7TzZOh8Bi3JYjv8im6XjQ/2Fox4B1vUY6Zpm/+mX0
H9k6HWNjvX/5Tybbp2PRIXZA2VyyUzr6tVuvbLUlu6XjUeWLIq11ZO90eNZ4
rl7tTw5Mh+awn77p0eTwdCwfcqH5QgaZnQ4XjyclnwvJnHR4DQi8OO4wmZuO
X+v3T1p1jiySzR9c0sy+RS6SPa+Jgnvlz8il6fg4ck+/Rx/JFelYuO/rtn9/
yFXpuPyj5j89lfW9lqRjb4l+15LR5Lp0SPdt/rzFiNyQjhcrD43Knk9uSsfF
GL1NR5aRpbLnv37QrfoN5LZ0bM8X2L0NIHemo3j595esWHJ3OioHeiepZ5NZ
GTB9oDvdaDdZKQPBE7zfWBwlq2Yg829A/qoLZPUMfLqzfYnHHbJ2Bg7kXOoK
fEHWz0DQWW56dAfZOAO3rMcPS/5HNs1AztkrCZmDN/QaGWjWOtnEG0O2zkCS
/PxBwilk+wzo5JRq5pmTnTIwKdS8j3A52S0DWR3LqnmuZO8M5DbpmmVuJQdm
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
oiB3Ozme3PfuVcED5e4g34/Oqh7/mQ+Qu5OMl1/mnWr1fxf+n7+S7W96v/WJ
z2+5u8jrd+9WdW7ulbubxNPNi2XRO3vk7iH741jHC/7+Xe5e8vcjNVE6/32T
u08CPs0NV7qGdsr9h7x/9L8FM6a2yd1P/r7kVuLHZU1yD5BC4Zs9/yyr6+VW
kMIA5pbv58bWyK1ELLbZ/el1idzKxGkrVQ6vYcmtSnzQYNTfkLt3/8/qUoje
8zKxIvyp3JpSgDMxas7qr+XWkoLPareBG5c3yj2UfL7GGR81rY9yDyevD/q3
dErlJ7m1pTBj54hdG+2/yq1D/r/BZZI3r0tuXSlUqSm9PtfXLbce8TJNseLq
n3Lrk9eXlKZJLv6Sexx5vw0TK/7r/y23gRS+Vp9aE+/WL7ehFLLeKUp83QYU
/p+NyPZEJXwYvX+g3MZSMBjvt6uNqyC3iRRC3Bpqqh4oym0qhaTrScIn7Upy
m0lBdfbqrc1aynKbSyFi7TLZMAsVuWeQ/z9e+2u1u6rcFlIYGnj946W9anJb
kvebUPVPN1VdbiuyP1FBVYwbGnJbk+2NHt46o1pTbhsp9O49VVP3bbDc88nr
V/6anKY1RG5bKST2rZtjOXKo3CCFUrtslliAtpNCmusgTd70YXLbSyGsYeeK
iXloB/L/16ZOmb5suNzLpKCUl7nt/nO0kxSqHaOfNniPkNtZCvrj1k6PbUO7
SKGbpeGUFaottyt5/05W+5a/6FXkeIydUceJGym3OzleS4c2+gzRkduDnN+c
y+UXz6M9pVChIfTZP36U3F5SyNt8KeCJBL2BbE9QxvVL03Tl9ibnM+PqIK1s
tA/Zvv2fTXvmjpbbl9j29uctd9F+ZLwkn9Nda68ntz85PptNw5+UoreT8T9o
6dMK5zFyB0jBfW9jt0sVOpC8X8CYjDWr9eUOJu8XZl30rgYdQrbHXKbwde1Y
ufdIwdNr4Nwjr9Bh5HgpKs5keI2TO1wKraKUHMvX6AiyPU4l51atHy93JNn/
61WM73Xog1JwKFB/pDHNQO4oKfQwhhhtCkRHk/d/VFUcegkdQ7avOO+MYzs6
lpzvGx6735lMkDuOxPcJKyfrbeh4KfipqSm6idEJZPzWno4x/YBOJPt/nn+l
2MBQ7lPkfHyZsnu8NzpJCvb8KZdtmOizUjC/kLNCpxadIgXTf7+trmlPlDuV
bL+DjZuWGzqNHD+7h0dMT6IZUtCaqZWj/AjNkkLL89NPBEpGcnOkIDjQeLN/
IZonhYOjrnnoHUALSDwtL0z+cQMtkkJOVJNH0le0RArhrRrx7aaT5JZJwVA6
d4jSVnS6FNTL46rfcNAZUojZaVgYVou+LIUX2W655cOM5c6Sgm3vrkvvndDX
pGBxt/NAzhF0Nvn8l2u0nfLQOWR87Vi8kdWNviWF+AGBCzPNJsudS46fkCE8
6IfOI+PjTdYedRa6gOzvU8k5j+foQimkrzjxw0fdRO4icv5rjhyYsghdLAXf
axVDs/ahS6SwTO02pzsTXUri78M1rZ8f0GVSMFs8z+nm6ClyV0ihf3q7zeyV
6MdS0HkUXBYSi66SQt2q0407bqOfSaFv2ZQgg050NXn/nTPdUwxN5X4hBYWn
1w8/8EDXkutd5/OG6wnoOilo36jw3FSAfkPGw5mvLx5+Q9dLQRZ70f6z0VS5
30nB1WJ/4pO16EYppHzuTQtOQDeR4/XwlXtZHrqFvD+/Kb2xE90qBb05fUdv
GpjJ3U5eP3vE02Wr0B0kXhfCvtQj6E4pdCilb+Flo79Kyf3BmcP+zeguKdgN
WpnXOnKa3N1kf93c/xk7oHukYMQ0tZoQju6VQgAz1PmlGN1Hxntw2zTHGvQf
Kazie5eEK5nL3S+FjHkFA31moQfI4PFTjQolX7SCDArObhm2NQmtJANXj778
6AK0sgwapWML1nagVWXAeTWrv230dLnVZeA7OC9gzlK0pgwEDi5fF4ahtWTg
vJd5QJGPHioD49igX4cr0cNloL1d6nHnF1pbBufPGRa+HD5Dbh0Z+P3NnHnF
BK0rg+9jTvZssUXryeDW3S2Delaj9WVwY2Oj+9Yd6HEyqB9V8vpqFNpABvuK
apNeJ6MNZcD99DWgUYY2ksHYxm8+JfloYxksyy3fcewZ2kQGmmsPHJz0EW0q
g81B6km832gzGcw5eZrZO2Sm3OYyyDUyT51mhJ4hg7sJOvsWWqMtZPB5YNxs
c2e0pQx+FpSU/tqEtiLH4+t0E0Eo2loGd4onLZ98DG0jg4tBo6ccZ6DnyyDT
9Pjth5loWxksdxrQ3ViIBhkozx5VVfccbSeDhcGhS660oO1lYMJ5uNznF9pB
Bgapz+s+a1jIvUwG89b4ta8dh3aSwaGh7ns4M9DOMmidkxBwzw7tQv4e+bus
0B3tKoP/Ki+eYPmjV8lgZahI5B6BdpfB7b8qWm3H0R4yqPLov7uOifYk4+l+
wTVJBtpLBqEdJ+uf5KM3yOBmQ/68msdobxkkjL5clNOA9iH7G1++M+wr2lcG
pklJ07UGzpLbTwbh2keVY4eh/WXwZZ9tW80E9HZy/mWbqhQt0AEyyNK7kD3Y
Dh0og0V1slPf3dDBMjgT57X2xmZ0iAwU1h9TWb0bvYfsr6VOWkU0Oox8/rnf
Aw2T0OFk/9Ln2q7moiNkkL3y3RKfy+hIGTjoDB7umI8+KIMTSz8xB1ego8j5
67j+JrMOHS2DcY8zK6e0oWNkMCt62vbDP9GxMji36Zw4e5Cl3HEymM5cc+j+
CHS8DJqsOjozJ6ATZGA2tPlz6HR0ogz6G1/tHbnAsvD/AcfZ4FA=
       "]]}}, {}, {}, {}, {}}, {{}, {{}, {}, 
     {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.005555555555555556],
       AbsoluteThickness[1.6], LineBox[CompressedData["
1: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
arWok5NMyHLh2O3+68ukyWSVcLx49KNrhiJZIxxl9kGPFn+g54G64dCNjs6y
qWGfD4ZDIWTY/IBiskU4jOWn3s3lk53CoRZ5wbnGj8wJR1/lS79725C54biV
MvHwsvlkfjjaQ594pIwi54XDYP4dq2e/6flkSTgU21o85r4gV4RjYLLihewK
cm04Up+PWN1zgNzExN/9ZYpXPLk9HE3rve3fbmffn0XA0W9n2/ZVZJUISLaV
v/uqwz4PjcCw8Lm2ccpk3QhY/Nq3dPw3en6KCNSNvnu6sp5sEQG+WuJZ73Nk
pwg0TMi00swhcyLg7HJC0BRO5kZAb8SB2MNbyPwIqHtNnhZgTM6LwLi9nZnm
k8glEbj08eY1HUVyRQQE+61rhn80pv2PwORBZqf63SU3RaA4yZIrf5LcHoGX
3PHoKyDLReLQtg2/hwaRVSLRVrTvorY9WSMSde9zkk0Xk3Ujcf9kq6+PBhmR
SMifFJbXm2wRiUrfjyeevqXnzU6R2Pa4dtS4W2ROJJokOyo9jpO5kViRuOJ0
BZ/Mj8THqB8/xvuT8yLRvL2XgLeBXBKJydO+iX4tZJ9nR8Ltkrli4DhybSRO
jMv++qsXuSkScatNHJNa6Hl4eyTcVzaun3CTLBeFLo36Z5VFZJUofGvY39ub
T9ZgHFRWN9GfrBsFlT48y1cbyIhCWXRE6tFFZIsouLfKJ4eNJztFwWVmlPWG
3mROFAZHFX0IuWtE+x8Fp477H+1EZH4UrjlNu7J6MzkvCufNdwZZTiaXRCFK
zWSK1+cltP9R+N2z6dXus+TaKFT2dyx7EUluikLd2GeX9U3J7VHY+9y3335l
shwXh8tK8jUa6P2BIhfDXkw4WppHVuEibt7KKZt2kNW40NmWP3v0HLIGF9ll
x55+/GUoszYX5/Xv6NVdJetyYcUNtLyTSjbgQvp6wIrnNmRw4bG8dYL8eLIZ
F8cnuHUtal1E88mFLu/hs+STZDsufIZHv/gcSnZixv+xaKi7Cdmdi3/HRcmd
g8gcLgaEB9jlPKb3JcFcbP8Ykm61n8zlYqPc3SUTd5J5XPSdLgzrq0/mc/HC
qM1W7t8CmSVc5HDeNyvfJOdxcccsd7Z+NrmAi4+HB9lwNpFLuHh7xmjLf1PI
ZVzMeDdjq/Y3A1o/Lg59qvE5VE6uZubr3IAcg0RyLReFrne/vVpPbuCidmVX
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
CagPSpl5d84omZ0SUDD/icLzC2T3BOS9HDF/h/FomTkJ4K4dLfa7SQ5OgHnY
286udWNk5iYgLrVQu+chmZeA0k83/oY5UL4Xn+nvdnV1cBNZwuzfvI3N7S5j
Zc5jfn6qt7CllVzAjLd0uIGt5ziZSxJg0idzj/EXclkCzCavkx7zHS9zRQIU
B3z6m/adXJ2AR/Wj1wcu1JC5NgHyKpnTX4eSGxIg19gWPOgiuSkB1n03av74
RW5NwOG0kcNzFk6QuT0BHiXRBj0h5C5mvjv7BY85T5ZLxFPDOZd//iQrJsLk
6r4f/HkTZVZJxF39fv3f+ZPVEqF+cd7r7lNkDcZ/h/ncbCdrJyJuQa7YZqam
zLqJqF/+xnTvTrJBIpoOqO08WEBGIibGRbS5tJDNEnHhufe55glaMlskonKn
0zn1zWS7RFRcff54aA7ZiYnvkKxw/SHZPREKkglT5w6ZJDMnEfaPAmdvMicH
J6I8JKD/skQyNxGKHRp73vxH5iXCpU7QsLSHzE9E8G2FAvt5k2WWMNu7Xv5z
Joecl4iedxqll4+SCxIxZ//xm/1fk0sS4Xfmp5aKOuUTliVCx7To1H1rckUi
Brzlb1mbRq5ORL4kVi3hOrmWma83obeC/5AbElHXFL91sr62zE2J+GVQcyfd
k9yaCP/F6d0nD5Lbmflt03qQ8ZTclYih/3qZaQ+ZKrMcD7e+nVgeZkpW5MF8
eN15XgRZhYeuNK0si9NkNR7cd4aX17WSNXg4VVQ1WXncNJm1eViyZtCVPlZk
XR501nrtOptINuBhVaXGnAnlZPAw7VnI++XtZDMe3nx5nailNV1mCx44Sa9/
l28g2/Hw2WeEnnIK2YmHESfmjh9zmezOg96xgUVN7WQODzXjeTe3aOrIHMyD
tV6Rm8SGzOWhIFrgl5xI5vHgOCaoUf88mc/D6LyD2TkfyBJm/ItjE8vGzJA5
j4ecK5IjGebkAh6Md3Nfj48glzDxv7ZP23GcXMZD30PnvXY+J1fw8Mjh2u7J
g2bKXM2MP0X1UI4huZaZ/4SqkKqd5AYeOmNVBxzPITfxYHDMfMXqm+RWHtJH
Pht34Ce5nYd5X03iTk6aJXMXM3+uU7eHWJHlkjDzytKybi5ZMQlK253d5xST
VZLg+SPAXfMZWS0J/tKr1m97U76sRhLeiRwGjxxN1k7CE/X9TzR1ybrM9rhG
J5RWkA2SkGH8JfG+A5tvm4S60YGOfr5ksyQ0dh6e9CWBbJGEpfJbG01zyXZJ
WFwoCAk/SXZifj5/QWfqDbI7M74vdqtDnpE5STB52s9vaTs5OAlLBu7Y1qIw
W2ZuEqyjitRcR5F5SVAUKKdUzCDzkzCg//PTP5eSJUkY0dcrdYAtOS8Jq8ZN
Gty9g1yQhELb4DlXI8glSfhP+90390xyWRKO8f6ZfcgnVzDtrY4zTcvI1UkY
t6QgN+o2uTYJm/pI0rJfkBuS8MW0/VfMV3JTErz2xrxYozBH5tYkZM2bOadj
BLk9CeMfv/wSMJXclYRBbzKHPFhElkuGl4t55sC1ZMVknOg9acd4J7JKMkaO
Msoe7EdWS4by0dv9n8SSNZIx3LN/VaSQrJ2M6Psm1/8dJusmI613w1+HMrJB
Mi5+nOadfZOMZNjOPz3o8FOyWTJqHDoeZ38kWyTjvSSqyrGHbJeML3+/P5Ib
NFdmp2RM9/srxx1LdmfiFW/E0xlkTjKer7qbobyEHJyM3ZfnfBi/lsxNxu1t
O1cN3EzmJUMx3KPwvheZn4wAfV3FXRFkSTKmFd5y+JJKzkvGkTab/StyyQXJ
8Pn3+0FwIbkkGeted3yOv0AuS4auOOGT101yRTKeqvW5rdtArk7GWp+6mLtv
ybXJUDiyWcX0B7khGUqNU3xyelP+elMyzs2/kFM9hNyaDFH3ifT748ntyZgQ
eHLFmRnkrmS4jwu4vGsRm/+eAr2oK1+VVpIVU2C6clsj15askoJii6Wh97aR
1VLwlW9W1cUha6Tg4ZzAKz0RZO0UOKc+3PwsmaybAvUp3P0CMdkgBcFX9sRq
55ORgrOrXXqJS8hmKaj7M3JkUznZIgUhywf+1/sm2S4FkfV7f/d6SHZKQdr+
pVefNpHdU7DkA0c1vY3MSUEfg7KPY7rIwSmY5nxyeVxvfZm5KdiWqjC+ajCZ
l4Ih+u7+b0aR+Uz79P3GjVpkSQquS2ISimeR81JwsvdnQ4eF5IIUWFo82Nps
Qi5JQctV3R/L1pHLmO0pDvsatZFckYI3M4RWom3k6hRcK2oalehFrk1B5s4Z
Sy2DyA0puFP+342fXHJTCv64fDsSlExuTUHM7onN97PJ7SnoVrrm13cPuSsF
J17Ybhh+mCyXCreSHWl/i8mKqfi3Rzq08hxZJRVjjbPebKkgq6XiZtmgXg3V
ZI1UHD9Q7zrtPlk7Feu0LqtseELWTYXvhxP/Nr0iG6Qy9zN7dY3ek5GKO0dT
9v9qJ5ul4sCZJAt+F9kiFX9nli2Sk5sns10qPBKXO6/qR3ZKxYur3le8B5Pd
U3E4MsraaziZk4pNH+6PW6FODk7F0ft31bsnkrmpqJd+Mk+YSual4uLy0uOf
ZpH5qWj2P7d41jyyJBV123N+rzIk56Xi4L/Bb2FMLkiFtOLhbxUzckkqtj64
tOjiGnJZKrh9D+UbWZErUlFyL0h/rx25OhV889mfHm0i16Yid8WzW++3khtS
sUI3/c6j7eSmVCyZ5tuxx5Pcmgo7+QtLjHzJ7amI0DteeCGA3MXM3+c9C1VC
yXJpcB70+YNRJFkxDR8mDC5fGUNWScMJn4jjMxLIamnQ/nTz8sckskYaLpvy
v8SmkbXTcPxVmFEnn6ybhpb6FcXGArJBGv5+Pb9oh5iMNORWFr3bkUM2S8Ow
pD6nTPaQLdKwzfh8Tvc+dv3TYHLo9n7eAXb901A/cV3V13x2/dOg9d5loP4R
dv3TsP2VobflUXb901Bzcnj7ykJ2/dNQVm6YOeY4u/5p0NUcbFlVzK5/Gjor
O+asKWHXPw3G8z30jp9k1z8NX5922r47xa5/Gpquz979+zS7/mlYda+i14dS
dv2Z+Ui1Szl1hl3/NOyzLDewOcuufxrk9C8PqGNdm4bVCkbyU8+x65+GqZYz
NexZNzHr5ZXs6sq6NQ0XXZwerGLdnobb8jUeA1h3paHw/k+dfHb7cuk4Pmrs
GDXWiunwfxk7z40dn0o6rFtiuOns+NXS8eFo1C8+u38a6RC6fz7kxe6/djos
RlrGabHzo5uOMHdD8ZkT7PqnI7xqTZMGO79IR7GDvrNbEbv+6djf++SYhGPs
+qdj6Ya0IdwCdv3TsfbwIRPrw+z6p0Pv5+uz8v9b/3Rs7bvUI2U/u/7p8F5+
zenzXnb90+H0NDZ3ei67/umYvTd//DIpu/7pEI2xb9MTseufjqSMtwq9stn1
T8e2lpydRzLY9Wd+vuzRRO1Udv3T0WyhOCOWx65/OpwPFqWWxbHrn46qdetM
qrns+qfDbW+y7alwdv3T4RHd70ZgMLv+6VjHjxAO92fXnxmP4umqdB92/dOx
53b4lmYPdv3TYeZweYuKG7v+6VjQuOO2mjO7/ukYo8I99NuBXf8MxNiqfC2z
Zdc/AyOPGZy0WM+ufwYW7pv0vnI1u/4Z0HIemqu8gl3/DESfNLszD+z6Z6C7
RYNrsJBd/wzktvQqU9Vj1z8DtpOdg2/PYNc/A7HHK685TmHXPwNLBpzPq9Zg
1z8DprYtysqj2fXPQK85P4frDmPXPwObKovOTldi1z8DM0/U/ejVh11/Zrwa
Jo9P/aHzSXAG+l38sHlJJ3v+z4A07zI//zN7/s/AH48bnJa37Pk/A3LTRvbu
9ZI9/2dgkHP96p+P2PN/Bo4r6K6rvsue/5n5CPYY4n+DPf9n4GdynejXJfb8
n4HHu66/djjDnv8zYFxb3CMuYs//GVA4oPi2+CB7/s+A50qH/Lwc9vyfgfnx
iw29MtnzfwaGelufUuWx5/8MBPhbDRRHsuf/DFg69qzu8GfP/xkoXTQ+RGcn
e/7nY3dAjtjImazAh2eZfdGMDez1AB+Lu+3LO83JSnws8MuvyTFmrw/4CNyz
tnmUAVmVD/25UfL+M9jrBT4+aXnMOTqRrM6H3O71QedHstcPfJxtj3+Ur0TW
4mNriavNzl7s9QQfW/ibupU66fpNh48+Pq1VSR/Y60s+Fq3LuPHqBVmPD0Xr
979UH7DXm3yUX9rtoVlFNmS237JxzKCL7PUnH9oLWobWFZNN+FhoMGiD3wH2
epSP/T4nPn0Sks35+Oh/rtEkib0+5aOxedy0oHCyNR87bT49i/Nhr1cZuxp0
eW0lO/LBy9eMn2PDXr/ycUrSxKszJbvw8eJccf+1C9nrWT5iXJ4NOqRD9uSj
/7v/dj8ex17f8jHd6/b5FhWyP7O/8j7e9+TZ610+vFNnVwg66P4hnA+T64fO
6LP3F1w+Li70tDn1mBzHh5XJ3MMD2PsTHh+1vc8VL2HvX1KZdsf/Atay9zd8
PnTbp8ovZO9/BHwMGfPIvlcae7/Ex91PZQn57P1TLh9ztB+kanqz9098nJw3
1z+Svf/K5yN32o9lZ9j7swI+lpw17l3N3r8V8RGibXX+7Ez2/oqPlu07vaLH
kUv56Pfx+WTtwez9Fh8Hzg74dOwP3T+W81Fiu6Wq/ydyBR+Pn9heMmkkX+Mj
7lbII4fb5Go+TuhsHr3uArmGj1/+R/jjjpJr+ehM6Lv0lphcz0dw4YK5lgnk
Bj40MpR8zvqTG/lQWmjX07mV3MSHSKn362HryW/4SD0nN32QEXs/z0e2gWVj
sw65jQ+vuj7/BKPZ+3s+NinO362pSO7gQyAZfD79Bz0f6OKjNKjS6VEzuYeP
azeEOb/ukeUy4VnX4P27nKyQiYeK71sajpIVM9H7p65itoislAkptF9MjSWr
ZGLebivOHh+yaiZSq0yqPjmQ1TIRkJrzcbQZWT0TOcVyb7X0yBqZ2N4268pA
DbJWJmb+/BR1byBZOxP+XoNmc37S8xsdJt4Dr2efmtnnS5nYkvo70ewuWS8T
KxpOGHHPs8+bMpFdxR8ozCcbZuKLwcmOhAz2+VMmYu7rKtiGkk0ykdG5aJm8
K/s8KhOTbwy8mLKObJ6J4KFv/b8tYJ9PZeKC3djQeVpk60y0XlKp3zCYfV6V
Cad+dmrH2+n5mWMmPg+8t8H1GtkpE3ou/JAGMdklE7f+Xub33Ul2z8SAh6KS
L4vJnplQf+LZlq1C5mRiyafiDd+b6XmffyZU777uM/gMOTgTIwYXDniTQA7P
xLhel0IC7MjcTLwt+eBWOZUclwntu2Pf3vpFzyd5meg4aDcw4zY5NRMCxbMf
BueS+ZmQW7tDssqTLMjEG/3L2saGZAnjJrWSHwPJuczPX/9h7PqMnqfmZeKs
6P0P/jFyfibiTPY/Dw4hFzDHw4tXg8eakYuY+czg7Y0YQS7JRGBS8v6cN/S8
t5QZb3eHjv8pclkmirrabAZwyeWZaA85MXvTGnIFczwaZT70HE2+lommW39t
F7yj59HVmXBZGX678jS5JhNlKYfM+nPJtZnwaJ/xRsmcXJ+JLMem03dGkhsy
sXfivjurX9Pz8sZM+HVvM00sJjdlovmz0XxuCPlNJrTWOZyeZ0JuzYTBvh/3
jw0mtzHHR4Lr0cYG9vk+s7/X1CxqDpA7mONLXdAYwr4P6MpEqeku1xb2fUFP
Jhpfu/dS/kfvE+SymPvZJVWdVWSFLJxVrr+TyycrZsH9joZOr41kpSyULZjT
rTmBrJKFrBgd8z7vJ8usmgW9TasMD5WQ1ZjtfW9s6h1MVs+C/+PV6ycYkTWy
oP1Z9dCfPmStLPCda75Lauj9i3YW5LLUbb5nkXWy8FfhRpPSRrIu075+X3HL
OLJeFkYPET6KeEPvgwyykPzgKOfhUbJhFjQGdAravMnIgqDjiMPVuWSTLISK
ej/f2MW+j8pC0YGts0vKyeZZ+OCh53uDS7bIwtt7f0pzTcjWjHU3Dp+rSLZj
tm/TeSzpNr0fc8yCi1tOel462SkLJg/HPwlaT3bJwt5VgQeVVcnuWfi2+0Bf
90f0fs4zC5GnLo+JlpA5WRgc1f3b3p7sn4Xqd6KKH2PIwcz8nP0Ss/45vR8M
z0JwvK+j914yl/HpvW7mW8hxWSgwH3zx43gyLwv5nY/fSiro/WRqFgy+fLF8
DjI/Cw3vBn3Or6D3m4Is5I5WaPtiRJZkIY9zh3v5Mr0fzWX23ymtSWUx+/6U
md9bGUbv2Poa+Uy8h2Z1Sw3IBVmwvm19R+MMvZ8tysK1jiDXuNnkEiZ+wN57
nsfp/W5pFuxmNuKpNrksC41pnp9rDtL74XLm+As4NWj5OHIF01/VoN5YQu+X
r2Wh6Vpx0I0h5OostDd9nlGbTO+na7KQmv9Tx6k3uTYLSgO/HAsMo/fb9Vko
OTThxbDv9P67IQuKIfJ/5nuQG5n1aZy25DX7/rwpCxaW9g3DN5DfZKFjc6B8
bQ29f2/NAnySvw8xJrdlQa2oqvnZWXp/387M96O4fjOnkzuyED5hiVRxH73/
78qC2UjhvZ1DyT1ZeONi0bwhnvIF5LLRnnhuaM4Xyi9QyIaBKKNb9IDyDxSz
wRFkvz98lvITlLKh4RFkdUtC+Qsq2VC7Mb+gVyjlN6hmw+zfqI1r7Cn/QS0b
XeWFj48v6C+zeja0j1YKNdUoX0KD6a8Z3ufEj74yazHjkV8staij/AvtbEiM
Tl5VLKb8DJ1scE/e/vmYR/kbutnQPXu94PJWeZn1ssHrHLfq0iLK9zDIRq3q
nnX1wygfxDAbFqUie8VHfyj/hPG/juKcmN8ymzDx07nxTjO6KR+F6S/8XGX/
qFNmcyaefoRTckQH5acw8yH3fUH7xG8yW2ej4qxh1Oi0L5Svkg2nyqMXrtV+
kNmRGf+Zlr9NKm8pfyUbTQPOTPJd80pmF6b9wN1hn5WeUD4L43rbsXVf7srs
mQ05zuDHDj7nZOYw7numQXNhsSyfx5/xz/5Kt5tvyRzMjMdj/E7exMcyhzPb
G7eo1NqrSWZuNvK2DdjUbN4icxwz3vpeaz7O+iAzj9m/9El5XiO+yJzKjHf7
pbK5clTvhs9sPz7O62Mg5TMJmPhpn345fqF8Jwkzn+vlvBJ3UD5ULtM/2vTe
jpbflD/FePN9nd7bKJ8qn+mvoWY21ZfyrQqY8ey/FF14kvKxirLB95pS3e+7
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
A/4HDIwO8A==
       "]]}}, {}, {}, {}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{0, 3142.}, {-644.325134827509, 4678.38586283974}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.761360849687334*^9, {3.7613701746368713`*^9, 3.761370202000498*^9}, {
   3.7613714303642635`*^9, 3.761371488354218*^9}, 3.76137881989768*^9, {
   3.7613796114632597`*^9, 3.761379650920066*^9}, 3.761379911805687*^9, 
   3.7613870369042454`*^9, 3.7614003075451536`*^9, 3.761400419376189*^9, 
   3.7620738525534496`*^9, 3.7620747406409087`*^9, 3.7620759532360287`*^9, 
   3.762087039959965*^9, 3.7621302974414697`*^9, 3.7621306874975653`*^9, 
   3.762131220512105*^9, 3.7621314811137357`*^9, 3.7621316864337444`*^9, 
   3.762132260472466*^9, 3.762132819974021*^9, 3.7621331510930567`*^9, 
   3.7621334111468043`*^9, 3.76213406488696*^9, 3.7621343292236605`*^9, 
   3.7621346158937635`*^9, 3.7621556892659197`*^9, 3.7621576739722643`*^9, 
   3.7621584810966525`*^9, 3.762158515099201*^9, {3.762158598236637*^9, 
   3.7621586155177517`*^9}, 3.762158893017993*^9, 3.762159059411864*^9, 
   3.7621593419987364`*^9, 3.7621596380613585`*^9, 3.7621598159665794`*^9, 
   3.762160122866023*^9, 3.7622362987657127`*^9, 3.7622366119844656`*^9, 
   3.7623134770259085`*^9, 3.7623135180502033`*^9, 3.762314513940607*^9, 
   3.76248123031211*^9, 3.762510593337489*^9, 3.763300848396487*^9, 
   3.7648639713798046`*^9, 3.7653728918160286`*^9, 3.7653733246332674`*^9, 
   3.7653747336780643`*^9, 3.765374909119563*^9, 3.7653750349571066`*^9, 
   3.7653752937594757`*^9, 3.7653753425526695`*^9, 3.7653754176886578`*^9, 
   3.765375506895379*^9, 3.765377311447061*^9, 3.7653785305096207`*^9, 
   3.766019724577218*^9, 3.766021000185195*^9, 3.766043317323302*^9, 
   3.7660434561767097`*^9, 3.766043693651501*^9, 3.7660437999736104`*^9, 
   3.766043862481001*^9, 3.7660439008499746`*^9, 3.7660444424786987`*^9, 
   3.7660462210362616`*^9, 3.7660462526965847`*^9, 3.7660507031091957`*^9, 
   3.766052412650566*^9, 3.7660524551840086`*^9, 3.766054517948698*^9, 
   3.7661050014590473`*^9, 3.7661512511069503`*^9, 3.766156742358076*^9, 
   3.7662150886457396`*^9, 3.766268108007414*^9, 
   3.7662917422653575`*^9},ImageCache->GraphicsData["CompressedBitmap", "\<\
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
L9r8D2/1X4Q=\
\>"],ExpressionUUID->"e2d9ec88-2255-40ed-8a30-0b07a5cf5828"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"cartacc", " ", "=", " ", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"d2xtrackdat", "[", 
       RowBox[{"[", "i", "]"}], "]"}], "[", 
      RowBox[{"[", 
       RowBox[{"1", ";;", "3"}], "]"}], "]"}], ",", " ", 
     RowBox[{"{", 
      RowBox[{"i", ",", " ", 
       RowBox[{"Length", "[", "d2xtrackdat", "]"}]}], "}"}]}], "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.7613789255900335`*^9, 3.761378963188487*^9}, {
  3.7613790510750847`*^9, 3.761379062569489*^9}, {3.762073844267867*^9, 
  3.7620738714194765`*^9}, {3.7620739704483404`*^9, 
  3.7620739706102653`*^9}},ExpressionUUID->"22bc796a-79d6-4428-99cf-\
7621047a55dc"],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{"Max", " ", "cartesian", " ", "accelerations"}], "*)"}]], "Input",
 CellChangeTimes->{{3.761379099133478*^9, 
  3.7613791068550563`*^9}},ExpressionUUID->"e1c33c18-8af3-4553-9e9f-\
139f7a0ce3ca"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"Max", "[", 
    RowBox[{"Abs", "[", 
     RowBox[{"cartacc", "[", 
      RowBox[{"[", 
       RowBox[{";;", ",", "1"}], "]"}], "]"}], "]"}], "]"}], ",", " ", 
   RowBox[{"Max", "[", 
    RowBox[{"Abs", "[", 
     RowBox[{"cartacc", "[", 
      RowBox[{"[", 
       RowBox[{";;", ",", "2"}], "]"}], "]"}], "]"}], "]"}], ",", " ", 
   RowBox[{"Max", "[", 
    RowBox[{"Abs", "[", 
     RowBox[{"cartacc", "[", 
      RowBox[{"[", 
       RowBox[{";;", ",", "3"}], "]"}], "]"}], "]"}], "]"}]}], "}"}]], "Input",
 CellChangeTimes->{{3.7613790661833935`*^9, 
  3.7613790874152107`*^9}},ExpressionUUID->"62eb6c0f-aeac-4aa9-9073-\
e697dc8a2239"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"1.2`", ",", "1.1999999092165574`", ",", "0.`"}], "}"}]], "Output",
 CellChangeTimes->{{3.761379069386547*^9, 3.761379087927906*^9}, 
   3.7613870419435263`*^9, 3.7614003143172674`*^9, 3.761400419561084*^9, 
   3.7620738752715106`*^9, 3.76207397825453*^9, 3.7620747489048*^9, 
   3.762075953354963*^9, 3.762087040091479*^9, 3.762130297691444*^9, 
   3.7621306936950192`*^9, 3.762131224673727*^9, 3.7621314853528204`*^9, 
   3.762131691793882*^9, 3.76213226080007*^9, 3.7621328302911916`*^9, 
   3.7621331560422287`*^9, 3.7621334115065985`*^9, 3.7621340731177874`*^9, 
   3.762134332214014*^9, 3.7621346183396482`*^9, 3.762155689452814*^9, 
   3.7621576776431646`*^9, 3.7621586712278786`*^9, 3.7621588975544176`*^9, 
   3.762159063501526*^9, 3.7621593423315673`*^9, 3.762159638323211*^9, 
   3.762159820606945*^9, 3.7621601258852916`*^9, 3.7622362988806453`*^9, 
   3.7622366175309324`*^9, 3.7623134771261683`*^9, 3.762314518539016*^9, 
   3.762510593427228*^9, 3.7633008485104218`*^9, 3.764863971524722*^9, 
   3.765372894731884*^9, 3.7653733282164373`*^9, 3.765374736290904*^9, 
   3.7653749146093817`*^9, 3.76537503962*^9, 3.765375293959382*^9, 
   3.7653773141898584`*^9, 3.7653785320654154`*^9, 3.766019724845063*^9, 
   3.766021002008153*^9, 3.7660433174052343`*^9, 3.7660434601405396`*^9, 
   3.7660436938413916`*^9, 3.7660438001951475`*^9, 3.7660438626815186`*^9, 
   3.766043901006884*^9, 3.7660444444165444`*^9, 3.7660462227728815`*^9, 
   3.766046255197099*^9, 3.766050703165202*^9, 3.766052412750826*^9, 
   3.766052456776137*^9, 3.7660545180267973`*^9, 3.76610500518449*^9, 
   3.766151251173914*^9, 3.7661567424160423`*^9, 3.7662150887227383`*^9, 
   3.7662681081063576`*^9, 
   3.7662917424322414`*^9},ExpressionUUID->"0d65a54d-575e-4b7a-81f3-\
a623c9f82c37"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{"So", ",", " ", 
   RowBox[{
   "these", " ", "are", " ", "the", " ", "required", " ", "torques", " ", 
    "from", " ", "the", " ", "feedback", " ", "linearised", " ", 
    RowBox[{"model", ".", " ", "We"}], " ", "need", " ", "to", " ", 
    "simulate", " ", "it", " ", "and", " ", "validate", " ", "it", " ", 
    "against", " ", "the", " ", "required", " ", "data"}]}], "*)"}]], "Input",
 CellChangeTimes->{{3.76138706016813*^9, 
  3.7613870942328253`*^9}},ExpressionUUID->"0520f858-81ee-439f-9014-\
e208bf0922f9"],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{
  "Ideally", " ", "the", " ", "torques", " ", "should", " ", "be", " ", "say",
    " ", "in", " ", "zero", " ", "order", " ", "hold", " ", "until", " ", 
   "the", " ", "next", " ", "control", " ", 
   RowBox[{"loop", ".", " ", "But"}], " ", "here", " ", "we", " ", "fit", " ",
    "an", " ", "interpolation", " ", "function", " ", "to", " ", "the", " ", 
   "torques"}], "*)"}]], "Input",
 CellChangeTimes->{{3.7613988898856573`*^9, 
  3.7613989343572426`*^9}},ExpressionUUID->"8ecac90b-a425-459b-9b29-\
d33fdfec131d"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"time", " ", "=", " ", 
   RowBox[{"Table", "[", 
    RowBox[{"i", ",", " ", 
     RowBox[{"{", 
      RowBox[{"i", ",", " ", "0", ",", " ", "tf", ",", " ", "h"}], "}"}]}], 
    "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Tau]valswitht", " ", "=", " ", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"Transpose", "[", 
      RowBox[{"ArrayFlatten", "[", 
       RowBox[{"{", 
        RowBox[{"time", ",", " ", 
         RowBox[{"\[Tau]vals", "[", 
          RowBox[{"[", 
           RowBox[{";;", ",", " ", "i"}], "]"}], "]"}]}], "}"}], "]"}], "]"}],
      ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", " ", "6"}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Tau]funcs", " ", "=", " ", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"Interpolation", "[", 
      RowBox[{"\[Tau]valswitht", "[", 
       RowBox[{"[", "i", "]"}], "]"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", " ", "6"}], "}"}]}], "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.761399328273539*^9, 3.7613993480988503`*^9}, {
  3.761399602758376*^9, 
  3.761399603218254*^9}},ExpressionUUID->"f2cdaffe-6d7c-4bf1-bb41-\
27c0910152a6"],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{
   RowBox[{
   "Now", " ", "we", " ", "have", " ", "the", " ", "torques", " ", "at", " ", 
    "each", " ", "instant"}], ",", " ", 
   RowBox[{
   "let", " ", "us", " ", "simulate", " ", "the", " ", "system", " ", "with", 
    " ", "these", " ", "inputs"}]}], "*)"}]], "Input",
 CellChangeTimes->{{3.76139961206828*^9, 
  3.761399637948454*^9}},ExpressionUUID->"7e3f1777-c19b-4cb8-ad1d-\
d7119d083ec9"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"tempx\[Phi]", " ", "=", " ", 
   RowBox[{
    RowBox[{"qeidat", "[", 
     RowBox[{"[", "1", "]"}], "]"}], "[", 
    RowBox[{"[", 
     RowBox[{"1", ";;", "18"}], "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"doubledotscontrol", "[", 
    RowBox[{
     RowBox[{"q_", "?", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"VectorQ", "[", 
         RowBox[{"#", ",", "NumericQ"}], "]"}], "&"}], ")"}]}], ",", 
     RowBox[{"dq_", "?", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"VectorQ", "[", 
         RowBox[{"#", ",", "NumericQ"}], "]"}], "&"}], ")"}]}], ",", " ", 
     "t_"}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "bla", ",", " ", "Mval", ",", " ", "Cval", ",", " ", "Gval", ",", " ", 
       "LHS", ",", " ", "dqe", ",", " ", "qe", ",", " ", "J\[Eta]x\[Phi]val", 
       ",", "J\[Eta]\[Theta]val", ",", "Jx\[Phi]\[Theta]val", ",", 
       "dJ\[Eta]x\[Phi]val", ",", "dJ\[Eta]\[Theta]val", ",", 
       "Jqe\[Theta]val", ",", "dJqe\[Theta]val", ",", "M\[Theta]val", ",", 
       "C\[Theta]val", ",", "G\[Theta]val", ",", " ", "\[Tau]\[Theta]val"}], 
      "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"(*", 
      RowBox[{
      "Perform", " ", "FK", " ", "for", " ", "the", " ", "configuration", " ",
        "and", " ", "task", " ", "space", " ", "variables"}], "*)"}], 
     "\[IndentingNewLine]", 
     RowBox[{"(*", 
      RowBox[{
       RowBox[{"bla", "=", " ", 
        RowBox[{"AbsoluteTiming", "[", 
         RowBox[{"TrackRoot", "[", 
          RowBox[{"q", ",", " ", "tempx\[Phi]"}], "]"}], "]"}]}], ";"}], 
      "*)"}], "\[IndentingNewLine]", 
     RowBox[{"(*", 
      RowBox[{
       RowBox[{"Print", "[", 
        RowBox[{"bla", "[", 
         RowBox[{"[", "1", "]"}], "]"}], "]"}], ";"}], "*)"}], 
     "\[IndentingNewLine]", 
     RowBox[{"(*", 
      RowBox[{
       RowBox[{"tempx\[Phi]", " ", "=", " ", 
        RowBox[{"bla", "[", 
         RowBox[{"[", "2", "]"}], "]"}]}], ";"}], "*)"}], 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"tempx\[Phi]", " ", "=", " ", 
       RowBox[{"TrackRoot", "[", 
        RowBox[{"q", ",", " ", "tempx\[Phi]"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"qe", " ", "=", " ", 
       RowBox[{"Join", "[", 
        RowBox[{"tempx\[Phi]", ",", "q"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"(*", 
       RowBox[{
       "Getting", " ", "the", " ", "velocities", " ", "of", " ", "the", " ", 
        "configuration", " ", "space", " ", "variables"}], "*)"}], 
      "\[IndentingNewLine]", 
      RowBox[{"J\[Eta]x\[Phi]val", " ", "=", " ", 
       RowBox[{"cJ\[Eta]x\[Phi]", "@@", "qe"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"J\[Eta]\[Theta]val", " ", "=", " ", 
       RowBox[{"cJ\[Eta]\[Theta]", "@@", "qe"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"Jx\[Phi]\[Theta]val", " ", "=", " ", 
       RowBox[{"-", 
        RowBox[{
         RowBox[{"Inverse", "[", "J\[Eta]x\[Phi]val", "]"}], ".", 
         "J\[Eta]\[Theta]val"}]}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"dqe", " ", "=", " ", 
       RowBox[{"Join", "[", 
        RowBox[{
         RowBox[{"Jx\[Phi]\[Theta]val", ".", "dq"}], ",", " ", "dq"}], 
        "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"(*", 
       RowBox[{
       "Compute", " ", "all", " ", "the", " ", "extended", " ", 
        "configuration", " ", "space", " ", "matrices"}], "*)"}], 
      "\[IndentingNewLine]", 
      RowBox[{"Mval", "=", 
       RowBox[{"cMmat", "@@", "qe"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"Cval", "=", 
       RowBox[{"cCmat", "@@", 
        RowBox[{"Join", "[", 
         RowBox[{"qe", ",", " ", "dqe"}], "]"}]}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"Gval", "=", 
       RowBox[{"cGvec", "@@", "qe"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"(*", 
       RowBox[{
       "Computing", " ", "the", " ", "derivative", " ", "of", " ", "the", " ",
         "Jacobians"}], "*)"}], "\[IndentingNewLine]", 
      RowBox[{"dJ\[Eta]x\[Phi]val", " ", "=", " ", 
       RowBox[{"cdJ\[Eta]x\[Phi]", "@@", 
        RowBox[{"Join", "[", 
         RowBox[{"qe", ",", " ", "dqe"}], "]"}]}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"dJ\[Eta]\[Theta]val", " ", "=", " ", 
       RowBox[{"cdJ\[Eta]\[Theta]", "@@", 
        RowBox[{"Join", "[", 
         RowBox[{"qe", ",", " ", "dqe"}], "]"}]}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"(*", 
       RowBox[{"Map", " ", "of", " ", "the", " ", "matrices"}], "*)"}], 
      "\[IndentingNewLine]", 
      RowBox[{"Jqe\[Theta]val", " ", "=", " ", 
       RowBox[{"ArrayFlatten", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", "Jx\[Phi]\[Theta]val", "}"}], ",", " ", 
          RowBox[{"{", 
           RowBox[{"IdentityMatrix", "[", "6", "]"}], "}"}]}], "}"}], "]"}]}],
       ";", "\[IndentingNewLine]", 
      RowBox[{"dJqe\[Theta]val", " ", "=", " ", 
       RowBox[{"ArrayFlatten", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"-", 
            RowBox[{
             RowBox[{"Inverse", "[", "J\[Eta]x\[Phi]val", "]"}], ".", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", 
                RowBox[{"dJ\[Eta]x\[Phi]val", ".", 
                 RowBox[{"Inverse", "[", "J\[Eta]x\[Phi]val", "]"}], ".", 
                 "J\[Eta]\[Theta]val"}]}], "+", "dJ\[Eta]\[Theta]val"}], 
              ")"}]}]}], "}"}], ",", " ", 
          RowBox[{"{", 
           RowBox[{"ConstantArray", "[", 
            RowBox[{"0", ",", 
             RowBox[{"{", 
              RowBox[{"6", ",", "6"}], "}"}]}], "]"}], "}"}]}], "}"}], 
        "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"(*", 
       RowBox[{
       "Map", " ", "the", " ", "matrices", " ", "to", " ", "the", " ", "task",
         " ", "space"}], "*)"}], "\[IndentingNewLine]", 
      RowBox[{"M\[Theta]val", " ", "=", " ", 
       RowBox[{
        RowBox[{"T", "[", "Jqe\[Theta]val", "]"}], ".", "Mval", ".", 
        "Jqe\[Theta]val"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"C\[Theta]val", " ", "=", " ", 
       RowBox[{
        RowBox[{"T", "[", "Jqe\[Theta]val", "]"}], ".", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"Mval", ".", "dJqe\[Theta]val"}], "+", 
          RowBox[{"Cval", ".", "Jqe\[Theta]val"}]}], ")"}]}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"G\[Theta]val", " ", "=", " ", 
       RowBox[{
        RowBox[{"T", "[", "Jqe\[Theta]val", "]"}], ".", "Gval"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"(*", 
       RowBox[{
       "LHS", " ", "of", " ", "the", " ", "dynamics", " ", "equations"}], 
       "*)"}], "\[IndentingNewLine]", 
      RowBox[{"\[Tau]\[Theta]val", " ", "=", " ", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          RowBox[{"\[Tau]funcs", "[", 
           RowBox[{"[", "1", "]"}], "]"}], "[", "t", "]"}], ",", " ", 
         RowBox[{
          RowBox[{"\[Tau]funcs", "[", 
           RowBox[{"[", "2", "]"}], "]"}], "[", "t", "]"}], ",", " ", 
         RowBox[{
          RowBox[{"\[Tau]funcs", "[", 
           RowBox[{"[", "3", "]"}], "]"}], "[", "t", "]"}], ",", " ", 
         RowBox[{
          RowBox[{"\[Tau]funcs", "[", 
           RowBox[{"[", "4", "]"}], "]"}], "[", "t", "]"}], ",", " ", 
         RowBox[{
          RowBox[{"\[Tau]funcs", "[", 
           RowBox[{"[", "5", "]"}], "]"}], "[", "t", "]"}], ",", " ", 
         RowBox[{
          RowBox[{"\[Tau]funcs", "[", 
           RowBox[{"[", "6", "]"}], "]"}], "[", "t", "]"}]}], "}"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"LHS", " ", "=", " ", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"Inverse", "[", "M\[Theta]val", "]"}], ")"}], ".", 
        RowBox[{"(", 
         RowBox[{"\[Tau]\[Theta]val", "-", 
          RowBox[{"C\[Theta]val", ".", "dq"}], "-", "G\[Theta]val"}], 
         ")"}]}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"Return", "[", "LHS", "]"}], ";"}]}], "\[IndentingNewLine]", 
    "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.74748440757664*^9, 3.747484409507562*^9}, {
   3.747484461677616*^9, 3.7474845482674875`*^9}, {3.747484580327173*^9, 
   3.747484599645011*^9}, {3.7474848161103525`*^9, 3.7474848183136363`*^9}, {
   3.747484853619799*^9, 3.7474848714698343`*^9}, {3.7474849021801157`*^9, 
   3.747484904289808*^9}, {3.7474849682701597`*^9, 3.7474849703898525`*^9}, 
   3.747485067490321*^9, {3.7474858814676027`*^9, 3.747485888809555*^9}, 
   3.747485928463986*^9, {3.747486162078972*^9, 3.7474861680139165`*^9}, {
   3.7474862079841194`*^9, 3.7474862510275145`*^9}, {3.747494313873737*^9, 
   3.747494377109394*^9}, {3.7474957232390165`*^9, 3.747495767668152*^9}, {
   3.74764017577621*^9, 3.7476401832002497`*^9}, {3.7480054810702963`*^9, 
   3.748005546272901*^9}, 3.7480056046499023`*^9, {3.757950439782325*^9, 
   3.757950569326189*^9}, {3.757950623141141*^9, 3.757950709744218*^9}, {
   3.757950755080717*^9, 3.757950774280817*^9}, {3.7579508501169844`*^9, 
   3.757950868096898*^9}, {3.757951002004713*^9, 3.75795100977565*^9}, {
   3.7579512289435077`*^9, 3.7579513288255033`*^9}, {3.757951424558215*^9, 
   3.7579515576140785`*^9}, {3.757951664084346*^9, 3.7579517277402735`*^9}, {
   3.757952357405804*^9, 3.7579523804612427`*^9}, {3.757952608230666*^9, 
   3.757952632743451*^9}, {3.7579526969170275`*^9, 3.7579527179374623`*^9}, {
   3.757952778186175*^9, 3.7579530716083097`*^9}, {3.7579531335043707`*^9, 
   3.75795314602946*^9}, {3.7579538274467583`*^9, 3.757953830240122*^9}, {
   3.75795389012076*^9, 3.7579540595329423`*^9}, {3.7579542879657555`*^9, 
   3.757954328713045*^9}, {3.757954617697354*^9, 3.7579546326152024`*^9}, {
   3.757955528194253*^9, 3.7579555321223373`*^9}, {3.757955575544798*^9, 
   3.7579557198491306`*^9}, {3.7600251382015257`*^9, 3.760025214906492*^9}, {
   3.760025271970461*^9, 3.760025291128994*^9}, {3.760025418433078*^9, 
   3.760025425017371*^9}, {3.7610305882240114`*^9, 3.7610308332628527`*^9}, {
   3.7610315623168178`*^9, 3.7610315735368743`*^9}, {3.7610344205983667`*^9, 
   3.7610344224482164`*^9}, {3.7610476568816824`*^9, 
   3.7610476911578436`*^9}, {3.761047731522089*^9, 3.761047795362996*^9}, {
   3.761047862176386*^9, 3.7610481549305077`*^9}, {3.761048507980896*^9, 
   3.761048552352975*^9}, {3.7610487115161724`*^9, 3.761048712216196*^9}, {
   3.761273663707091*^9, 3.7612736664770637`*^9}, {3.7612749544710035`*^9, 
   3.761275035221036*^9}, {3.7612753542850766`*^9, 3.761275389974563*^9}, {
   3.761276117887458*^9, 3.761276118290227*^9}, {3.7612926181930976`*^9, 
   3.761292634293437*^9}, {3.761299537850651*^9, 3.761299544745693*^9}, {
   3.7612995753741164`*^9, 3.7612996305254903`*^9}, {3.761299945838954*^9, 
   3.761299966734703*^9}, 3.7613582215808496`*^9, 3.7613588583134966`*^9, {
   3.7613996684679284`*^9, 3.7613997169257298`*^9}, {3.761399747406802*^9, 
   3.7613997544427567`*^9}, {3.7613997998830214`*^9, 3.761399848516343*^9}, {
   3.7613999492831306`*^9, 3.761399949723877*^9}, {3.7614000644100666`*^9, 
   3.761400067664218*^9}, {3.7614006866091795`*^9, 3.7614006891717176`*^9}, {
   3.7614007246233664`*^9, 3.7614007248002963`*^9}, {3.761401557671116*^9, 
   3.761401568604863*^9}, {3.761401602159087*^9, 3.761401645651207*^9}, {
   3.7620749521880007`*^9, 
   3.7620749525007963`*^9}},ExpressionUUID->"adf90053-4daf-4c46-853f-\
f664d5ae45cf"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"\[Theta]initc", " ", "=", " ", 
   RowBox[{"\[Theta]idat", "[", 
    RowBox[{"[", "1", "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"d\[Theta]initc", " ", "=", " ", 
   RowBox[{"d\[Theta]idat", "[", 
    RowBox[{"[", "1", "]"}], "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.761269799348199*^9, 3.7612698526037364`*^9}, {
  3.7612748829611845`*^9, 3.7612748986212497`*^9}, {3.761399959884056*^9, 
  3.7614000060247107`*^9}, {3.76215745641273*^9, 3.7621574675743465`*^9}, {
  3.7621576916081934`*^9, 3.7621576944155693`*^9}, {3.7624812889559956`*^9, 
  3.762481290101516*^9}, {3.766021086781904*^9, 
  3.7660210895833173`*^9}},ExpressionUUID->"c1976918-d84b-4e1a-9125-\
801bca2d6a22"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"d2\[Theta]initc", " ", "=", " ", 
  RowBox[{"doubledotsac", "[", 
   RowBox[{"\[Theta]initc", ",", " ", "d\[Theta]initc"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.7612996698119493`*^9, 3.7612996903961353`*^9}, {
  3.761306637196088*^9, 3.7613066453193274`*^9}, {3.7614000095596743`*^9, 
  3.7614000145268326`*^9}},ExpressionUUID->"5cc421d7-52bc-4fda-b2cb-\
b5f8a4046d48"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"-", "7.61844837951239`"}], ",", 
   RowBox[{"-", "7.092444131660014`"}], ",", 
   RowBox[{"-", "9.312681655320372`"}], ",", 
   RowBox[{"-", "9.312681655320368`"}], ",", 
   RowBox[{"-", "7.092444131660015`"}], ",", 
   RowBox[{"-", "7.61844837951239`"}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.7612996912146697`*^9, 3.761299768180485*^9, 3.761300008358379*^9, 
   3.761304973198662*^9, {3.7613066484385443`*^9, 3.761306654458129*^9}, 
   3.7613223311553864`*^9, 3.7613521915673094`*^9, 3.761358225143587*^9, 
   3.7613589801600685`*^9, 3.7613787163510957`*^9, 3.7613824917559323`*^9, 
   3.7614000149365873`*^9, 3.7614003217729883`*^9, 3.761400425834507*^9, 
   3.7614007274437704`*^9, 3.7614015724162645`*^9, 3.7614016500956955`*^9, 
   3.762074093017638*^9, 3.7620747634815407`*^9, 3.7620749010380297`*^9, 
   3.7620750721285257`*^9, 3.76207595362381*^9, 3.762087040376716*^9, 
   3.762130298031546*^9, 3.7621307063028064`*^9, 3.762131230798301*^9, 
   3.7621314904421735`*^9, 3.762131696904189*^9, 3.7621322660641766`*^9, 
   3.7621328354392443`*^9, 3.762133160834483*^9, 3.762133417404224*^9, 
   3.762134078086046*^9, 3.76213433729967*^9, 3.7621346246171236`*^9, 
   3.7621556898285975`*^9, 3.7621576964823885`*^9, 3.762158701976303*^9, 
   3.7621589029383173`*^9, 3.7621590692028036`*^9, 3.7621593514803143`*^9, 
   3.762159644578653*^9, 3.7621598260438347`*^9, 3.7621601307974668`*^9, 
   3.762236299137497*^9, 3.7622366248307533`*^9, 3.7623134773332233`*^9, 
   3.762314524688196*^9, 3.762481294421303*^9, 3.7625105936511793`*^9, 
   3.763300848728318*^9, 3.764863971872524*^9, 3.7653729014258704`*^9, 
   3.7653732074294753`*^9, 3.765373344801801*^9, 3.765374741565236*^9, 
   3.7653749200772347`*^9, 3.7653750441345243`*^9, 3.7653752948091917`*^9, 
   3.7653754259773116`*^9, 3.765375514221328*^9, 3.765377318862776*^9, 
   3.765378538142191*^9, 3.766019725560656*^9, 3.766021007984729*^9, 
   3.766043317652094*^9, 3.7660434659755726`*^9, 3.766043694345872*^9, 
   3.766043800709833*^9, 3.7660438692383366`*^9, 3.766043906005353*^9, 
   3.7660444491322412`*^9, {3.7660446006520786`*^9, 3.766044607793959*^9}, 
   3.766046259354715*^9, 3.766050703353136*^9, 3.766052413399371*^9, 
   3.7660524614696083`*^9, 3.766054518211747*^9, 3.7661050131740847`*^9, 
   3.7661512514047813`*^9, 3.7661567426329155`*^9, 3.7662150889457273`*^9, 
   3.766268108374203*^9, 
   3.766291742789042*^9},ExpressionUUID->"a47c87cc-bfd8-44d6-83b2-\
a3a32927e39c"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{
  "Using", " ", "ADAMS", " ", "is", " ", "taking", " ", "a", " ", "lot", " ", 
   "of", " ", "time", " ", "and", " ", "hence", " ", "removed", " ", "it"}], 
  "*)"}]], "Input",
 CellChangeTimes->{{3.7624813839144773`*^9, 
  3.762481396711523*^9}},ExpressionUUID->"3a01e35b-54ca-416f-9bab-\
0ee75eaadaf3"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"tempx\[Phi]", " ", "=", " ", 
   RowBox[{
    RowBox[{"qeidat", "[", 
     RowBox[{"[", "1", "]"}], "]"}], "[", 
    RowBox[{"[", 
     RowBox[{"1", ";;", "18"}], "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"tic", "[", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"controlsim", " ", "=", " ", 
   RowBox[{
    RowBox[{"NDSolve", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{
         RowBox[{"doubledotscontrol", "[", 
          RowBox[{
           RowBox[{"q1", "[", "t", "]"}], ",", 
           RowBox[{
            RowBox[{"q1", "'"}], "[", "t", "]"}], ",", "t"}], "]"}], 
         "\[Equal]", 
         RowBox[{
          RowBox[{"q1", "''"}], "[", "t", "]"}]}], ",", 
        RowBox[{
         RowBox[{"q1", "[", "0", "]"}], "\[Equal]", "\[Theta]initc"}], ",", 
        RowBox[{
         RowBox[{
          RowBox[{"q1", "'"}], "[", "0", "]"}], "\[Equal]", 
         "d\[Theta]initc"}]}], "}"}], ",", "q1", ",", 
      RowBox[{"{", 
       RowBox[{"t", ",", "0", ",", "tf"}], "}"}]}], "]"}], "[", 
    RowBox[{"[", "1", "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"toc", "[", "]"}]}], "Input",
 CellChangeTimes->{
  3.761048802310381*^9, {3.7610488359995127`*^9, 3.761048915946347*^9}, {
   3.7610491758731337`*^9, 3.761049267722969*^9}, {3.761268370422258*^9, 
   3.761268370491316*^9}, {3.7612697337841682`*^9, 3.7612697393140645`*^9}, {
   3.7612698352378273`*^9, 3.7612698438241425`*^9}, 3.7612735508276167`*^9, {
   3.7612737245468025`*^9, 3.7612737268268433`*^9}, {3.7612748490580606`*^9, 
   3.7612748523781815`*^9}, {3.7612752616956415`*^9, 3.761275263309377*^9}, {
   3.7612755005038643`*^9, 3.7612755034681597`*^9}, {3.761276279302758*^9, 
   3.7612762948330107`*^9}, {3.7612763648127265`*^9, 
   3.7612763686574717`*^9}, {3.7612767337422295`*^9, 3.761276734291529*^9}, 
   3.7612999366325016`*^9, {3.7613000172783036`*^9, 3.761300044200635*^9}, {
   3.761300131724306*^9, 3.7613001944188976`*^9}, {3.7613008120833197`*^9, 
   3.7613008535632696`*^9}, {3.761300883655382*^9, 3.7613009026743994`*^9}, {
   3.7613009472744455`*^9, 3.761301062552153*^9}, {3.7614000538610926`*^9, 
   3.7614001092465277`*^9}, 3.7614001722224483`*^9, 3.761400340889022*^9, {
   3.7614004349303336`*^9, 3.761400448182353*^9}, {3.761400680102923*^9, 
   3.761400682261685*^9}, {3.7614007142883*^9, 3.7614007155675654`*^9}, {
   3.76140077610528*^9, 3.7614007858503027`*^9}, {3.7614015785221596`*^9, 
   3.76140158768767*^9}, {3.7614016590641723`*^9, 3.761401677612606*^9}, {
   3.7620741549572678`*^9, 3.762074203419211*^9}, {3.762074810128865*^9, 
   3.7620748109771204`*^9}, 3.762074875847302*^9, {3.7620749178671875`*^9, 
   3.7620749181573944`*^9}, {3.7620775893034005`*^9, 
   3.7620775898151064`*^9}, {3.7620776506782875`*^9, 3.762077650776224*^9}, {
   3.7620777182436285`*^9, 3.76207775532644*^9}, {3.7620781375187583`*^9, 
   3.7620781408988333`*^9}, 3.7620868209437757`*^9, {3.7621307251008224`*^9, 
   3.7621307262881246`*^9}, {3.762130906831638*^9, 3.7621309642237396`*^9}, {
   3.76213123910575*^9, 3.762131267691624*^9}, {3.762131499275281*^9, 
   3.762131518007135*^9}, {3.76213170227413*^9, 3.7621317193739896`*^9}, {
   3.7621322735902634`*^9, 3.762132289500375*^9}, {3.7621328486177263`*^9, 
   3.762132884589579*^9}, {3.7621331716983333`*^9, 3.762133201391026*^9}, {
   3.76213327636753*^9, 3.762133280818962*^9}, {3.76213342429731*^9, 
   3.7621334420979924`*^9}, {3.762134110314232*^9, 3.7621341521177664`*^9}, {
   3.76213434412207*^9, 3.7621344002876225`*^9}, {3.7621346309044256`*^9, 
   3.7621346478187675`*^9}, {3.762157704736667*^9, 3.762157728265235*^9}, {
   3.7621587124803057`*^9, 3.7621587788003693`*^9}, {3.7621589080533905`*^9, 
   3.762158954997535*^9}, {3.7621590789772143`*^9, 3.7621591532497244`*^9}, {
   3.7621591977392683`*^9, 3.7621591985827885`*^9}, {3.7621593632615957`*^9, 
   3.7621593809814577`*^9}, {3.762159649853614*^9, 3.7621596796805487`*^9}, {
   3.762159835637349*^9, 3.7621598508876038`*^9}, {3.762160135887554*^9, 
   3.7621601518454237`*^9}, {3.7624813620863037`*^9, 3.7624813625313516`*^9}, 
   3.76537307000498*^9, {3.7653731072197404`*^9, 3.765373108263937*^9}, {
   3.765373157091062*^9, 3.765373178444908*^9}, {3.765373366053504*^9, 
   3.765373371171548*^9}, {3.7653749696417203`*^9, 3.7653749698615932`*^9}, {
   3.765375116593317*^9, 3.7653751195979495`*^9}, {3.765375443099329*^9, 
   3.765375443212407*^9}, {3.76537854377934*^9, 3.765378544053154*^9}, {
   3.7660197512698574`*^9, 3.7660197519034967`*^9}, {3.766019784794011*^9, 
   3.766019785193762*^9}, {3.766043478626359*^9, 3.766043483301598*^9}, {
   3.766043640519209*^9, 3.766043649801159*^9}, {3.7660437047185965`*^9, 
   3.766043719818362*^9}, {3.7660439172508574`*^9, 3.766043921596119*^9}, {
   3.766043983477811*^9, 3.7660439877622128`*^9}, {3.766044454441348*^9, 
   3.766044455669138*^9}, 
   3.766044552503922*^9},ExpressionUUID->"f72aeeb2-9544-4ce1-9566-\
1f9583b86378"],

Cell[BoxData[
 TemplateBox[{
  "InterpolatingFunction","dmval",
   "\"Input value \\!\\(\\*RowBox[{\\\"{\\\", \\\"3.141592653589793`\\\", \
\\\"}\\\"}]\\) lies outside the range of data in the interpolating function. \
Extrapolation will be used.\"",2,263,15,25993525642924664479,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.7660446095530357`*^9, 3.7660462609978113`*^9, 
  3.766050703925315*^9, 3.7660524134840183`*^9, 3.766052463077218*^9, 
  3.766054518835504*^9, 3.766105016286871*^9, 3.766151251927482*^9, 
  3.766156743004705*^9, 3.7662150894784236`*^9, 3.7662681088229456`*^9, 
  3.7662917433327265`*^9},ExpressionUUID->"a46e2f37-a5b6-43a9-ab63-\
3d31c1d46505"],

Cell[BoxData[
 TemplateBox[{
  "InterpolatingFunction","dmval",
   "\"Input value \\!\\(\\*RowBox[{\\\"{\\\", \\\"3.141592653589793`\\\", \
\\\"}\\\"}]\\) lies outside the range of data in the interpolating function. \
Extrapolation will be used.\"",2,263,16,25993525642924664479,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.7660446095530357`*^9, 3.7660462609978113`*^9, 
  3.766050703925315*^9, 3.7660524134840183`*^9, 3.766052463077218*^9, 
  3.766054518835504*^9, 3.766105016286871*^9, 3.766151251927482*^9, 
  3.766156743004705*^9, 3.7662150894784236`*^9, 3.7662681088229456`*^9, 
  3.7662917433796997`*^9},ExpressionUUID->"8f1dd5d0-5650-4aad-99f1-\
ec65015be967"],

Cell[BoxData[
 TemplateBox[{
  "InterpolatingFunction","dmval",
   "\"Input value \\!\\(\\*RowBox[{\\\"{\\\", \\\"3.141592653589793`\\\", \
\\\"}\\\"}]\\) lies outside the range of data in the interpolating function. \
Extrapolation will be used.\"",2,263,17,25993525642924664479,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.7660446095530357`*^9, 3.7660462609978113`*^9, 
  3.766050703925315*^9, 3.7660524134840183`*^9, 3.766052463077218*^9, 
  3.766054518835504*^9, 3.766105016286871*^9, 3.766151251927482*^9, 
  3.766156743004705*^9, 3.7662150894784236`*^9, 3.7662681088229456`*^9, 
  3.766291743464652*^9},ExpressionUUID->"14c43b62-1e1b-44bb-9b6a-\
26ab084bad1b"],

Cell[BoxData[
 TemplateBox[{
  "General","stop",
   "\"Further output of \\!\\(\\*StyleBox[RowBox[{\\\"InterpolatingFunction\\\
\", \\\"::\\\", \\\"dmval\\\"}], \\\"MessageName\\\"]\\) will be suppressed \
during this calculation.\"",2,263,18,25993525642924664479,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.7660446095530357`*^9, 3.7660462609978113`*^9, 
  3.766050703925315*^9, 3.7660524134840183`*^9, 3.766052463077218*^9, 
  3.766054518835504*^9, 3.766105016286871*^9, 3.766151251927482*^9, 
  3.766156743004705*^9, 3.7662150894784236`*^9, 3.7662681088229456`*^9, 
  3.7662917435166273`*^9},ExpressionUUID->"92e2e15e-5375-45f6-990e-\
b31c49c5eeb8"],

Cell[CellGroupData[{

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Actual time consumed: \"\>", "\[InvisibleSpace]", 
   "0.5177044`6.864596853923753", "\[InvisibleSpace]", "\<\" seconds.\"\>"}],
  SequenceForm[
  "Actual time consumed: ", 0.5177044`6.864596853923753, " seconds."],
  Editable->False]], "Print",
 CellChangeTimes->{{3.7614015521625347`*^9, 3.7614015920363855`*^9}, {
   3.761401651736182*^9, 3.7614016780045176`*^9}, 3.7620741115181084`*^9, {
   3.7620741566123304`*^9, 3.7620742047944255`*^9}, 3.7620747665770392`*^9, {
   3.7620748715367184`*^9, 3.7620748815209837`*^9}, {3.762074914799252*^9, 
   3.7620749194309187`*^9}, 3.7620750767874155`*^9, 3.762075954083168*^9, 
   3.7620775932571306`*^9, 3.76207765195455*^9, {3.762077719123122*^9, 
   3.762077756210904*^9}, 3.762087040815569*^9, 3.7621302985116005`*^9, {
   3.762130722826357*^9, 3.7621307269607573`*^9}, {3.7621309077081985`*^9, 
   3.7621309652581477`*^9}, {3.762131236140467*^9, 3.762131268486165*^9}, {
   3.7621314960571165`*^9, 3.7621315187030587`*^9}, {3.762131698303711*^9, 
   3.7621317203038588`*^9}, {3.7621322696903024`*^9, 
   3.7621322902247057`*^9}, {3.7621328459802155`*^9, 3.762132885522927*^9}, {
   3.7621331634959636`*^9, 3.7621332020724974`*^9}, 3.76213328156054*^9, {
   3.7621334191991973`*^9, 3.762133443036455*^9}, {3.762134105802717*^9, 
   3.762134153487973*^9}, {3.762134340167325*^9, 3.7621344012983103`*^9}, {
   3.7621346261547685`*^9, 3.7621346486123047`*^9}, 3.762155690392276*^9, {
   3.7621577004371443`*^9, 3.762157728966802*^9}, {3.76215870914019*^9, 
   3.7621587801465693`*^9}, {3.76215890510408*^9, 3.762158956692568*^9}, {
   3.762159072414966*^9, 3.7621591555993776`*^9}, 3.762159209011819*^9, {
   3.7621593599154863`*^9, 3.7621593823476744`*^9}, {3.762159646741414*^9, 
   3.762159681730378*^9}, {3.7621598318145294`*^9, 3.762159852179864*^9}, {
   3.7621601370508995`*^9, 3.762160153407552*^9}, 3.7622363002472005`*^9, 
   3.762236628977519*^9, 3.7623134783827324`*^9, 3.762314526546832*^9, 
   3.762481401181245*^9, 3.762510594186092*^9, 3.7633008495578365`*^9, 
   3.7648639723572483`*^9, 3.7653729077971745`*^9, 3.7653731398948784`*^9, {
   3.7653731912901797`*^9, 3.7653732169972515`*^9}, 3.7653733732192793`*^9, 
   3.7653747440022326`*^9, 3.7653749230691395`*^9, 3.7653749710920715`*^9, 
   3.7653750459665394`*^9, 3.7653751207105823`*^9, 3.7653752956526556`*^9, {
   3.7653754402766423`*^9, 3.7653754442843337`*^9}, 3.7653755161493454`*^9, 
   3.7653773204663725`*^9, {3.7653785402105865`*^9, 3.7653785459972897`*^9}, {
   3.7660197315655003`*^9, 3.7660197871506424`*^9}, 3.7660210116846857`*^9, 
   3.766043318867836*^9, 3.766043468601326*^9, {3.766043634690236*^9, 
   3.766043646319871*^9}, {3.766043714464589*^9, 3.7660437234723477`*^9}, 
   3.7660437622522078`*^9, 3.7660438099295673`*^9, 3.766043876183217*^9, 
   3.7660439145132246`*^9, 3.766044547131173*^9, 3.76604460967545*^9, 
   3.7660462611514783`*^9, 3.766050704088137*^9, 3.766052413515266*^9, 
   3.7660524632152452`*^9, 3.766054518967057*^9, 3.7661050164917545`*^9, 
   3.766151252160349*^9, 3.7661567431436253`*^9, 3.7662150896163416`*^9, 
   3.766268109017833*^9, 
   3.766291743566593*^9},ExpressionUUID->"e803df1f-5b4f-4dba-96db-\
5f66a87d3072"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"CPU time consumed: \"\>", "\[InvisibleSpace]", 
   "0.4380000000000024`", "\[InvisibleSpace]", "\<\" seconds.\"\>"}],
  SequenceForm["CPU time consumed: ", 0.4380000000000024, " seconds."],
  Editable->False]], "Print",
 CellChangeTimes->{{3.7614015521625347`*^9, 3.7614015920363855`*^9}, {
   3.761401651736182*^9, 3.7614016780045176`*^9}, 3.7620741115181084`*^9, {
   3.7620741566123304`*^9, 3.7620742047944255`*^9}, 3.7620747665770392`*^9, {
   3.7620748715367184`*^9, 3.7620748815209837`*^9}, {3.762074914799252*^9, 
   3.7620749194309187`*^9}, 3.7620750767874155`*^9, 3.762075954083168*^9, 
   3.7620775932571306`*^9, 3.76207765195455*^9, {3.762077719123122*^9, 
   3.762077756210904*^9}, 3.762087040815569*^9, 3.7621302985116005`*^9, {
   3.762130722826357*^9, 3.7621307269607573`*^9}, {3.7621309077081985`*^9, 
   3.7621309652581477`*^9}, {3.762131236140467*^9, 3.762131268486165*^9}, {
   3.7621314960571165`*^9, 3.7621315187030587`*^9}, {3.762131698303711*^9, 
   3.7621317203038588`*^9}, {3.7621322696903024`*^9, 
   3.7621322902247057`*^9}, {3.7621328459802155`*^9, 3.762132885522927*^9}, {
   3.7621331634959636`*^9, 3.7621332020724974`*^9}, 3.76213328156054*^9, {
   3.7621334191991973`*^9, 3.762133443036455*^9}, {3.762134105802717*^9, 
   3.762134153487973*^9}, {3.762134340167325*^9, 3.7621344012983103`*^9}, {
   3.7621346261547685`*^9, 3.7621346486123047`*^9}, 3.762155690392276*^9, {
   3.7621577004371443`*^9, 3.762157728966802*^9}, {3.76215870914019*^9, 
   3.7621587801465693`*^9}, {3.76215890510408*^9, 3.762158956692568*^9}, {
   3.762159072414966*^9, 3.7621591555993776`*^9}, 3.762159209011819*^9, {
   3.7621593599154863`*^9, 3.7621593823476744`*^9}, {3.762159646741414*^9, 
   3.762159681730378*^9}, {3.7621598318145294`*^9, 3.762159852179864*^9}, {
   3.7621601370508995`*^9, 3.762160153407552*^9}, 3.7622363002472005`*^9, 
   3.762236628977519*^9, 3.7623134783827324`*^9, 3.762314526546832*^9, 
   3.762481401181245*^9, 3.762510594186092*^9, 3.7633008495578365`*^9, 
   3.7648639723572483`*^9, 3.7653729077971745`*^9, 3.7653731398948784`*^9, {
   3.7653731912901797`*^9, 3.7653732169972515`*^9}, 3.7653733732192793`*^9, 
   3.7653747440022326`*^9, 3.7653749230691395`*^9, 3.7653749710920715`*^9, 
   3.7653750459665394`*^9, 3.7653751207105823`*^9, 3.7653752956526556`*^9, {
   3.7653754402766423`*^9, 3.7653754442843337`*^9}, 3.7653755161493454`*^9, 
   3.7653773204663725`*^9, {3.7653785402105865`*^9, 3.7653785459972897`*^9}, {
   3.7660197315655003`*^9, 3.7660197871506424`*^9}, 3.7660210116846857`*^9, 
   3.766043318867836*^9, 3.766043468601326*^9, {3.766043634690236*^9, 
   3.766043646319871*^9}, {3.766043714464589*^9, 3.7660437234723477`*^9}, 
   3.7660437622522078`*^9, 3.7660438099295673`*^9, 3.766043876183217*^9, 
   3.7660439145132246`*^9, 3.766044547131173*^9, 3.76604460967545*^9, 
   3.7660462611514783`*^9, 3.766050704088137*^9, 3.766052413515266*^9, 
   3.7660524632152452`*^9, 3.766054518967057*^9, 3.7661050164917545`*^9, 
   3.766151252160349*^9, 3.7661567431436253`*^9, 3.7662150896163416`*^9, 
   3.766268109017833*^9, 
   3.7662917435715957`*^9},ExpressionUUID->"e16972d8-019d-48dd-8e21-\
5f4195b8847c"]
}, Open  ]]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"qcontrol", " ", "=", " ", 
   RowBox[{"q1", "/.", "controlsim"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.761401679246182*^9, 
  3.7614016890363636`*^9}},ExpressionUUID->"81b71122-e6a5-493a-98ad-\
c691daf9af91"],

Cell[BoxData[
 RowBox[{
  RowBox[{"qcontroldat", " ", "=", " ", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"qcontrol", "[", "i", "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "0", ",", "tf", ",", "h"}], "}"}]}], "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.7620753176574764`*^9, 3.7620753446511126`*^9}, {
   3.76207779837879*^9, 3.7620778061863127`*^9}, 3.762130731944253*^9, {
   3.7621309684683294`*^9, 3.762130968852089*^9}, {3.762131272266005*^9, 
   3.762131273158492*^9}, {3.762131523264081*^9, 3.7621315251537046`*^9}, {
   3.762131724042832*^9, 3.7621317241426*^9}, {3.7621322959297233`*^9, 
   3.7621322965293517`*^9}, {3.762132890146264*^9, 3.7621328906819563`*^9}, {
   3.762133207964303*^9, 3.762133208056246*^9}, {3.7621334463825393`*^9, 
   3.762133446653385*^9}, {3.762134160696925*^9, 3.7621341613005977`*^9}, {
   3.762134459124215*^9, 3.7621344595042477`*^9}, {3.762157732837593*^9, 
   3.762157733029501*^9}, {3.7621587851836863`*^9, 3.7621587854955072`*^9}, {
   3.7621589607082677`*^9, 3.7621589626531754`*^9}, {3.7621591625414095`*^9, 
   3.7621592134882803`*^9}, {3.7621593871929045`*^9, 
   3.7621593878515377`*^9}, {3.7621596882886295`*^9, 3.76215968844154*^9}, {
   3.762159856128604*^9, 3.762159856230548*^9}, {3.762160176028592*^9, 
   3.7621601766492352`*^9}, {3.7621602834421396`*^9, 3.762160290491136*^9}, {
   3.765373379453004*^9, 
   3.765373379553957*^9}},ExpressionUUID->"0cc9e8c2-2fe9-4de1-9b81-\
e376c87fbbef"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Clear", "[", "i", "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"tempinit", " ", "=", " ", 
   RowBox[{
    RowBox[{"qeidat", "[", 
     RowBox[{"[", "1", "]"}], "]"}], "[", 
    RowBox[{"[", 
     RowBox[{"1", ";;", "18"}], "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"qecdat", " ", "=", " ", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"tempinit", " ", "=", " ", 
       RowBox[{"TrackRoot", "[", 
        RowBox[{
         RowBox[{"qcontroldat", "[", 
          RowBox[{"[", "i", "]"}], "]"}], ",", " ", "tempinit"}], "]"}]}], 
      ";", "\[IndentingNewLine]", 
      RowBox[{"Join", "[", 
       RowBox[{
        RowBox[{"TrackRoot", "[", 
         RowBox[{
          RowBox[{"qcontroldat", "[", 
           RowBox[{"[", "i", "]"}], "]"}], ",", " ", "tempinit"}], "]"}], ",",
         " ", 
        RowBox[{"qcontroldat", "[", 
         RowBox[{"[", "i", "]"}], "]"}]}], "]"}]}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", " ", 
       RowBox[{"Length", "[", "qcontroldat", "]"}]}], "}"}]}], "]"}]}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.7613600277549977`*^9, 3.761360033865288*^9}, {
  3.761360139944888*^9, 3.7613602175748196`*^9}, {3.761360371676195*^9, 
  3.7613603779959717`*^9}, {3.761382627633966*^9, 3.7613826298666825`*^9}, {
  3.7613827230352373`*^9, 3.7613827260684814`*^9}, {3.761384895839926*^9, 
  3.761384896437567*^9}, {3.7620733148161135`*^9, 3.762073320808685*^9}, {
  3.762075299607189*^9, 3.7620753064175396`*^9}, {3.762075349687355*^9, 
  3.7620753966974344`*^9}},ExpressionUUID->"b6736086-97aa-4bb9-ae34-\
7761d82e3b7f"],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{"Now", " ", "collect", " ", "the", " ", 
   RowBox[{"{", 
    RowBox[{"x", ",", "y", ",", "z"}], "}"}], " ", "data"}], "*)"}]], "Input",
 CellChangeTimes->{{3.7620754157981105`*^9, 
  3.762075425017226*^9}},ExpressionUUID->"f5847276-8c97-4133-9599-\
a446cbe2e21a"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"xcontroldat", " ", "=", " ", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"qecdat", "[", 
       RowBox[{"[", "i", "]"}], "]"}], "[", 
      RowBox[{"[", 
       RowBox[{"1", ";;", "3"}], "]"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", " ", 
       RowBox[{"Length", "[", "qecdat", "]"}]}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Theta]controldat", " ", "=", " ", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"qecdat", "[", 
       RowBox[{"[", "i", "]"}], "]"}], "[", 
      RowBox[{"[", 
       RowBox[{"19", ";;", "24"}], "]"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", " ", 
       RowBox[{"Length", "[", "qecdat", "]"}]}], "}"}]}], "]"}]}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.7620754282112036`*^9, 3.762075449737013*^9}, {
  3.766046300737337*^9, 
  3.766046310799694*^9}},ExpressionUUID->"494f7f61-bc03-4eab-b972-\
2cccedff909a"],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{
  "The", " ", "actual", " ", "path", " ", "vs", " ", "the", " ", "tracked", 
   " ", "path"}], "*)"}]], "Input",
 CellChangeTimes->{{3.7620769311914496`*^9, 
  3.7620769392312784`*^9}},ExpressionUUID->"95bde097-f325-45e1-b0c8-\
19bd07f98e0b"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Show", "[", 
  RowBox[{
   RowBox[{"ListPointPlot3D", "[", 
    RowBox[{"xcontroldat", ",", " ", 
     RowBox[{"PlotStyle", "\[Rule]", "Red"}]}], "]"}], ",", " ", 
   "trackedpath"}], "]"}]], "Input",
 CellChangeTimes->{{3.7620755363104553`*^9, 3.762075582523831*^9}, {
   3.7620767526382833`*^9, 3.7620767548336906`*^9}, {3.762076792033409*^9, 
   3.762076930271679*^9}, {3.762131733114072*^9, 3.762131734120949*^9}, {
   3.7621535454200163`*^9, 3.7621535485062723`*^9}, {3.76537517544586*^9, 
   3.765375177716352*^9}, {3.765375914462117*^9, 3.765375982470358*^9}, {
   3.765376024500309*^9, 3.7653760318012295`*^9}, {3.765376090123581*^9, 
   3.7653761220949774`*^9}, {3.7653761779463243`*^9, 3.7653762930259867`*^9}, 
   3.765377030400261*^9, {3.7653786850300264`*^9, 3.7653786920486994`*^9}, {
   3.7660210553494987`*^9, 3.7660210558891697`*^9}, 
   3.766024006322152*^9},ExpressionUUID->"0e58382e-9548-47d1-8f33-\
6a14fcecdbf0"],

Cell[BoxData[
 Graphics3DBox[{
   {RGBColor[1, 0, 0], Point3DBox[CompressedData["
1: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
ywT++8Bz2P1tgzl3xeQju1X+heeMCZB1cdiBXSBTODr8Xj4aya18KmtGQGWK
yp9S0r/tMDNh18tHGQoKAfyWBFj5s1OwH9ty7ILjgXx0XmJ/7aQ1AePnKTHY
/7gl+7Zx5KNdNpN7a20ICJR9cRd7erUfi8xQHnq6q6Q+zI6ALruTp7ErsrW0
P4U8dIToCbK8SUCMzIoIdpchC5ae8DzkvDvSX8qRAKbKrNkS0sVeqLzd7ZyH
DCTVcyedCDh73qwR+9EinViHc3mIWUyIM+0uATxbOd9hv5QRuDNrdx7iir37
8qobAbP62bex5yhNS02szkMOT6KObfMgoEld7wR271zbqh29uQhNfRVqfkCA
7eb5bdifTM5NXyzIRc7aQeJ3vQio4gqdKsbrV39R8zAoF702ZLos+JiAYuMD
tdgNn0trJNrlolZur4IyHwL2aTSGY/cWpbs3aOaidUXXVC4/JePnr+lN7GGE
2+1vIrnIb3zt5LQ/ASGFs2rYL/8Ul1/8m4PmfMtrHwcQkFbkuxl7t2JXC1db
DkrO7a1ZH0TAo0NbxotwP/8zTH1Leg7iGKn48TaEAFGb5Arss8XmH0T9clBF
X9Uh0TAyb/geDsXeU3rst5hFDupMQEnRb8j3bam7jt3r8dHjoko56GbYK5Wt
b8nv6HBRBXvSn8tRAptyUKCu6N+XUQT0JPWvxx4nnMzCNZWNNAi1z0zvCZDL
vjlSSPqtMwefLjRmIwV9444bsQQM1i2WYJ8/yCTz7UM2sr5BLDLiCLi+42kg
9ucdOzga72ejM8MsqocSCXBm2WyNXTD647Zk/WykMmiUGJJMAO1j/BHsaQpJ
tx4fzEbmzcr7xj8S8FBPnht7Q5wU/xXObKSuw/sJpRMQfrxuoID0aIVT6/YO
ZaFBR+W3AZkEnC43KMCu5b/x+kJ5Fupw3v+wI5uAH0wT/tgjHyccqH6ThbLG
dbyF8gho0/U2w750lv+m7+0sZFrAF2dcQIDj323y2LdccpY6cSYLTf/r6X9T
RAA6WrAW+/aTg7dXi2chffkdStQSAnJNL/Xl4/q44d65opVMpCd8KZupnPwu
Gb+zsV/+qt9g15mJOmu/qe+tIMDO6a0v9rXcr39syclEKk80py5WEfDkt7oR
9h5Zfah+noncV4/nu9QQMOw9dQC7mGDh+etXM9H1A+deh9YR0HAthgX766qu
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
QL52YfLCdeRnfN3sJJ48hfsLnz71I/8fn+L8AQ==
     "]]}, {{}, {}, 
    TagBox[
     {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[2], 
      Dashing[{Small, Small}], Line3DBox[CompressedData["
1:eJxN1X1Uk2UUAPDBLETniPGlxyGILJyhQIgxUB4JTEdqSxBUdBJMT1I6RMAp
CZg4cUIIOM6K+FIRUMCh8dGUPWM4PoR9va+iCDRArRjWECkhVCLP4Xm759x/
fn/ce88995y7NJq/bZ85iUTaMJPkmbTw/i9w2JxyZY91OS+A9DZGgV/4rexe
Jg6flXUEfPNnLpj1HY69zf0LcJjR06kMfnoROe2aqC/vEQZXle7cz7asRm49
MtLzcw4G8WRpKEV4E3lSw8TFZXo9rMg2Phwsuo3cIGOsidbqoHQ/ja3KUiK3
yqqaBL9ooLVdsW/og1bkFkUMw5SmE0belxQwku8ifxBVEfQZuR26n3N55P1S
jTyOn56d298CzRLkdpGHdMhFITUTAi6EHO+eqFShHnlC7ZoQlqoOxp+MfyY+
gCE3FZzuKWXUwjPeOT7ODYS/jKwIszVWQHL9xyvpY4SXkuhGj/XF8LTBLPPm
Ihz565RJmwH6Wcj7dWeVg8f/PPH52V30VFBesPpRsRfhJfcCnj22+RF4ZKqT
SpYQTtty1JiaUA7uv7Jc/90k0fdwmJWWxpOCo41+oy+aCT+TQssb3lsH0rIy
iqbjCH9yjJHMCpKBQJ3MYWge4YKhzM1XYDNYQ3E+ce1dYj+9X14Nl7epgHv3
pSJmiRY5cyiQM7+9AxQlNtEiEruQ8wx2y4MXqwF1nD/hTOlAft7anjq8SAf4
MZ90kkfuIC9o52TnhuvBEzYXjqQokO/aRmXu88VAcY1yfJlvI/Ivglznx4kx
sPFpqY3vFuLeeEdsXwX3Y0BE5b7OkFQhj79AVf5GwYH/jSbdkMsl5K577Ej5
TBxc0CQe563OQ+5TuXvEyxsHlJbOwm7KWuSbTYMRh1fgYPtjX9qBsFw4661u
086smfqcwtF1blsvIT9fH0LJeYiBVgfF4N7d1cg5MRF01sz8dYpYcyHnJnK3
U6firwIMSMQXVX8YGpAvmOPvF87WA59jkxKnegXyIL8YC6d5OrBQhYPPF6uQ
v/fDxNdb16uBWfWKj+4PtCMP6OIetJF2gOK+waQpURdyroBdSH6hAg9EGnOv
b7XIu4TVKsF4M0hnugWrJ3TIHU8JtamXZcCU/A/5bzMMuZHfK9nzfj2oce9W
hEcT/sbW43pZbi34cJU/Sy0lPGzBkucCWiWwvMcgb3xOeFrOdbNBVSEwVXJl
VnQcedTlOyMDgafBvId1PYGehBvStZZ+jiehS4FoLMSL8OUHh6PrtxdA7bD/
Oz85Ed5vv1/JNiuHu5JMHOUU0Tcr8XsfQboUlmm8P1ipIHxDSjl2ObEOfrop
VP4Vn/BQ6RG6e6wc7pAz+8JK9chvTSfz/TtbYGFxc+PQEWJvnpPsKb8XbVBz
tDHSao4G+W1WS59VQifMEgK4u+cucndj9/E3bRo41z42ddNfrcjNXcVj+Td0
sCG4u7JiXIk8eO7jzFCZHmK9EoNLShPyZWPh4t/PYTB/vt6k6CfuTXXCSI3R
Y9BfzN2RcaIGedHa4XVJc3AoGz/k2bS0DHnsgYW8NDccetDlSVdWiZHP/heV
RRB35r/IZ/1f3U6OlA==
       "]]},
     Annotation[#, "Charting`Private`Tag$3320#1"]& ]}},
  Axes->True,
  AxesLabel->{None, None, None},
  BoxRatios->{1, 1, 0.4},
  FaceGridsStyle->Automatic,
  ImageSize->{374.84420572578296`, 171.46984300216104`},
  ImageSizeRaw->Automatic,
  PlotRange->{{-0.2927085411030455, 0.3000192476905536}, {-0.3003682139939624,
     0.2999990579610288}, Automatic},
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.02]}, {Automatic, Automatic}},
  Ticks->{Automatic, Automatic, Automatic},
  ViewPoint->{-2.224939323215225, -2.3920545623269844`, 0.8818843341738385},
  ViewVertical->{-0.15014368674532566`, -0.3564709448764798, 
   2.305408503374987}]], "Output",
 CellChangeTimes->{3.766021062165697*^9, 3.766043319859642*^9, 
  3.7660446277633643`*^9, 3.76604626702758*^9, 3.76605070502183*^9, 
  3.766052440774749*^9, 3.766052479311301*^9, 3.7660545199540377`*^9, 
  3.766105022214118*^9, 3.766151253215743*^9, 3.76615674411907*^9, 
  3.766215090776677*^9, 3.766268110162183*^9, 
  3.7662917452226725`*^9},ImageCache->GraphicsData["CompressedBitmap", "\<\
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
MLDr/h95T42o\
\>"],ExpressionUUID->"d87084f5-e083-451d-8ef3-9f7989c74f7d"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"Manipulate", "[", 
   RowBox[{
    RowBox[{"Show", "[", 
     RowBox[{
      RowBox[{"plotsrspm", "[", 
       RowBox[{"Inner", "[", 
        RowBox[{"Rule", ",", " ", "q", ",", " ", 
         RowBox[{"qecdat", "[", 
          RowBox[{"[", "i", "]"}], "]"}], ",", " ", "List"}], "]"}], "]"}], 
      ",", " ", 
      RowBox[{"ListPointPlot3D", "[", 
       RowBox[{
        RowBox[{"xcontroldat", "[", 
         RowBox[{"[", 
          RowBox[{"1", ";;", "i"}], "]"}], "]"}], ",", " ", 
        RowBox[{"PlotStyle", "\[Rule]", "Red"}]}], "]"}]}], "]"}], ",", " ", 
    RowBox[{"{", 
     RowBox[{"i", ",", " ", "1", ",", " ", 
      RowBox[{"Length", "[", "xcontroldat", "]"}], ",", " ", "1"}], "}"}]}], 
   "]"}], ";"}]], "Input",
 CellChangeTimes->{{3.7613525345514493`*^9, 3.7613525995739975`*^9}, {
   3.7613526599376373`*^9, 3.7613526775718026`*^9}, {3.7613527102595987`*^9, 
   3.7613527122490945`*^9}, {3.761352869532798*^9, 3.7613529143848333`*^9}, {
   3.7613533580700583`*^9, 3.7613533829595847`*^9}, 3.7613534488123856`*^9, {
   3.7613590997995305`*^9, 3.7613591120796824`*^9}, 3.761378063381733*^9, 
   3.7613788109738035`*^9, 3.761379733803532*^9, 3.7613801143101573`*^9, 
   3.761400228368084*^9, 3.7620440983334084`*^9, {3.7620444439193106`*^9, 
   3.7620444644426937`*^9}, {3.7620746923915167`*^9, 3.762074711820612*^9}, {
   3.762075624285386*^9, 3.762075639948639*^9}, {3.762075799047981*^9, 
   3.762075803854251*^9}, {3.762076230495495*^9, 3.7620762371442785`*^9}, 
   3.762076499716154*^9, 3.7620773656843543`*^9, 3.762089147142136*^9, 
   3.76213031194347*^9, 
   3.766105033844822*^9},ExpressionUUID->"0a5f3280-03b7-4db5-9446-\
c20e5d4e4b14"],

Cell[BoxData[
 RowBox[{
  RowBox[{"elist", " ", "=", " ", 
   RowBox[{"xcontroldat", "-", 
    RowBox[{"xtrackdat", "[", 
     RowBox[{"[", 
      RowBox[{";;", ",", 
       RowBox[{"1", ";;", "3"}]}], "]"}], "]"}]}]}], ";"}]], "Input",
 CellChangeTimes->{{3.765372934177271*^9, 
  3.7653729522873697`*^9}},ExpressionUUID->"d1a39c15-6f56-4a3c-ab2b-\
74fd4c4ba1c7"],

Cell[BoxData[
 RowBox[{
  RowBox[{"enorm", " ", "=", " ", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"Sqrt", "[", 
      RowBox[{
       RowBox[{"elist", "[", 
        RowBox[{"[", "i", "]"}], "]"}], ".", 
       RowBox[{"elist", "[", 
        RowBox[{"[", "i", "]"}], "]"}]}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", " ", 
       RowBox[{"Length", "[", "elist", "]"}]}], "}"}]}], "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.7653729539817195`*^9, 3.7653729907311287`*^9}, {
  3.766044657529757*^9, 
  3.7660446614405746`*^9}},ExpressionUUID->"067643c0-da3e-4158-994e-\
fa47945ed7d1"],

Cell[BoxData[
 RowBox[{
  RowBox[{"temperror", " ", "=", " ", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"time", "[", 
        RowBox[{"[", "i", "]"}], "]"}], ",", 
       RowBox[{"enorm", "[", 
        RowBox[{"[", "i", "]"}], "]"}]}], "}"}], ",", " ", 
     RowBox[{"{", 
      RowBox[{"i", ",", " ", 
       RowBox[{"Length", "[", "enorm", "]"}]}], "}"}]}], "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.765375623545156*^9, 
  3.7653756415409107`*^9}},ExpressionUUID->"d9e089f8-1a84-4bee-9b51-\
15fb1aa53e93"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ListPlot", "[", "enorm", "]"}]], "Input",
 CellChangeTimes->{{3.7660435037617416`*^9, 
  3.7660435069022765`*^9}},ExpressionUUID->"0e33313c-5d0e-4a69-b9ea-\
40a238529932"],

Cell[BoxData[
 GraphicsBox[{{}, {{}, 
    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.003666666666666667], 
     AbsoluteThickness[1.6], PointBox[CompressedData["
1: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
Cq/MnvGfZtG+UpitfqhksZoOlELnztyneQF0qBSO3wuN+wsV849IMSB9YLeC
fDpGPv7O+ZTFFXSCFLqi3We6P6JTpBiz6vKJN19ooRQf6scl3unC+U0kUtyS
/pl3T5+WSTFyt2GPTxZ0rhSFB95+0llG50nRHO/y08WT3i1fn3rLtCuJdL4U
o4u7vrDYRRdIUZc/uOF6GV0oxYWSdpu87tNFUmi2CYoZ2USXSNEUnje9XWfO
x1ImxXnf4+c+6dHlUhzeO1HtmwV9UYrpxc9mqNvRlVK4TNkfNMObrpIi7svD
88IUuloKsfVf0+976Roprn7/3uhVQddKsWlvw+8OT+gnUmy94h5S9IOuk2Ll
4FXRwd05f0y9FH8qOxvZG9ENUlwM6JlmM5tulGLvfeF5x7V0kxTPR/16mRhG
f5PCQMOqU5WMbpHv7yVPFhgU0X/kj3+G6HbOLVopE/0qLu8f+oFWzsTwJfO+
VXf4xNd/JsRtwm5kDKJVM/G14+xF7pNp9Ux8KL623XE5rZGJpPnj72z2pzUz
8efmhPZZIlorExf22dg+PEzrZuLo8PJH467T+pm455B7vOAtbZiJWcbv/wxo
y/l2jDJhIuhf76uumI8nE7a7jmvVDqBN5I83++dxyxG0WSbe+A44eXkSbZ6J
avUVYxfNVczfk4nxPW+M+2BHz8iExoi06xkutGUmXlmdbzPLn7bKRFSC7+uO
sbRNJvKGlkY/ENO2mdgQvP9d0U7aLhOHOtrp5x2lHTIxYfZTZJfTjvI+Q5ZY
5d2inTPRe/vbxSee0a7y7Sc651z7H+2eCc0z/VM6/aU9M/E7bPwDS1XOV+Sb
ibtz3BZn9qcDM+Hi3kXtyzA6NBOHHdM1HCbSgkyMmBPoWzOHjsmEq5ftpBX2
dEImCv5U+ze50imZGHRov4kkkBZm4uHcw1GzEmiJfPvp127uKKNlmWjTVqfj
g310biZ+WB2wP3GSzpOvL+Gk784r9O5MDD2Yu37bAzo/U/7+dM9i/1u6IBNb
Tb+pXGimCzPRfWbR/Q8dOX9TUSZOLfnvhJ4mXZKJ6UskJzYY0mWZUD58o77c
jC7PhPOgJ4uGzKEvZsqP13W65djTlZlwem0wVGcDXZWJuUMOFx4Lpqszseht
/IklyXRNJhZYn56tkkvXyp9PW/+AawX0k0x4ytSW5J6h6zKhGtjxc9hNuj4T
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
ZY2fcBdOYvb77uUj5jUH5vwfNa/VYQ==
      "]]}, {}}, {}, {}, {}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0., 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{0., 3142.}, {0, 0.005800847401732182}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.766044643414488*^9, 3.766044663178646*^9}, 
   3.766046272929708*^9, 3.7660507052757998`*^9, 3.766052487739436*^9, 
   3.7660545203329716`*^9, 3.7661050372040577`*^9, 3.76615125357154*^9, 
   3.766156744376917*^9, 3.766215091081502*^9, 3.766268110443017*^9, 
   3.7662917455284977`*^9},ExpressionUUID->"ecccf826-dcca-4f7b-a108-\
f04176492705"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"bla", " ", "=", " ", 
   RowBox[{"\[Theta]controldat", "-", "\[Theta]ddat"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.7660463208337493`*^9, 
  3.76604636273542*^9}},ExpressionUUID->"8feb9c32-a73a-4b57-a5e2-\
4bbb28736764"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ListPlot", "[", 
  RowBox[{"bla", "[", 
   RowBox[{"[", 
    RowBox[{";;", ",", "6"}], "]"}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.766046367735964*^9, 
  3.766046407464811*^9}},ExpressionUUID->"7b9ef626-d0cf-40ef-b900-\
3d4548faa3df"],

Cell[BoxData[
 GraphicsBox[{{}, {{}, 
    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.003666666666666667], 
     AbsoluteThickness[1.6], PointBox[CompressedData["
1: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
SRYyY+bCarLy2LkIWMP5dNYpYC2vT148Fdaxw35ONtfP+71pOclcP1ke+n2i
uX7O7/tUs0XzKL+N0WaLyfLPTcLM9ZM1VfzN+0nZn6pNMddPFlr2NOcjm8f5
lk8310+W/HKeZa6frFuQPdtcP+/39cE8c/08P19m7o+G5192izHXz/uvn7rS
XD+7X4015vo5n5q/E8z18/irflvN9XO9di92muufT/s75Zivr5isLPxz2Fw/
WTN2/klz/Tz+tKv5vAhk0Y3uV831kyXaxbfM9fP+bSrnm+snGz6cNZjrZ28/
+sZcP1kwPPlkrp/dq5v5fGs5fv/cqubzz+P6ePPjQc/7FUY3hA2c356NLWAj
We7/qA0siqZ82/Y1P97EZCE5vxcsISsl6kHmxz/beUqg+fFPFvmETTA//qO5
n8unmR//vP/kS3PNj3+yRt9kmfnxT5Y32qQ2P/45vm3rJPPjn+OteLjX/Pjn
/YftPGaun+NHLj5vrj+a+xt1w1w/7/9k+QNz/bw+bP8Lc/0LaH5WYam5frLO
rW2FuX6y6G28JZ4PpTy/W6X6sEBWzlrWDJaRNXcc3GA5z9+h84QVPF8yux+s
5PmHPQNgNY+nW4+DNWRhx4epsJZdXDAP1vH8OvkrzM//nP+WZwnm53+ypMHn
nebnf87Hxuaw+fl/IbmlV6b5+Z/9WnHN/PxPFpUdvm+unyy8Ln9hrp/H5QPN
P39kZPnvlN/m+smSSbWs8PNKwR4U1RBWkjVB753NP//IOr/J7uaff7z/sw89
zT//eH7OPH/zzz/O96H1aFjP8XP2ToYNnO8UnyjYyPsvKl0GixZRPnlJ62Ex
WdlBthOWsMNqHIalZM2/2ZmwQJbbxV2HZbzf84B8WM7z+zV/Za6fLDQq+2yu
n9d3uV4Jvw+oOd6q5DqwhiyqurQxrOXxnSGtYR2PT/DtAuvJBv/O5t83DDx/
hvMw2Mj53Wk4ARYpaf38ujNgS7JklvUiWEw2ZFqvhu3JQoDNVlhClrdptA92
IWvau5yEpby+V5fLsAfbze8uLJB1GaHPYR/OZ/2SUvPvUzx/1s5fcCC75aVa
+P1LzusXv24Ih/H6abVdYAW7oHMnOIrzvTrBG1ay3dcNgVW8f5tLcljN+2d9
nQYncv3WbRbAGp7fJHQVnMr11921GdZyP38Z9sIZPP9r8xOwjsfrhmXB2Zzv
CO0dWM/j934a4Hxev3RAKWzgeCOTfsHFnF/vj7XMv++SlY36O8DlXM/R3S7m
338XU/16UWfYkiwZIu9j/n2Yx50uDoXtyYKn83hYwuOr4xSwC1np+GUhLOX5
78auhj3YlW5uhQVeP8lrP+xD1kkPZcAyHg9tfhUOZDtsvgfLyaLRNkVwGNnQ
Lf4TrOD5N6wq4d8DUTzfJr4OrOTxRjZNYBVZ8z7RFVazY5t3hRO5vtJD/WEN
71eveyCcyvFf3gqFtVzP4OBIOIPX9/y5FNZx/EMJ6+BsjrdButP87xle/zX3
MJzP43ennzP/+4bjS+vdhIvZdU89ho28fsG4t3A5r19g9R0WLaF8Gp6ujn9P
WbJHTm4Ai8mSAY1bwvZk0ac7HWAJj49a1Qt2IQvxfQfDUvZ6CznsQTYoLk+D
BbLOdeUC2Iesue4fB8vYvg23woFk+dGX+2A5x/+engGH8bjjiquwguM3DroP
R7Eru7+ElezbtctgFdtndiXzv0fJ6l2vLOFE3n9eoBjWcD/u3LCDU9lpQlNY
y/XVPOkMZ5AVRjc3WMf7jU3tCGdzf0a06AbrydLCHd5wPvfjR2Nf2EBW7tk2
FC7m/V42GQUbOf/MnePhct6/jfNkWLTUZLFX2gzYkix622EuLCbrPM8qYXt2
Ox8VLOH1d/LWwC5kZeMJm2Ap79fg83bYg6w5G5MCC2Spnf0h2IfHWx48DsvI
8pLeZ+FAsn5aQRYsJxu1s3PgMLL6hE2e+fUGsmGp9jEcxXaUvTC//sDrl318
C6vIkksJn8zXn/fL7/LDfP3JsuuGSnh9Q8P5J62sAadyfoPd68Ja7scHgz2c
wfVFrpHAOrL2TQ8XOJv3G/SpLazn/u1K6Qznk4W3QT1gA8dzqd8PLubrI7/l
Bxu5fxtWDYfLef/r/cfAohjKp3LNUNiSLPTKmQqLyfo4dSRsTxa9Gr4AlpC1
g5sug13Iurtv4syvF/F8xYkE2IMsb7Usyfz6Ee9fbXgy7MPxa/ybZn49iSzr
+PsYHEiWrLl3xvz6Es93OHwJDiMrHsXegBUc727YXTiKrLbs/xhW8viC1i9g
Fe/XUfwOVnM9Hb59ghM5/gLDD/P15/n1cyrj9bJUHhedrglrOV7P/TZwBvtJ
kgOsIxserG0OZ3M+7itbwXruz9cl7eF87meLRZ6wgcczF/SCi3m/qwsHwEae
77NkCFzO+fZUjYRFy6i/J9XjYUuy9NDWyebXA8m6f/fNhO3Jxjan5plfHyQb
zt1YAruQ9QZDLCxlbypfB3uQJcU2W2GBfb/tbtiHLAr1PwDLyNqtM47BgWT1
/I1nYDlZU+PcJTiM1w8ovgEreP+e9fPgKLL4s3cBrOTx4DlFsIr3S0wrgdVc
X0JRGZzI/Rnd9Bes4fEvQVXxemoqWT5hmzWs5Xz2G+rDGWQh17kJrCMr8qY7
w9k8/8IZN1jP+yXW7Azn8/jYoB7m13f5+jU80g8u5n7dsJSZX+9lz5sQCJdz
ff9ekJtf/11O9TxqNgm2JIvjl82AxWShX8lc2J7HLYcvgSW8/u7FWNiFrDnQ
fj0sJSsT9myFPciKtY2SYYH3S0lIg314/n3xcVhGNjqrz8KB7K02V2A5r/dM
zIXDyPJqzR7ACrK+6kHz6+FRnF83r2JYyfkcyzXCKrIuPPg7rOb6p/+qhNfX
E8kG3eaasIasndilHpzK+08qaARrOb+bS5zgDO5Xomsb8+v3nO/thx3hbLJk
UWx38+v5HG9v935wPo8P+eoPG8iymCOBcDGP91GMg43sre0nw+Wcb1z5TFi0
gvotuTgftiTrg9bEwGKy1Ee+GrYnG4vdN8ISsryP9Q7YhayY8GYvLGX3v6aF
PcjCr7RTsEDWxiRchH14v5eLbsAyssFpeh4cyPv5jH8Cy3m/YSNewWFkmSyg
FFbwePeh5XAUx2sxvBL+nqIk6yxG14RV3I+XE+vBap5/bbYjnEjWpK9saf77
DHufxg1OJYsOnPn/32u4nyceCXAG13ftV39Yx/U9cxoKZ/N+5f5BsJ77bbMo
BM4ni9senQYb2H5v5sDFPH+G02LYSFZvmxALl7PzUtbDIhX1p9GHJNiSrJ/d
JQUWkw0lqsOwPdm4tCADlrB7uV+EXciKduobsJSs/M+YB3uQNWcDnsICWRd+
9jXsw/lMa/URlvH+N7b+gAPJ2jV1LfD3Mjnne2mVNRzGnlnTDlaQ1XtXS+Co
v/HqtzL//Y3zvbmzA6zi/PLadzP/PY4sX53dF07k9ZUnyGANu0flkXAqWeqf
MgHWcv5d/afCGbyf+NdsWEcWPzishLO535snxsJ6rne8UwKcz+Oer7bBBs6/
9cG9cDHH85p7BDZy/+cMOAOXcz8KJZdh0Urq97KKXNiSbAh5kg+LydLYS4Ww
PfvboRJYwj6y4yvsQlaf2SDC3zulZEnDtTVhDx6/sdYWFsi6u5uawD5kZbvd
LrCMrH9xrD0cSJYXX/My/32V3f1lXziM17+tOtj891ay5lPrUXAUxwv6LwRW
krVuqumwij3t3FxYzfOb/1gKJ3I9g7vGwxqy8c/iRDiV43fM3QVrub/lTQ/C
GVy/35yTsI7Xd8+7AGdz/291yoH1ZJHljvtwPvuD1XPYwPmqlO/gYs736fcv
sJHz/RYlwt+ny7kf+b9qwqJYk2WxqvqwJVlSr6EEFpOFeYdbwfZk3ZWBHWEJ
+8/7HrALWe26cQAs5f0DvIfBHmTlwvKxsMD7Hz06Gfbh+N9mRpr/nv53fRfz
39cD2berroLlZE1k/gY4jKz1OaKBFWTDYPUBOIqsT4w8ASt53GncBVhFVvwa
kgOryeJWAx/AiX/z7V8Ia9jb/N7DqZzPpxHlsJZ9akoVvF8gg/19aW1Yx/07
tashnM3xK2U7wXqe/+BzWzifx3s7d4UNZOPAsX3hYrKofPtg2Mjz/V4GweU8
f1j7MFi0iuqrv3wWbEmWrzMshMVkIa9nLGxPlhXt2wBLyIpc+52wC9m4LT7N
/H4Jsn50rQzYg/ezX3PJ/P4JsuRBw1uwD8/ffeARLOP9V3i/ggPJ6tiij7Cc
x4+v+gWHcfw6njXw/g0Fz99ZagtHkTUz0iSwkutfoXCFVWRdcVcPWM3j22p7
w4ncn/3F/rCG5ze4PgpO5fqKj06EtRzPafcsOIOsvb3F/P4SHdlQtnkVnM1e
r9kE67k/6Yd2w/nsUVmHYQPHi39+Bi7m8aHVsmEjWXS4fR5czv3YG2qARXFU
T69dJbAlWbLsZTksJqsjpVXx/hh7dsOldWEJWZjzpDHsQtYl9GgFS8mKqH2d
YA+y3qVRb1jg+WkJ/rAPWVyrQRAs43wG7giDA8myCGkkLGfHX1sMh/H8nZPj
YQVZdLzeVjiKrL2TtRdWko2VF6bDKo7v3+MCrCZrdJa5cCLXP+7RI1hDlnql
v4ZT2aM2lsFaXn9NWQnvP8rgeOtm1YZ1nO+laY3gbO5n6EwXWM/5qhZ2hPM5
v07re8EG7t9crT9czPmNuR9kfr8Tx/tgMRku5/UdvebAotU03zM6BrYkGy0v
r4XFZGFfgx2wPdtpRhos4fVL8k7BLmRljnAVlpIlNU/kwR5kWW/3Qlgg6xed
KYV9eP+rA3/BMs5H8rIm3s8VyOMJK+xhOVnu0sEZDiMril53gBWcz609PeEo
ztcY7g8ryVq/bqNhFedjbDAFVnP8J9+j4ESup/Gr5bCG8zn+OAFO5XgHH+2C
tWSx9QstnMHrH5edg3VkUVPxTTibxw3uj2E9jztPeAPnc//Kt3wzv7+NbBhT
UBXvfyvmesb9YwsbyTrL6OZwOfcr6JEUFsVTfiG9esCWZHnr9EGwmCzNaBsE
25PVtscnwxKytr/3XNiF9xv3ZAUsJQvByo2wB3t0mz2wwPsPLzoG+5AVI/Zc
hGVk5QzFbTiQLNvXxwDLycZaLUvhMLIuufZvWMHzF1W2xvsFo3i/vSJHWEk2
tKnRGlaR9c6OnrCa99/TpT+cyPmeHRcIa3i/BQkT4VSO9/X2bFjL7uSwHM7g
eAOmbjC/f5H7IdxIhrM5XjP3dFjP+//YewnOZ991vgsbuN8ntIVwMVmyv88n
2MjX5/EnEd4/Wc75zMy2hEVraH7SbjFsSbYPirGHxeTi9MkS2J4s3jfcBZaQ
jZ4+UtiFrA3v4QFLySrBS4A9yLKM7j6wwPHu95XBPuSMrQGBsIzzqxUmhwPJ
UufFYbCc8/uwQwGH8fjErChYQfZY+0EJR/F+05ushJVknyoBa2EVj8vWbIbV
5MBA/U44kaxrYrff/P5UsjxlwlE4laz+dPy0+f2qZEO12pfgDM7v9ZQbsI7n
b7p1F87mfjl2KYD1ZP281CI4n5x6svF72EBW5id+gYs53xcNf8NGsuKpphre
X1vO6/Vt6sAiNdV7QWcHW5ATT46QwJZkl8xyF9iKrHywrR0sJuts+nvCtmTN
nB+9YHuyXnx0IOxIlpZMD4AlvJ+d+2jYiaza8TsEdiGL1Lemwa68/+eUObCU
88uLUcLu5CjPSSthD57vFrAO9uJ8TvbZCgscv6BbMuxNVuzyOgj7kDNq9zoB
+5KLW/qdh2W83zt5NhxANk6YdxsO5P6u3fIIDuL5kRdewHKyh21pCRzM9U5r
8RUOI6fGjPkDh5NlIzSW5vdTcz4lxXXhCHKg4NEIjuL+BMQ7wdG8/7/v2sBK
ss95v85wzN/rcUqAVWShfasBcBxZLN41FFaT1Ucko+EEstYuJRRO5Hx6t1fA
SeTsjpfnwhqOZxyzFE7mfkT+iYNTOd8rKRvhNLL8ZYAG1nJ992vsh9M5n62X
j8EZHL+L6iycyef12OCrsI7Pe53mt+Essv2Q74/gbO7P4gdFcA6fp92ZH2A9
769LLYfz2M+2Vsb74fO5nhobreAC3q/fpgawgc/X7h0SuIjP77+HW8HF3P+i
y+5wCc83vOgOG8lhrjX6w2V8vu53HAqXc/8+ThoNV/D62D0TYdFa6v/R4hmw
BTkqskM0bElOfbZsOWxFzv/5TA2Lybq7PbfCtmSx4sAe2J73z3fUwo68vt7G
07CELHKxuww7kSUOmluwC8f/IH0Eu5KFfdeKYCm53HdyKexOlhXY/IA9yIEj
Llng8wpeZNXl+XXMn1/g+M29HGBvHp9u0RL2IasP5bWFfXn/Z2mesIycXWl1
HziAbKgfKYMDOX6jkFFwELm47uhQWE72+R40Aw7m/W8HR8NhvN/miBVwOK8f
ErcOVnD8igPb4Aju76a7qXAUz3eqkg5Hc3/3eJ6Hlbx/w3nX4Riy/bIL92AV
WfpG/ByO4377hJXAao639+o3OIH3q9G2Cj4/kkjWzNpeG07i/r6t7wBr2BEb
WsLJZIV943ZwKln/JM0LTuP8bnr7wFo+r6VFQ+F0rs9/9Vg4g/P/1m0KnMnn
6fPX2bCOrB2csQTO4uvVdEk8nM3xpwRsgXN4fr+2KbCez+MVm6NwHu//4/dZ
OJ/P/9fP1+AC7se1j/dgA9e/pPw5XMSPHzfLD3Ax9/uB5AdcwvXG9qqGz+sY
yRl+U23gMrbrziZwOZ+n1k9bwRVcn8yps/nzP+voemlm9YYtyOWSHH/Yksfv
tgmCrchCZmKY+fNCPP+xVSRsS5a7xy6G7ck+V8TxsCPZcp1mCywhKzd12Qs7
kRX3Hx+DXchivxU62JWs/tX1JiwlG198fwi783zRhVewB1kvW/sZ9iLb35ss
wuehBHLxqkHWsDc5LKKLA+zD9a92+wf2JYvyXd1hGTl1iHtPOIAs/e3tBweS
PR6PGQUHcb/eLg6D5WSXtoci4WDOf/+LJXAY7z+muRoOJ0fJJm+DFeT8pWfM
n++KYP+qnwFH8fysuZfhaK7v6as7sJL7PXS0AY4hS1yfvIdVXM/M0J9wHFkm
/W6Jz5ep+TzM3NAATuB+eXd1ghPJgSfetoOTOL97u3vAGu7HsdBBcDKfh/Ed
RsGpfP3KakyC03j/hW9nw1rOr969GDidnHjx2jo4g+tNytbAmZzPoduHYB2f
H4uXmXAWX68DlW/A2XxeDrR6COdwPOvRr2E99+vh5i9wHvez/vMq+DxePjn7
ansbuOBvPfES2MD1ar64wUX8+MgN7QYX8/lcVDgQLmGfDBsJG/nxMOd7GFzG
9Z9PmAOXs9Wey+EKnv/2bQIsWk/53tyzG7YgZ3tMOQpbkstbd70AW5GjUurr
YTFZtffHU9iWrHR7+x62J2s8iypgR/aN4lr4/KKEbPn8mwPsRNbPq9sKdiF7
bO5o/ryjK1nnFewDS8ny0G3/we6cn93zUNiDbBjcdjbsRRbbq5bBAtcX/i4B
9iYLASOSYR+y9M7tY7Av9+ddwCVYxk4pvAMHcP415hfCgWQfxyaf4CDO79WN
Svg8p5z7MSOmLhxMLr7arxkcxv0sq98ODicnVikVYAWPV74rgyN4/M8FORxF
ltXMVMDR3K8OF5Swkpwad1sNx3C/XN5rYBXZ2ND2CBxHlij6XoDV5DDPmNtw
Ajlw+c3ncCLPlzf/BCeR8+8sqWz+fCufv+IPNnAy57MvtAWcyvs3edsBTuN6
B831hrV8frrZDoPT+fp9Oh0CZ3A/ZkydDWdy/HOtV8A67s+TL5vgLL4et26k
wtncj00HT8E5ZJHH1uuwns/nkYTHcB7nb7GlBM7n89PhwC+4gPvfLbs2Pu9r
4PPc4qP5879FHP9Vy3ZwMc9fHtoLLuH+Vjk2FDby9RldKwQuI2s3Tp8Nl3N+
h56tgCu4n3tGbYZFCbTfghf7YQtyWOc5mbAlWXavQS5sRbYfcfEZLCb7XJ77
EbYlZzt2q4LPN9uTy8db1YcdeXzra2dYQtbeyPWAncgZ3y4MgF3IypYXgmBX
zm9UzjRYSpZrXihhd7Kkotp62IMsmtNpD+zF+TrMPAkLnE/pqWuwN/ejcu0C
2IccNXraB9iXnGr9WITPc8u4H5KAenAAx9v9sCUcyPntmeIBB5E9OtccCMs5
n7Djo+FgHu83VQGHkRXP2y2Fw8kuvatsNH+enKye8zwVjiAbVDln4Cier8zK
haO53pBrz2Elj/d8XAbHkFVWv6rg8+sqcvr3ddZwHK+f3NYOVnO/x9+RwAnk
vOfzW8GJ5Kx3rd3hJM53cWE3WENOS97RD07m6zt8wmA4levZ1GYUnEZ2nPw7
GNaSbXPvTYPTyZqsY1FwBjnOL3EJnMnj4UvjYB05uWnkRjiLHBw2VQNnc379
wvfDOeSAczPSYT0/Pm4uOAfnkRMj1dlwPtk3Y98duIDjb7xWABvIRXWNr+Ai
Xt+68Ue4mBz0UvYTLiGXCauq4v4DRj5fQk4duIyse1nPAS7n89NhvBNcwefT
9aQbLNog0M83my6wBdni38jesCVZ2+HpINiKnPZlUCAsJifPzBoP25LVh3qa
749gT9YcvDwHdiQLEbIlsITsUr0wDnYi+0yZtwl2IefvabgLdiUHZJ5Pg6Xk
iPTwk7A72TVBchH2IEeNe5wDe5H1zbY9MN+/gRz4KKQQ9ub61nR8D/twfn2t
ymFfcmalt5VxPwgZWXwl1xoO4HgbT9vDgWSr2QdbwEHkpIl73WA5OXtqahc4
mFweq/WGw8jhF877w+Fk93r3R8IKsveSzyFwBM8X28+Ao8jB53tHw9HkPPXs
FbCS+71cuw6O4f7u/LgNVvF+L7rsg+PItn4r02E196Pw2Xk4gWzY1e0GnEgW
qXfdh5P4PByoXQhryLJvi9/DyeT0iIpyOJXjt1xogftzpPH5qVVdDGu5X/9s
agSn83lY4PYPnMH7Wd9sD2dyvx/N7A7ryDmvmg6As8iW7nnD4Gw+L1lrxsE5
5LitQ6bCel5/2nEunMfnpeWHGDifHPTkihouIHu9SkmCDeTUXvGpcBGfjy/R
6XAx71d5lg4uISumKHJgI/fTPTIfLuN+j1tcBJeTCz4nGOEKzt94uAIWbTQ5
bOQdS9wPxYJscK+whS3JvkvbNIOtyI79Q9vAYrJmZUoX2JZs6fOhD2xP9lnR
bQjsSLYakDAGlpBL1n2aDDuRheDAObALr9ddXgq7cvx9nmpYStZKTibB7uQy
l677YA9y+qUrx2EvcsanERdhgZx2siwX9iZ72256DPuQpTV7FsO+nP/WT+b7
ycjIMdkHKuF+MwG8PiG8NhxILv/j3ggOIgdaV3WB5WTXcwXucDDZwzazJxzG
8+vu9oPDyeEn146CFeQIS1UYHMHXs9rySDiKHHRs1RI4mhxVd/MaWEkubn4o
CY7h6/Hm+j5YRdaHlZ6A47i/OxtlwWqybpP/bTiB++m76imcSHa5lPsOTuL5
vxp+hzVkiz/h1XD/nmRy9LWr9eBUcubYVs3gND6PWQlusJb3+17NC07n61F5
cX84g8/L88r/wZlk46a4YFjH1+vfJjPhLO7XppOL4GxyQFHgajiH7GRTeav5
fkPk1ObHUuE8ssou/AScz+f5k2sWXMDnJ/3LbdjA52P0lWdwETnbuP09XMzj
4Yt+wiXcjzsTa+D+R0bOt3mgHVzG/QyStYTL+XotknWAK8jB8YE9YdEmk5NX
hPnDFmRxuHI0bEmu6KqZAluRy75dnQuLyVGabytgW7K0U9uNsD3ZcGpaMuxI
lrmeOApLyNHxVS/ATuSI50G3YBdygHPmE9iVx8e0KIGlHG/Vuh+wO9n2UI0a
uF+UBzkjW2UHe5GLC+o4wwLvV7LdHfbm/L537A37kBOq3hsM+5LD6kXLYRlZ
1LL1dDiA43kVLoADySVBO+PgILK9KmwrLOf5us774WCOX6POKTiM+xP84Soc
Ts7Mu3cfVpBTgy6/hCPIOb8zy+AoctLZzCq4n1Y0OW5rlg2s5Ou5Ja8ZHEN2
PFcihVXcz+rWAhzH/ZvT0R9Wk+U2oWPgBF6fv30qnEiOuf4sGk4i6966xJnv
70VO6zJvK5zM5+Xk3f1wKvc/pONpOI2c3mvHNVjL9qv7EE7nelWriuEMsmWp
dTmcyVYmVsf9xnRk1y6t7eAsPg92V5zhbO633aROcA7ZorNtX1jP8WZeHQbn
8ePl6pIQOJ+vv3vfSLiAHHyy7jLYwNdv0MsEuIjP81ddMlzM5+NwcjpcQvaZ
q86CjXyehsTkwWX8eO6iLILLub9tY8rgCrKLu9oC918TJZos65dsC1uQ1ZN0
TrAlOXFrkTtsRRaeivvAYrKmfZ9hsC25fPPiENienFH/SiTsSI7ea7MclpDF
gyduhJ3IAbZZKbAL5/fZ5STsSpYYN1yFpWSRda182J3s7qsqhj3Itlrr77AX
2ei5tQbuRyeQpaVSB9ib7HgrtxXsQ64oiOgK+/J+jVr4wjJy1KqHQXAA2Uma
OBUOJJfVHLsQDiIrG7utgeVk70lVNXAwObi0SAuHkfXanAtwOPfrUOYd8/30
eP7r9BdwBDk56HgZHEX2sj5XFffjiybbl+c2gJXktEbF/8AxZENkjS6wimxp
0WEAHEfOvhg8ClZzvYe2h8MJ5LALhgVwIvfzW6s1cBL332eBBtbweTn84Aic
TI5o6XkJTiVb7U7Og9PIJc3tXsFacvqOtd/gdHK4rW0N3I8wg5wQvd0BzuR8
86SusI7j2d3oBmeRA3tP9Yez+foF2I2Dc9j9r82E9WQfydIYOI8cdN97I5zP
/ZxcOxUuIBcXPDsFG3i89akbcBE/Pv7b8gQu5sfP2KWlcAnP946ohPsvGvk8
VZ9aDy7j/FOntoTL2S6zO8MVZK1qeX9YtJl8ffso2IKcU3puKmxJVn1/tQi2
Ise9abAOFpNjLvglw7Zkl6XxJ2B7skR6Pxt2JNtfb/kYlpCThix4Dzvx/BsF
f2AXcrRD8xq4/6QrWZM9wsZ8P0pyuGJDI9id7GFzzwn2ILsdsneDvch+3vLO
sEAOzTsgwN5kmzE/+8M+5EMGv6GwL3nkqJQgWEYuzqkUCgeQCzuMmw4HkufF
Z0XBQeTYR62XwHJyfP1Nq+Bg8havahvgMHKg79ztcDj5q2DcCyu4vgZTjsAR
ZM+rb07DUeREv/AsOJqcl/zpJqwk/7gQ/QCO4fnbaz6HVeRzHZLewnHkmvPb
lcFq8sZp13/BCZyf5cTquH9oIrlXn+p14SSyqOkBB1hD7rRuiBOcTJZt/dUG
TiVLO6d1htPIjhPG9IS15CxH24FwOu83/mYAnMHXo13sGDiTz2/sgDBYRw6Y
UnsmnEVOvXtvPpxNFi5plsE55Cae09fAevJyj56b4Txy+bkGu+F8zj+3NA0u
4PUTc07ABnJ+bJoOLiKneKqvw8Vk45w5eXAJn2/v8U9hIz9edsqK4TI+3+pe
n+ByfnzW86iAK/jx5Nqumvn+r1voehW0EcMW5DRnNwfYktyrVnsn2Io8JK6L
GywmBxzw9oBtyZpJQ3vB9uTJ2SG+sCN5f/b84bCE7DZlgxx2Ii/UHp0Mu5AL
Eu9GwK5kwal8ISwl+w6RrITdyd7NfdfDHmSL9fO3wV7karsP7YUFcnfZyyOw
N7lTYtNM2IdcNGf0FdiXfOLddj0sIy8vffEIDiDHLnR9CQdyv9ZHlcJB5HP/
ZH+H5dx/90YWuD9vMHnksRm14TByzJYb9nA45/fcpQWs4P4vWNkGjiC7THjf
GY4iz1wW0AuOJm9/cM4XVnJ//Fz/g2PIhidJ42AV93eBOByO4/63WDEbVpOX
XBUthhPIW8YvWAUn8n7vKzbASeSgCYs0sIasP2txAE7m81cedxxOJYvE9jo4
jc+HKOU6rCWHXu10D04nrxt//RmcQR6ul7+FM/n61PlRBuvI0U03/oGz+Hr/
ca+J+ydnkwu1923hHLKx/fym5vst8/jy5q3gPPKdgznucD7Zcd/cHnAB1z/v
3wHm+zPz9W5REAAXkWumrB0LF3N/LQZMhks4nlA1EjaSw0ZfWgSXkX2CYmLh
cnJGD58NcAX5aY06Gli01eTszPz9sAVZPnLPcdiSHFwUoYOtyCOD+t2AxeSE
S473YVty7UZfDLA9efYE/TvYkdxk2yHz/aolZOPVNZVwP2snjv9ilhXsQg7/
MNIOdiWrXns3h6XkxJx2bWB38qstzTxgD7Ktv21v2Iv9soYfLHA+gZVHwN7k
Xbt+TYB9yMK5n9NgX/K53RVzYRm5fIBoGRxAzt9fTQ0Hkn1P1dkKB5G9pjRK
geXkeen/HoGDySdWeGbCYeTo+4OuwuHkmmsn3IEVHH/P/CdwBLm5xcZiOIq8
fevRz3A0OW307d+wknzU61MN3F88htzJtX59WMXnQ+IpgePIlcXjWsNqzs+4
shOcQNadSu8JJ3L/gp/7wknkvm/qBMIa8tdewgQ4mewZPnManErOkKfMhdPI
uY4FMeb7oXP8bfXUcDo51OC7Fc7g6/ViRQqcSfZOyToC68jSf6qchbPI7UN7
Z8PZ5DETlt2Fc8jOTa89hfVkvy2138J55MJ7w77A+WSnu9tFuJ97AVm9/k0t
2EC+aN/JDi4izwyOaQ4X8+MvKq8NXMIe7twFNpLdRfO84TLy8jm3/OFycslZ
51FwBflO3qJQWJRkctjZRzNgC3JaVOcFsCVZqL5RBVuR5036uh4Wk313BO6A
bckeqZn7YXvygKXNT8CO5MptYy/AEvKYfZ9zYCeytnRMPuxCPvT7xgvYlRx4
x7MUlpLfhhz4AbuTnx5rXA330/cg3z++ti7sRVYHV28MC2TDyYUusDd5e8q3
DrAPWeM8swfsy/m5fhgAy8gRaVOGwwHkmYlvx8GB5PLnk6fCQWT7uSVRsJyc
5Ds9Bg4ml/X/vAYO4/6NjtoKh5P1M3+nwArypznLjsIR5GmjrM/BUXz9rDde
g6O5voVN78FKcuHOfQY4hqya7F4Cq8gNbp7/BseRHc8PrILvL1CTnTrn14YT
yMmuIQ5wIue36VNLOInPx0xlO1hDDj9euxucTO4VtM0HTiU7jHcNgNP4/Fw6
MxbWcv/mD5wCp3O+Kx/PhjPIzm+mLIEzub+bK8zfv6Dj67Fl9WY4i6wsbrIH
zubrG6PVwjnk5VN7ZcJ6nr877yqcRx7uPPEunE92+/r9KVxA7l5v9VvYwNdz
geQrXER27ZReCd8XUczn1cvHGi7h/dYW2MNGso37DCe4jNykZTUpXE7+PWFr
V7iCx43SfrBoG/Uv+8oQ2ILsXRI0BrYkR4/4PAm2InvUjo2ExeTf1Zsthm3J
13tnxMH2ZKtz/omwI8eb+Xo3LCFrgxYdhp3I+tl2Z2AXcvbpw1dgV/KuZj53
YCk5ebfhCexObu8x9w3sQb5zr+4X2IvsMHO/CN/PIZCPVuptBXuTPaMe28E+
ZFn2rBawLzniRa22sIzrO73bEw4gB3bt2hcOJIcNuzMYDiJbfgkbbf5+EPLF
qn/C4GDOd0ZCBBzG+Tr9q4TDySWWZ1fBCu6/tWwTHEEOal64C45id5p1CI4m
x3WtchpWklOd1l2GY8jLXza9DavI4llpBXAcWXqpczGsJmfmXPgMJ5CXrBjw
B04k25TcronvR0kiP/r8XwNYQ65ILGgGJ5MH3B/bBk4ld9/73ANOIxdWH+8N
a8m5ZQZ/OJ3znTJmFJxBdg17FApnki3eBsyEddzvDzcXwFlk28g+K+Fssnr+
mQQ4h89XJakG1pNrV919AM4jByy3PQnnk4WYmItwAZ+X359uwgZy8aexD+Ei
8tdxN4rgYnKrAR2NcAl5+P5tP2Ej77fYojq+j6aMHw85k2zgcnLzVTcbwxWc
/+m2/8Ki7SY7/ad2hy3Id8aU9oAtySk3fQfCVmTljtThsJisu1V5PGzL+40Y
NRW2J+s7Ho2CHcneY6vHwBJ27sg1sBPZMC9tC+xClgdV7IFdyd0nDTgCS8lN
Nm3MhN3JWY8MV2EPspXLv3dhL3LRjOlPzd/fQ/baf+wN7E2udvFLGexDdt/X
UfQBj39ygt+sWrCMbNxxqAEcQC5c+boZHMjj3xq3gYO43nuDPWA5x6+ztDcc
TN6ecMQPDiP3HfZkBBzO9faqFgIruL5Brgo4gvw2zH8+HEWOWjl9ORxN9t0d
txZW8vU+kJIEx5BbbT67F1Zx/eNvH4XjyLN/Pz8Lq8m2oaXZcAL5ytrvd+FE
cu480TM4ifNzsHgLa8gDwi2+wMlk1aRKInzfUip5i/XPmnAaOWfox/qwlny0
c5EETufzd/xuaziD7JZ9vhOcSa45NbUnrOP8Nat94Szy9dHT/4Ozyad3DRoP
53A/p7hMhfXkXel/5sB5vH7e3SVwPs8/vXs1XEB2VCgSYQPnk9hlN1zE/XX7
cxAuJo9peyEDLiEnbVx0CTaSs8d65sJlZGH5x3y4nOxQdc8LuILPz4OAD7Bo
B/Xzq+g7bEF2OpxXCd9/ZUk+WOWf6rAV+UTkHCvz92WRdZWu1IVtyQ7JNnaw
PTk/cLQj7Ei+3yilmfn7tXi/4hJn2In8+HQ7V9iFPG11RDvYlSwbdbwTLCW3
bFrWFXYn+92V9oQ9yK9nTOkLe5Evl+0eCAvkOcMeyWBvsvfq2sNhH3KbDcIo
2JdcHKKQwzKy4du2EDiAPKj3tclwIPez56fpcBB54Dv7SFhOFnl1mwcHkwva
jF0Eh5EvnlkYA4eTnxu2roQV5COJJ+LhCK73ae56OIoccbgoEY4mL6tWvg1W
cv0Gy91wDDmvi10qrCIPr9PiIBxHfjTa9SisJk9o3uEknECuPbJzJpzI56Fy
lwtwEl9fO48rsIZ8OtH9BpxMbrfETQ+nkq/dbnkPTiM3XObwCNaSMzdbPYPT
ySOsK17AGeQNT4qL4Uxeb3n3Pawjr449/QnOIm8cv+MbnE2+u3pxBZzD16fG
uEr4/jg9uWdet2pwHln11q4WnE9uNaC0DlzA+xsv2cIGHn+8oSFcRO5YPaQJ
XEwun9GuBVxCTrb/+Q9s5OtTfsEVLiM71l7eDi4nG4f36wRXkM/eqtrV/P13
GpNHRV7oAVcmx3vP84YtyFae0v5wNfLcIS8GwZbkibHrh8A1eb+nwn+wFfn6
gHej4Npkx5x1clhMPjCmcwhsw/N/50+CbcnnUudMgxuQrwbWmwXbkyW10ubA
DuSfZ3pGw45cz8Q8JdyEbF0zeBksIR/cYVwJNyenOc2Lh53IfhtE62FncuH7
pebvD3QhT2htkQS3Ih/xXayBXcl/ZD+TYTfy0s4z98FSsuLPy4Nwe/LHvcOP
wu5kF2nWCbgTucMmtzOwB7lxwYbzsCf57a/vl2Av8qqfI7Ph7uQXdzNyYIGc
tazebbgX+V2dKfdgb3LVGecfwn3J+/aKn8I+fL2PjimEB5BXrNn3CvYlr+z2
8S3sR95zumMpLCPXrDrnMzyEfMfh+Dc4gFzlR+lPeDh5reYfEb7PMZA80irI
Ah5Jdu262hIOIl9udcYKHsP7578Uw3JyaS/r+vB4sja0XUM4mLy955DGcCj3
//b0ZnAY99smtiU8mcctdv4Lh5MX7UpvA08jd3uX1Q5W8Hl6fLsjPJP8esbj
LnAE+eb+593g2eSWMUU94Shy7M8XfeB55MO1Df3haPLoM/mD4IXkyD83B8NK
ckX++WHwErJt30Mj4Bh+vPTZPBpezvvlKcfBKj7vn4JD4Fjux/Y+k+A4ctP8
5lPhePKhbRUKWE3uUnonAl5H3p+zJwpOIPfsFBkNb+Tr79pTCSeS47Q1YuAt
ZNWl3BVwErnPRPUqeDs/vrb5rYE15I6Ta6yHd7Fv6TbCyeRl+ogtcAr5vKLl
djiVHHHkzk54P69PiN4Dp5ETHVrsgw+RO/e9kgZruV77UC18lJ+v1ldOh9PJ
CzO2noRP8PVZ2e4MnEF+VS3rHHya13cYehHOJG8TP7sMnyMn75h4DdaR3QtL
cuCL5PyH0/RwFrmR6v1d+Ao/nj+EPYCz+fmg9vNH8HVy9bfDnsI55DZLrj6H
c/n5Nb/jS1hPti/VFMN3yDWuWpbAeeRm46eWwvf559HF3E9wPj+fFrt+hR+R
BzxY8R0u4POlflYBPyV71XcXmb8flhwQtqwKXEhOWnW3GlxEHri4SU34Ffn0
wFBruJgc+n6/+ftm3/LzSVhJPbiE7HyhlR38gWz5PcQBNvLPs3rbG8OfyDm2
dyVwGZ+3PxZO8Fd+fs3v8A9cTh6ye2wr+Ad5a7CqDVzBz4fNDknh3+R/nuo7
wKKddL12GjvBlckHp1t7whZkueyfbnA18u3+3QXYktx6wpDecE1y7eQJfWEr
sq/tzP5wbXLqmQW+sJh8bedyf9iG3Dk3bghsS57oox4GNyDvt1sbCNuTu/de
Mwp2IPe7EzsGdiTrbywdBzch3+g0LxiWkB0cpk2Em5OXRY+dDDuRrwT7TYWd
ycsfeipgF/Lo506z4Fbkh0usZsOu5EVZH6NgN/LVtLz5sJT71+v4Qrg9uemq
9Ythd3Kj+OkxcCfy5sH9V8AePF4giYU9yW3dv8bBXuQZ8mtr4O7ktRO3rIMF
coBs0ga4F3l7s06JsDd5aqFoK9yX/GrztW2wD/k/f7UGHkDuWnPYbtiXr88d
uxTYj6/P4fxUWEaes2/TAXgI2f1awCE4gNzKTnwEHk4ennTtGBxIrjF+8Ql4
JPndjM6n4CCy5f13Z+Ax5PuJ28/BcnKHy/4X4PHkyNA/l+BgskJ18AocSo7q
PPIaHMb9UVbNgSeTdYrDuXA4eUGDwNvwNPIQ5Z+7sIL89eye+/BM8k7DgIdw
BPfn+4fH8Gyya8N1T+Eocj2Z+3N4HrnJoXsv4Gjyy16zX8ELyXsbN3gDK8lD
Bx1/By8hrzYM/QDHkNNffjTCy8lFk9d8hlVk0ULXr3As+bjrtXI4jrw0JuQn
HE++sK7Sb1hN3h28TYTv815H9q7epQqcQD6wIq8qvJEfv5+mW8KJ/HgYVqsW
vIWfz86mWMNJ/HzUqZcY3k4+dfOJDawhu6ydWx/eRU5aXd8eTiZH6484wCnk
sRP9GsOp3H/5u6bwfu5vtqo5nMaPv8POLeFD5IYtLv8Da/l6tw9uBR8lT39f
pQ2cTh42IbktfIK8JblPeziDbHHxtTt8mq9PTmxnOJPs+MDNEz5H/vfzXS/z
96eT27nP6wFfJNc61KwXnEXuE3ndG75C7rIjoh+cTbbqJRkAXyefj7jpC+eQ
Pf2j/eFcfr546zoE1pPfjH0WAN8h515f/x+cRy7pO2AkfJ/crbTyaDif/PHx
2bHwI+5Hy/nj4QJyXKFnCPyUz7Prr4mwgXy20cXJcCH599WVU+Eijt8/QAG/
IotPN5sFF5PrtPsUCb/l63/1chRcQj65MWk+/IHc6eTshbCR3KNXwGL4E7nm
4I4xcBn5S0XDFfBX8uKxlWPhcj4f6z7EwT/IwuGna+AK3l9/Zx38mzy3zo0N
sGiXyf1WXE2EK5M7DMneCluQf8fe3A5XI2t8H+yELcmDjr5MhmuS5zwo3wtb
ke8+EB+Aa5MDb7U5BIvJ/R/5H4FtOH79OemwLflL0u6TcANyVvy907A9uaWl
9TnYgWzxz4ALsCM5pcbqLLgJ+VTuvauwhOy/wekG3JxsjJ6bCzuR4/fk3Yad
yVvbdroHu5AreW3Ph1uRW5dYFcCu5NrjlzyD3cguut+FsJS8+t8lr+D25JcX
rN7C7uSIg9vfw53ITnU9PsIe5GU2D8tgT/KzB4vLYS/yblX7Crg7+aHvuz+w
QJ7jm1blC37+k0ccjqwOe5P7b+tXC+5Lrt69eR3Yh9z7VNV68ADygU6fGsC+
5NdPXjvAfuTk+6+awDLyRp/S5vAQ8vxRlf6BA8jNOjduDQ8nT6nSuy0cSA4s
ntkBHsnXo/bBznAQeW/Sx67wGPKRTEGA5eQTG7d4w+PJi4b+8YGDyWLH6YPg
UPK+hm8Hw2Hk25GK4fBkcsDIyqPgcPKwjzvGwtPIfUP6B8MK8nfD7zB4Jlmz
RjcVjiDfS4qfCc8m73KfNAeOIscslUXD88gRJ7wXw9Hkkh99lsMLyZ8WBqyC
leQGMxRqeAlZKdqyAY4hlwfd3gIvJ78+0UADq8gTekzeA8eSpS45++E47s9u
Ly0cT1a9PHMcVpPHNBtwBl5Hdot7rYMTyKmjEq7AG3n+FVkOnEi+WqXxHXgL
ub/v9wdwErnHw5dP4O3k6i8LX8Aa8vH9xjfwLvK3CXWMcDI5v3+Pr3AKOXmD
sgJOJZcq71b+ip//5M19PGrAaZxf48N14EPk9709GsBacu6nu47wUfL8kCUt
4HTy8Ae9W8EnyHYx9u3gDHLOXpEHfJr8cGFFdziT/LuPVV/4HHmEp3QQrCOH
bA4LgC+S/2iOj4KzyJPW2E2Ar5B9d8dPhrPJGY0azYSvk9t4nJ0L55A3ekQu
hnPJQ0b3Xgnrye6v/1kL3yGvsGuxGc4j15F23AnfZ88asw/OJw9oseMI/Ihc
I+bbKbiA3PDhxIvw/1qy93Assy4M4JJkdHCWkCQJSUiSJJmS6SBJpZKMJCSj
RkIpyRcVpQMZnSQjdJIOQxI1kiSppJJkpEZEEpEM33O/7j9/11p77bX3s1+r
66oGfubZWkLXwhqbDz2j6+DN1vOr6Xq4eoTGe/oDLDZTuoVugEf/J9NJN4r2
S5wk1sn5D/u7ev9Et8CLjuTJ063w3nADdboNPhN4YxzdDj+8uWoS/Q3+mqg+
je6Cb639bkN3w/vc2xbQPfCu94OX071wzHSLX2mxs4LXXtu7gRaH/5f0bQst
AS9YvCuMloQTVfT301KwpN2XOFoa9jF+kUQPhdXGV5+nh8P/bhP7i5aFR+6e
fZeWh7fFpj2iFWHHLoNXtDLsJfO0nlaBpScktNKqsMSZnT20Opx5P0qqi/Nf
tH/HVUVaE5bdPWAMrQVr3N80kdaGD6oOsqB14E2Vuba0LuzuFL+E1oePtBx1
ow3gB31/baQNRfnv+kJoI9H5OnyjaBN4wuG+ONpUdD8jss/SZvCHf+Kv0Oaw
+OIT+bSF6P7+Ln5EW8KD/1Cvpq1E+SYJjbQ1vOXz9O+0DSw/WUrqO+c/bL7m
P2XaFu6pVNOh7eAxvWun0PNgzWmVs+kFsEHzZifaHp4UZuFBO8DPnCcG0I6i
/mvmR9BO8OLg+KP0Mnjm4WF/0s5wx+Er1+mVcOv78CLaBf7t264XtCscZXS5
gXYTvc8BQ7ppd7j6edyQbs5/eOkoh1G0J/ze1mIS7QUX33WaRfvAiuJJS2hf
WCdQ3ZP2g8fHlgTR/nD9nYz99GZR/6F5p+gAOGnqwCw6UPRe126/RwfBWlv0
XtEhcPA76WZ6OxyhPWbAD85/eOtlXyU6DLbvadajw+FHu/+0oiNE6/OPLKH3
iM6rl+NFR8F5M5R30PvgRVvPH6GjRe9nSXA6fUD0fuzD8ulY0XkbCp7Th2GT
pOmf6KNwVnureA/nPzxx/T8j6QTYMHiYMZ0IK1/cYkefgOX2qLrRp+DRUT1b
6SRYwVw9lk6GY9VC0ugU0X3nKN+hU0Xv41jbKzoNHmE9/CudAV+38Bn6H+c/
HC43WIe+JNp/0fuZdKbo79XOQSvpLFH+RK8A+profv8ddpC+AedM70yns0V/
n7O179E3Yb3m+Fr6lqhfH/se+jb88O58lV7Of3hq5EFT+i5sNV91MV0IVyZ/
2kgXwRVag/fTxfBHN580ugQ++1W5iC6FN2weVk+XwdFb7MX7OP/hsfFVmvRT
0XzZmDWTroCL4ipd6Up4Z/rcHfRLOHW25Cm6SvR7kFC4TVeLfq//86uha+Am
r5F9dC18UkdaVixf5DrRe/x4WZOuFxwWumiHMf0Bfpm2xYZugEfaxS+hG+G3
O2s96E+ww1mnQLoFHiH5NZJuxX7re3L/oNvgzqrL5+l25A/uLMujv8GrU0eW
012w7czYOrob6+NVJnfQPaL72SsuNaDfvchf3tirSoulCFY8omtIi8MPq3fO
oiXgNs1BS2lJODIn24uWEiw2fMDx7bQ04occL8TSQxE/+1NzCj0c8VXhq3No
WXjFyN5HtDzy7054XEcrIj5rxJNOWhmWspAYJt5vFfhxm5cWrYr1FUl9U2l1
xF+eLV5Ia8DaLoVraU3kR+p/Daa14MX+S2NpbVF/B5tSaR34x8frebQurPTu
WgWtD0vXNDTRBnC+lePAgf02RP2T3l9UaSPED/xdZEKbwGJZT+fRpsivS1Ra
S5vByfUHt9HmyDf+NusobYH4gKkGF2lLUT2ZRUW0FeKnP2S8pa3hUh3r77QN
3GYuoyDR79lY/2WPykTaVnRfIS5zaTvEd4e+/pWeB2/tjttOL4BzXKKP0fbw
Otn8LNoB9VaGG5bRjohP03z9kXZC3Mv53qBB/V6G+JDE5jG0M+JDljpZ0StF
8e7vK2kXxDd312ylXWH34oFxtBt8s9Iri3YXfc8/hpfTHqL72d3RTHsi3jRE
Y6hkv71gq3NR+rQP/HPplF9oX3hy2zgv2g/+HrsikvZHffMxT1LpzfAs9Zgi
OgD5aj0xH+hAxEOnV0gO7ncQ/Gip23g6BNa4b2JHbxe9j6ELvOkdiAckX9hH
hyHeM3jpBToc3ps7p4yOQH645c5Weg/8VVpcQarfUXDMubIp9D6sTzny3pmO
hg0Xz91OH0D+Hff203Qs4gfnN/9NH4Z9Dpo00EfhvKzCoT/1Ox7rD1ikGNMJ
cPCFJ8voRPjKgYXb6RPwf+tVkulTcHa+STGdJPq+o0620MnwVWlnJel+p4ju
S8bDkk5FP0nX76yl0xBfGrlpP50Bm8oEXKUvwJ4vH7ymL8HH/H6XGNLvTNT7
unrTRDoL1ptcuIy+Jnqv23zD6Bvw7EKfDDob+a3H8yvom4ivObShj74FHzX9
TX9ov28jP1j54VK6APGa4p276Lui89bEXKQL4fLGjld0EdZvCM+WHNbvYtF9
WFROpkvgC+mLfqVL4Uue4w7SZaiX+pNzHl2OeMCEhib6KeJV6ypVh/e7QvT3
ZMnYeXQl/Ojg42D6pejvxV+v0+kqrO/0tKuiq2HNGcpDZPpdg/y0l3Ms6VrY
/dWLjXSd6Pf5tvQ0XS967zHjntIfBFu/sNkkLsv5DxtPEVenG5Ev03pvCv0J
fnfv1iK6BfX3/fSvN90KLxw+J4JuE1xQPf7FKboddsw4mUN/g00aEyroLqxf
b/ngM90Nz/5mOESO8x8O31iiQ/di/ayu4za02J9Cf1LNZ11pccHW+cl1IbSE
4IIb/s7HaEnkn7k06Bothfwj1xrLaWlY8vXgFnoo/DRk9RB5zn/BYSbNTbq0
LFyw/6otLY/6gZnXPGhFrD9//XM4rYx8pW8eZ2gV+H6pYgGtinyjuL4aWh39
q5wf10trIP6nT+QoBc5/7LfEaNwMWgvxLuc+F1ob8buzlENpHexnaudzktaF
9Up+5NH6yH887mENbQCn5bzsow3hk/XaYxQ5/7F+lGSmDW2CuPaOEA/aFDa7
GLGHNsN5PNrL0mhz9Dv/+oqHtAXqyTiOa6Etkf/rRBM5Jc5/xLdlhJnS1ohr
TpRzpm3gkyPrt9Gz4eKK76dpW/QjVuhYSNvB+gs/N9DzUP965eNhypz/WJ9w
v92EtkfcIdLVmXZAvDZ02A7aEed5piCeQjshPjXLsoRehvVn7+a10s7Y3+jy
/0aM4PzH+m11R61oF6xPvd+0jnaFl5fsi6HdRP0u23yddsd671fJb2gP+FS+
uqQK5z8strXWkPZCvZsbW5bTPqgXLD93F+2LfM+KxgzaD/l6Y6sqaH/4o59S
H70Z5/lF96TeSM5/2LNgkxMdiPpVaUd20kGI5y4ZeJ4OQTxu8p1Kejvim3If
iaty/sOlrnqT6DDR9z5UsYoOhxcXP46iI1CvZKvaDXoP1q9Ryn5HR+F8r5RT
5dQ4/5Ef2PZ+Jh2Neu81gvzoA1g/V2H1STpWdB9z40rpw3C0yZge+ijy3ywc
YKDO+Y/9vsqZudAJyFfsyo+mE5HfFnw6jz6B/BS55y30KcQvTftVcxTnP/rt
8Z3tSCeL/n6M3xlBp6D+1Xq5v+hU5B/W+u8jnYb8ANdZozQ4/+Ezym8d6Atw
34PKCPoSLN+lm0Nnon6PZmUznQWH3avRGs35j/z/PH92pm8g7h8pcYDOxnmC
0rUK6ZvwQodT3fQt9Fvfl6uiyfkv2M1Yw9mULhCcdOzeWAf6LvJbzUf70oWC
NT1y50XRRbB3bGoKXQzf+2Fyhy6Bo2e1vqFLYc3Umm66DDbx6x0xhvNf9Pe/
ZtEU+inOqzLjmSNdgf6elUX505U43+tX/gfol6L+UvZfoKvgtoBXJXQ1vPTw
yo90DfbL+FlGSovzH/Vcyjt16Drcj2aYoi1dj366E9etoz+gH3Pvpgi6AQ6c
nJpCN2J9ok18If0J9Svf5tbTLegn1WnEoLGc/4JrnzamjaPbsN7vk78t3Y7v
/fzsb+vpb+jn8qo/o+gu7N/kKp9Bd6N+YdeNh3QP8m8FHGmme+HTGmky2pz/
qUJ/u2w6jGlxwQV5BtucaAnBbt/1LLbSkohrRJok0lKCNd0OeeTR0oKtzeLL
a+mhqO/2LlBiHOc/4nVFy3VpWcQHH/x9AS0vOGn1vhJ/WhG+NXh1HK2M9euX
TbhJq6A/5aIpb2lV1HuTul1Ch/Mfcd1fxPRpDcQL/itYRGsKrr2nlL+F1kL8
r7ru47Q24j43Au7SOji/wjuDj7Qu+puZO1Z2POc/+ntxaMVU2kB0XzfLXGlD
1L8RuXsPbSQ4LME+6BJtgvsctfZiJW2K9d9Gju2jzRA3LX41XpfzH/Ws/37i
QFug31q3ISG0Jfqb1rnnLG2F+3hQPfsRbY1+N3jN6aRtEF/2JWqMHuc/1ms8
lllA28JXV1QF0nbwrx8bztDzUO9J5fRH9AJ48LZnXbQ9zusxKVNbn/Mf61MX
PnWgHdH/h0kWobQT1h83akinlyE/LqO6knbG+SW+j5CYwPmP+v5bE41pF5zn
zi6PNbQr7tM8IDCGdsN9Bpwvz6XdsX5jxO+NtAfqh7isGWnA+Y/4vENH7Wgv
uClMIYj2gQv3Vp+jfVE/Qbr1Be2H/iPc7aUmcv6jH/Evneb0ZuR/UGr2pgMQ
dzE2PE4Hov7ns7mldBC8qyyulw7BeRfJ5xkZcv4j3lpuvJbeAS/1bY+jw5Bf
bDvoAR2O8zbf9eihI9Bv/s8KRpM4/9FfvIGcBx2F9Zr/uCbQ+/C9ou71lNLR
qDf9dIeYEec/HOocp0bHCi63vbPajD6M/fYOXbSYPor9Nmz09qXjkT9nxMVI
OkGwUfoM1bN0ouDYFYpXbtMnYIfHm6roU4Jl85JdvtFJ6Hfg35vkjTn/sV+e
xxVDOgX75dxSm0+nor/evsz1dJrgzKK1myLoDHyv8FGrz9AX0F+Ve8Bt+hLe
d7r3X6/pTPQ3yEvnO52FuNnRO8omnP9Yf1t7ryl9Q7CDo0OoI50t2L924Sl/
+ib6i3b6dIC+BV85vv4ifRv1/lkpW0oXYP93Dz400ndRP1uz6afJnP84X9yx
UXp0Ee7ro+cOO7oY65ffH+ZFl+D+bn15GEmX4r71R+eco8vwXpqint+ny0Xv
12tMA/0U6//sPCFlyvmP89n62+nRlegneqj2PPolvk+lpNEGugr75f7hG01X
C26VFKu6SNeI3nNA0GO6Ft9rzGS7L3Qd7udM4C8KUzj/cb6PIdun0B+w/5tt
/yynG/CeE64HhdCNOJ+Ph81J+hPOU1NoVUC3oJ+rCn7v6Fb4XUy5pBnnP+qf
9PfUp9ux3u77JHv6G/rZtW7iZroL9zf6q2s83Y3zGNYW3qR7cN52nzVv6V7U
63tiKDGV8/+ckK/tNFmPFhdcG2S00Z6WEJw0P7X6d1pScKtex64/aCnB1jUu
q/NpacGa/qN+e08PRb721r+GmHP+Cy7fmWFmQssKFrPp+uRMyyPf50zVTloR
+5v/25dKKwsOGz9kdRmtItjoq31bB62K/ePb80dN4/xHvV+siubQGnCk3yA/
WhPnlSoOjae1UO9ezKR8WltwbIe4WgOtg/3lN1jLWXD+Y7/nPyVZ0Po4n9lY
Cw/aAP1v+jH8AG0Ii73QyKaNUO90t3cdbSLYf/751qHTOf+xv43h1am0meBM
iQdX3Glz3N+SO59iaAvkG632yKEtBTvU1am8p62Q/zlBWs6S8x/5o4umzaBt
kL/zSqo3PRv3syp5cTxti/7m1Fr8TdvhvMOvurfS83C+R+4PRs3g/Md9Vk39
bT5tj/3LQ5yCaQecJyYg+BztiPgUv5rntBO+l/6V3RJWnP+opxLpPZl2xvtt
mBbrTq/EeyxV6DpEu6Ce2Zozd2hX9P/GM/oL7Ybz523JGTOT8x9xpRe6jrQH
6nlVVoXTnoLdQvMfX6W90I9bzeD3tI9gr8z8WUOsOf8FJ+zdOkab9sN70Z0x
dgbtj/OpTp27jN4sWFctOuY3OgD9SK/9FkUHCnZuqduVTAcJbvhsYnSLDsF6
l5ABlfR2wbIptR2f6R2Cs11ihknP4vwXHDQzzU6bDhdsrr/inBUdgf1GF+ut
oPfgPcwZVf47HYX9P4YlHqD3IX+72t50Ohr3dUTpRCF9APfTeOzZWzoW+7k/
nPSDPoz7HvAqU9mG8x/f5+vHZSZ0PM6zf7yWPZ1wTvTvb3kfOhHf43KZ7h76
BPo7ud8jmT4l2O6bWtFtOgn9Pkhf+JpORj37NT866RTcf73nY8WfOf/xvWSa
HhjTaeg/VLnJns7A77lPYbIvfQH9HBqevJe+JFjKydj8HJ2J93DoXEchnYV+
ck5U1dHX8H7XWf4rNpvzH/07ZamNprPxe/1NP2gGfRP7FZX3rKJvieo/SQ+h
b+M9Gq3Y+QddgP0mHg3Npu8ibn455QVdiPdk8KL9G10keo/T/JTncP7j+/QO
kDOjS7DeZc2bpXQp7uPMjmdb6DL0/3vM1zi6HP2eyZlxg36K9WONsyrpCuSr
ay3upCuxf+VNVRVbzn/BxUV6MtPoKvw92H/ScCVdjfXNs4O30TV4f2/sP5+g
awW/3NoYe5uuw31LzHWtpevx++g4slx8Luc/fj+NYqHadAPyL+aV2dKN+Htm
1L3Am/6E7xP3oXM/3YJ+x119fIluRX3n2IondBvO//iSZAfdjve+Yqanih3n
P/7etmz+Op3uwu/xRsilNXS34LSBUcd20z14r0tKL52jewWrLAluf0iLpQn3
86rAq5UWFxzVVDFE6RfOf8ENuf++mUZLCk5Ln/DWlZYS7DDrmUwELS241VLO
P50eKtg8QkXsMT1csL+BekE7LStYLHhRpuo8zn/BRq/fl1vTiuinTV5rPa0s
uDhaOiWGVkF+qtjya7Sq4ARvvemvaXXYKMdBfD7nfxr+v7r+mB6tKTh7ZK3s
YloLflWbG0Rro/9Xan8k0Tq4r9VFacW0LvqrUmpqpfXRT8dMt5ELOP8F6+4K
kbKhDXFf4T/e+dBGgmMNvrcdoU0EF7xLn5JHm2K95ewLH2gzwc7dvctkF3L+
Cy5XkDOzoC1wP5lXfvGgLfH99FUOH6CtBEsN2y6TQ1sLtlZQuvuOtkH/E9Qy
httz/guWDSi6P422xfqZi9TW0Xa4D5mWlFh6HtYnvva4RS/Afd93WNVA2wvO
vLInSnER57/gl3/e+GRNO+K82qpRG2kn9P+2cWUivSwN/353X3efdk7D7zn3
XDu9Evv9rCIn58D5j35PhzaOp10Fq7hMqLWi3fA+Plu1LaXd8b4bnmtupD3g
1mG+EbSnYKeHEhXHaS/0v+yl81XaB+9/f2p3Ce0ruCs0JqeO9hP8aeX5uG7a
X/CFDRoH5Rdz/guuVhiUqk8HCDZ4GlplQwfie1mfM1hFB+F+5JNO/E6HCNZW
jdSPprcLNp21rTKF3iG48MDxpDw6THC99uC9lXQ49pv15uBnOkJwheWM61KO
nP94n9G238fQUYKP3lFxmU7vE1wa+eyNEx2N+zkXv8PPMf//CIsKRA==
      "]]}, {}}, {}, {}, {}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0., 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{0., 3142.}, {-0.0003677336831652278, 0}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.02]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.766046374201129*^9, 3.7660464077280407`*^9}, 
   3.766050705360227*^9, 3.7660525074537024`*^9, 3.7660545204176207`*^9, 
   3.766105039521612*^9, 3.7661512536675043`*^9, 3.7661567444628887`*^9, 
   3.7662150911744485`*^9, 3.766268110564949*^9, 
   3.766291745746375*^9},ExpressionUUID->"6c3dbdfb-aabb-48b6-9d85-\
79e251b1dfb6"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"d2x2d2qe", "[", 
   RowBox[{"qx_", ",", " ", "dqx_", ",", " ", "d2qx_"}], "]"}], ":=", " ", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "J\[Eta]qval", ",", " ", "J\[Eta]xval", ",", " ", "Jqxval", ",", " ", 
      "dJ\[Eta]qval", ",", " ", "dJ\[Eta]xval", ",", " ", "dqe", ",", " ", 
      "Jqexval", ",", " ", "dJqexval", ",", " ", "d2qeval", ",", " ", "qe"}], 
     "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"qe", " ", "=", " ", 
      RowBox[{"Join", "[", 
       RowBox[{"qx", ",", " ", 
        RowBox[{"iksol", "[", "qx", "]"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"J\[Eta]qval", " ", "=", " ", 
      RowBox[{"cJ\[Eta]q", "@@", "qe"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"J\[Eta]xval", " ", "=", " ", 
      RowBox[{"cJ\[Eta]x", "@@", "qe"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"Jqxval", " ", "=", " ", 
      RowBox[{"-", 
       RowBox[{
        RowBox[{"Inverse", "[", "J\[Eta]qval", "]"}], ".", 
        "J\[Eta]xval"}]}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"dqe", " ", "=", " ", 
      RowBox[{"Join", "[", 
       RowBox[{"dqx", ",", " ", 
        RowBox[{"Jqxval", ".", "dqx"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"(*", 
      RowBox[{
      "Computing", " ", "the", " ", "derivative", " ", "of", " ", "the", " ", 
       "Jacobians"}], "*)"}], "\[IndentingNewLine]", 
     RowBox[{"dJ\[Eta]qval", " ", "=", " ", 
      RowBox[{"cdJ\[Eta]q", "@@", 
       RowBox[{"Join", "[", 
        RowBox[{"qe", ",", " ", "dqe"}], "]"}]}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"dJ\[Eta]xval", " ", "=", " ", 
      RowBox[{"cdJ\[Eta]x", "@@", 
       RowBox[{"Join", "[", 
        RowBox[{"qe", ",", " ", "dqe"}], "]"}]}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"(*", 
      RowBox[{"Map", " ", "of", " ", "the", " ", "matrices"}], "*)"}], 
     "\[IndentingNewLine]", 
     RowBox[{"d2qeval", " ", "=", " ", 
      RowBox[{"Join", "[", 
       RowBox[{"d2qx", ",", 
        RowBox[{"-", 
         RowBox[{
          RowBox[{"Inverse", "[", "J\[Eta]qval", "]"}], ".", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"dJ\[Eta]xval", ".", "dqx"}], "+", 
            RowBox[{"J\[Eta]xval", ".", "d2qx"}], "+", 
            RowBox[{"dJ\[Eta]qval", ".", 
             RowBox[{"dqe", "[", 
              RowBox[{"[", 
               RowBox[{"7", ";;"}], "]"}], "]"}]}]}], ")"}]}]}]}], "]"}]}], 
     ";", "\[IndentingNewLine]", 
     RowBox[{"Return", "[", 
      RowBox[{"{", 
       RowBox[{"dqe", ",", " ", "d2qeval"}], "}"}], "]"}], ";"}]}], 
   "\[IndentingNewLine]", "]"}]}]], "Input",
 CellChangeTimes->{{3.761357705308257*^9, 3.7613579208925123`*^9}, {
   3.7613579744139676`*^9, 3.7613579760137863`*^9}, 3.761358139313758*^9, {
   3.7613588844716215`*^9, 3.76135890091999*^9}, {3.7613590409088917`*^9, 
   3.7613590414639683`*^9}, {3.761359200099277*^9, 3.761359207138487*^9}, 
   3.7613844858873262`*^9, {3.766051835856407*^9, 3.7660519789358935`*^9}, {
   3.7660522949350786`*^9, 
   3.7660523059282417`*^9}},ExpressionUUID->"a70240e0-943c-42d1-90d4-\
660717f70915"],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{
  "Having", " ", "the", " ", "error", " ", "computation", " ", "and", " ", 
   "the", " ", "dynamics", " ", "simulation", " ", "in", " ", "the", " ", 
   "same", " ", "module"}], "*)"}]], "Input",
 CellChangeTimes->{{3.7660230036782417`*^9, 
  3.766023026227867*^9}},ExpressionUUID->"285b2e16-9c1d-400c-b778-\
794904449dd2"],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{
   RowBox[{
    RowBox[{"h", " ", "=", " ", "0.001"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"tf", " ", "=", " ", "\[Pi]"}], ";"}]}], "*)"}]], "Input",
 CellChangeTimes->{{3.761357253392726*^9, 3.7613572543927374`*^9}, {
   3.7614019142198973`*^9, 3.7614019366686053`*^9}, {3.762044407858102*^9, 
   3.7620444081878996`*^9}, 3.7620746837242985`*^9, {3.7621345318572655`*^9, 
   3.7621345337941704`*^9}, {3.7621345824241467`*^9, 3.7621345854304795`*^9}, 
   3.7621600810509243`*^9, {3.765357239350737*^9, 3.765357239449669*^9}, {
   3.7653643228622503`*^9, 3.7653643229861803`*^9}, 3.7653645109084544`*^9, 
   3.765365008415987*^9, 3.7653654793479567`*^9, 3.7653724689608407`*^9, 
   3.7660259281557217`*^9, {3.766026421186474*^9, 3.7660264218397093`*^9}, {
   3.7660264569184017`*^9, 3.766026457430089*^9}, {3.7660346264044843`*^9, 
   3.766034626473432*^9}, {3.766035606607095*^9, 3.76603560720674*^9}, 
   3.7660446729493775`*^9, 3.766045646962989*^9, 3.766045738847398*^9, {
   3.766053130878476*^9, 3.766053165033411*^9}, {3.766058149228887*^9, 
   3.766058152567831*^9}},ExpressionUUID->"8f749eff-84c0-481d-a431-\
c766dc7cf6e3"],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{"N", "[", 
   RowBox[{"0.3", "*", 
    RowBox[{"Sqrt", "[", "2", "]"}]}], "]"}], "*)"}]], "Input",
 CellChangeTimes->{{3.766105834854288*^9, 
  3.7661058410197544`*^9}},ExpressionUUID->"c2c05d2d-b57e-477b-a2a7-\
e2b3aa92b258"],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{
   RowBox[{
    RowBox[{"scale", " ", "=", " ", "2"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"xparam", " ", "=", " ", 
     RowBox[{
      RowBox[{"xp", "*", 
       RowBox[{"Sin", "[", 
        RowBox[{
         RowBox[{"\[Omega]x", "*", "t"}], "-", "\[Delta]x"}], "]"}]}], "/.", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"xp", "\[Rule]", 
         RowBox[{".6", "/", "scale"}]}], ",", " ", 
        RowBox[{"\[Omega]x", "\[Rule]", "2"}], ",", " ", 
        RowBox[{"\[Delta]x", "\[Rule]", 
         RowBox[{"\[Pi]", "/", "2"}]}]}], "}"}]}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"yparam", " ", "=", " ", 
     RowBox[{
      RowBox[{"yp", "*", 
       RowBox[{"Sin", "[", 
        RowBox[{
         RowBox[{"\[Omega]y", "*", "t"}], "-", "\[Delta]y"}], "]"}]}], "/.", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"yp", "\[Rule]", 
         RowBox[{".6", "/", "scale"}]}], ",", " ", 
        RowBox[{"\[Omega]y", "\[Rule]", "2"}], ",", " ", 
        RowBox[{"\[Delta]y", "\[Rule]", "0"}]}], "}"}]}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"zparam", " ", "=", " ", "1"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{"trackedpath", " ", "=", " ", 
    RowBox[{"ParametricPlot3D", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"xparam", ",", " ", "yparam", ",", " ", "zparam"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"t", ",", " ", "0", ",", "tf"}], "}"}], ",", " ", 
      RowBox[{"PlotStyle", "\[Rule]", "Dashed"}]}], "]"}]}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"xtrack", " ", "=", " ", 
     RowBox[{"{", 
      RowBox[{
      "xparam", ",", " ", "yparam", ",", " ", "zparam", ",", " ", "0", ",", 
       "0", ",", "0"}], "}"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"dxtrack", " ", "=", " ", 
     RowBox[{"D", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
        "xparam", ",", " ", "yparam", ",", " ", "zparam", ",", " ", "0", ",", 
         "0", ",", "0"}], "}"}], ",", " ", "t"}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"d2xtrack", " ", "=", " ", 
     RowBox[{"D", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
        "xparam", ",", " ", "yparam", ",", " ", "zparam", ",", " ", "0", ",", 
         "0", ",", "0"}], "}"}], ",", " ", 
       RowBox[{"{", 
        RowBox[{"t", ",", " ", "2"}], "}"}]}], "]"}]}], ";"}]}], 
  "*)"}]], "Input",
 CellChangeTimes->{{3.7613228710995455`*^9, 3.7613229338072643`*^9}, {
   3.7613229717197113`*^9, 3.7613229924332485`*^9}, {3.761323056294459*^9, 
   3.761323063431486*^9}, {3.7613230935147333`*^9, 3.761323116484309*^9}, {
   3.7613231715116434`*^9, 3.7613232635758147`*^9}, {3.7613233342857313`*^9, 
   3.7613233427313495`*^9}, {3.7613234277744284`*^9, 
   3.7613234703159227`*^9}, {3.761323500522591*^9, 3.761323519522687*^9}, {
   3.7613235627538815`*^9, 3.76132360029436*^9}, {3.7613238042034082`*^9, 
   3.761323866842725*^9}, {3.761350401416315*^9, 3.7613505297105846`*^9}, {
   3.7613519914028378`*^9, 3.7613520759289*^9}, {3.761352126174652*^9, 
   3.761352126528895*^9}, {3.7613526141864405`*^9, 3.7613526407571125`*^9}, {
   3.76135302390882*^9, 3.7613532395565195`*^9}, 3.761353327969242*^9, 
   3.761353515330392*^9, {3.761378004913282*^9, 3.761378013873143*^9}, {
   3.7614002082160625`*^9, 3.761400271063797*^9}, {3.761400365462055*^9, 
   3.7614003909724703`*^9}, {3.761401799575118*^9, 3.761401862926381*^9}, 
   3.7620444228681545`*^9, {3.762074606887117*^9, 3.7620746234571753`*^9}, {
   3.7620767755381055`*^9, 3.76207678334164*^9}, {3.7620769074514513`*^9, 
   3.762076911401518*^9}, {3.762130649043781*^9, 3.7621306491467404`*^9}, {
   3.7621311928247366`*^9, 3.762131192902674*^9}, {3.762131446473667*^9, 
   3.7621314466262503`*^9}, {3.762131659643694*^9, 3.7621316598437357`*^9}, {
   3.762132223234342*^9, 3.762132228260418*^9}, {3.762133966134097*^9, 
   3.7621339715243015`*^9}, {3.762134018143243*^9, 3.762134029542445*^9}, {
   3.7621342946406517`*^9, 3.7621342957841177`*^9}, {3.7621345504741535`*^9, 
   3.762134552168556*^9}, {3.762159036363986*^9, 3.7621590377172327`*^9}, {
   3.7621593191498103`*^9, 3.7621593192437553`*^9}, {3.7621596055129905`*^9, 
   3.762159606779257*^9}, {3.7621597647059155`*^9, 3.7621597824257727`*^9}, {
   3.7621600659885426`*^9, 3.762160071527383*^9}, {3.7623142520546317`*^9, 
   3.7623142521705837`*^9}, {3.765364970910555*^9, 3.765364975164097*^9}, {
   3.7653652841039515`*^9, 3.7653652895628376`*^9}, {3.765365350036725*^9, 
   3.765365354229933*^9}, {3.765365420602191*^9, 3.765365426614168*^9}, {
   3.76536550475704*^9, 3.7653655050149217`*^9}, {3.765372458007103*^9, 
   3.765372462032825*^9}, {3.7660259226198916`*^9, 3.7660259233754587`*^9}, {
   3.7660264643121705`*^9, 3.766026465347554*^9}, {3.766034619280404*^9, 
   3.7660346489658213`*^9}, {3.7660347182664766`*^9, 
   3.7660347183514676`*^9}, {3.7660352018676596`*^9, 3.766035201965622*^9}, {
   3.7660356001036024`*^9, 3.7660356039163804`*^9}, {3.766045743348208*^9, 
   3.7660457443284974`*^9}, {3.766053136261042*^9, 3.7660531801404653`*^9}, {
   3.766058158337968*^9, 
   3.766058159711567*^9}},ExpressionUUID->"fc8581f7-5869-4f23-9d1c-\
915349a1891b"],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{"(*", 
   RowBox[{
   "Getting", " ", "the", " ", "task", " ", "space", " ", "desired", " ", 
    "data"}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"xtrackdat", " ", "=", " ", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"N", "[", 
        RowBox[{"xtrack", "/.", 
         RowBox[{"{", 
          RowBox[{"t", "\[Rule]", "i"}], "}"}]}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", " ", "0", ",", " ", "tf", ",", " ", "h"}], "}"}]}], 
      "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"dxtrackdat", " ", "=", " ", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"N", "[", 
        RowBox[{"dxtrack", "/.", 
         RowBox[{"{", 
          RowBox[{"t", "\[Rule]", "i"}], "}"}]}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", " ", "0", ",", " ", "tf", ",", " ", "h"}], "}"}]}], 
      "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"d2xtrackdat", " ", "=", " ", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"N", "[", 
        RowBox[{"d2xtrack", "/.", 
         RowBox[{"{", 
          RowBox[{"t", "\[Rule]", "i"}], "}"}]}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", " ", "0", ",", " ", "tf", ",", "h"}], "}"}]}], 
      "]"}]}], ";"}]}], "*)"}]], "Input",
 CellChangeTimes->{{3.7613524953604007`*^9, 3.7613525472780066`*^9}, {
  3.7613532218973722`*^9, 3.761353222774206*^9}, {3.761353489653301*^9, 
  3.7613534935858107`*^9}, {3.7613535574648843`*^9, 3.761353563625015*^9}, {
  3.761353664334781*^9, 3.7613536695122747`*^9}, {3.7613537816977434`*^9, 
  3.76135378381973*^9}, {3.7613572508989*^9, 3.761357261613242*^9}, {
  3.7614018844395447`*^9, 3.761401889904394*^9}, {3.7620443608872204`*^9, 
  3.762044385870079*^9}, {3.7660208336413956`*^9, 
  3.766020834319006*^9}},ExpressionUUID->"d8acec21-149c-472f-bf29-\
7dc6dd8553a4"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{
     RowBox[{
     "We", " ", "assume", " ", "that", " ", "we", " ", "are", " ", "within", 
      " ", "the", " ", 
      RowBox[{"SWZ", ".", " ", "We"}], " ", "try", " ", "to", " ", "track", 
      " ", "a", " ", "3", "D"}], "-", 
     RowBox[{
     "Lissajous", " ", "Curve", " ", "with", " ", "no", " ", "change", " ", 
      "in", " ", "c1"}]}], ",", " ", "c2", ",", " ", "c3"}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"scale", " ", "=", " ", "1.5"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"xparam", " ", "=", " ", 
     RowBox[{
      RowBox[{"xp", "*", 
       RowBox[{"Sin", "[", 
        RowBox[{
         RowBox[{"\[Omega]x", "*", "t"}], "-", "\[Delta]x"}], "]"}]}], "/.", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"xp", "\[Rule]", 
         RowBox[{".6", "/", "scale"}]}], ",", " ", 
        RowBox[{"\[Omega]x", "\[Rule]", "2"}], ",", " ", 
        RowBox[{"\[Delta]x", "\[Rule]", 
         RowBox[{"\[Pi]", "/", "2"}]}]}], "}"}]}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"yparam", " ", "=", " ", 
     RowBox[{
      RowBox[{"yp", "*", 
       RowBox[{"Sin", "[", 
        RowBox[{
         RowBox[{"\[Omega]y", "*", "t"}], "-", "\[Delta]y"}], "]"}]}], "/.", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"yp", "\[Rule]", 
         RowBox[{".3", "/", "scale"}]}], ",", " ", 
        RowBox[{"\[Omega]y", "\[Rule]", "8"}], ",", " ", 
        RowBox[{"\[Delta]y", "\[Rule]", "0"}]}], "}"}]}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"zparam", " ", "=", " ", 
     RowBox[{
      RowBox[{"1", "+", 
       RowBox[{"zp", "*", 
        RowBox[{"Sin", "[", 
         RowBox[{
          RowBox[{"\[Omega]z", "*", "t"}], "-", "\[Delta]z"}], "]"}]}]}], "/.", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"zp", "\[Rule]", 
         RowBox[{".2", "/", "scale"}]}], ",", " ", 
        RowBox[{"\[Omega]z", "\[Rule]", "4"}], ",", " ", 
        RowBox[{"\[Delta]z", "\[Rule]", 
         RowBox[{"\[Pi]", "/", "2"}]}]}], "}"}]}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{"trackedpath", " ", "=", " ", 
    RowBox[{"ParametricPlot3D", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"xparam", ",", " ", "yparam", ",", " ", "zparam"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"t", ",", " ", "0", ",", "\[Pi]"}], "}"}], ",", " ", 
      RowBox[{"PlotStyle", "\[Rule]", "Dashed"}]}], "]"}]}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"xtrack", " ", "=", " ", 
     RowBox[{"{", 
      RowBox[{
      "xparam", ",", " ", "yparam", ",", " ", "zparam", ",", " ", "0", ",", 
       "0", ",", "0"}], "}"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"dxtrack", " ", "=", " ", 
     RowBox[{"D", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
        "xparam", ",", " ", "yparam", ",", " ", "zparam", ",", " ", "0", ",", 
         "0", ",", "0"}], "}"}], ",", " ", "t"}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"d2xtrack", " ", "=", " ", 
     RowBox[{"D", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
        "xparam", ",", " ", "yparam", ",", " ", "zparam", ",", " ", "0", ",", 
         "0", ",", "0"}], "}"}], ",", " ", 
       RowBox[{"{", 
        RowBox[{"t", ",", " ", "2"}], "}"}]}], "]"}]}], ";"}]}]}]], "Input",
 CellChangeTimes->{{3.7613228710995455`*^9, 3.7613229338072643`*^9}, {
   3.7613229717197113`*^9, 3.7613229924332485`*^9}, {3.761323056294459*^9, 
   3.761323063431486*^9}, {3.7613230935147333`*^9, 3.761323116484309*^9}, {
   3.7613231715116434`*^9, 3.7613232635758147`*^9}, {3.7613233342857313`*^9, 
   3.7613233427313495`*^9}, {3.7613234277744284`*^9, 
   3.7613234703159227`*^9}, {3.761323500522591*^9, 3.761323519522687*^9}, {
   3.7613235627538815`*^9, 3.76132360029436*^9}, {3.7613238042034082`*^9, 
   3.761323866842725*^9}, {3.761350401416315*^9, 3.7613505297105846`*^9}, {
   3.7613519914028378`*^9, 3.7613520759289*^9}, {3.761352126174652*^9, 
   3.761352126528895*^9}, {3.7613526141864405`*^9, 3.7613526407571125`*^9}, {
   3.76135302390882*^9, 3.7613532395565195`*^9}, 3.761353327969242*^9, 
   3.761353515330392*^9, {3.761378004913282*^9, 3.761378013873143*^9}, {
   3.7614002082160625`*^9, 3.761400271063797*^9}, {3.761400365462055*^9, 
   3.7614003909724703`*^9}, {3.761401799575118*^9, 3.761401862926381*^9}, 
   3.7620444228681545`*^9, {3.762074606887117*^9, 3.7620746234571753`*^9}, {
   3.7620767755381055`*^9, 3.76207678334164*^9}, {3.7620769074514513`*^9, 
   3.762076911401518*^9}, {3.762130649043781*^9, 3.7621306491467404`*^9}, {
   3.7621311928247366`*^9, 3.762131192902674*^9}, {3.762131446473667*^9, 
   3.7621314466262503`*^9}, {3.762131659643694*^9, 3.7621316598437357`*^9}, {
   3.762132223234342*^9, 3.762132228260418*^9}, {3.762133966134097*^9, 
   3.7621339715243015`*^9}, {3.762134018143243*^9, 3.762134029542445*^9}, {
   3.7621342946406517`*^9, 3.7621342957841177`*^9}, {3.7621345504741535`*^9, 
   3.762134552168556*^9}, {3.762151220457632*^9, 3.7621512208234515`*^9}, {
   3.7621512804093337`*^9, 3.762151281034975*^9}, {3.7621603283884325`*^9, 
   3.762160336352874*^9}, {3.7660208284383945`*^9, 
   3.7660208290660343`*^9}},ExpressionUUID->"3cf179d8-dfd5-452c-bb9b-\
2a39d2b9260d"],

Cell[BoxData[
 Graphics3DBox[{{}, {}, 
   TagBox[
    {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[2], 
     Dashing[{Small, Small}], Line3DBox[CompressedData["
1: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
uYEQoF/ovdNv2d1vGZDVJvEyBZ27+y3/AYNey9k=
      "]]},
    Annotation[#, "Charting`Private`Tag$216024#1"]& ]},
  Axes->True,
  DisplayFunction->Identity,
  FaceGridsStyle->Automatic,
  Method->{},
  PlotRange->{{-0.3999999999999967, 
   0.39999995322926873`}, {-0.19999937828620049`, 0.1999995059490375}, {
   0.866666666666671, 1.133333268379317}},
  PlotRangePadding->{
    Scaled[0.02], 
    Scaled[0.02], 
    Scaled[0.02]},
  Ticks->{Automatic, Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.76627167593832*^9, 3.766291746117161*^9, {3.7662947927628508`*^9, 
   3.7662948132643347`*^9}},ExpressionUUID->"5a6621c7-daa6-44e6-9996-\
630b6d393848"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"tf", " ", "=", " ", "\[Pi]"}]], "Input",
 CellChangeTimes->{{3.7662717098838835`*^9, 
  3.766271712281492*^9}},ExpressionUUID->"af540bde-0553-4a39-94e5-\
c78da7af5c1e"],

Cell[BoxData["\[Pi]"], "Output",
 CellChangeTimes->{3.7662717124543924`*^9, 3.7662917461591363`*^9, 
  3.766294792943742*^9},ExpressionUUID->"98e89004-dcdf-4512-a892-\
33cd327991b6"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
   "Getting", " ", "the", " ", "task", " ", "space", " ", "desired", " ", 
    "data"}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"xtrackdat", " ", "=", " ", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"N", "[", 
        RowBox[{"xtrack", "/.", 
         RowBox[{"{", 
          RowBox[{"t", "\[Rule]", "i"}], "}"}]}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", " ", "0", ",", " ", "tf", ",", " ", "h"}], "}"}]}], 
      "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"dxtrackdat", " ", "=", " ", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"N", "[", 
        RowBox[{"dxtrack", "/.", 
         RowBox[{"{", 
          RowBox[{"t", "\[Rule]", "i"}], "}"}]}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", " ", "0", ",", " ", "tf", ",", " ", "h"}], "}"}]}], 
      "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"d2xtrackdat", " ", "=", " ", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"N", "[", 
        RowBox[{"d2xtrack", "/.", 
         RowBox[{"{", 
          RowBox[{"t", "\[Rule]", "i"}], "}"}]}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", " ", "0", ",", " ", "tf", ",", "h"}], "}"}]}], 
      "]"}]}], ";"}]}]}]], "Input",
 CellChangeTimes->{{3.7613524953604007`*^9, 3.7613525472780066`*^9}, {
  3.7613532218973722`*^9, 3.761353222774206*^9}, {3.761353489653301*^9, 
  3.7613534935858107`*^9}, {3.7613535574648843`*^9, 3.761353563625015*^9}, {
  3.761353664334781*^9, 3.7613536695122747`*^9}, {3.7613537816977434`*^9, 
  3.76135378381973*^9}, {3.7613572508989*^9, 3.761357261613242*^9}, {
  3.7614018844395447`*^9, 3.761401889904394*^9}, {3.7620443608872204`*^9, 
  3.762044385870079*^9}, {3.7660208336413956`*^9, 
  3.766020834319006*^9}},ExpressionUUID->"69023892-35e3-4952-8296-\
f6e4a411cc70"],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{
   RowBox[{
    RowBox[{"h", " ", "=", " ", "0.001"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"tside", " ", "=", "1"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"tf", " ", "=", " ", "4"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"side", " ", "=", " ", "0.5"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"height", " ", "=", " ", "1"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"s1", " ", "=", " ", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"{", 
          RowBox[{
          "side", ",", "side", ",", " ", "height", ",", "0", ",", "0", ",", 
           "0"}], "}"}], "*", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"tside", "-", "t"}], ")"}], "/", "tside"}]}], "+", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "side"}], ",", "side", ",", " ", "height", ",", "0", 
           ",", "0", ",", "0"}], "}"}], "*", 
         RowBox[{"t", "/", "tside"}]}]}], ",", 
       RowBox[{"{", 
        RowBox[{"t", ",", " ", "0", ",", " ", "tside", ",", "h"}], "}"}]}], 
      "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"ds1", " ", "=", " ", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          RowBox[{"-", "2"}], "*", "side"}], ",", "0", ",", "0", ",", "0", 
         ",", "0", ",", "0"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"t", ",", " ", "0", ",", " ", "tside", ",", "h"}], "}"}]}], 
      "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"s2", " ", "=", " ", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "side"}], ",", "side", ",", " ", "height", ",", "0", 
           ",", "0", ",", "0"}], "}"}], "*", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"tside", "-", "t"}], ")"}], "/", "tside"}]}], "+", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "side"}], ",", " ", 
           RowBox[{"-", "side"}], ",", " ", "height", ",", "0", ",", "0", ",",
            "0"}], "}"}], "*", 
         RowBox[{"t", "/", "tside"}]}]}], ",", 
       RowBox[{"{", 
        RowBox[{"t", ",", " ", "0", ",", " ", "tside", ",", "h"}], "}"}]}], 
      "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"ds2", " ", "=", " ", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"0", ",", 
         RowBox[{
          RowBox[{"-", "2"}], "*", "side"}], ",", "0", ",", "0", ",", "0", 
         ",", "0"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"t", ",", " ", "0", ",", " ", "tside", ",", "h"}], "}"}]}], 
      "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"s3", " ", "=", " ", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "side"}], ",", " ", 
           RowBox[{"-", "side"}], ",", " ", "height", ",", "0", ",", "0", ",",
            "0"}], "}"}], "*", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"tside", "-", "t"}], ")"}], "/", "tside"}]}], "+", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"side", ",", " ", 
           RowBox[{"-", "side"}], ",", " ", "height", ",", "0", ",", "0", ",",
            "0"}], "}"}], "*", 
         RowBox[{"t", "/", "tside"}]}]}], ",", 
       RowBox[{"{", 
        RowBox[{"t", ",", " ", "0", ",", " ", "tside", ",", "h"}], "}"}]}], 
      "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"ds3", " ", "=", " ", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"2", "*", "side"}], ",", "0", ",", "0", ",", "0", ",", "0", 
         ",", "0"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"t", ",", " ", "0", ",", " ", "tside", ",", "h"}], "}"}]}], 
      "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"s4", " ", "=", " ", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"{", 
          RowBox[{"side", ",", " ", 
           RowBox[{"-", "side"}], ",", " ", "height", ",", "0", ",", "0", ",",
            "0"}], "}"}], "*", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"tside", "-", "t"}], ")"}], "/", "tside"}]}], "+", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
          "side", ",", " ", "side", ",", " ", "height", ",", "0", ",", "0", 
           ",", "0"}], "}"}], "*", 
         RowBox[{"t", "/", "tside"}]}]}], ",", 
       RowBox[{"{", 
        RowBox[{"t", ",", " ", "0", ",", " ", "tside", ",", "h"}], "}"}]}], 
      "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"ds4", " ", "=", " ", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"0", ",", 
         RowBox[{"2", "*", "side"}], ",", "0", ",", "0", ",", "0", ",", "0"}],
         "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"t", ",", " ", "0", ",", " ", "tside", ",", "h"}], "}"}]}], 
      "]"}]}], ";"}]}], "*)"}]], "Input",
 CellChangeTimes->CompressedData["
1:eJxTTMoPSmViYGAQA2IQLbSg74okzxtHNeZ5D0C0x8TXz0H0l93pL0H0q3br
TyD6lPjZXyBabhEnkxSQlsjNFwLRTJZFKiBaraROB0Q3P3xiAKIL9T+B6dop
+yxAtMbL1Z4gOvKtuh+IDgrWDgTRmUpfw0A0p2ZXNJjeyvpQGUivU7ryGERX
cmX1GvC/cYw2SJoEorNScw6BaK2vYodB9B8GtRsgmje9AEwXlb59BKL/tUs8
BtFCWys/gujw+F4wfVrn4E8QvajH/BeIZgkyYTYE0lvSA1lA9HYtF0kQrXJu
vxSI/s2ZtsMdSGdMi9kJor89ruSeDqTPmLDwgegSm+N/FwLpghky/0C0rkH5
r0VA2mb/RjANAC0clQA=
  "],ExpressionUUID->"ce77eda9-f1dc-407a-bc15-45adfe6e76b9"],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{"(*", 
   RowBox[{
   "Getting", " ", "the", " ", "task", " ", "space", " ", "desired", " ", 
    "data"}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"xtrackdat", " ", "=", " ", 
     RowBox[{"Join", "[", 
      RowBox[{"s1", ",", " ", 
       RowBox[{"s2", "[", 
        RowBox[{"[", 
         RowBox[{"2", ";;"}], "]"}], "]"}], ",", " ", 
       RowBox[{"s3", "[", 
        RowBox[{"[", 
         RowBox[{"2", ";;"}], "]"}], "]"}], ",", " ", 
       RowBox[{"s4", "[", 
        RowBox[{"[", 
         RowBox[{"2", ";;"}], "]"}], "]"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"dxtrackdat", " ", "=", " ", 
     RowBox[{"Join", "[", 
      RowBox[{"ds1", ",", " ", "ds2", ",", " ", "ds3", ",", " ", "ds4"}], 
      "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"d2xtrackdat", " ", "=", " ", 
     RowBox[{"ConstantArray", "[", 
      RowBox[{"0", ",", " ", 
       RowBox[{"Dimensions", "[", "xtrackdat", "]"}]}], "]"}]}], ";"}]}], 
  "*)"}]], "Input",
 CellChangeTimes->{{3.7644408425397015`*^9, 3.764440850880932*^9}, {
  3.764441054581483*^9, 3.764441076441996*^9}, {3.764441242546011*^9, 
  3.764441310917704*^9}, {3.7644421400946856`*^9, 
  3.764442155381946*^9}},ExpressionUUID->"cfbc787f-5769-4af8-8221-\
4f4879a07dbe"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{"trackedpath", " ", "=", " ", 
   RowBox[{"ListPointPlot3D", "[", 
    RowBox[{"xtrackdat", "[", 
     RowBox[{"[", 
      RowBox[{";;", ",", 
       RowBox[{"1", ";;", "3"}]}], "]"}], "]"}], "]"}]}], "*)"}]], "Input",
 CellChangeTimes->{{3.766060677481659*^9, 
  3.7660607053323326`*^9}},ExpressionUUID->"65793013-2910-4075-8563-\
fd7907e2653a"],

Cell[BoxData[
 Graphics3DBox[
  {RGBColor[0.3315753, 0.4561011, 0.6388182], Point3DBox[CompressedData["
1:eJx1nX2wdmdVn6NlFB1Go8P40ckgMhnEahWtLdpaH7W0YK0SsaPoMBodWtFh
NDIZjEwGQ4yKlkIEDTGmIQmJgKWK1voZIdoUY4wxxiigAdFiwVo1alu0frQ5
e63u332t6+zzz5n3mnf2ec5+1l779+xz39f62K/+hmf+q/e/4IILbvnQCy74
Wxf8/693nfj94dOXfMjf/dF/98e/Lf6Gi778Of/ot83f/xO+4yPefp/5sz7j
x+5+wZvMf+hpv/PCx/6Q+aO2H2x+9lOf8W/N3/j85373H15p/gEv/t5/8m+e
Z/7sl//8/3rSs80f+WVf+5bPN390/cLiX/HTn/eY9/8E87Pf9tV/2/yD3/qa
y/7xB5tf+nv3P+G3/uKd4j/+Z3/94BW/b/6Y7USbf/WFZ2fa/Ccf921/8EU/
ab69va81307zq8y3X/c7zLcf+wLzf719md9x+Ss/6lFfYv7h33rnPbf8U/Oz
d/f0980fOcmf/I6LzR+7FZb5120/2Pzsp/74n71D/JFift8X/1fz573nL1//
Jw+Yn1XVy3/e/KO2gjb/+u0XNr/r8WcVbX72237Ai80fKapHKsv8LZ//lO/8
nEvNt2p+hvl2GZ3Mt3L+ZPOtrB5nvr29H2K+nea/fkh8+3X/0Lx+rPm925f5
IxfRi77uDvMrfv+Jn/LoN5ifvbu3f7/5xVvjMH/hVljm928/2Pzsp1705eaP
FPMjrcP8gS84u4LNn7Q1LPOrtoI2f3D7hc0/8aw9v++3fJyzNvke87edtau3
mn/i1ijNr9kupHOOs51o8yeflfP3nnOcs7L6NvOHzt7ey885ztagzV+yXcDm
79zeYPNP+3tnX+bf9TlbhxZ/1yNd8us/3PwfbDcG85dujeM3xX93KyzzT//O
sx9s/rJXnXUO83ff/v2PtA7zf7jdkMyv3RqW+X/bCtr8M89uC19v/oqz9vwV
5u89a5NfYP5Z243Q/Hu2Rmn+37cLyfyzzy6jx5hfd1bOf/l28f9xVlZ/YP65
29trfv3WoM3/aLuAzZ969mNfb37D9519mT/82rMObf7Pthu/+Y3bjcH8T7fG
Yf70s3j1NPObzmLOU8z/51nceKL5P6/AIX7zdkMy/99bw3qb+L84ux39nvmt
Z7eFB83//Kw932X+hVvQMb9tuxGa/5+ztvFK80vOLt9vNf+Bs8vo+eZ/dVbO
X23+zC1gmb9uuwGb/83WoM3/5dmv+3jzHzz7sRea13fzyu1vFa8Ya1653bxy
u3nldvPK7eaV280rt5tXbjev3G5eud28crt55Xbzyu3mldvNK7f/hnjldvO6
jMwrt5tXbjev3G5eud28crt55Xbzyu3mldvNK7ebV243r9xuXrndvHK7eeX2
Xxev3G5eud28crt55Xbzyu3mldvNK7ebV243r9xuXrndvHK7eeV288rt5pXb
zSu3Pyheud28crt55Xbzi7fcbl653fz+Lbefc5ytcZhfuRXWOcfZcrv5k7bc
fs5xttxu/uCW2885ztawzCu3n3Oc7Rc2r9z+az7OltvNK7ebV243r9x+znG2
3G5euf2c42y53bxy+znH2Rq0eeX2c46zvcHmldvPOc6W280rt59znO3GYF65
/QEfZ8vt5pXbzV+65Xbzyu3mldvNK7ebV243r9xuXrndvHK7eeV288rt5pXb
zSu3m1du/1Xxyu3mldvNK7ebV243r9xuXrndvHK7eeV288rt5pXbzSu3m1du
N6/cbl653bxyu3nl9vvFK7ebV243r9xuXrndvHK7eeV288rt5pXbzSu3m1du
N6/cbl653bxyu3nldvP6bl75/FfEK4ebV942r1xtXvnZvHKyeeVh88q994lX
vjWvHGteedW8cql55U/zypnmlSfNKzf+sni1efPKgeaV98wr15lXfjOvnGZe
ecy8cte94pWvzCtHmVdeMq9cZF75x7xyjnnlGfPKLb8kXvnEvHKIeeUN88oV
5pUfzCsnmD9lywPmW3v+nXvEX77d3823y/fV5u/ZTrT5Vs5fYV4fRM23t/ci
81dt99NfFK/HmeZ/vL3B5ttt8PvMn7bd78y3tvcs81dv9y/z7ePpR5i/byus
u8Xr44j5M+qDtPgWP19p/trtfmG+xY0vMv+/W0Gbb7eXC82/dPug/gvi77e1
SfMf3p6rmH/Z1ijNP3B7TmL+I9vzEPOv3B4EmH/Q9nzD/Ce25xhvEf+q7TSb
f+j2XML8p7Y32PxrtucM5h+2PU8wf/P23MD8a7cbg/lHbs8B/ov4z22f982/
Yftcb/7R2+d381/YPqebf+N2QzL/mO1zt/kvbgV9l/g3bZ+jzT92+7xs/ivb
52Lzb95uhOYft33ONf/V7fOs+bdsn1vNP377fPqfxeuxmfmLtxuw+Xaav9f8
7dsFbL792C82/5Tt86D59jHow83r893Pi9fnOPP6vGZen8vM6/OXeX3OMq/P
U+b1ucm8Ph/9nHh9DjKvzzvm9bnGvD6/mNfnFPP6PGJenzvM6/PFneL1OcK8
Pi+Y1+cC88r/5pXzzSvPm9d388rnbxavHG5eedu8cvWbxCs/m1dONq88bF65
92fFK9+aV441r7xqXrn0DvHKn+aVM80rT5pXbvwZ8cqH5pUDzSvvmdfznJ92
H9jym/m1W04zf++Wx8w/e3uDf8rX6ZavzB/ecpT507e8ZH7zlot+0tfRln/M
L6nC8nWx5RnzC7bc8hOu/y2fmL9xyyHmj95uDOaXbgX9467/LT+YX7jlBPPn
bnnA/M6tPf8n1/924zGv5+rm92336x8Tr3I2f9F2/zWv9R7mn7Td2P6j+NXb
r2v+zu3+aP6p233Q/GXb/e5HxX93u6+Zf9Z2/zJ/RTUO8T/a7kc/Iv65233H
/Kbt/mL+p9t9xPwLt/vFG8Vv3RqW+d9s/d/8mVufN3/21lZ/WPxRW982v2O7
jH5I/DlbHza/aDtt/0H8rq2vml+59c83iF+89Unzh7Z++O/Fr9n6nvlnbv3t
B8XfvfUx8xu3fvV68adufcn8r7b+8zrx27Y+Y/7srZ+81ud/6xvmd2z94Qd8
/rc+YH7Rdr3f7vO/Xde3+fxv16/5xdt1+hqf/+16NL9mu+5u9fnfri/zd2/X
0S0+/9v1Yv7U7bq42ed/q3/zp9eDCffbrZ5vct+uB47idX+/UfzuWmAnXvfT
G8RfUg8axOv+db1ffz1A9Ovf6uE6v/76gCF+1fb+fo/4u+rBgfhnb+/XK8Rv
rgeC4hdsD4KvFb9zO88v8+vZzudL/XO38/ZdPv72wewlPv52Hr794Pe95uD3
uvrg9V918DqvPHg9Vxz83MsPjn/ZwXGee/D/Lz3gl5jjS///zQfHN6/Xc/D/
LxPv3/fgOFf4/9f5PDj+VeL9fh383GvEux4OXs9LfPyqt4PX+VIfv+r54PVf
K97Xy8Hv9Qrxvh4Pft/vEX98Xe8H5+E68Uurnxycn+v9+qtfHZy3G/z6qx8e
nM8b/fqr3x6c55v8+qufH5z/m8UvqfvFwftyi/jDdT86eL9uFb+27ncH7+Nr
xJ9c99OD9/c28fvrfn3wvt8uflnlgYN6ML+w8sZBnZi/sfLMQf2YX1J56aCu
zB+uPHZQb+bXVt47qEPzJ1eePKhP8/srrx7UrflllYcP6tn8wsrbB3Vu/qzK
8wf1b/66+rxwcF2Y/3l9Hjm4XsyfXp93Dq4j8+vr89TB9WX+3vq8dnDdmX96
fR48uB7Nr6rPm+JPqs+nrof6PCt+RX3+dZ3U52Xxu+vzteunPo+L9+d311V9
3hfv5wOut3qeIN7PH1yH9bxCvJ9vuD/U8xDXbT0/cd3W8xbXbT2fcd1WcHfd
1vMf1209L3Ld1vMl1209j3Ld1vMr120973Ld1vMx1209T3Pd1vM31209rxPv
53vub/U8ULyfH7r+63mj67+eT7r+6wGQ67+ef7r+63mp67+er7r+63ms67+e
37r+63mv67+eD7v++0H25P382fVfz6td//V82/Vfz8Nd//VjXf/b153i/Xze
10U9zxfv5/++XurvBeL99wVfR/X3CPH++4Wvr/p7h3j/fcTXXf09Rbz//uLr
sf5eI95/3/F1Wn8PEu+/H/n6rb83ifffp3xd19+zxPvvX77e6+9l4v33NfeB
+nuceP/9zv2h/t4nXutFzWvdqXk9zzGvdbDmtZ7WvNblmtf6XvNaJ3yXeK03
Nq91y+b1/Mq81lGb13ps8yvq79Hi99bfr93f6u/d4pfX38fd9+rv6eL1vM78
svp7vfhd9fd998laDyD+vFo/4P5Z6w3EH1vrE9xXaz2DeD2fNL+w1kuIP6fW
V7gP13oM8cfU+g3351rvIf5jtT7EfbvWk4jX81jzN9Z6FfFH1foW9/laDyP+
hlo/I37Br2/rbdz/a32O+3+t53H/r/U/7v+1Xsj9v9YXuf/XeiT3/1q/5P5f
653c/2t9lPt/rady/6/1V+7/tV7L/b/Wd7n/13ow9+1aP+a+XevN3LdrfZr7
dq1nc9+u9W/u27Vezn271te5b9d6PPftWr/nvl3r/dy3a32g+3atJ3TfrvWH
7tu1XtF9u9Y3um/Xekj37Vo/6b5d6y3dt2t9pvt2red03671n+7b9eW+XetL
3bdrPar7dq1fdd+u9a7u27U+1n271tO6b9f6W/ftWq/rvl3re923az2w+3at
H3bfrvXG7tu1Ptl9u9Yzu2/X+mf37Vov7b5d66vdt2s9tvt2rd9236713u7b
tT7cfbvWk7tv1/pz9+1ar+6+vX3dL97r4d3Pa/28eK+3d5+v9fnivZ5fvNf/
i/d+AfHeXyDe+xHEe/+CeO93EO/9EeK9n0K891+I934N8d7fId77QcR7/4h4
7zcR7/0p4r2fRbz3v4j3fhnx3l8j3vtxxHv/jnjv9xHv/UHivZ9IvPcfifd+
JfHe3yTe+6HEe/+UeO+3Eu/9WeK9n0u893+J934x8d5fJt770cR7/5p4eSrM
e3+ceHkwzHv/nXh5Nn5NvPf3iZfHw7z3D4qXJ8S89yeKf2rtZxTv/Y/i3177
JcV7f6X4b9Z+TPHevyn+SbXfU7z3h4pfXftJxXv/qfhv1H5V8d7fKv53aj+s
eO+fFX9R7bcV7/254g/Ufl7x3v8r/sTaLyze+4vFX1j7kcV7/7L4fbXfWbw+
R5s/ofZTi9fna/MX1H5t8frcbX5P7QcXr8/j5r3fXLz3p4v3fnbx3v8u3vvl
xXt/vXjvxxfv/fvivd9fvP0A4u0TEG//gHj7CsTbbyDePgTx9ieIt29BvP0M
4u1zEG//g3j7IsTbLyHePgrx9leIt+9CvP0Y4u3TEG//hnj7OsTb7yHePhDx
9oeIt29EvP0k4u0zEW//iXj7UsTbryLePhbx9reIt+9FvP0w4vX9beLtnxFv
X414+23E24cj3v4c8fbtiLefR7x9PuLt/xFvX5B4+4XE20ck3v4i8fYdibcf
Sbx9SuLtXxJvX5N4+53E2wcl3v4o8fZNibefSrx9VuLtvxJvX5Z4+7XE28cl
3v4u8fZ9ibcfTLx9YuLtHxNvX5l4+83E24cm3v408fatibefTbx9buLtfxNv
X5x4++XE20cn3v468fbdibcfT7x9euLt3xNvX594+/3E2wcoXrndvH2D4pXb
zdtnKF653bx9ieKV283bxyheud28fY/ildsfEm+fpHjldvPK7eaV280rt5tX
bjev3G5eud28crt55Xbzyu3mldvNK7ebV243r9xuXrn9HeKV280rt5tXbjd/
XPldxevva+btjxVv36x4+2nF22cr3v5b8fblirdfV7x9vOLt7xVv3694+4HF
2ycs3v5h8fYVi7ffWLx9yOLtTxZv37J4+5nF2+cs3v5n8fZFi7dfWrx91OLt
rxZv37V4+7HF26ct3v5t8fZ1i7ffW7x94OLtDxdv37h4+8nF22cu3v5z8fal
i7dfXbx97OL970NOj3s4Pe7h9LiH0+MeTo97OD3u4fS4h9PjHk6Pezg97uH0
uIfT4x5Oj3s4Pe7h9LiH0+MeTo97OD3u4fS4h9PjHk6Pezg97uH0uIfT4x5O
j3s4Pe7h9LiH0+MeTo97OD3u4fS4h9PjHk6Pezg97uH0uIfT4x5Oj3s4Pe7h
9LiH0+MeTo97OD3u4fS4h9PjHk6Pezg97uH0uIfT4x5Oj3s4Pe7h9LiH0+Me
To97OD3u4fS4h9PjHk6Pezg97uH0uIfT4x5Oj3s4Pe7h9Lgvx4HHPZwe9+U4
8LiH0+O+HAce93B63JfjwOMeTo/7chx43MPpcQ+nxz2cHvdwetzD6XEPp8c9
nB73cHrcw+lxD6fHPZwe93B63MPpcQ+nxz2cHvdwetzD6XEPp8c9nB73cHrc
w+lxD6fHPZwe93B63MPpcQ+nxz2cHvdwetzD6XEPp8c9nB73cHrcw+lxD6fH
PZwe93B63MPpcQ+nxz2cHvdwetzD6XEPp8c9nB73cHrcw+lxD6fHPZwe93B6
3MPpcQ+nxz2cHvdwetxnbjenx33mdnN63GduN6fHfeZ2c3rcZ243p8d95nZz
etxnbjenx33mdnN63Gdu/w1xetxnbjenx33mdnN63GduN6fHfeZ2c3rcZ243
p8d95nZzetxnbjenx33m9l8Xp8d95nZzetxnbjenx33mdnN63GduN6fHfeZ2
c3rcZ243p8d95nZzetxnbjenx33mdnN63GduN6fHfeZ2c3rcZ243p8d95nZz
etxnbjenx33mdnN63GduN6fHfeZ2c3rcZ243p8d95nZzetxnbjenx305Djzu
M7efcxx43GduP+c48LjP3P6AjwOP+8zt5vS4z9xuTo/7zO3m9LjP3G5Oj/vM
7eb0uM/cbk6P+8zt5vS4z9xuTo/7zO3m9LjP3G5Oj/vM7eb0uM/cbk6P+8zt
5vS4z9xuTo/7zO3m9LjP3G5Oj/vM7eb0uIfT4x5Oj3s4Pe7h9LiH0+MeTo97
OD3u4fS4h9PjHk6Pe3h9N6fHPZwe93B63MPpcQ+nxz2cHvdwetzD6XEPp8c9
nB73cHrcw+lxn/nTnB73mSfN6XGf+dCcHveZ98zpcZ/5zZwe95nHzOlxn/nK
nB73mZfM6XGf+cecHveZZ8zpcZ/5xJwe95k3zOlxn/nBnB73cHrcw+lxD6fH
PZwe93B63MPpcQ+nxz2cHvdwetzD6XEPp8c9nB73cHrcw+lxD6fHPZwe93B6
3MPpcQ+nxz2cHvdwetzD6XEPp8c9nB73cHrcw+lxD6fHPZwe93B63MPpcQ+n
xz2cHvdwetzD6XEPp8c9nB73cHrcw+lxD6fHPZwe93B63MPpcQ+nxz2cHvdw
etzD6XEPp8c9nB73cHrcw+lxD6fHPZwe93B63MPpcQ+nxz2cHvdwetzD6XEP
p8c9nB73cHrcw+lxD6fHPZwe93B63MPpcQ+nxz2cHvdwetzD6XEPp8c9nB73
cHrcw+lxD6fHPZwe93B63MPpcQ+nxz2cHvdwetzD6XEPp8c9nB73cHrcw+lx
n7ndnB73mcPN6XGfufpN4vS4z5xsTo/7zL0/K06P+8yx5vS4z1x6hzg97jNn
mtPjPnPjz4jT4z5zoDk97uH0uC99AB735XqHx325ruFxX65feNyX6xQe9+V6
hMd9ue7gcV+uL3jcl+sIHvfleoHHfbku4HFf6h8e96X+4XFf6h8e96X+4XFf
6h8e96X+4XFf6h8e96X+4XFf6h8e96X+4XEPp8c9nB73cHrcw+lxD6fHPZwe
93B63MPpcQ+nxz2cHvdwetzD6XEPp8c9nB73cHrcw+lxD6fHPZwe93B63MPp
cQ+nxz2cHvdwetzD6XEPp8c9nB73cHrcw+lxD6fHPZwe93B63Jd8Ao/7knPg
cV/yADzuS66Ax325/8LjvtzH4XFfzj887sv5h8d9Of/wuC/nHx735fzD476c
f3jcl/MPj/ty/uFxX84/PO7L+YfHfeZDc3rcZx4zp8d95h9zetxn3rhJnB73
eX+/UZwe93k/vUGcHvd5/7rerx8e93m/uM6vHx73JVfA477kAXjcl/s4PO7L
/Rce9+W+CY/7cj+Cx315PfC4Lz8XHvfl+PC4L8eHx33+vtcc/F5XH7z+qw5e
55UHr+eKg597+cHxLzs4znMP/v+lB/wSc3zp/7/54Pjm8Ljr9YvT467z4/8P
j7vOvzg97np/xelxV/34+PC4qz59fHjcVf/i9Ljr+hKnx13Xrzg97vM8XCdO
j/s8P9f79cPjPs/bDX798LjP83mjXz887vM83+TXD4/7PP83i9PjPt+XW8Tp
cZ/v163i9LjP9/E14vS4z/f3NnF63Of7frs4Pe6zHszpcZ91Yk6P+6wfc3rc
Z12Z0+M+682cHvdZh+b0uM/6NKfHfdatOT3us57N6XGfdW5Oj/usf3N63Od1
YU6P+7xezOlxn9eROT3u8/oyp8d9Xnfm9LjP69GcHvdwetyXeoDHfcmH8Lgv
dQKP+5Ib4XFf6gce93B63Je6gsc9nB73pd7gcZ950pwe9yVnwuO+9Ad43Je6
hcd9qVt43Je6hcd9qVt43Je6hcd9qVt43Je6hcd9qVt43Je6hcd9qVt43Je6
hcd9qVt43Je6hcd9qVt43MPpcV/6Gzzu4fS4L/UPj/tS//C4L/UPj/tS//C4
L/UPj/tS//C4L/UPj/tS//C4L/UPj/tS//C4L/UPj/tS//C4L/UPj/tS//C4
L/UPj/tS//C4L/W/fd0pTo/7cl3A4x5Oj/tyvcDjHk6P+3IdweMeTo/7cn3B
4x5Oj/ty3cHjHk6P+3I9wuMeTo/7cp3C4x5Oj/ty/cLjHk6P+3Jdw+MeTo/7
cr3D4x5Oj/vSB+BxD6fHfekP8LiH0+O+9A143MPpcV/6CTzu4fS4L30GHvdw
etyX/gOPezg97ktfgsc9nB73pV/B4x5Oj/vSx+BxD6fHfelv8LiH0+O+9D14
3MPpcV/6ITzu4fS4L30SHvdwetyX/gmPezg97ktfhcc9nB73pd/C4x5Oj/vS
h+FxD6fHfenP8LiH0+O+9G143MPpcV/6OTzu4fS4L30eHvdwetyX/g+P+9L/
4XFf+j887kv/h8d96f/wuC/9Hx73pf/D4770f3jcl/4Pj/vS/+FxX/o/PO5L
/4fHfen/8Lgv/R8e96X/w+M+89g94vS4z5xmTo/7zG/m9LjPXGdOj/vMe+b0
uM8caE6P+8yH5vS4z9xoTo/7zJPm9LjPnGlOj/vMn+b0uM9cak6P+8yr5vS4
zxxrTo/7zLfm9LjP3GtOj/vMw+b0uM+cbE6P+8zP5vS4z1xtTo/7zNvm9LjP
HG5Oj/vM5+b0uM/cfr84Pe4zz5vT4z5zvjk97jP/m9PjvtwX4HEPp8d9uV/A
4x5Oj/tyH4HHPZwe9+X+Ao97OD3uy30HHvdwetyX+xE87uH0uC/3KXjcw+lx
X+5f8LiH0+O+3NfgcQ+nx32538HjHk6P+3IfhMc9nB73cHrcw+lxD6fHPZwe
93B63MPpcV/u1/C4h9PjvtzH4XEPp8d9ub/D4x5Oj/ty34fHPZwe9yUPwOMe
To/7khPgcQ+nx33JD/C4h9PjvuQKeNzD6XFf8gY87uH0uC85BB73cHrcl3wC
j3s4Pe5LboHHPZwe9yXPwOMeTo/7knPgcQ+nx33JP/C4h9PjvuQieNzD6XFf
8hI87uH0uC85Ch73cHrcl3wFj3s4Pe5L7oLHPZwe9yWPweMeTo/7ktPgcQ+n
x33Jb/C4h9PjvuQ6eNxnfjOnx33mOnN63GfeM6fHfeZAc3rcZz40p8d95kZz
etxnnjSnx33mTHN63Gf+NKfHPZwe93B63MPpcQ+nxz2cHvdwetzD6XEPp8c9
nB73cHrcw+lxD6fHPZwe93B63MPpcQ+nxz2cHvdwetzD6XEPp8c9nB73cHrc
w+lxD6fHPby+v02cHvdwetzD6XEPp8c9nB73cHrcw+lxD6fHPZwe93B63MPp
cQ+nxz2cHvdwetzD6XEPp8c9nB73cHrcw+lxD6fHPZwe93B63MPpcQ+nxz2c
HvdwetzD6XEPp8c9nB73cHrcw+lxD6fHPZwe93B63MPpcQ+nxz2cHvdwetzD
6XEPp8c9nB73cHrcw+lxD6fHPZwe93B63MPpcQ+nxz2cHvdwetzD6XEPp8c9
nB73cHrcw+lxD6fHPZwe93B63MPpcQ+nxz2cHvdwetzD6XEPp8c9nB73cHrc
w+lxD6fHPZwe93B63MPpcQ+nxz2cHvdwetzD6XGfud2cHveZ283pcZ+53Zwe
95nbzelxD6fHfeZ2c3rcZ243p8d95nZzetxnbjenx33mdnN63GduN6fHfeZ2
c3rcZ243p8d95nZzetxnbjenx33mdnN63GduN6fHfeZ2c3rcZ243p8d95nZz
etxnbjenx33mdnN63GduN6fHfeZ2c3rcZ243p8d95vZ37Xz43nc+/PA7Hz75
nQ///M6Hr37nw2+/8+HD3/nw5+98+PZ3Pvz8Ox8+/50P///Ox7yAnY/5Ajsf
8wh2PuYX7HzMO9j5mI+w8zFPYedj/sLOx7yGnY/5Djsf8yB2PuZH7HzMm9j5
mE+x8zHPYudj/sXOx7yMnY/5Gjsf8zh2PuZ37HzM+9j5mA+y8zFPZOdj/sjO
x7ySnY/5Jjsf81B2Puan7PwtnLey84s4n2Xnz+c8l53fzfkvO38c58Xs/HLO
l9n5PZxHs/PHc37Nzl/AeTc7v5fzcXb+BM7T2fkVnL+z8/s4r2fnF3O+z85f
yHlAO7+f84N2/kTOG9r5lZxPtPMHOM9o50/i/KOdj3lJO3+Q85V2PuYx5Tic
37TzMe8px+F8qJ2PeVI5DudP7XzMq8pxON9q52MeVo7D+Vk7H/O2dj7mc+18
zPPa+Zj/tfMxL2znY77Yzsc8sp2P+WU7H/POdj7mo+18zFPb+Zi/tvMxr23n
Y77bzsc8uJ2P+XE7H/Pmdj7m0+18zLPb+Zh/t/MxL2/nY77ezsc8vp2P+X07
H/P+dj7mA+58zBPc+Zg/uPMxr3DnY77hzsc8xJ2P+Yk7H/MWdz7mM+58zHPc
+Zj/uPMxL3LnY77kzsc8yp2P+ZU7H/Mudz7mY+58zNPc+Zi/ufMxr3PnY77n
zsc80J2P+aE7H/NGdz7mk+58zDPd+Zh/uvP6bj7mq+58zGPd+ZjfuvMx73Xn
Yz7szsc82Z2P+bM7H/Nqdz7m2+58zMPd+Zifu/Mxb3fnYz7vzsc8352P+b87
H/OCdz7mC+98zCPe+ZhfvPMx73jnYz7yzsc85Z2P+cs7H/Oadz7mO+98zIPe
+ZgfvfMxb3rnYz71zsc8652P+dc7H/Oydz7ma+98zOPe+ZjfvfMx73vnYz74
zsc88Z2P+eM7H/PKdz7mm+98zEPf+fM5P33nd3Pe+s4fx/nsO7+c89x3fg/n
v+/88ZwXv/MXcL78zu/lPPqdj/n1O7+C8+53znUVM7ebc93GzO3mXBcyc7s5
153M3G7OdS0zt5tz3czM7eZclzNzuznX/czcbs51RTO3m3Pd0szt5lwXtRwH
66hmbj/nOFinNXP7OcfBOrCZ2x/wcbDObOZ285diHdvM7eZcJzdzuznX4c3c
bs51fjO3m3Md4czt5lynOHO7OddBztxuznWWM7ebcx3nzO3mXCc6c7s516HO
3G7Oda4zt5tzHe3M7eZcpztzuznXAc/cbs51xjO3m3Md88zt5lwnPXO7Oddh
z9xuznXeM7ebcx35zO3mXKc+c7s518HPHG7OdfYzV5tzHf/MyebcJzBz733i
3Icwc6w59znMXGrOfRQzZ5pzn8bMjb8szn0gMweac5/JzHXm3Mcyc5o598nM
3HWvOPfhzBxlzn0+MxeZcx/RzDnm3Kc0c8sviXMf1Mwh5txnNXOFOfdxzZxg
/hTsEwv/HewrC3859qGFfwb2rYW/B/vcwr8b++LCT9hHF/772HcX/irs0wv/
HOzrC/9j7AMM/z7sGwx/GvYZhv8J9iWGvxr7GMM/D/sew9+HfZLht2BfZfgz
sA8z/C+wbzP8tdjnGf5F2Bca3t528ddj32n4l2Kfavj7YV9r+A9jH2z4l2Hf
bPgHYp9t+I9gX274V2Ifb/gHYd9v+E9gn3D4V2FfcfiHYh9y+E9h33L412Cf
c/iHYV90+Juxjzr8a7HvOvwjsU87/Oewrzv8G7APPPyjsW88/Bewzzz8G7Ev
PfxjsI89/Bex7z38m7BPPvxjsa8+/FewDz/8m7FvP/zjsM8//FfhBQj/FngE
wj8e3oHwt8JTEP5ieA3CPxkehPC3w5sQ/h3wLIR/CrwM4b8Nj0M4vQ/h9ESE
0ysRTg9FOL0V4fRchNOLEU6PRji9G+H0dITT6xFOD0g4vSHh9IyE00sSTo9J
OL0n4fSkhNOrEk4PSzi9LeH0vITTCxNe383pnQmnpyacXptwenBmfjanZ2fm
YXN6fGa+NacnaOZVc3qIZv40p+do5klzepRmPjSnp2nmPXN6oJY+AG/Ucr3D
M7Vc1/BSLdcvPFbLdQrv1XI9wpO1XHfwai3XFzxcy3UEb9dyvcDztVwX8IIt
9Q+P2FL/8I4t9Q9P2VL/8Jot9Q8P2lL/8KYt9Q/P2lL/8LIt9Q+P21L/8L6F
Px+euPD74JULfwI8dOEvgrcu/AF47sI/CV688Kvh0Qt/J7x74Z8KT1/4y+D1
C/9deADDPwvewPBXwDMY/kfwEoZ/LjyG4TfBexj+p/Akhn8hvIrht8LDGN7e
dvFnwvMY/mx4IcMfBY9k+B3wToY/B57K8IvgtQy/Cx7M8CvhzQy/GJ7N8Ifg
5Qy/Bh7PJZ/A+7nkHHhClzwAr+iSK+AhXe6/L1q9pct9HJ7T5fzDi7qcf3hU
l/MP7+py/uFpXc4/vK7L+YcHdjn/8MYu5x+e2eX8w0u7nH94bGc+NH83PLkz
j5k/FR7emX/Mnw7P78wbN4k/Gh7heX+/UfxueIrn/fQG8ZfAgzzvX9f79cOz
PO8X1/n1w+O85Ap4n5c8AE/0ch+HV3q5/8JDvdw34a1e7kfwXC+vB17s5efC
o70cH97t5fjwdM/f95qD3+vqg9d/1cHrvPLg9Vxx8HMvPzj+ZQfHee7B/7/0
gF9iji/9/9PB8c3hkdfrF6enXufH/x8efJ1/cXr29f6K0+Ov+vHxMSdA9enj
Yw6B6l+ccw50fYlzjoKuX/HHY07DPA/XiV+KORDz/Fzv1485E/O83eDXjzkW
83ze6NePORnzPN/k1485HPP83yx+CeZ8zPflFvGHMUdkvl+3il+LOSXzfXyN
+JMxB2W+v7eJ3485K/N9v138MsxxmfVgfiHmxMw6MX8j5tDM+jG/BHNuZl2Z
P4w5OrPezK/FnJ5Zh+ZPxhygWZ/m92PO0Kxb88swx2jWs/mFmJM069z8WZjD
NOvf/HWY8zSvC/M/xxypeb2YPx1zquZ1ZH495mDN68v8vZizNa8780/HHK95
PZpfhTlh4U/CXLGlHjCHbMmHmFu21AnmnC25EXPRlvrBHLVwzl1b6gpz2sI5
122pN8yBm3nSnHPmlpyJuXRLf8Acu6VuMfduqVvMyVvqFnP1lrrFHL6Zn805
52+pW8wFXOoWcwSXusXcwaVuMadwqVvMNVzqFnMQl7rF3MSlbjFnMZxzGZf+
hjmO4Zz7uNQ/5kQu9Y+5kkv9Yw7lUv+YW7nUP+ZcLvWPuZhL/WOO5lL/mLu5
1D/mdC71j7meS/1jDuhS/5gbutQ/5owu9Y+5pEv9Y47pUv+Yezpz+53inKu6
XBeYwxrOua3L9YI5r+GcC7tcR5gjG865s8v1hTm14Zxru1x3mIMbzrm5y/WI
ObvhnMu7XKeY4xvOub/L9Ys5weGcK7xc15hDHM65xcv1jjnH4ZyLvPQBzFEO
59zlpT9gTnP4p2Gu89I3MAc6/CHMjV76CeZMh1+DudRLn8Ec6/BPxNzrpf9g
Tnb4g5irvfQlzOEOvxJzu5d+hTnf4RdjLvjSxzBHPPxezB1f+hvmlIdfjrnm
S9/DHPTwizA3femHmLMefhfmsi99EnPcw5+Hue9L/8Sc+PDHYq780lcxhz78
DsytX/ot5tyHt7fdfbjWY4i3t939udZ7iLe33X271pOIt7fd/bzWq4i3t919
vtbDiLe3Xby97e7/tT7H/b/W87j/1/of9/9aL+T+X+uL3P9rPZL7f61fcv+v
9U7u/7U+yv2/1lO5/9f6K/f/Wq/l/l/ru9z/az2Y+3atH3PfrvVm7tu1Ps19
u9azuW/X+jf37Vov575d6+vct2s9nvt2rd9z3671fu7btT7QfbvWE7pv1/pD
9+1ar+i+Xesb3bdrPaT7dq2fdN+u9Zbu27U+03271nO6b9f6T/ft+nLfrvWl
7tu1HtV9u9avum/Xelf37Vof675d62ndt2v9rft2rdd13671ve7btR7YfbvW
D7tv13pj9+1an+y+XeuZ3bdr/bP7dq2Xdt+u9dXu27Ue23271m+7b9d6b/ft
Wh/uvl3ryd23a/25+3atV3ff3r7uF+/18O7ntX5evNfbu8/X+nzxXs8v3uv/
xXu/gHjvLxDv/QjivX9BvPc7iPf+CPHeTyHe+y/Ee7+GeO/vEO/9IOK9f0S8
95uI9/4U8d7PIt77X8R7v4x4768R7/044r1/R7z3+4j3/iDx3k8k3vuPxHu/
knjvbxLv/VDivX9KvPdbiff+LPHezyXe+7/Ee7+YeO8vE+/9aOK9f028ve3i
vT9OvL3t4r3/Try97eK9v0+8ve3ivX9QvL3t4r0/Uby97eK9/1G8ve3ivb9S
vL3t4r1/U7y97eK9P1S8ve3ivf9UvL3t4r2/Vby97eK9f1a8ve3ivT9XvL3t
4r3/V7y97eK9v1i8ve3ivX9ZvL3t4u1tF29vu3h728Xb2y7e3nbx9raLt7dd
vPebi/f+dPHezy7e+9/Fe7+8eO+vF+/9+OK9f1+89/uLtx9AvH0C4u0fEG9f
gXj7DcTbhyDe/gTx9i2It59BvH0O4u1/EG9fhHj7JcTbRyHe/grx9l2Itx9D
vH0a4u3fEG9fh3j7PcTbByLe/hDx9o2It59EvH0m4u0/EW9finj7VcTbxyLe
/hbx9r2Itx9GvL6/Tbz9M+LtqxFvv414+3DE258j3r4d8fbziLfPR7z9P+Lt
CxJvv5B4+4jE218k3r4j8fYjibdPSbz9S+LtaxJvv5N4+6DE2x8l3r4p8fZT
ibfPSrz9V+LtyxJvv5Z4+7jE298l3r4v8faDibdPTLz9Y+LtKxNvv5l4+9DE
258m3r418fazibfPTbz9b+LtixNvv5x4++jE218n3r478fbjibdPT7z9e+Lt
6xNvv594+wDF29su3r5B8fa2i7fPULy97eLtSxRvb7t4+xjF29su3r5H8fa2
i7dPUry97eLtbRdvb7t4e9vF29su3t528fa2i7e3Xby97eLtbRdvb7t4e9vF
29su3t528fa2i7e3Xby97eLtbRdvb7t4e9vF2x8r3r5Z8fbTirfPVrz9t+Lt
yxVvv654+3jF298r3r5f8fYDi7dPWLz9w+LtKxZvv7F4+5DF258s3r5l8fYz
i7fPWbz9z+LtixZvv7R4+6jF218t3r5r8fZji7dPW7z92+Lt6xZvv7d4+8DF
2x8u3r5x8faTi7fPXLz95+LtSxdvv7p4+9jF+9+H/MD3fjrwww+Pe/iBf354
3MMP/PanAx/+8LiHH/j2h8c9/MDnPzzu4QfzAobHPfxgHsHwuIcfzDsYHvfw
g3kKw+MefjCvYXjcww/mQQyPe/jBvInhcQ8/mGcxPO7hB/Myhsc9/GAex/C4
hx/M+zgdzAc5HcwTOR3MHzkdzCsZHvfwg3kow+Me/pbz560Mj3s4Pe7h9LiH
P+78eTHD4x5+z/nzaIbHPZwe9/B7z5+PMzzu4VecP39neNzDLz5/vs/wuIff
f/78oOFxD7/y/PlEw+MeTo97+MG8pOFxDz+YxzQ87uEH856Gxz38YJ7U8LiH
H8yrGh738IN5WMPjHn4wb+t0MJ/rdDDP63Qw/+t0MC/sdDBf7HQwj+x0ML/s
dDDv7HQwH+10ME/tdDB/7XQwr+10MN/tdDAP7nQwP+50MG/udDCf7nQwz+50
MP/udDAv73QwX+90MI/vdDC/73Qw7+90MB/wdDBP8HQwf/B0MK/wdDDf8HQw
D/F0MD/xdDBv8XQwn/F0MM/xdDD/8XQwL/J0MF/ydDCP8nQwv/J0MO/ydDAf
83QwT/N0MH/zdDCv83Qw3/N0MA/0dDA/9HQwb/R0MJ/0dDDP9HQw/7S/mx/M
Vx0e95nbzQ/mvQ6P+8zt5gfzZ4fHfeZ284N5uMPjPnO7+cF83uFxn7nd/GBe
8PC4z9xufjC/eHjcZ243P5inPDzuM7ebH8x3Hh73mdvND+ZND4/7zO3mB/Ov
h8d95nbzg3ncw+M+c7v5wXzw4XGfud38YF756WC++fC4z9xuTo/7zO3m9LjP
3P6gOD3uM7eb0+O+5O3z59cPj/uSt+FxX44Dj3s4Pe7LceBxD6fHfTkOPO7h
9Lgvx4HHPZwe9+U48LiH0+O+HAce93B63JfjwOMeTo/7chx43MPpcV+OA497
OD3uy3HgcQ+nx305Djzu4fS4L8eBxz2cHvflOPC4h9PjvhwHHvdwetyX48Dj
Hk6Pezg97uH0uIfT4x5Oj3s4Pe7h9LiH0+MeTo97OD3u4fS4h9PjHk6Pezg9
7uH0uIfT4x5Oj3s4Pe7h9LiH0+MeTo97OD3u4fS4h9PjHk6Pezg97uH0uIfT
4x5Oj3s4Pe7h9LiH0+MeTo97OD3u4fS4h9PjHk6Pezg97uH0uIfT4x5Oj3s4
Pe7h9d2cHvdwetzD6XEPp8c9nB73cHrcw+lxD6fHPZwe93B63MPpcQ+nx33m
T3N63GeeNKfHfeZDc3rcZ94zp8d95jdzetxnHjOnx33mK3N63GdeMqfHfeYf
c3rcZ54xp8d95hNzetxn3jCnx33mB3N63MPpcQ+nxz2cHvdwetzD6XEPp8c9
nB73cHrcw+lxD6fHPZwe93B63MPpcQ+nxz2cHvdwetzD6XEPp8c9nB73cHrc
w+lxD6fHPZwe93B63MPpcQ+nxz2cHvdwetzD6XEPp8c9nB73cHrcw+lxD6fH
PZwe93B63MPpcQ+nxz2cHvdwetzD6XEPp8c9nB73cHrcw+lxD6fHPZwe93B6
3MPpcQ+nxz2cHvdwetzD6XEPp8c9nB73cHrcw+lxD6fHPZwe93B63MPpcQ+n
xz2cHvdwetzD6XEPp8c9nB73cHrcw+lxD6fHPZwe93B63MPpcQ+nxz2cHvdw
etzD6XEPp8c9nB73cHrcw+lxD6fHPZwe95n/zelxn3nevL6b0+M+c7g5Pe4z
V79JnB73mZPN6XGfufdnxelxnznWnB73mUvvEKfHfeZMc3rcZ278GXF63GcO
NKfHPZwe96UPwOO+XO/wuC/XNTzuy/ULj/tyncLjvlyP8Lgv1x087sv1BY/7
ch3B475cL/C4L9cFPO5L/cPjvtQ/PO5L/cPjvtQ/PO5L/cPjvtQ/PO5L/cPj
vtQ/PO5L/cPjvtQ/PO7h9LiH0+MeTo97OD3u4fS4h9PjHk6Pezg97uH0uIfT
4x5Oj3s4Pe7h9LiH0+MeTo97OD3u4fS4h9PjHk6Pezg97uH0uIfT4x5Oj3s4
Pe7h9LiH0+MeTo97OD3u4fS4h9PjHk6P+5JP4HFfcg487ksegMd9yRXwuC/3
X3jcl/s4PO7L+YfHfTn/8Lgv5x8e9+X8w+O+nH943JfzD4/7cv7hcV/OPzzu
y/mHx305//C4z3xoTo/7zGPm9LjP/GNOj/vMGzeJ0+M+7+83itPjPu+nN4jT
4z7vX9f79cPjPu8X1/n1w+O+5Ap43Jc8AI/7ch+Hx325/8Ljvtw34XFf7kfw
uC+vBx735efC474cHx735fjwuM/f95qD3+vqg9d/1cHrvPLg9Vxx8HMvPzj+
ZQfHee7B/7/0gF9iji/9/9PB8c3hcdfrF6fHXefH/x8ed51/cXrc9f6K0+Ou
+vHx4XFXffr48Lir/sXpcdf1JU6Pu65fcXrc53m4Tpwe93l+rvfrh8d9nrcb
/PrhcZ/n80a/fnjc53m+ya8fHvd5/m8Wp8d9vi+3iNPjPt+vW8XpcZ/v42vE
6XGf7+9t4vS4z/f9dnF63Gc9mNPjPuvEnB73WT/m9LjPujKnx33Wmzk97rMO
zelxn/VpTo/7rFtzetxnPZvT4z7r3Jwe91n/5vS4z+vCnB73eb2Y0+M+ryNz
etzn9WVOj/u87szpcZ/Xozk97uH0uC/1AI/7kg/hcV/qBB73JTfC477UDzzu
4fS4L3UFj3s4Pe5LvcHjPvOkOT3uS86Ex33pD/C4L3ULj/tSt/C4L3ULj/tS
t/C4L3ULj/tSt/C4L3ULj/tSt/C4L3ULj/tSt/C4L3ULj/tSt/C4L3ULj/tS
t/C4h9PjvvQ3eNzD6XFf6h8e96X+4XFf6h8e96X+4XFf6h8e96X+4XFf6h8e
96X+4XFf6h8e96X+4XFf6h8e96X+4XFf6h8e96X+4XFf6h8e96X+4XFf6n/7
ulOcHvfluoDHPZwe9+V6gcc9nB735TqCxz2cHvfl+oLHPZwe9+W6g8c9nB73
5XqExz2cHvflOoXHPZwe9+X6hcc9nB735bqGxz2cHvfleofHPZwe96UPwOMe
To/70h/gcQ+nx33pG/C4h9PjvvQTeNzD6XFf+gw87uH0uC/9Bx73cHrcl74E
j3s4Pe5Lv4LHPZwe96WPweMeTo/70t/gcQ+nx33pe/C4h9PjvvRDeNzD6XFf
+iQ87uH0uC/9Ex73cHrcl74Kj3s4Pe5Lv4XHPZwe96UPw+MeTo/70p/hcQ+n
x33p2/C4h9PjvvRzeNzD6XFf+jw87uH0uC/9Hx73pf/D4770f3jcl/4Pj/vS
/+FxX/o/PO5L/4fHfen/8Lgv/R8e96X/w+O+9H943Jf+D4/70v/hcV/6Pzzu
S/+Hx33msXvE6XGfOc2cHveZ38zpcZ+5zpwe95n3zOlxnznQnB73mQ/N6XGf
udGcHveZJ83pcZ8505we95k/zelxn7nUnB73mVfN6XGfOdacHveZb83pcZ+5
15we95mHzelxnznZnB73mZ/N6XGfudqcHveZt83pcZ853Jwe95nPzelxn7n9
fnF63GeeN6fHfenz8LiH0+O+9H943MPpcV/uC/C4h9Pjvtwv4HEPp8d9uY/A
4x5Oj/tyf4HHPZwe9+W+A497OD3uy/0IHvdwetyX+xQ87uH0uC/3L3jcw+lx
X+5r8LiH0+O+3O/gcQ+nx325D8LjHk6Pezg97uH0uIfT4x5Oj3s4Pe7h9Lgv
92t43MPpcV/u4/C4h9Pjvtzf4XEPp8d9ue/D4x5Oj/uSB+BxD6fHfckJ8LiH
0+O+5Ad43MPpcV9yBTzu4fS4L3kDHvdwetyXHAKPezg97ks+gcc9nB73JbfA
4x5Oj/uSZ+BxD6fHfck58LiH0+O+5B943MPpcV9yETzu4fS4L3kJHvdwetyX
HAWPezg97ku+gsc9nB73JXfB4x5Oj/uSx+BxD6fHfclp8LiH0+O+5Dd43MPp
cV9yHTzuM7+Z0+M+c505Pe4z75nT4z5zoDk97jMfmtPjPnOjOT3uM0+a0+M+
c6Y5Pe4zf5rT4x5Oj3s4Pe7h9LiH0+MeTo97OD3u4fS4h9PjHk6Pezg97uH0
uIfT4x5Oj3s4Pe7h9LiH0+MeTo97OD3u4fS4h9PjHk6Pezg97uH0uIfT4x5e
398mTo97OD3u4fS4h9PjHk6Pezg97uH0uIfT4x5Oj3s4Pe7h9LiH0+M+c7s5
Pe4zt5vT4z5zuzk97jO3m9PjPnO7OT3uM7eb0+M+c7s5Pe4zt5vT4z5zuzk9
7jO3m9PjPnO7OT3uM7eb0+M+c7s5Pe4zt5vT4z5zuzk97jO3m9PjPnO7OT3u
M7f/ljg97jO3m9PjPnO7OT3uM7eb0+M+c7s5Pe4zt5vT4z5zuzk97jO3m9Pj
PnP7Q+L0uM/cbk6P+8zt5vS4z9xuTo/7zO3m9LjP3G5Oj/vM7eb0uM/cbk6P
+8zt7xCnx33mdnN63MPpcQ+nx33mdnN63GduN6fHfeZ2c3rcZ243p8d95nZz
etxnbjenx33mdnN63GduN6fHfeZ2c3rcZ243p8d95nZzetxnbjenx33mdnN6
3GduN6fHfeZ2c3rcZ243p8d95nZzetxnbjenx33mdnN63GduN6fHfeb2d+38
/wHoeyO2
    "]]},
  Axes->True,
  AxesLabel->{None, None, None},
  BoxRatios->{1, 1, 0.4},
  FaceGridsStyle->Automatic,
  PlotRange->{{-0.5, 0.5}, {-0.5, 0.5}, Automatic},
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.02]}, {Automatic, Automatic}},
  Ticks->{Automatic, Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.766291809588794*^9, 3.7662924670483675`*^9, 
  3.76629448809513*^9, 
  3.766294599867239*^9},ExpressionUUID->"16d8f722-26af-4226-a5b5-\
7f44c25ca0ce"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"tic", "[", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"qddat", " ", "=", " ", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"iksol", "[", 
      RowBox[{"xtrackdat", "[", 
       RowBox[{"[", "i", "]"}], "]"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", " ", 
       RowBox[{"Length", "[", "xtrackdat", "]"}]}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Theta]ddat", " ", "=", " ", 
   RowBox[{"qddat", "[", 
    RowBox[{"[", 
     RowBox[{";;", ",", " ", 
      RowBox[{"13", ";;", "18"}]}], "]"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"d2\[Theta]ddat", " ", "=", " ", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"d2x2d2qe", "[", 
        RowBox[{
         RowBox[{"xtrackdat", "[", 
          RowBox[{"[", "i", "]"}], "]"}], ",", " ", 
         RowBox[{"dxtrackdat", "[", 
          RowBox[{"[", "i", "]"}], "]"}], ",", " ", 
         RowBox[{"d2xtrackdat", "[", 
          RowBox[{"[", "i", "]"}], "]"}]}], "]"}], "[", 
       RowBox[{"[", "2", "]"}], "]"}], "[", 
      RowBox[{"[", 
       RowBox[{"19", ";;", "24"}], "]"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", " ", 
       RowBox[{"Length", "[", "xtrackdat", "]"}]}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"d\[Theta]ddat", " ", "=", " ", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"d2x2d2qe", "[", 
        RowBox[{
         RowBox[{"xtrackdat", "[", 
          RowBox[{"[", "i", "]"}], "]"}], ",", " ", 
         RowBox[{"dxtrackdat", "[", 
          RowBox[{"[", "i", "]"}], "]"}], ",", " ", 
         RowBox[{"d2xtrackdat", "[", 
          RowBox[{"[", "i", "]"}], "]"}]}], "]"}], "[", 
       RowBox[{"[", "1", "]"}], "]"}], "[", 
      RowBox[{"[", 
       RowBox[{"19", ";;", "24"}], "]"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", " ", 
       RowBox[{"Length", "[", "xtrackdat", "]"}]}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"toc", "[", "]"}]}], "Input",
 CellChangeTimes->{{3.7613537116034575`*^9, 3.7613537876310115`*^9}, {
   3.76135597226995*^9, 3.7613559726815443`*^9}, 3.7613560035410776`*^9, {
   3.7613590866596575`*^9, 3.7613590903799686`*^9}, {3.76207233446491*^9, 
   3.7620723417577667`*^9}, {3.7660257930049677`*^9, 
   3.766025798584772*^9}},ExpressionUUID->"a019e596-2f25-4045-8e37-\
17c3fc1795be"],

Cell[CellGroupData[{

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Actual time consumed: \"\>", "\[InvisibleSpace]", 
   "1.7559971999999999999`7.395038816904623", 
   "\[InvisibleSpace]", "\<\" seconds.\"\>"}],
  SequenceForm[
  "Actual time consumed: ", 1.7559971999999999999`7.395038816904623, 
   " seconds."],
  Editable->False]], "Print",
 CellChangeTimes->{
  3.7660258033980165`*^9, 3.7660258685817432`*^9, 3.7660259396101627`*^9, 
   3.7660264377467427`*^9, 3.766026472766308*^9, 3.766034664164522*^9, 
   3.7660347285680685`*^9, 3.766035214567207*^9, 3.7660356211116037`*^9, 
   3.766043330545436*^9, 3.766044720094133*^9, 3.766045661610074*^9, 
   3.766045759677414*^9, 3.7660459115199795`*^9, 3.766050707881174*^9, 
   3.7660520839714155`*^9, 3.7660523264749303`*^9, 3.76605251843268*^9, 
   3.7660531934532137`*^9, 3.766053878149507*^9, 3.7660545241616807`*^9, 
   3.7660581672472696`*^9, 3.766058288961342*^9, 3.766060187079852*^9, 
   3.766060574621107*^9, 3.766060746551822*^9, 3.7660608618920937`*^9, 
   3.766060947130889*^9, 3.7660610158013687`*^9, 3.7660610955001965`*^9, 
   3.766061275651309*^9, 3.766105068898785*^9, 3.7661064983405514`*^9, 
   3.7661072029372325`*^9, 3.7661076010423145`*^9, 3.766151255496436*^9, 
   3.766156745943022*^9, 3.7662150929254675`*^9, 3.766268112489848*^9, {
   3.766270048963128*^9, 3.7662700692025375`*^9}, 3.7662716834819803`*^9, 
   3.766271725198098*^9, 3.7662917493033376`*^9, 3.766291812268258*^9, 
   3.766292468807911*^9, 3.766294491136387*^9, 3.7662946031263742`*^9, {
   3.766294799584941*^9, 
   3.766294822529025*^9}},ExpressionUUID->"cd14d421-42e3-407b-8f5d-\
fa66dfeafed2"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"CPU time consumed: \"\>", "\[InvisibleSpace]", "1.75`", 
   "\[InvisibleSpace]", "\<\" seconds.\"\>"}],
  SequenceForm["CPU time consumed: ", 1.75, " seconds."],
  Editable->False]], "Print",
 CellChangeTimes->{
  3.7660258033980165`*^9, 3.7660258685817432`*^9, 3.7660259396101627`*^9, 
   3.7660264377467427`*^9, 3.766026472766308*^9, 3.766034664164522*^9, 
   3.7660347285680685`*^9, 3.766035214567207*^9, 3.7660356211116037`*^9, 
   3.766043330545436*^9, 3.766044720094133*^9, 3.766045661610074*^9, 
   3.766045759677414*^9, 3.7660459115199795`*^9, 3.766050707881174*^9, 
   3.7660520839714155`*^9, 3.7660523264749303`*^9, 3.76605251843268*^9, 
   3.7660531934532137`*^9, 3.766053878149507*^9, 3.7660545241616807`*^9, 
   3.7660581672472696`*^9, 3.766058288961342*^9, 3.766060187079852*^9, 
   3.766060574621107*^9, 3.766060746551822*^9, 3.7660608618920937`*^9, 
   3.766060947130889*^9, 3.7660610158013687`*^9, 3.7660610955001965`*^9, 
   3.766061275651309*^9, 3.766105068898785*^9, 3.7661064983405514`*^9, 
   3.7661072029372325`*^9, 3.7661076010423145`*^9, 3.766151255496436*^9, 
   3.766156745943022*^9, 3.7662150929254675`*^9, 3.766268112489848*^9, {
   3.766270048963128*^9, 3.7662700692025375`*^9}, 3.7662716834819803`*^9, 
   3.766271725198098*^9, 3.7662917493033376`*^9, 3.766291812268258*^9, 
   3.766292468807911*^9, 3.766294491136387*^9, 3.7662946031263742`*^9, {
   3.766294799584941*^9, 
   3.766294822534023*^9}},ExpressionUUID->"d9651254-5bb8-464d-9a12-\
3d525d45fdfa"]
}, Open  ]]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
   "Converting", " ", "the", " ", "discrete", " ", "data", " ", "into", " ", 
    "an", " ", "interpolation", " ", "function"}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"time", " ", "=", " ", 
     RowBox[{"Table", "[", 
      RowBox[{"t", ",", " ", 
       RowBox[{"{", 
        RowBox[{"t", ",", " ", "0", " ", ",", "tf", ",", " ", "h"}], "}"}]}], 
      "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"tempref", " ", "=", 
     RowBox[{"Transpose", "[", 
      RowBox[{"ArrayFlatten", "[", 
       RowBox[{"{", 
        RowBox[{"time", ",", " ", "\[Theta]ddat"}], "}"}], "]"}], "]"}]}], 
    ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"tempdref", " ", "=", 
     RowBox[{"Transpose", "[", 
      RowBox[{"ArrayFlatten", "[", 
       RowBox[{"{", 
        RowBox[{"time", ",", " ", "d\[Theta]ddat"}], "}"}], "]"}], "]"}]}], 
    ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"tempd2ref", " ", "=", 
     RowBox[{"Transpose", "[", 
      RowBox[{"ArrayFlatten", "[", 
       RowBox[{"{", 
        RowBox[{"time", ",", " ", "d2\[Theta]ddat"}], "}"}], "]"}], "]"}]}], 
    ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"\[Theta]ref", "=", 
     RowBox[{"Interpolation", "[", "tempref", "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"d\[Theta]ref", "=", 
     RowBox[{"Interpolation", "[", "tempdref", "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"d2\[Theta]ref", "=", 
     RowBox[{"Interpolation", "[", "tempd2ref", "]"}]}], ";"}]}]}]], "Input",
 CellChangeTimes->{{3.765360580554777*^9, 3.7653605816239557`*^9}, {
  3.7653606132059245`*^9, 3.765360623371499*^9}, {3.7653606549882236`*^9, 
  3.7653606728836155`*^9}, {3.7653608559681606`*^9, 3.7653608574765687`*^9}, {
  3.7653611063236628`*^9, 3.7653611101867633`*^9}, {3.765361335884072*^9, 
  3.765361363824295*^9}, {3.7653615289014626`*^9, 3.765361533297688*^9}, {
  3.765361581364904*^9, 3.765361590979272*^9}, {3.7653616313956833`*^9, 
  3.765361673014614*^9}, {3.765364633228917*^9, 3.7653646340544453`*^9}, {
  3.766023704783057*^9, 3.766023716754964*^9}, {3.7660539441803303`*^9, 
  3.766053955889038*^9}},ExpressionUUID->"94f774f4-a219-42f4-99d8-\
d4ab59d3280d"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"controlparams", " ", "=", " ", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"kp", "\[Rule]", "2000"}], ",", " ", 
     RowBox[{"kv", "\[Rule]", 
      RowBox[{"2", 
       RowBox[{"Sqrt", "[", "2000", "]"}]}]}]}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Kp", " ", "=", " ", 
   RowBox[{
    RowBox[{"kp", "*", 
     RowBox[{"IdentityMatrix", "[", "6", "]"}]}], "/.", "controlparams"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Kv", " ", "=", " ", 
   RowBox[{
    RowBox[{"kv", "*", 
     RowBox[{"IdentityMatrix", "[", "6", "]"}]}], "/.", "controlparams"}]}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.7660246505904007`*^9, 3.76602465274094*^9}, {
   3.7660247961115513`*^9, 3.766024808426231*^9}, {3.7660254585293174`*^9, 
   3.76602546066261*^9}, {3.766025507353546*^9, 3.7660255097811756`*^9}, 
   3.7660259991701307`*^9, {3.7660261252722673`*^9, 3.7660261256701465`*^9}, {
   3.766026156587059*^9, 3.76602615911761*^9}, {3.766026382061127*^9, 
   3.7660263829598665`*^9}, {3.766026523985529*^9, 3.7660265243463383`*^9}, {
   3.7660265756733437`*^9, 3.7660265789846363`*^9}, {3.7660347882870245`*^9, 
   3.7660347922780437`*^9}, {3.766035104534215*^9, 3.7660351049080315`*^9}, {
   3.7660351368395443`*^9, 3.7660351372432985`*^9}, {3.7660363890965786`*^9, 
   3.766036391795457*^9}, {3.766044734646927*^9, 3.766044738135955*^9}, {
   3.766046000970316*^9, 3.7660460092804847`*^9}, {3.7660526588372965`*^9, 
   3.766052661608123*^9}, {3.7660587257494664`*^9, 3.7660587286597385`*^9}, {
   3.766060839131675*^9, 3.7660608422737026`*^9}, {3.7660610666791716`*^9, 
   3.7660610704122376`*^9}, {3.7661055215914493`*^9, 
   3.7661055237873974`*^9}},ExpressionUUID->"ec39c5e0-bbab-4446-aecd-\
1143cd3c9d4f"],

Cell[BoxData[
 RowBox[{
  RowBox[{"controlinput", " ", "=", " ", 
   RowBox[{"{", "}"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.7660587796403303`*^9, 3.766058785442599*^9}, 
   3.766060877413972*^9},ExpressionUUID->"7d832826-68cf-4e7a-8276-\
8815d92bc086"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"tempx\[Phi]", " ", "=", " ", 
   RowBox[{
    RowBox[{"qeidat", "[", 
     RowBox[{"[", "1", "]"}], "]"}], "[", 
    RowBox[{"[", 
     RowBox[{"1", ";;", "18"}], "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"controlandsim", "[", 
    RowBox[{
     RowBox[{"q_", "?", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"VectorQ", "[", 
         RowBox[{"#", ",", "NumericQ"}], "]"}], "&"}], ")"}]}], ",", 
     RowBox[{"dq_", "?", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"VectorQ", "[", 
         RowBox[{"#", ",", "NumericQ"}], "]"}], "&"}], ")"}]}], ",", " ", 
     "t_"}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "bla", ",", " ", "Mval", ",", " ", "Cval", ",", " ", "Gval", ",", " ", 
       "LHS", ",", " ", "dqe", ",", " ", "qe", ",", " ", "J\[Eta]x\[Phi]val", 
       ",", "J\[Eta]\[Theta]val", ",", "Jx\[Phi]\[Theta]val", ",", 
       "dJ\[Eta]x\[Phi]val", ",", "dJ\[Eta]\[Theta]val", ",", 
       "Jqe\[Theta]val", ",", "dJqe\[Theta]val", ",", "M\[Theta]val", ",", 
       "C\[Theta]val", ",", "G\[Theta]val", ",", " ", "\[Tau]\[Theta]val", 
       ",", "d\[Theta]ival", ",", "\[Theta]ival", ",", "edat", ",", "dedat", 
       ",", "\[Tau]dash"}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"(*", 
      RowBox[{
      "Perform", " ", "FK", " ", "for", " ", "the", " ", "configuration", " ",
        "and", " ", "task", " ", "space", " ", "variables"}], "*)"}], 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"tempx\[Phi]", " ", "=", " ", 
       RowBox[{"TrackRoot", "[", 
        RowBox[{"q", ",", " ", "tempx\[Phi]"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"qe", " ", "=", " ", 
       RowBox[{"Join", "[", 
        RowBox[{"tempx\[Phi]", ",", "q"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"(*", 
       RowBox[{
       "Getting", " ", "the", " ", "velocities", " ", "of", " ", "the", " ", 
        "configuration", " ", "space", " ", "variables"}], "*)"}], 
      "\[IndentingNewLine]", 
      RowBox[{"J\[Eta]x\[Phi]val", " ", "=", " ", 
       RowBox[{"cJ\[Eta]x\[Phi]", "@@", "qe"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"J\[Eta]\[Theta]val", " ", "=", " ", 
       RowBox[{"cJ\[Eta]\[Theta]", "@@", "qe"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"Jx\[Phi]\[Theta]val", " ", "=", " ", 
       RowBox[{"-", 
        RowBox[{
         RowBox[{"Inverse", "[", "J\[Eta]x\[Phi]val", "]"}], ".", 
         "J\[Eta]\[Theta]val"}]}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"dqe", " ", "=", " ", 
       RowBox[{"Join", "[", 
        RowBox[{
         RowBox[{"Jx\[Phi]\[Theta]val", ".", "dq"}], ",", " ", "dq"}], 
        "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"(*", 
       RowBox[{
       "Compute", " ", "all", " ", "the", " ", "extended", " ", 
        "configuration", " ", "space", " ", "matrices"}], "*)"}], 
      "\[IndentingNewLine]", 
      RowBox[{"Mval", "=", 
       RowBox[{"cMmat", "@@", "qe"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"Cval", "=", 
       RowBox[{"cCmat", "@@", 
        RowBox[{"Join", "[", 
         RowBox[{"qe", ",", " ", "dqe"}], "]"}]}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"Gval", "=", 
       RowBox[{"cGvec", "@@", "qe"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"(*", 
       RowBox[{
       "Computing", " ", "the", " ", "derivative", " ", "of", " ", "the", " ",
         "Jacobians"}], "*)"}], "\[IndentingNewLine]", 
      RowBox[{"dJ\[Eta]x\[Phi]val", " ", "=", " ", 
       RowBox[{"cdJ\[Eta]x\[Phi]", "@@", 
        RowBox[{"Join", "[", 
         RowBox[{"qe", ",", " ", "dqe"}], "]"}]}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"dJ\[Eta]\[Theta]val", " ", "=", " ", 
       RowBox[{"cdJ\[Eta]\[Theta]", "@@", 
        RowBox[{"Join", "[", 
         RowBox[{"qe", ",", " ", "dqe"}], "]"}]}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"(*", 
       RowBox[{"Map", " ", "of", " ", "the", " ", "matrices"}], "*)"}], 
      "\[IndentingNewLine]", 
      RowBox[{"Jqe\[Theta]val", " ", "=", " ", 
       RowBox[{"ArrayFlatten", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", "Jx\[Phi]\[Theta]val", "}"}], ",", " ", 
          RowBox[{"{", 
           RowBox[{"IdentityMatrix", "[", "6", "]"}], "}"}]}], "}"}], "]"}]}],
       ";", "\[IndentingNewLine]", 
      RowBox[{"dJqe\[Theta]val", " ", "=", " ", 
       RowBox[{"ArrayFlatten", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"-", 
            RowBox[{
             RowBox[{"Inverse", "[", "J\[Eta]x\[Phi]val", "]"}], ".", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", 
                RowBox[{"dJ\[Eta]x\[Phi]val", ".", 
                 RowBox[{"Inverse", "[", "J\[Eta]x\[Phi]val", "]"}], ".", 
                 "J\[Eta]\[Theta]val"}]}], "+", "dJ\[Eta]\[Theta]val"}], 
              ")"}]}]}], "}"}], ",", " ", 
          RowBox[{"{", 
           RowBox[{"ConstantArray", "[", 
            RowBox[{"0", ",", 
             RowBox[{"{", 
              RowBox[{"6", ",", "6"}], "}"}]}], "]"}], "}"}]}], "}"}], 
        "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"(*", 
       RowBox[{
       "Map", " ", "the", " ", "matrices", " ", "to", " ", "the", " ", "task",
         " ", "space"}], "*)"}], "\[IndentingNewLine]", 
      RowBox[{"M\[Theta]val", " ", "=", " ", 
       RowBox[{
        RowBox[{"T", "[", "Jqe\[Theta]val", "]"}], ".", "Mval", ".", 
        "Jqe\[Theta]val"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"C\[Theta]val", " ", "=", " ", 
       RowBox[{
        RowBox[{"T", "[", "Jqe\[Theta]val", "]"}], ".", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"Mval", ".", "dJqe\[Theta]val"}], "+", 
          RowBox[{"Cval", ".", "Jqe\[Theta]val"}]}], ")"}]}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"G\[Theta]val", " ", "=", " ", 
       RowBox[{
        RowBox[{"T", "[", "Jqe\[Theta]val", "]"}], ".", "Gval"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"(*", 
       RowBox[{
       "LHS", " ", "of", " ", "the", " ", "dynamics", " ", "equations"}], 
       "*)"}], "\[IndentingNewLine]", 
      RowBox[{"edat", " ", "=", " ", 
       RowBox[{
        RowBox[{"\[Theta]ref", "[", "t", "]"}], " ", "-", " ", "q"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"dedat", " ", "=", " ", 
       RowBox[{
        RowBox[{"d\[Theta]ref", "[", "t", "]"}], " ", "-", " ", "dq"}]}], ";",
       "\[IndentingNewLine]", 
      RowBox[{"\[Tau]dash", " ", "=", " ", 
       RowBox[{
        RowBox[{"d2\[Theta]ref", "[", "t", "]"}], "+", 
        RowBox[{"Kp", ".", "edat"}], "+", 
        RowBox[{"Kv", ".", "dedat"}]}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"\[Tau]\[Theta]val", " ", "=", " ", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"M\[Theta]val", ".", "\[Tau]dash"}], ")"}], "+", 
        RowBox[{"C\[Theta]val", ".", "dq"}], "+", "G\[Theta]val"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"(*", 
       RowBox[{
        RowBox[{"LHS", " ", "=", " ", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"Inverse", "[", "M\[Theta]val", "]"}], ")"}], ".", 
          RowBox[{"(", 
           RowBox[{"\[Tau]\[Theta]val", "-", 
            RowBox[{"C\[Theta]val", ".", "dq"}], "-", "G\[Theta]val"}], 
           ")"}]}]}], ";"}], "*)"}], "\[IndentingNewLine]", 
      RowBox[{"LHS", " ", "=", " ", "\[Tau]dash"}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"AppendTo", "[", 
       RowBox[{"controlinput", ",", " ", "\[Tau]\[Theta]val"}], "]"}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"(*", 
       RowBox[{
        RowBox[{"Print", "[", 
         RowBox[{"{", 
          RowBox[{"edat", ",", " ", "dedat", ",", " ", "dq"}], "}"}], "]"}], 
        ";"}], "*)"}], "\[IndentingNewLine]", 
      RowBox[{"Return", "[", "LHS", "]"}], ";"}]}], "\[IndentingNewLine]", 
    "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.74748440757664*^9, 3.747484409507562*^9}, {
   3.747484461677616*^9, 3.7474845482674875`*^9}, {3.747484580327173*^9, 
   3.747484599645011*^9}, {3.7474848161103525`*^9, 3.7474848183136363`*^9}, {
   3.747484853619799*^9, 3.7474848714698343`*^9}, {3.7474849021801157`*^9, 
   3.747484904289808*^9}, {3.7474849682701597`*^9, 3.7474849703898525`*^9}, 
   3.747485067490321*^9, {3.7474858814676027`*^9, 3.747485888809555*^9}, 
   3.747485928463986*^9, {3.747486162078972*^9, 3.7474861680139165`*^9}, {
   3.7474862079841194`*^9, 3.7474862510275145`*^9}, {3.747494313873737*^9, 
   3.747494377109394*^9}, {3.7474957232390165`*^9, 3.747495767668152*^9}, {
   3.74764017577621*^9, 3.7476401832002497`*^9}, {3.7480054810702963`*^9, 
   3.748005546272901*^9}, 3.7480056046499023`*^9, {3.757950439782325*^9, 
   3.757950569326189*^9}, {3.757950623141141*^9, 3.757950709744218*^9}, {
   3.757950755080717*^9, 3.757950774280817*^9}, {3.7579508501169844`*^9, 
   3.757950868096898*^9}, {3.757951002004713*^9, 3.75795100977565*^9}, {
   3.7579512289435077`*^9, 3.7579513288255033`*^9}, {3.757951424558215*^9, 
   3.7579515576140785`*^9}, {3.757951664084346*^9, 3.7579517277402735`*^9}, {
   3.757952357405804*^9, 3.7579523804612427`*^9}, {3.757952608230666*^9, 
   3.757952632743451*^9}, {3.7579526969170275`*^9, 3.7579527179374623`*^9}, {
   3.757952778186175*^9, 3.7579530716083097`*^9}, {3.7579531335043707`*^9, 
   3.75795314602946*^9}, {3.7579538274467583`*^9, 3.757953830240122*^9}, {
   3.75795389012076*^9, 3.7579540595329423`*^9}, {3.7579542879657555`*^9, 
   3.757954328713045*^9}, {3.757954617697354*^9, 3.7579546326152024`*^9}, {
   3.757955528194253*^9, 3.7579555321223373`*^9}, {3.757955575544798*^9, 
   3.7579557198491306`*^9}, {3.7600251382015257`*^9, 3.760025214906492*^9}, {
   3.760025271970461*^9, 3.760025291128994*^9}, {3.760025418433078*^9, 
   3.760025425017371*^9}, {3.7610305882240114`*^9, 3.7610308332628527`*^9}, {
   3.7610315623168178`*^9, 3.7610315735368743`*^9}, {3.7610344205983667`*^9, 
   3.7610344224482164`*^9}, {3.7610476568816824`*^9, 
   3.7610476911578436`*^9}, {3.761047731522089*^9, 3.761047795362996*^9}, {
   3.761047862176386*^9, 3.7610481549305077`*^9}, {3.761048507980896*^9, 
   3.761048552352975*^9}, {3.7610487115161724`*^9, 3.761048712216196*^9}, {
   3.761273663707091*^9, 3.7612736664770637`*^9}, {3.7612749544710035`*^9, 
   3.761275035221036*^9}, {3.7612753542850766`*^9, 3.761275389974563*^9}, {
   3.761276117887458*^9, 3.761276118290227*^9}, {3.7612926181930976`*^9, 
   3.761292634293437*^9}, {3.761299537850651*^9, 3.761299544745693*^9}, {
   3.7612995753741164`*^9, 3.7612996305254903`*^9}, {3.761299945838954*^9, 
   3.761299966734703*^9}, 3.7613582215808496`*^9, 3.7613588583134966`*^9, {
   3.7613996684679284`*^9, 3.7613997169257298`*^9}, {3.761399747406802*^9, 
   3.7613997544427567`*^9}, {3.7613997998830214`*^9, 3.761399848516343*^9}, {
   3.7613999492831306`*^9, 3.761399949723877*^9}, {3.7614000644100666`*^9, 
   3.761400067664218*^9}, {3.7614006866091795`*^9, 3.7614006891717176`*^9}, {
   3.7614007246233664`*^9, 3.7614007248002963`*^9}, {3.761401557671116*^9, 
   3.761401568604863*^9}, {3.761401602159087*^9, 3.761401645651207*^9}, {
   3.7620749521880007`*^9, 3.7620749525007963`*^9}, {3.766023029920142*^9, 
   3.766023044450427*^9}, {3.7660230852606344`*^9, 3.7660231311353235`*^9}, {
   3.766023184039028*^9, 3.7660232035688477`*^9}, {3.766023332506509*^9, 
   3.766023423034616*^9}, {3.7660238469723663`*^9, 3.7660238522653275`*^9}, {
   3.766023904981265*^9, 3.766023928778465*^9}, {3.76602398046716*^9, 
   3.7660239810398116`*^9}, {3.766035786432135*^9, 3.7660357940470734`*^9}, {
   3.7660358454392786`*^9, 3.766035850366873*^9}, {3.766035887709311*^9, 
   3.7660358919692693`*^9}, 3.7660359571799603`*^9, {3.7660457813583813`*^9, 
   3.7660457868163447`*^9}, {3.766045955168825*^9, 3.7660459909515505`*^9}, {
   3.7660506253186755`*^9, 3.7660506319113307`*^9}, {3.766050671697104*^9, 
   3.7660506753993044`*^9}, {3.766050821515624*^9, 3.766050826466549*^9}, {
   3.7660533427457023`*^9, 3.766053364253109*^9}, {3.7660537757559786`*^9, 
   3.766053785303891*^9}, 3.766054394912339*^9, {3.766058796344601*^9, 
   3.7660588091001844`*^9}, 3.766058861257978*^9, {3.7660598294453583`*^9, 
   3.766059899160487*^9}, {3.7660599341146317`*^9, 3.766059978275525*^9}, 
   3.7660608738568506`*^9},ExpressionUUID->"0661b703-9131-4c3e-9652-\
f3b422326db1"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"tempx\[Phi]", " ", "=", " ", 
   RowBox[{
    RowBox[{"qeidat", "[", 
     RowBox[{"[", "1", "]"}], "]"}], "[", 
    RowBox[{"[", 
     RowBox[{"1", ";;", "18"}], "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"tic", "[", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"controlsim", " ", "=", " ", 
   RowBox[{
    RowBox[{"NDSolve", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{
         RowBox[{"controlandsim", "[", 
          RowBox[{
           RowBox[{"q1", "[", "t", "]"}], ",", 
           RowBox[{
            RowBox[{"q1", "'"}], "[", "t", "]"}], ",", "t"}], "]"}], 
         "\[Equal]", 
         RowBox[{
          RowBox[{"q1", "''"}], "[", "t", "]"}]}], ",", 
        RowBox[{
         RowBox[{"q1", "[", "0", "]"}], "\[Equal]", "\[Theta]initc"}], ",", 
        RowBox[{
         RowBox[{
          RowBox[{"q1", "'"}], "[", "0", "]"}], "\[Equal]", 
         "d\[Theta]initc"}]}], "}"}], ",", "q1", ",", 
      RowBox[{"{", 
       RowBox[{"t", ",", "0", ",", "tf"}], "}"}]}], "]"}], "[", 
    RowBox[{"[", "1", "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"toc", "[", "]"}]}], "Input",
 CellChangeTimes->{
  3.761048802310381*^9, {3.7610488359995127`*^9, 3.761048915946347*^9}, {
   3.7610491758731337`*^9, 3.761049267722969*^9}, {3.761268370422258*^9, 
   3.761268370491316*^9}, {3.7612697337841682`*^9, 3.7612697393140645`*^9}, {
   3.7612698352378273`*^9, 3.7612698438241425`*^9}, 3.7612735508276167`*^9, {
   3.7612737245468025`*^9, 3.7612737268268433`*^9}, {3.7612748490580606`*^9, 
   3.7612748523781815`*^9}, {3.7612752616956415`*^9, 3.761275263309377*^9}, {
   3.7612755005038643`*^9, 3.7612755034681597`*^9}, {3.761276279302758*^9, 
   3.7612762948330107`*^9}, {3.7612763648127265`*^9, 
   3.7612763686574717`*^9}, {3.7612767337422295`*^9, 3.761276734291529*^9}, 
   3.7612999366325016`*^9, {3.7613000172783036`*^9, 3.761300044200635*^9}, {
   3.761300131724306*^9, 3.7613001944188976`*^9}, {3.7613008120833197`*^9, 
   3.7613008535632696`*^9}, {3.761300883655382*^9, 3.7613009026743994`*^9}, {
   3.7613009472744455`*^9, 3.761301062552153*^9}, {3.7614000538610926`*^9, 
   3.7614001092465277`*^9}, 3.7614001722224483`*^9, 3.761400340889022*^9, {
   3.7614004349303336`*^9, 3.761400448182353*^9}, {3.761400680102923*^9, 
   3.761400682261685*^9}, {3.7614007142883*^9, 3.7614007155675654`*^9}, {
   3.76140077610528*^9, 3.7614007858503027`*^9}, {3.7614015785221596`*^9, 
   3.76140158768767*^9}, {3.7614016590641723`*^9, 3.761401677612606*^9}, {
   3.7620741549572678`*^9, 3.762074203419211*^9}, {3.762074810128865*^9, 
   3.7620748109771204`*^9}, 3.762074875847302*^9, {3.7620749178671875`*^9, 
   3.7620749181573944`*^9}, {3.7620775893034005`*^9, 
   3.7620775898151064`*^9}, {3.7620776506782875`*^9, 3.762077650776224*^9}, {
   3.7620777182436285`*^9, 3.76207775532644*^9}, {3.7620781375187583`*^9, 
   3.7620781408988333`*^9}, 3.7620868209437757`*^9, {3.7621307251008224`*^9, 
   3.7621307262881246`*^9}, {3.762130906831638*^9, 3.7621309642237396`*^9}, {
   3.76213123910575*^9, 3.762131267691624*^9}, {3.762131499275281*^9, 
   3.762131518007135*^9}, {3.76213170227413*^9, 3.7621317193739896`*^9}, {
   3.7621322735902634`*^9, 3.762132289500375*^9}, {3.7621328486177263`*^9, 
   3.762132884589579*^9}, {3.7621331716983333`*^9, 3.762133201391026*^9}, {
   3.76213327636753*^9, 3.762133280818962*^9}, {3.76213342429731*^9, 
   3.7621334420979924`*^9}, {3.762134110314232*^9, 3.7621341521177664`*^9}, {
   3.76213434412207*^9, 3.7621344002876225`*^9}, {3.7621346309044256`*^9, 
   3.7621346478187675`*^9}, {3.762157704736667*^9, 3.762157728265235*^9}, {
   3.7621587124803057`*^9, 3.7621587788003693`*^9}, {3.7621589080533905`*^9, 
   3.762158954997535*^9}, {3.7621590789772143`*^9, 3.7621591532497244`*^9}, {
   3.7621591977392683`*^9, 3.7621591985827885`*^9}, {3.7621593632615957`*^9, 
   3.7621593809814577`*^9}, {3.762159649853614*^9, 3.7621596796805487`*^9}, {
   3.762159835637349*^9, 3.7621598508876038`*^9}, {3.762160135887554*^9, 
   3.7621601518454237`*^9}, {3.7624813620863037`*^9, 3.7624813625313516`*^9}, 
   3.76537307000498*^9, {3.7653731072197404`*^9, 3.765373108263937*^9}, {
   3.765373157091062*^9, 3.765373178444908*^9}, {3.765373366053504*^9, 
   3.765373371171548*^9}, {3.7653749696417203`*^9, 3.7653749698615932`*^9}, {
   3.765375116593317*^9, 3.7653751195979495`*^9}, {3.765375443099329*^9, 
   3.765375443212407*^9}, {3.76537854377934*^9, 3.765378544053154*^9}, {
   3.7660197512698574`*^9, 3.7660197519034967`*^9}, {3.766019784794011*^9, 
   3.766019785193762*^9}, {3.7660239610003233`*^9, 3.766023963471908*^9}, {
   3.7660246782457457`*^9, 3.766024680975971*^9}, {3.7660247544879336`*^9, 
   3.766024754626011*^9}, {3.7660250905575223`*^9, 3.766025170072832*^9}, {
   3.7660252143414497`*^9, 3.766025227237011*^9}, {3.766025295836388*^9, 
   3.7660253034329567`*^9}, {3.766025423465664*^9, 3.7660254311922436`*^9}, {
   3.7660261902650537`*^9, 3.766026191285472*^9}, 3.7660262854581337`*^9, {
   3.7660263499950113`*^9, 3.7660263559431243`*^9}, {3.7660360791063786`*^9, 
   3.7660360969251146`*^9}, {3.7660361587887325`*^9, 
   3.7660361936899652`*^9}, {3.766036227862997*^9, 3.766036227950946*^9}, {
   3.766044808113826*^9, 3.7660448197751155`*^9}, 3.7660458651351566`*^9, {
   3.7660514783533244`*^9, 3.766051491148271*^9}, {3.766053490832446*^9, 
   3.7660534940610313`*^9}, {3.7660546939456444`*^9, 3.766054701879916*^9}, {
   3.7660611909819775`*^9, 3.766061202697212*^9}, {3.766067978386573*^9, 
   3.7660679799583654`*^9}, 
   3.7661072322375903`*^9},ExpressionUUID->"1876b60c-1a69-4a82-8e43-\
5b8e0848e1c6"],

Cell[BoxData[
 TemplateBox[{
  "InterpolatingFunction","dmval",
   "\"Input value \\!\\(\\*RowBox[{\\\"{\\\", \\\"3.141592653589793`\\\", \
\\\"}\\\"}]\\) lies outside the range of data in the interpolating function. \
Extrapolation will be used.\"",2,664,58,25993525642924664479,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{{3.766294801358924*^9, 
  3.7662948267905865`*^9}},ExpressionUUID->"084adf6f-7490-4799-9887-\
b2ddb99d5b74"],

Cell[BoxData[
 TemplateBox[{
  "InterpolatingFunction","dmval",
   "\"Input value \\!\\(\\*RowBox[{\\\"{\\\", \\\"3.141592653589793`\\\", \
\\\"}\\\"}]\\) lies outside the range of data in the interpolating function. \
Extrapolation will be used.\"",2,664,59,25993525642924664479,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{{3.766294801358924*^9, 
  3.7662948268365602`*^9}},ExpressionUUID->"518ef9d3-66d9-4967-91e1-\
8fe07c070025"],

Cell[BoxData[
 TemplateBox[{
  "InterpolatingFunction","dmval",
   "\"Input value \\!\\(\\*RowBox[{\\\"{\\\", \\\"3.141592653589793`\\\", \
\\\"}\\\"}]\\) lies outside the range of data in the interpolating function. \
Extrapolation will be used.\"",2,664,60,25993525642924664479,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{{3.766294801358924*^9, 
  3.7662948268765383`*^9}},ExpressionUUID->"54a0e8af-679b-4f83-a105-\
bf9f0bc8990a"],

Cell[BoxData[
 TemplateBox[{
  "General","stop",
   "\"Further output of \\!\\(\\*StyleBox[RowBox[{\\\"InterpolatingFunction\\\
\", \\\"::\\\", \\\"dmval\\\"}], \\\"MessageName\\\"]\\) will be suppressed \
during this calculation.\"",2,664,61,25993525642924664479,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{{3.766294801358924*^9, 
  3.7662948269185123`*^9}},ExpressionUUID->"34fcec2a-e8a8-40c6-ab1b-\
2263fc2c9888"],

Cell[CellGroupData[{

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Actual time consumed: \"\>", "\[InvisibleSpace]", 
   "1.5641057999999999999`7.344781124306533", 
   "\[InvisibleSpace]", "\<\" seconds.\"\>"}],
  SequenceForm[
  "Actual time consumed: ", 1.5641057999999999999`7.344781124306533, 
   " seconds."],
  Editable->False]], "Print",
 CellChangeTimes->{
  3.7660545380779114`*^9, 3.766054706056999*^9, 3.766058180576087*^9, 
   3.766058310067723*^9, 3.766058735110838*^9, {3.7660588426548195`*^9, 
   3.7660588647831974`*^9}, {3.7660598770707593`*^9, 
   3.7660599016818275`*^9}, {3.7660599380358753`*^9, 3.76605998086691*^9}, 
   3.7660601994739776`*^9, 3.7660605791864333`*^9, 3.7660607523673973`*^9, {
   3.76606085119387*^9, 3.7660608815765905`*^9}, 3.7660609521882133`*^9, 
   3.766061019931498*^9, 3.766061100994858*^9, {3.7660611962173357`*^9, 
   3.7660612047561646`*^9}, 3.7660612832421603`*^9, 3.766105081665476*^9, 
   3.766105561545322*^9, 3.7661065053165755`*^9, {3.7661072329082527`*^9, 
   3.7661072404690924`*^9}, 3.766107607330578*^9, 3.7661512584347553`*^9, 
   3.7661567483536425`*^9, 3.766215095701527*^9, 3.76626811557308*^9, 
   3.7662700747723494`*^9, 3.766271690632886*^9, 3.7662717306759605`*^9, 
   3.766291751909845*^9, 3.766291818202707*^9, 3.7662924737111044`*^9, 
   3.7662944958776827`*^9, 3.766294608714176*^9, {3.7662948033470078`*^9, 
   3.766294826955494*^9}},ExpressionUUID->"db18f6ec-67bc-43aa-8f1f-\
7eea89873998"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"CPU time consumed: \"\>", "\[InvisibleSpace]", 
   "1.468999999999994`", "\[InvisibleSpace]", "\<\" seconds.\"\>"}],
  SequenceForm["CPU time consumed: ", 1.468999999999994, " seconds."],
  Editable->False]], "Print",
 CellChangeTimes->{
  3.7660545380779114`*^9, 3.766054706056999*^9, 3.766058180576087*^9, 
   3.766058310067723*^9, 3.766058735110838*^9, {3.7660588426548195`*^9, 
   3.7660588647831974`*^9}, {3.7660598770707593`*^9, 
   3.7660599016818275`*^9}, {3.7660599380358753`*^9, 3.76605998086691*^9}, 
   3.7660601994739776`*^9, 3.7660605791864333`*^9, 3.7660607523673973`*^9, {
   3.76606085119387*^9, 3.7660608815765905`*^9}, 3.7660609521882133`*^9, 
   3.766061019931498*^9, 3.766061100994858*^9, {3.7660611962173357`*^9, 
   3.7660612047561646`*^9}, 3.7660612832421603`*^9, 3.766105081665476*^9, 
   3.766105561545322*^9, 3.7661065053165755`*^9, {3.7661072329082527`*^9, 
   3.7661072404690924`*^9}, 3.766107607330578*^9, 3.7661512584347553`*^9, 
   3.7661567483536425`*^9, 3.766215095701527*^9, 3.76626811557308*^9, 
   3.7662700747723494`*^9, 3.766271690632886*^9, 3.7662717306759605`*^9, 
   3.766291751909845*^9, 3.766291818202707*^9, 3.7662924737111044`*^9, 
   3.7662944958776827`*^9, 3.766294608714176*^9, {3.7662948033470078`*^9, 
   3.766294826958488*^9}},ExpressionUUID->"fd4b7b51-1b9c-4e6b-817f-\
cbfe3fbc5ae1"]
}, Open  ]]
}, Open  ]],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{
   RowBox[{"StepDataPlot", "[", "controlsim", "]"}], "/.", 
   RowBox[{
    RowBox[{"AbsolutePointSize", "[", "_", "]"}], "\[Rule]", 
    RowBox[{"PointSize", "[", "Small", "]"}]}]}], "*)"}]], "Input",
 CellChangeTimes->{{3.7660362664446754`*^9, 
  3.7660362921458225`*^9}},ExpressionUUID->"8a638a08-fae0-4202-86d4-\
a74b5f8b39ef"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"Max", " ", "actuator", " ", "requirements"}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{"Max", "[", 
     RowBox[{"controlinput", "[", 
      RowBox[{"[", 
       RowBox[{";;", ",", "i"}], "]"}], "]"}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"i", ",", " ", "6"}], "}"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.7660588692342644`*^9, 3.7660589012231007`*^9}, {
  3.766061206623734*^9, 
  3.7660612073347845`*^9}},ExpressionUUID->"42f98de6-53ae-4a8d-9c4d-\
bc9f0f5b97fc"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "500.53941287117266`", ",", "7387.015598877477`", ",", "1362.626435332243`",
    ",", "454.99489802691255`", ",", "8891.823073298516`", ",", 
   "4504.265254819121`"}], "}"}]], "Output",
 CellChangeTimes->{{3.766058874649892*^9, 3.7660588883781266`*^9}, 
   3.7660598788946624`*^9, 3.766059983939225*^9, 3.766060205731028*^9, 
   3.766060580442439*^9, 3.7660607544522667`*^9, {3.766060867924039*^9, 
   3.7660608840653925`*^9}, 3.7660609541295576`*^9, 3.7660610201321487`*^9, 
   3.76606110265322*^9, 3.7660612076725783`*^9, 3.7660612833111725`*^9, 
   3.766105088009864*^9, 3.766105561689237*^9, 3.7661065053965425`*^9, 
   3.766107241926116*^9, 3.7661076074824924`*^9, 3.7661512585197053`*^9, 
   3.7661567484286184`*^9, 3.7662150957784843`*^9, 3.766268115691012*^9, 
   3.766271736711505*^9, 3.7662917520317745`*^9, 3.7662918189382863`*^9, 
   3.766292485435949*^9, 3.766294496025589*^9, 
   3.7662948270914125`*^9},ExpressionUUID->"92705d92-4eb2-4542-9be9-\
c8caaebd8f7c"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"Default", " ", "image", " ", "size", " ", "is", " ", "800"}], 
   "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"Texplot", "[", 
    RowBox[{
    "xaxis_", ",", " ", "yaxis_", ",", " ", "imgsize_", ",", " ", "xlabel_", 
     ",", " ", "ylabel_"}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "magni1", ",", " ", "fontsize", ",", " ", "markersize", ",", " ", 
       "color", ",", " ", "markers", ",", " ", "flist", ",", " ", 
       "f1nonsing"}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"magni1", "=", "2"}], ";", " ", 
      RowBox[{"(*", 
       RowBox[{
       "Magnification", " ", "in", " ", "axis", " ", "and", " ", "axis", " ", 
        "labesl"}], "*)"}], "\n", 
      RowBox[{"fontsize", "=", "20"}], ";", " ", 
      RowBox[{"(*", 
       RowBox[{"Axis", " ", "font", " ", "label", " ", "size"}], "*)"}], "\n", 
      RowBox[{"markersize", "=", "20"}], ";", " ", "\n", 
      RowBox[{"color", "=", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"Directive", "[", 
          RowBox[{"RGBColor", "[", 
           RowBox[{"0", ",", "0", ",", "1"}], "]"}], "]"}], ",", 
         RowBox[{"Directive", "[", "Orange", "]"}], ",", 
         RowBox[{"Directive", "[", "Red", "]"}], ",", 
         RowBox[{"Directive", "[", "Brown", "]"}], ",", 
         RowBox[{"Directive", "[", 
          RowBox[{"RGBColor", "[", 
           RowBox[{"0.5", ",", "0.5", ",", "0"}], "]"}], "]"}], ",", 
         RowBox[{"Directive", "[", 
          RowBox[{"RGBColor", "[", 
           RowBox[{"0", ",", "0.6", ",", "0"}], "]"}], "]"}]}], "}"}]}], ";", 
      "\n", 
      RowBox[{"markers", "=", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"\"\<+\>\"", ",", "markersize"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"\"\<\[EmptyCircle]\>\"", ",", "markersize"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"\"\<\[EmptyUpTriangle]\>\"", ",", "markersize"}], "}"}], 
         ",", 
         RowBox[{"{", 
          RowBox[{"\"\<\[EmptySquare]\>\"", ",", "markersize"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"\"\<\[DiamondSuit]\>\"", ",", "markersize"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"\"\<*\>\"", ",", "markersize"}], "}"}]}], "}"}]}], ";", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"flist", "=", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"xaxis", "[", 
            RowBox[{"[", "i", "]"}], "]"}], ",", 
           RowBox[{"yaxis", "[", 
            RowBox[{"[", "i", "]"}], "]"}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"i", ",", "1", ",", 
           RowBox[{"Length", "[", "xaxis", "]"}], ",", "1"}], "}"}]}], 
        "]"}]}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"f1nonsing", "=", 
       RowBox[{"ListPlot", "[", 
        RowBox[{
         RowBox[{"{", "flist", "}"}], ",", 
         RowBox[{"PlotRange", "\[Rule]", "Automatic"}], ",", 
         RowBox[{"BaseStyle", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{"FontFamily", "\[Rule]", "\"\<Latin Modern Roman\>\""}], 
           "}"}]}], ",", 
         RowBox[{"Frame", "\[Rule]", "True"}], ",", 
         RowBox[{"FrameStyle", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"Directive", "[", 
             RowBox[{"Black", ",", "fontsize"}], "]"}], ",", 
            RowBox[{"Directive", "[", 
             RowBox[{"Black", ",", "fontsize"}], "]"}]}], "}"}]}], ",", 
         RowBox[{"GridLines", "\[Rule]", "Automatic"}], ",", 
         RowBox[{"PlotStyle", "\[Rule]", "color"}], ",", 
         RowBox[{"PlotMarkers", "\[Rule]", 
          RowBox[{"markers", "[", 
           RowBox[{"[", "1", "]"}], "]"}]}], ",", 
         RowBox[{"FrameLabel", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"MaTeX", "[", 
             RowBox[{
              RowBox[{"ToString", "[", 
               RowBox[{
               "\"\<\\\\text{\>\"", "<>", "xlabel", "<>", "\"\<}\>\""}], 
               "]"}], ",", 
              RowBox[{"Magnification", "\[Rule]", "magni1"}]}], "]"}], ",", 
            RowBox[{"MaTeX", "[", 
             RowBox[{
              RowBox[{"ToString", "[", "ylabel", "]"}], ",", 
              RowBox[{"Magnification", "\[Rule]", "magni1"}]}], "]"}]}], 
           "}"}]}], ",", 
         RowBox[{"Joined", "\[Rule]", "True"}], ",", " ", 
         RowBox[{"ImageSize", "\[Rule]", "imgsize"}], ",", " ", 
         RowBox[{"PlotRange", "\[Rule]", "All"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"Return", "[", "f1nonsing", "]"}], ";"}]}], 
    "\[IndentingNewLine]", "]"}]}]}]], "Input",
 CellChangeTimes->{{3.7648545730255623`*^9, 3.764854780303419*^9}, {
  3.7648548173482866`*^9, 3.764854986585106*^9}, {3.7648553909575877`*^9, 
  3.7648553990690775`*^9}, {3.7648554853327875`*^9, 3.7648554897832556`*^9}, {
  3.7648610789424243`*^9, 
  3.76486108190515*^9}},ExpressionUUID->"052fbad4-1f35-45d7-9b54-\
a7953021f533"],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{"Texplot", "[", 
   RowBox[{"time", ",", " ", 
    RowBox[{"\[Eta]test", "*", 
     SuperscriptBox["10", "16"]}], ",", " ", "800", ",", " ", 
    "\"\<Time~(s)\>\"", ",", " ", "\"\<e_1 (\\\\times 10^{-16})\>\""}], "]"}],
   "*)"}]], "Input",
 CellChangeTimes->{
  3.7661052473549643`*^9},ExpressionUUID->"f541b12a-361b-4d12-816c-\
d65cbd4c8bcc"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Show", "[", 
  RowBox[{
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"ListPlot", "[", 
      RowBox[{"controlinput", "[", 
       RowBox[{"[", 
        RowBox[{";;", ",", " ", "i"}], "]"}], "]"}], "]"}], ",", " ", 
     RowBox[{"{", 
      RowBox[{"i", ",", " ", "6"}], "}"}]}], "]"}], ",", " ", 
   RowBox[{"PlotRange", "\[Rule]", "All"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.7661050910986166`*^9, 3.7661051599323273`*^9}, {
  3.766105210834551*^9, 3.766105239228329*^9}, {3.766270000415909*^9, 
  3.766270004481598*^9}},ExpressionUUID->"82dc9ab5-622c-47f6-83bb-\
ec13cabdc7a0"],

Cell[BoxData[
 GraphicsBox[{{{}, {{}, 
     {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.004583333333333334],
       AbsoluteThickness[1.6], PointBox[CompressedData["
1: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
jNWvQ8wZMrjZ3DrKnCXDF8sDl5izZUi233yYOUeGQQHLdzEfkmHy+a0+zLky
zP3TqOG0jzhPBpt4rwpH6nwZbAd07VM3lORDzsvgMuhSW2aFDBu3PtorSiAu
lCEg/f125iIZDLl/CgruEd9WPQ/dW51nLlZd77UnXI0aiUtk0LB94chcKkOY
aMLwcx1IfrtMhmUjt/ZhVsqQo9dzxdh6cnyFDDfd7CYwV8qwL2bIANkd4ipV
fY3Ed1LqatX90fZmhHo0ca0MW+OXGDLXyZCeufe7oj9xowyKAxP4zBw5jq4p
TOvpTT6vNnIoC4Ys0KJWl8O0S59VzBpyFIu9JSnbNjRbU47FGadnmqeT+1NL
jooLVY5m1NpyDH8l6Xb6FrGOHOszh3U/Sa0rh1PZhLydL8j9ry+HZca1PL1S
8rwYqOyyftuIU+T5GiVHG9f3CeeDyPNoKEfPbesyqoeS53eiHGM+nciu8KfP
vxzifYUDGn3J+8H4H0OOcM4JS20/YhM59Pruf/6FlpvKIbnSPrCB2kwOa3Wf
3q3p8eZytLOQT/lJy63k6H1xVX4NtbXq+B9rT7D2bOWIvHD/HTsfV47u5q/6
sXInVXzXM+cwu8jh+p9Qm9ldjtqG9C7MPDk4rvKSH9Q+cpRoNlpdWETelwFy
TOL92HiaOkSOqiGHtz6qI3//ki+H0XLHzcXU0XLkDzPa1zmK/H0RgRwvZmkG
tKdOkmNRVUyGb+nCZgvlQL81mRuppXKYd7LLTtxEfr+brrq+euEj+dQZchi7
5J6NzyC/382So7QTt6cPdbYcvNGH3R5U9W52jhz8CY/CoqkPqY4/Zbb17Hfy
92Ny5Sgymn2yjDpPVb+H11H51GnNzpdDyPX2yaY+r4rvv1sj2/mR/Y4KVf9L
Mod3oS6U435BB5sJKXOaXSRHneXZrvHeC5t9W2XOpkU3J5g3u1iO0REjy31P
kPlOiSr+7bzfzKVy1D/eX9hrCvn9RZmq/kArtVYX6O835Oh7supy6lwyH6uQ
Y41n6y/iCpIPq5TjWi9uVu+9Ds2uksMjY+ANIc13VcvxKKhhx0w9Mp+s/cd1
cozb+OfMOOpGOYYmb+SaUHPSsEuvdi87vk0aRh8Kuj2dWj0NJf3lm2dTa6Qh
36Vvz7nUmmkwdl+8mNXXSkOB1a+LzNppiF/7u6U/OmkY0v3TFmbdNGS/vX2Y
WT8NPQI/nGE2UJ2/KmTNDOpRaXh3sUrf+RnZL2mYhprYxW/WU09Mw/CxIecX
vKC/N/7HxmlY0u3Hm2nUSEOYzwD/JdQmaXBYHXqJHW+ahs8xo9+ZUJulIbP/
W8kiavM0JHhVTDKjtkpDbtdBrqy+terzSgt5ymybhvMX/Fr6w01Dzupnp5md
0rA3uv4ms4uqvYglj5nd0+Bm2OFd3MuN+D8JG6cU
       "]]}, {}}, {}, {}, {}, {}}, {{}, {{}, 
     {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.004583333333333334],
       AbsoluteThickness[1.6], PointBox[CompressedData["
1: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
6tRNI1h+T4gLXZ058z3x9YCxSavuw1l+T3w8KzTmrPCEpsOaPkOFQ1l+T+z8
EtGTM28Nak3V3Ao1h7D8ayDNfe3MGWtw5ruw9ZLUPiz/Gvi98PKzJvPXwGD9
DbsZezqx/GtweYjt1T5kxRqgUHNi2MePp1T518BzzoxR/ci8tWio1Ph+/XLj
TFX+tRBWVVknXGHGWniHT9OxaNUWqvxr0XTtUUEQma/0o/7e57b2VDl/LbQf
/P3pA1mxFi02547Nu9Bf5Qalm7Yen0XmeWHFbn+7/LQhKmt5oThA+j2BDC8s
tulS+fPmcJbfC4rHD05+JfO9gAoP28wro1h+LyT0Hr0/lazwwuNp3jsuxuiw
/F5YLQ0qOU/mecO4177mGz3HsvzeaHB7tKqKDG9cTus9ofcmfZbfG8GLDdy7
k/neiJx+JfPOt/EsvzemCjsFPiYrvHFCNnHnwgkTWX5vjN+wt9mGzPOB8Ixa
vYuJAcvvgxu5c4zcyPDBpmo3fvjYSSy/D8Y9fq4WQeb7YMWUCZsOf2HO90FW
rc/VI2SFD+o3f3+313Iyy++DewsHae0j89bB+uOnr+EbmLXWof3C7Qc5Yx16
B60Z3Kae2XkdpjjOm8+Zvw4P1SZpjO03heVfh8Mnz3weQ1asg23FKfcaK+aG
dehrf3IFZ54vel8M3noxlFnLFz/XHsvhDF/0+/H+e9QRZmdfrClIncyZ74sD
xVtavl+g/L5omJTt8pWs8MXc9gkTu++l/L74179FtwuZ54cf5bfNUlcxq/vh
Ro8bbZLJWn64Ncxqo91jVq++H25/fHZyKRl+GLb1vbhwLLO1H85OrVy2jezs
h0H7CgvD0tl4+PkhuPFmW858P1jrS190vMrGW+iHspUW0zjn+yG0oP2Kth/Z
9VLih7rD51takxV+MMo442nwbYLK1X7Ief++/URygx9cjvYySH7GrscmZf8n
f6xMJPP8EdfFS7BiLrO6P27Pq7HgrOUPvfQp59Xy2fWu7w+1Vr4NnOEP+3NB
S6Y8Gsfq90f8FpM+nJ39kfbkV7ZxALuf/PyRWWUTzZnvD/kVvWtzP+qx+v3h
P2b5Yc75/qhbUHrx/nt2v5b4Y2euXhpnhT8cqmcNuHVbm9Xvj/y+c47cJDco
+9stsOTvrSNZ/f5o22rsMs68AGQG5j85tZTNJ+oBKEuoT+OsFYDB7WuKTjSx
+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
w+/jNaTBPGa4O9f/RmV/JOuipSY0/mnw66aVLSM3K+uL7PzhxgQa/3TAK6Pt
TbJaOlJ9zbMqhtL4p6MyvnJDJVkzHZH7avuE96DxT8eQxVd6R5C102HTfkOP
X3/R+KfjsqBXa14rGv90xJ4cpVj+ns2HSIdXcM2WFWTzdJRZBg9Pa2C2Tkf5
5YHvOdulY0Dk7qkFF2n+T0ed4OK1QrJnOrSr9h3l7JeOj1bhVg6lNP+nw2NC
iq9kM83/6eh44uoFGVmQjuhDSZs0k2j+T8doh56S/uScdBxP++jJOT8dK0bZ
dTniQ/O/sr8Bbv9wLklHzyVWUTcDaP5Px81/jr7lrEgHb+iEyfedmKuU5//R
kzMd5jNXp+PT64ndpxkw16aj++OJ62YPZG5IR5zN5U8tbZgb0/F0nNchg1ds
vWxKR4SX2eaKa8zN6Sh1rHkRfYCZl/H/rZaBnOTusXyyegberRb1DSdrKl9/
N3FlHFkrAzuq57nHkLUzcPup59VIsn4Gdg3yzeDihsrjjzP8zOVDBkSTqs5w
Ns/AyuS9rzlbZ2DzsWu/+2eXgRcLkp9zds7A9b69X3H2zMDBS1UzOftlIK+d
LM1QwhyaAXvd8lNTyPwMdMmedeK8P7MgAxsvva05RxZmQHup4F6bBcw5GbBN
r3/YmpyfgZONjU8vjmIuUtY/IufJBXJJBjAhU735J9s/lWWgZtiiDl/Iigwc
7poybV0Nc1UGljVJdX3I1RkIvXRjRc9C5toMmB/4x7wHuSEDm86NbLkeSPu/
DIQM+PiqmtyUAYuoyrQNM2n/pzy/0bLEHDIvEwtu6OxxUqP9XyZinKwOOJLV
M/E2umpl/6ts/6mZiZGOQwP6kbUycXHxGd1rQmbtTLg7nbG6StbPRNfgg+Ni
rJkNM2H4c5JbNBmZ2GIfMGJyF2bzTNQPNPabRLbOxNMu7tlqmbT/z4T28jq7
9mTnTExr6cX/+Y0+/8vEwoTnvj/Ifpmobrf473hX+vw3E2MHNZyKI/MzoeUb
E3DnPH3+l4klQZJTt8lCZXvNdrtNRtLnf5kYbuc3knN+Jg5INTb05rP3U0V/
uCQTTn1r7vYjl2XitZfrwE5kRSY2TnJfMpBclQkXje4WmuTqTMzP43v2INcq
+7N1TUwfckMmHF73qOLyNWZiq2+zBucmZT1GS3/3pzkTHReN2cSZl4UqP3UZ
Z7UsWLZy+x1Xz4LrqA3grJmFDp6pK4tvsfeTWlnQHHJBn7N2Fgzf9h7rOopZ
Pws/9m8aydkwC/vKc/wL6P0rsrDjH7dMzuZZGKNo+7NWQX//yYJuv1FGd8l2
WSjbkDcjoAP9/ScLaxvNNnD2zMLn2TqOTxey99d+WXDq5l/DOTQLM3alxW+X
0vv/LIybWN59B1mQBYcgw14TatnnCcIsFEwadYRzjtIZh/79qz9zfhbmWXjt
bEUuysLDVq8eiRzp858sJPnYFIrJZVlYV9Jw2zGf/b1UkYUlbxSFTuSqLPS/
dyfw0RP299hqZfy6t9Vjcm0W9HPHRGdrMzdkof57z1U55MYsZN657f11nYvK
TVkIlNQuaSE3Z2Hv/l0voo/Q86NC9Fs37E4MuY0QZj/fhm1uxawmRK7NC688
cmchBPKoEVXW7O/36kJs17/X5wJZQ4hpF9cOqjddqbKmEPvTjdo1kAcI0etI
H++f79j3C7SEWHQyYCmviXm4ECnF3WwrtrHvJ2j/YT0hRGOFrarJ+kJ0nnw/
YwfZQNnfjUYfb5ANhWgZ30vzAtlIiJfHE02OkyHEydSF5yvJpkKoa6Qf4vKZ
C9En6tvys2RLIYZKL7hwcWshVjYUOHJeIoTi6JmpnO2E+LHrjh1nByGOVs6d
eo7sLETRsZJ135zZ9zVclec//8GCH2RPIQrjdaw9tFeo7C3E3qrHumvIfkLo
th/e42wL+75IkBBTa5MeV5BDhTDxHZOvqGXfN4kUYoRHiecZMl+Ii6sfL1E7
a6tyghATKtQ1OpIFQnx63uRteIx9nyVdiPM9Pg6YRhYqz9fbuauenmTfh5Eq
8ztFtX1GzhFi9BnHaOl1G5VzlfXPM+glJ+cL8TPKfknlB/Z9mwIh5ttX154j
FwnhGX209/OhzMVCrHJUT28klwgh97xk4OjCvs9TKsS5NmYbnMhlQjTfGHI1
ar+1yuVC2FzfNTCGrFDW2/HsUJE6c4UQN8YMchaTq4TQqt3is/XXApUvC2Hb
PEpRQK4Wok4/w/7rFSuVbwox8qONwQ9yrRD1hR3GGV5m31eqE+JYnLeuMblB
CL32VsmRLRYqPxVil+WrVvHkRmV9hgtPxZFfCxE0JHzkFjvmJmX/7/1tZvCM
fV/qkxBtfvXXnUJuFuKAsZ5P0lbm73+YJ4Kh4EVlPrmNCK6nYjXMyGoiVGyx
mLid3FmE7ZaB/YVkdRGcW7TGBJA1RDiW14xUsqYIjbffxXD5Boigc/xHZ85a
Inyv3SjjPFyErVvuRXLWFsE8VtqOs54IHe3XRHPWF2Gtf9IeLp+BCD+FO+7t
SGc2FCFgzoyFu8hGIgTLTnaz38YMEUZ2PxbhQDYVobzfdbVh/zCbi6C1Y/UX
zpYi9NjXdBfW7Pxbi5B/4/nYWeQlIpjNWfa09DGznTJet2gxZwcRDg//GdPr
PLOzCPOj94zj7Ko8vrD67rFl7PrwFKFl3ajZnL1FyOk937Gax64vPxEi3+z5
cU/BHCTCzcMGtmZydn2GKvOdTLP0iGHfh4sUoeDjoXLjGez65ivjnqI7984w
J4jQSsfQSr6Q3T8CEYo0RBtCHzOni6Bns/ZQfDi7/4QiWEv2bT7Um93PUhEW
zx/4tMNh5hzleD9+YBGxjM0HucrXGyWtadvCnC/CpS1nzbbnsvmk4A8XiXC3
qePYA+RiEUwOdn+ZTC4RQaPx1K1D5FIRxHPftt1FLhPBVmvD0k3kchHyutlM
30lWiGB0oV0ol69ChAE75jYVkqtEuKNh5M3FL4sw+M7UpZyrRej2yOIvzjeV
51M8dznnWuX5/Dz3cwG5ToToz1X1K43Z/NqgPD+85wedyE9FyOyzvcP0euZG
EYaKVuZOJb8WIXyYQ61ZBJu/m0So1lvuPYf8SXn9Sb6szNVg83+zCNM/VbXf
RP4ugtB6QNDKncw8MXq98dd0IrcRY7vt+eZThuz7hWpiTO71Ov0kubMYsza/
8v52mlldjM6luS1fyRpinL0QZeVkytYnTTEcpix65EAeIIZXasXIOaeYtcRQ
nzy9cjZ5uBg1LwfGDZzA1j9tMaK/jtAeQNYTw68Ou91zmfXFmLR/tJ0b2UAM
/fSLg3Ta0/ovxprP7h7aZCMxfsxxm5zkTuu/GGaPhK0GHqP1X4xTMQd/9iOb
i9E4/ID+3r/Y/sRSjAnh7b/0mMFsLUa3SJiaeDMvEWP5sY5T5mcx24nxzHSq
8+LtzA5iJLnP/Zmzn9n5D7uK8b63+Og2sqcY4l8VvyLJ3mKYBvZ/u4PsJ8a1
648vbSIHiTGK36N9BjlUjM8J83ibyZFirLvRMHQDmS+Gy/uQCi5/ghhzRjcP
5uICMXxXH1bjnK68Pnp2PMW9XigGvwE9ubhUjMpJdce4eI4YBlEFE/3JuWIc
9thhyjlfjK3JB0NA56dADI2wwn85F4kx0zS3S5SQuViMg6Vn6jmXiPE48eKL
XX7MpWLcnLWvezG5TIx5/7yULZ/LXC5GuJvtYHuyQoyrpwqLhvRirhCjZFaM
cBi5SowPqYUjtt5j18NlMYSeGisLyNViOEc9/zcqh/mmGN/2eAbzybViZK/a
G7V8IXOdGGODt810IDeIERlVYVb7i12/T8VoubV19n1yoxgQdC/buIv5tRhG
6Tn/bCY3iSHv98/r6dbMn8TI3fxzxkxys/L6Tf24Z+F7dn99F2P2oK69bcg8
Caz1VkicM5nbSFC490I7V7KaBI0TD5q/HcXcWYK40bnH35PVJdBvN6zZ6yTd
/xIcM//u4EvWlCA+fedd48XMAyTQKDAfakLWkuDfXaGvyp+w+We4BFf9ojsq
yNoSzHr4+rZuILOeBPJ5p06OJetL8Lja7NspHrPBHzaUIH+yVHSRbCTBdsPE
XoVkSFDq3fHUFbKpBJozpJFnyOYStLuRGXuQbClBeMyzgAqytfL1xqfbK8hL
JDjQ1+w1l99OggafqfO5uIMEW3PtO3J2lkDQT+M993pXCb6Fzv6Li3tKcETL
MY/rj7cEzV6G2zel0/fJJSjb/e3zZnKQBC6Dt7c26sgcKsGJpKhdxuRICWb/
dMHVRLae8JXj+WGYm/4vtj4lKMd7ptB9Alkgwb25G75oBdP+X4Iz2+67zXnJ
1m+hBH7XpBdMyVIJBrZpXDDMnvb/EnQOXdZVp4r2/8rz+X33qZjHtP+XwDRz
dM1Td+YCCSo7/3J++Zz2/xLk2CboD3aj/b9yPJ1qJ3aoZ/uREgnu3r1+edRi
2v9LsGhWcvS/CrafKZPA/kiNyYvRtP+XYHBF0vAmTbYfUkhw/cA1xZhqtn+q
kOBXwoftYaFsv1UlwdiZzUcvqrP92WUJfpiUug7Pmady9R++KYGRS//mqeRa
5fVac2Lmu2zmOgkSvMyDp1O8QYLp0/x2jyY/lWCNv0PPLuRGCW7tTB46hvxa
gg2d12Rw+Zok6Fce2InzJ+X1eOzNlBHkZgmkWq/Sufh3CQIHFt4aRuZJYWAk
KeDibaRoGLa9ZSBZTYpy7wmTNnYxV7mzFLx9I9dIyepSnLlosHSZn5nKGlKc
6/N95iKyphRJhsf+zT3FngcZIEXbljGe2WQtKeSN/qcvtZioPFyKmKhHbc6T
taU4digj2G0Ie95ETwrHliSHVWR9Kd4eP1492N1YZQMpNFb2L9MkG0rhLlV/
rb9ymspGUpgmTZijS4YUvcdOH/x2DHu+x1SKxZe3zH5JNpdC75w+P/8Gex7I
UoqeHq1i88jWyv6lTPO/t4k9j79ECsuXyU13yXZShLzJ/bV3Fnte3kGKv6/F
395PdpbC+farz53du6rsKkXzBNeyEWRPKUpMxn2ZeOGD6nl2b+X4jLdMbKxi
9pNC0yXw6dDhfRX/5yApDCfqjuxIDlX2T2o62bIz+z2XSCkW3DGcM4PMV77e
uNBgwCN9lROkWPv+RVFPskAKLcM8k4u2k1VOl6Jsm+KegiyUYs9jyzdnn7Dn
vaVSLIteefcoOUcKk4RfTbpn2PNfuVL8mu+6byQ5X4rnpoc2W2xkz0MX/OEi
KSS79RMNyMVSVI/s65VALpFiypgNjZPJpVLkGSZ9nUMuk2J9t33hq8jlyutd
2OBiQlYo440iYy5fhRTXc86usyRXKa9njewuXPyyFHZH18RzrlaO92bP3tzr
b0rR+dQoJy5eK8XUMtu5ZuQ65fnrPvHu2FAzlRukKPVtThhNfqpsr3O6vng5
e765UYo2dbqFO8ivpfi5TJqZasSeF2ySYpJBUEYi+ZMUFiMbPkYPYs9fNkux
RDNvajj5u/J6+7jg+Kaf9PynDBFVU1I2kNvI0N0rpttYL/b7S2oy5Hy+2l2P
3FkGvSVrX1+osVFZXQZ7rbMjqsgaMjxfXa1tOmWpypoytLqXtNGEPECGLruK
7wZJ2e8/acnQWPUyKZA8XIYZKVZaU1+y36/TlqFkZFc1Q7KeDEOPTj4fNIX9
vpS+DM869XgWSDaQAb11j/eMWKGyoQy3p27rxtlIhq5TV/h2KrVXGTLMGTrs
c0eyqQzjJlZpOjxyUNlchn4eqy7bky1lONGv5VT3Vk4qW8vwofhELuclMpz9
+9u0Ob1Wqmwng3+r1sacHWRY8Vw3uWsXZ5WdZdB6cDeHs6sMC0+P7/Y8mdlT
eXwv/XGcvWU4WSsedbWF2U+GNnsmL+UcJEOs2sFUHzf2+12hfzhShm5Dg5w9
yHwZ9qgPaxVFTpBh38FQX0+yQIYppS96eZPTZdBtbfotgCxU1rt/W+NaslSG
pK78RC5fjgzT47VzOOfKMHCUqT/nfBkMFn5O4Fwgw5ODh+Sci5TXg8uTOM7F
yvEPKTvLuUSGKz1rXgWfZy6VYbB913Eh5DIZwmRjhhZouahcLoNG96O+nBUy
mPXZanXEj7lCBpuxDgWcq2SY33X/8/AjzJdlsGzuNzeCXC1DwL2R105/Yr6p
vF9ElVPOkGuV5/vmJysPbfZ7a3Uy3NubcopzgwzntE27L1zM/FSGj0XCNM6N
yvELatffLYD5tQwPg9fncW5S3k+ravZtFjB/kuHRP1ZGeeRm5fW17ILRv1Lm
7zJk3f/7OmeeHLH7T57xljO3kWPsxSz1dWQ1OdRb9f+Lc2c5Prf+MWwgHV9d
jgKPg0umrGXWkKPigU2baWRNOTovKp3/3o95gBw/ngTu/0DWkkN4v72eaCHz
cDm6dVtjozOcWVuOOKuKNu/esvOpJ8ez80clA0qY9eVw9b/79YsHs4Gyv84/
s6/0ZjaUwyXrxMX35ex6MPrDkOPQ4MJLr8imcuzJ73Cad4LZXA7+0Q9D31Dc
Uo6lAU7rmsjWcnQ8+9PyC3mJHIa9bL+8JdvJUe42YTeXz0GO064/unwgO8uB
wvOlXNxVjp78zDOcPZX9uyW9ztlbjjalFyo5+8nx4tu5cdzxgpTn27uD++kV
dP/LoWf3opJzpBxLXMtL/25i8wVfDvFu91+cE+SoHhDXgxfDLJCjbs83Hc7p
chy+MrnX4nbMQuX5UT/3ehFZKoeabNQi3a5svsuR44tHmUCHnCuHxt2lpltb
s/kyXw6Tbpe7/k0ukGPoLE2MfMvm2yLl8TwuyoeTi5XXmwFf+vQqm69L5Dje
OtHnMblUjl5pD3723cHm+zI5VhZ9cOhDLpdjWJ+U5wV3mRVyLPL74bqNXCHH
mMNG12c8ZOtJlRyBhvPLAxvsVL4sh9El/7Ju9Ww9qpZjy0PrWQ21bP26qaxv
2Mm6enKtMl552uvIdbb+1ckh72Au87qwROUG5fmLHM6rUbD186kcA6GxpbKM
rbeNcnRwflzc98AilV/Lkbpyw9Kte+j3HORIGPS1zsGOre+f/nCzHPMsRWlm
5O/K8d+pbywm87JholluaUluk43uefdb25HVsrHzg4MokNw5G8Hl9YpFZPVs
hCeGWXD5NLLxfOX4n45kzWyMOTrsOhcfkI0OC4NvcNbKRs9v3S251w/Pxt1R
TjlcXDsbg1dID68g62Wjz60eXbs4st9T0M9GK5vX4k5kg2xouBV9HG3A9kOG
f9goG9+mHi/vSUY2ekUvfuJENs3G4RyPkL5k82zsCP0wbATZMhufC0aXg2yd
jQFV8Q8HkZdkY3hUB3cun102ru5d3VGX7JCN4v7f67m4czYKnLJecXZVns+o
eR46ZM9s5C87XczFvbMhHZX+5EJXC8X/ABPXHZ0=
       "]]}, {}}, {}, {}, {}, {}}, {{}, {{}, 
     {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.004583333333333334],
       AbsoluteThickness[1.6], PointBox[CompressedData["
1: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
PwfX+3R9wByYg+33vXIdIkPwf8ox+l0=
       "]]}, {}}, {}, {}, {}, {}}, {{}, {{}, 
     {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.004583333333333334],
       AbsoluteThickness[1.6], PointBox[CompressedData["
1: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
f+9MNA/urjs+yAf/D5HNXUs=
       "]]}, {}}, {}, {}, {}, {}}, {{}, {{}, 
     {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.004583333333333334],
       AbsoluteThickness[1.6], PointBox[CompressedData["
1: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
IOo6AYzKUsTxX8n9oV4A57vZEXHUjQLwZiw9bnODWCXAyjfzDoynbhZA0N8+
k7uTuEUATtYt8VLqVgEu9RM81YkjZmVidPsEbcY6mejd/K7JZRaxXiZ+lw1m
MzbMhKVJvxzX3sTsTBRh2+PZ1KaZyHtb7DZORe//mfhe1nDGmtomEwfM3Kst
t9P7fybKc746MnbOBH9U1pHIAGJOJoy84j0Ze2Ri8L3efaaMIOZmYt3N3GuT
qf0zcbnh+d3TzfT5n4m3MwSljKMyMUOPH+u0jT7/M2FXUevFWJCJfXfPTNPl
Egszcfh2ng3jwkx8055XvKgPsSITNmO7bWJcmomp3HiXcDpfKVcfH7OiJYyr
MpG52eX5dgGxMhNrlRO1d1DXZeLNYuMB4+yI6/9yYyZaLxvPZKzKxDZr+FhR
N2ciZLzhvPHULer6WcovNtStmXi8rW+9OTUrC/WVVeOZuE4WVI9WDmT2r5eF
zGlWPRkbZkFc/PZPnJ2FSansPzbNQsOs42+tqc2z4K4fbM7EbbIQs6t+OmNk
oeKqNLrhFZkfOmchv5L/hDEnCxvjro3XX0jskQVz/fcVjLlZcBpltvzAGTLf
9M+CTob2R8a8LFgFD/C2sSCOygLHZGKbCdT8LHRv98Z1mILMbwVZeLjEq50p
tTALLTc7lP7QIy7MgsmI7OCf1IosXObEl5inkvlzaRZO7SxMtKAuz8KPFGfD
cd/o/D8Ld8NXaI2nVmbhxpuRBjFr6fw/C088J/eIpa5X59dqerW8haxnGrPw
i+Xa6kutyoLb9Hm/3UKIm9X1L/Xu707dkoV/Ah0el34m66XWLNiM6NBlFzUr
G3lWHo6H+MQ62Wi95BVfSa2XjXW8Y+wL3YgNs9HWqPuKi9TsbLgvXXDeooSs
z0yzkb7Gv9dYavNsNK2xamMxhdgmGwYHOO6W1MjG5p9Bph0e0vVfNs7o6yfp
UHOywclcPultCrFHNr76Lyt8R83Nhm35ji79zIn9s9FQ/cjfiJqXjdNB0tHH
n5D1ZtRf5mcj8P5VR8aCbDgs8d1+hFqo3n7W+rlK6sJsqDq5fjlNrcjGUr3L
Z8qpS7Mx1zI+nYmXZ2Nn2ak/+aqysSl/xVDGSnX/jb0sGddlY3D6+bGM67PR
p0n/bTV1YzbGftw0nYmrshEX9yPzBHVzNvZ7Rg75vZ64RX08lm2IYRUTt2bj
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
UvD2+2kl5o/V2EqKJ1eff02gtpGi6ZiH18dV5hrbSjFrm6jpAzXU9Vs/O8wp
GaGxoxTeITnPXKmdpZDPdO/9PttEYxcptn+YmPGOmiOFuWT/2XSz/hq7SaF3
1a6YT+0hRZRdv2P10u4ae0nR8Pjdu/PUXCmEzzu2Gxr9VfO88pVCNeX8uo7U
/ur6Wkp3pe381+5/DpKitK2v0RZqnhTs1+Gtr0K74H8Ok8KtjyC8lTpKirlP
7CsdUg01jpPCcN2j/c7UfCks75yqLlaxNU6VIqj9AatN1AIpyod0Mfs9ljyP
c6RYY+7dro0VsVCKYu3Je47bDNdYKkVZ/dKrJ6gLpbC5wG7+/NpM42IpHFWL
pn+hVkhx0JJjXT3EXOOSv1wqxV3j5C1XqMukGPXI7VIedbkULXNqgmqpK6Tw
LE5zbqKuUtdrof1rPnW1Or/rLvcX1EoprhiOS2by1UjxIdgg7xh1nRQxI4zi
mfglKTbaDHnPuF6KukXd3h+hbpCir2HViuPUjVKY/Aptx2x/X4pJV8V9Hu8i
8x+VFO18MrNV1E1SjG3X/EGr3ViNm6XoOPaCHuM3UjQb1GoZWllp3CLF6EGX
H/Si/ihFv+++Mn8b8vsCrVIcXTd1oh/1Dync6y+4y3uM05glQ3PcrTtSam0Z
DnKfHZCcIdaR4UvClNFial0ZtpkWTVC4kPmdngx5E3B6I7WBDPN+9XjjsI/Y
UAanTVEF9tRGMkzcOPTg1H+I2TL80tItcqA2kcHw2Xh2iY6NxqYyrDv6dcFW
ajMZNg6IXl2gRWwuQ+t65zaMrdT7Cxa8i1aR/dmo+3NG61/GtjIsDBw+sm4z
MWRwNz+7jbGjDOOsB2zoOZPYWYairpD0onaRQfuxDbTuk+PBkaFtyreD2tRu
Mlz8FD9gnCexhwwOS792taH2ksFySEXr7HNkPLgyGKSvWcyh9pWh65Tk3/eG
EPvLoFosrXtIHSQDO9Lt4aIoMt48GfIfD267hDpMBuuHXpMHnSLnS9RfjlOP
97IH36yo+TL4f+O/bVESp8rg9X4pbwSNC2RoqLb+NI06R4Zexx8Un6TbC2W4
k7pQOovGpTKUlVm5MvkKZZDo+OszLpZhKnhBjBUyxNvfu8K4RAbzfW6+bOpS
Gezrnlcz8TIZPqwx2GZCXS7D8N/5qcvbElfI0H+FSR8/6ioZ6uUVFsZTyO9x
VMtgm7n00RBqpQympXqqYRHk+quR4eVed8FI6joZFF/uHG1TRq9/GVZaRdi1
o65X9/eMtfuHU2M0bpChpG3vF1+pG2XoHtfhmLEZ+b2Q+zL8/CdcYkqtkqFu
wcWa7wXkftgkA19RuYVVSNwsg9yocLxz+5Eav5HBd1vmy1nULTK8Or5rrlkk
ud9+lCFr703FaOpWGR6f13Ea/Ir8nskP9f6LJn1izJKjb7v5XZ0+kPu5thwd
Y0fmTqXWkUOulyJnrCtHYHDY14avgzXWkyNA4tM4pHWQxgZy7Jqwn9+d2lAO
b6e9TvEexhobyRH3u+OOUGq2HL7ygK8P9pDnjYkcdWcm1T941V9jUznuDuXt
HOTWV2MzOSB0Pdcrp5fG5nIY2E4etTC9h8ZWcvi7aiv9V5Hff7GRw7St3OSC
oZbGtn8ZciiFT9JC+hA7yuHcMdTKuTexsxxVjuNX96BxFzmEjgvLb1Nz1P2R
fhp9vCexmzr+j6+E3ZfYQw6j2izBZZrPS93fjUtXnKHmylE2OSHxIrWvHC7n
HKLqqf3lCFK2utZSB6nbP1oQfomap+6v7h6rIOowOdhXj9a9bCHzgyg5yo30
ivpTx8nBqmgXsFlcr5lf8NX997Mee19GnCpH/cnEy0bOPzQWyOHR+Qn3DXWO
HByzlo0Cj87K/1koBx/PuG+ppXJYibrfHPbMQONCdf7wWC0P6mI5mrrqZ+md
N9JYIUdDol+8LXWJHN9UrcMK95PfByqVQ6x/x3s3dZkcwe3HhJV4D9O4XI78
H0tnVVBXqMd3n9K8MthM4yp1vboOHU9TV8txtCzAaHYu+X0ipRxa/na/5lPX
qM/P6IGzgtqQ+WGdHF3WtxnuwiW/d3RJjgMHLT+UPbXSuF4Ot6Ls0Xuyx2vc
oD5frlZuK6NuVI/HiTX8QR4TNb4vR0SPmmUiZzL/VcnB/ZH+rd9ouv5Xt7+/
N6PteTK/blaP/9bkdnPC6PxfnT990NExY8jvU7XIkf76om15q5PGH/9yqxzx
69+M30b9Q46oEf+MOEfNKsCHrWVxu6m1C3Cvk++9TdQ6BQjjloU0UesWQD63
1ryIWq8AE/dxP++jNiiA5dlVVUx+wwKcalo5gbFRAX4c3NiHMbsANhEdbPdT
mxQgJOFpJbM/0wJ4tL2du4farADVURO9j10l6zfzAqRvO9lURW1VgCnrE7uO
/4f8+4TNX7YtQF3ebpYZNQrQr+jA89nUjgVgL5ZNs6R2LkDHfq0bh1K7FCBo
nLhsFTVHHU9e/YpN7VYA3zvzzo+j9ihA+D8D0pn8XgUY8c1XhzFXnc8t4wOz
vW8BLkWE9LGh9i9AxtSQFCYeVAC/sO2/6rrOUv4/vvqnHA==
       "]]}, {}}, {}, {}, {}, {}}, {{}, {{}, 
     {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.004583333333333334],
       AbsoluteThickness[1.6], PointBox[CompressedData["
1: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
WSGEsYdNxCTqUiEK5m664jmI3A/LhFDY3zy0gbpSiPv1KS29kunzbWV7TfYY
alLXK9v7/INb5ntHlRuVxzd73ecM6mYhdGdZdo6YQ+7PnHhEvrZ/H06tFo+T
oV7/7dRfrbJGPBp6HJ20g1o7Hv4ir5/zD69UmRuPH2s62DHrxeOmd3GfWfq2
KhvG43qhvSmzSTzsm7zPfRCR93+VK0e3K+92f6S2iIfXsszdj+utVLaKx3Js
snpKbRuPrxqc4mXr5qnMi4ew35P1K6ld45ExUffk1LqZKvPjcSJfdnoWdWA8
zF+e2+i1c4LKgnhsbTlwKJxaGA8u53FDeNA/KoviodE22OgsdYYy3rXeA7d9
GKT4n3PiIertGbOcOj8egdeN1mWsnahyofL3ajkwOoa6OB7rL57JPuIyS2VF
PK56BMn3UpfGI8ZO7/unvvNVLvvLlfEwbb+/Wy11dTyOuq3v+oG6Ph7L+N0u
dNImbozHyHrP229oebNypZ6e0PCcmpOABX0qbvSn26sl4MrznVksnkYCDujO
ecusnYDSquj+TdTcBGRahzazcr0EaEtKPJgNE5BhcXLZZ2qTBIxaq1n0ihoJ
mHB4uuZIHlkvWCj3V9j/9TBqqwRMmZa8b+oosr6wTcC3V2s2m1DzElA54thx
j0ZblV0TUJvc++Y6an4CpmXMKX+WR9YvgQlI0V458jG1IAFrdJ1PVA0n6x1h
Auwn/Ep6SC1KgGJiike7D2R9lJGAsvEaPm2ocxLAeTwq0qOQrKfyE+Ao7XXK
jbowAfLw34Hb1pL1V3ECqmaXfcqmViQgKi9BOLwzyW+VJkBk8mj6MOqyBLg1
7bgl2kbWe5UJ2BMz9moqdXUCKm6JuvoNI/mt+gRYlnrO9qVuTMC8y353fDaT
9WdzAgymFFkycxIxatYWjcnfyHpcLRFvJrldmkStkYjMU52No8zJ+l07EYIj
abrM3ETc7PzUbkAoWe/rJULGLQ5mNkxE3utl+fyFJD9gkoh5arybzEjEbd4F
A6c7xBaJGDc9wYXZKhEczUm/384l+QbbRDz2aT/nHTUvEW2qavZvKSJ2TUSv
+E3tsqj5iZDPzLDvpknzP39ZkIjQ618mdKUWJiKi2PaOOrUoERdsj9hoUGck
YuQyMZeV5yQi38GrrAt1fiLm2Hcf14u6MBFD8lxWsHjFiRj7avlKZkUiVlwy
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
s0c6LKb0zRc+W4//B88LU+c=
       "]]}, {}}, {}, {}, {}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0., 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->All,
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.76610511983393*^9, 3.7661051606773396`*^9}, 
   3.766105240307996*^9, 3.76610557132672*^9, 3.7661065404596033`*^9, 
   3.7661072490369425`*^9, 3.7661076121360607`*^9, 3.766151259008428*^9, 
   3.7661567488263693`*^9, 3.7662150961522684`*^9, 3.7662681161507506`*^9, 
   3.766271746400016*^9, 3.7662917525804605`*^9, 3.7662918233547626`*^9, 
   3.7662924894686203`*^9, 
   3.766294830508458*^9},ExpressionUUID->"4fb6ddd0-2d7e-4b5b-8f36-\
cec9307b4b1e"]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{"qcontrol", " ", "=", " ", 
   RowBox[{"q1", "/.", "controlsim"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"qcontroldat", " ", "=", " ", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"qcontrol", "[", "i", "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "0", ",", "tf", ",", "h"}], "}"}]}], "]"}]}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.7620753176574764`*^9, 3.7620753446511126`*^9}, {
   3.76207779837879*^9, 3.7620778061863127`*^9}, 3.762130731944253*^9, {
   3.7621309684683294`*^9, 3.762130968852089*^9}, {3.762131272266005*^9, 
   3.762131273158492*^9}, {3.762131523264081*^9, 3.7621315251537046`*^9}, {
   3.762131724042832*^9, 3.7621317241426*^9}, {3.7621322959297233`*^9, 
   3.7621322965293517`*^9}, {3.762132890146264*^9, 3.7621328906819563`*^9}, {
   3.762133207964303*^9, 3.762133208056246*^9}, {3.7621334463825393`*^9, 
   3.762133446653385*^9}, {3.762134160696925*^9, 3.7621341613005977`*^9}, {
   3.762134459124215*^9, 3.7621344595042477`*^9}, {3.762157732837593*^9, 
   3.762157733029501*^9}, {3.7621587851836863`*^9, 3.7621587854955072`*^9}, {
   3.7621589607082677`*^9, 3.7621589626531754`*^9}, {3.7621591625414095`*^9, 
   3.7621592134882803`*^9}, {3.7621593871929045`*^9, 
   3.7621593878515377`*^9}, {3.7621596882886295`*^9, 3.76215968844154*^9}, {
   3.762159856128604*^9, 3.762159856230548*^9}, {3.762160176028592*^9, 
   3.7621601766492352`*^9}, {3.7621602834421396`*^9, 3.762160290491136*^9}, {
   3.765373379453004*^9, 3.765373379553957*^9}, {3.7660363383533525`*^9, 
   3.7660363617499485`*^9}, 3.7660512127017117`*^9, {3.766058922256467*^9, 
   3.766058922993641*^9}, {3.7660679911558228`*^9, 
   3.766067992406427*^9}},ExpressionUUID->"816f3afc-af3d-4274-8154-\
2d5278b08a78"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Clear", "[", "i", "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"tempinit", " ", "=", " ", 
   RowBox[{
    RowBox[{"qeidat", "[", 
     RowBox[{"[", "1", "]"}], "]"}], "[", 
    RowBox[{"[", 
     RowBox[{"1", ";;", "18"}], "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"qecdat", " ", "=", " ", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"tempinit", " ", "=", " ", 
       RowBox[{"TrackRoot", "[", 
        RowBox[{
         RowBox[{"qcontroldat", "[", 
          RowBox[{"[", "i", "]"}], "]"}], ",", " ", "tempinit"}], "]"}]}], 
      ";", "\[IndentingNewLine]", 
      RowBox[{"Join", "[", 
       RowBox[{
        RowBox[{"TrackRoot", "[", 
         RowBox[{
          RowBox[{"qcontroldat", "[", 
           RowBox[{"[", "i", "]"}], "]"}], ",", " ", "tempinit"}], "]"}], ",",
         " ", 
        RowBox[{"qcontroldat", "[", 
         RowBox[{"[", "i", "]"}], "]"}]}], "]"}]}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", " ", 
       RowBox[{"Length", "[", "qcontroldat", "]"}]}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"xcontroldat", " ", "=", " ", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"qecdat", "[", 
       RowBox[{"[", "i", "]"}], "]"}], "[", 
      RowBox[{"[", 
       RowBox[{"1", ";;", "3"}], "]"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", " ", 
       RowBox[{"Length", "[", "qecdat", "]"}]}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Theta]controldat", " ", "=", " ", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"qecdat", "[", 
       RowBox[{"[", "i", "]"}], "]"}], "[", 
      RowBox[{"[", 
       RowBox[{"19", ";;", "24"}], "]"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", " ", 
       RowBox[{"Length", "[", "qecdat", "]"}]}], "}"}]}], "]"}]}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.7613600277549977`*^9, 3.761360033865288*^9}, {
  3.761360139944888*^9, 3.7613602175748196`*^9}, {3.761360371676195*^9, 
  3.7613603779959717`*^9}, {3.761382627633966*^9, 3.7613826298666825`*^9}, {
  3.7613827230352373`*^9, 3.7613827260684814`*^9}, {3.761384895839926*^9, 
  3.761384896437567*^9}, {3.7620733148161135`*^9, 3.762073320808685*^9}, {
  3.762075299607189*^9, 3.7620753064175396`*^9}, {3.762075349687355*^9, 
  3.7620753966974344`*^9}, {3.766024819718968*^9, 3.766024820630065*^9}, {
  3.7660278416887693`*^9, 
  3.7660278664592104`*^9}},ExpressionUUID->"d2137a43-0500-444e-acff-\
15d2bf21f5ca"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
   "The", " ", "actual", " ", "path", " ", "vs", " ", "the", " ", "tracked", 
    " ", "path"}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{"Show", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"ListPointPlot3D", "[", 
       RowBox[{"xcontroldat", ",", " ", 
        RowBox[{"PlotStyle", "\[Rule]", "Red"}], ",", " ", 
        RowBox[{"PlotRange", "\[Rule]", "All"}]}], "]"}], ",", " ", 
      "trackedpath"}], "}"}], ",", " ", 
    RowBox[{"PlotRange", "\[Rule]", "All"}], ",", " ", 
    RowBox[{"AxesLabel", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
      "\"\<x-axis\>\"", ",", " ", "\"\<y-axis\>\"", ",", " ", 
       "\"\<z-axis\>\""}], "}"}]}], ",", " ", 
    RowBox[{"PlotLabel", "\[Rule]", "\"\<Following a rectangular path\>\""}], 
    ",", " ", 
    RowBox[{"ImageResolution", "\[Rule]", "600"}], ",", " ", 
    RowBox[{"ImageSize", "\[Rule]", "Full"}], ",", " ", 
    RowBox[{"PlotLegends", "\[Rule]", "Automatic"}], ",", " ", 
    RowBox[{"AxesStyle", "->", 
     RowBox[{"Directive", "[", 
      RowBox[{"Black", ",", " ", "20"}], "]"}]}], ",", " ", 
    RowBox[{"LabelStyle", "->", 
     RowBox[{"Directive", "[", 
      RowBox[{"Black", ",", "20"}], "]"}]}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.7620755363104553`*^9, 3.762075582523831*^9}, {
   3.7620767526382833`*^9, 3.7620767548336906`*^9}, {3.762076792033409*^9, 
   3.762076930271679*^9}, {3.762131733114072*^9, 3.762131734120949*^9}, {
   3.7621535454200163`*^9, 3.7621535485062723`*^9}, {3.76537517544586*^9, 
   3.765375177716352*^9}, {3.765375914462117*^9, 3.765375982470358*^9}, {
   3.765376024500309*^9, 3.7653760318012295`*^9}, {3.765376090123581*^9, 
   3.7653761220949774`*^9}, {3.7653761779463243`*^9, 3.7653762930259867`*^9}, 
   3.765377030400261*^9, {3.7653786850300264`*^9, 3.7653786920486994`*^9}, {
   3.7660210553494987`*^9, 3.7660210558891697`*^9}, 3.766024006322152*^9, {
   3.7660240995238047`*^9, 3.7660241115029516`*^9}, {3.7660248487677207`*^9, 
   3.766024861679455*^9}, {3.7660254729517293`*^9, 3.7660254735894947`*^9}, {
   3.766060290784752*^9, 3.76606029888996*^9}, {3.7660603839621167`*^9, 
   3.7660603908973083`*^9}, {3.766060598084359*^9, 3.766060601600769*^9}, {
   3.7660606689569783`*^9, 3.766060671133028*^9}, 3.7660607681901693`*^9, {
   3.7661053531523705`*^9, 3.7661054066538897`*^9}, {3.7661054572888775`*^9, 
   3.766105475973607*^9}, {3.76610655874986*^9, 3.7661065642354307`*^9}, {
   3.766107264287197*^9, 3.766107266507704*^9}, {3.7662943805517006`*^9, 
   3.766294438295642*^9}},ExpressionUUID->"8a697d3b-63e4-4c1f-af11-\
0aa324ce9827"],

Cell[BoxData[
 Graphics3DBox[{
   {RGBColor[1, 0, 0], Point3DBox[CompressedData["
1:eJwcV3k4lO/3VpakBaGISkmlRSQiceiTZGuhSEUbISlEJbsWW7KkIiSyhrJl
51jHjH2dmSJF9pkxM0KJ6vd+f3/NNff1XOc9zzn3fZ/zbL5yy9R2KQ8Pz9GV
PDy8xO9renACPbgVxQvllEihiRX//zdhHEj6r6UKnrbivZHDrzpYwnC1oTTp
3utxaInf0pkX34qfp+V2bzu0F2Rp/toKSePg6OsuLVjQiq9+ph7+pKwL80u2
vbydOg5Gt4Xzf3W0YtSO3dY3WSaweOZbinLWOOgkso17ZltR8/jSf1Kj5pD0
Gu5APnFe8pDDL9k25BML9lu//RJkxRbs8Swbh1XREcptp9owVmp1EzvUFvbK
D/2urxuH+lPujyiBbXjtRR5f1QtHMLDeKPKvdRwKykHavrYNT4qV7Src6AKV
Bh+iV30ah25FhzKlJe24bFrVXaPcDezkB6Kpw+Mglj4UnP9fOw582vrPI/4e
fPXfwNHljsPEqXTnh8HtuHHi3q3/qrzAbh1HT+PvOCgPf3l0pKsd774RlT75
1A9if48Mpq+YgJrnYuTm1R34VpB5dOJTAJgrnEy/LzUBO7RO6UerduAm0sql
O3QegcSowWLi9glY+5m6/bRVB7rYhLZbYyC8cTT+uExtAs6P8QaOPurAKun+
vXNnQqBX5ybP2yMTIHWseqXChw4U71u62XFpGDxTCztlYzYBWfPNNQv0Dqzs
LqwwqQsHIzer43BlAjor1jB0eDvxXcF2/jdGkXDrUWr5DpcJmEep0f49nVh+
28flflUU5Bk8vr7WbwK+91YsLzrbiUUNIn4vNaLhxtiK7f+eEvnUhwUWPujE
dSMmQpcqnsOn9ey0zwkTEOJNPln7vhPl7jXzHjn6Ei6+eeWRlD0BBXylC02f
OjGDyyddRo0BpfMBv4zLJ6C39VdWOV8Xng/uvwZOr0DB+a06jTIBwYtbFgL2
dqFtV8xai+XxsOKW++JB+gS0sy4Pi5zrQknr5Yoh7xJAYFgi/fboBHwI2PjB
/GEXkn3GtOxOJsIwI3iv98wEvLzf1Xf0fRe2LLu9Rtf7DSSsWSlxeukklJdr
ifXSurAzZzNL43QS/MhyPz0rPAnSbsniczzduF+7S4q1OxkW6iqtrDdMQt7j
C6mJCt04vMCl7Vr2Frat1RMK2zkJY+dPB5BPdaP1GucUytBbqH8hHO17YBKW
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
dWOB0JtkswkaFXdkR2hwXMiwnU1iiNxjQd6JyhGBLireVGtLVL1Cho4Iha8x
nixYlWMkvrGFiud+bPUSNyVDQcvIZTlfFqTmsoYVSVScCvkmHqZLBscDq1xy
A1jwQnSzlUY1FQfODOYlKpEhtjdjuc5jFmyc1A7QKqMiy/FVvPEmMug9LdnR
FcyCfYkelpqFVNx5TFQ2ehUZutYrN18LI3ThOzS27z0V3d2+Bt1ZaISWf4us
PxFEfx2v79uaQcXnGsryM+ONsKD7J+xlNAvm5Ie0hJOpGCRbf2QVtRFOCQtl
qMSwYGX279UzcVRsuD2iXlvbCLoOP9S74ljgMqj/rus5Fdf8dTkt9qERmvb7
a91OZEFcwmHxrHAqil+hMXjiGiHpg2v+2rcseKuif8o7mIq5gmJnQh83guWU
T3RFGgvem720NXhAxd3/csfyXRphUuHMN5t3LHh96MIZYW8qCgw1Ld690AjS
AglRwu8JHjIytrbfoWJwnQD789FGuNU/l16Rx4LF0Pu0IGcqnip4vr5fqRHm
VRZlbnxkwdctxS6HrlNxJl/li+f6RpB7B1MbSlkgyK/0c+IqFU3O7nhRxtsI
u+8aS3ZVsODT+2THSCsqsQ8fSYthkkB2JO1lUDULRo+Udu2zoCK1ZOjW2l4S
vBxssdetZ8FtiRVKbSepOKn/zXx/JQmUo9SCFhsJXadsCLxqSMXDCW+qp1NI
oNRqPl3azAJ54Wt90/9RseTjCnHTJyQwtX711qOdBemBx5S8tKjoORhWanqb
BOds7GI0u1kgdVAq+J8aFUlDEtKzliT43b+h9R+VBd13Nkx4KVExabVYioYO
CdxNJLVJn1nAGHhiNqNARRen2zWy20hQ55Q99nSABQLekc22clS8X5w0+G4F
CS5L7CJZDrHgzdZjpztlqHig8JEbnXiPiJR97d02Svjn6zqO2loqDik9ZGT2
NkDM+jVicxMsWL1KMOWFMBU3XPUo3VTWAD0pvPcbWSzYIrjahSNIxaeupaYH
XzdA9Q+OQByX8PnW2nNHllJRWVB4z2//BlDOFi1ynmVBoraQTdRCL1q+KMWL
tg3AjY19cGyeBTX6VeGfZ3pxf7vjA8djDSAmW+K45Q8Lfvl/+CYz1Yu1robT
G3Y1wOrbMdf/8kwBvSzF0nKsFw3ixgPvrmqATfKXvfr5pqBY68Kf8G+9yC3U
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
qvnYnvS2GLaHL3T9FKViwefI+P/qSJ/j3c5Qu1UMfVZSVjc3UNG2sZXTvp6A
muE3YSN7i+EZx97regvVmF6859WnBlI/b1SNvCCKIC16T/fawWoUFz2/vbaR
gFvbQ/o4sAjU5jjMbtKrsfn4CoXZRMDXQgUfj/dFkNN80vR0RjUWDAp4bG4h
IO0m5xquO0Xgblh3qja4Gm9vemx0rJUAMy6dWw77isBo+cqFRcdq/P217eb1
NgK86kJcf88UQubc0DTVuBqvnBS/86SdAKXw+bibFYXQHS+fLHeZ9O398hbv
OkidMfAozfUuhPHY5+1qR6vx6OWOkI/fSJ/s/+L7Rp1CUPytPryKvxpX/21p
LuokIGmBf6fhgUKQqOE5p7VchZ5Unh1NXQT45rS+TJ8vgIq5V0aaP6qwf8HE
YqibPJ+Lm3uOUgBc3Bz5i9QqtFGobp3tIeDRkVXdx/wKoGindhp8qcIHVauV
OfoIuLaub9ZUtwD0npbhAZ8qnBFYW7qpnwBb/PkgUrIANHbN3C2yqsKE8Iwz
uwZILuSiTF/Mh+KL59inblWhvt1o3b5BAvzstvj/rs6HuG1O4g3yVfghLuie
9HdS934t6K/7kA/0HQPnrgtW4avC1D/HfpD5Ofq8fM+9fGh6zPrNYZmCenZ8
YXJDBLQ31BUdlcoHlY7fWv8NUNBNtELxxDAB3X81dBX/5EFW5mH1+nIKpmZH
DMuPkHob4FJwlpYHofd6j03HUvB4Y7SX7CgBybcoHacD8iBp1Oxd+WsKzh+p
lDs6RsDvEzZUOf08GA4papc3pKDOtn/fJX+Sc/DqUMAB6TyQKPsVqq1MQXuJ
8+9FfpG68eS6+ra/uTDQ765zQISCyyPBRwXGCWjwk2H/S8uFNdmpn+LYKFhZ
PNPBM0HW4Vlu7A7Ihdb/Bv/QvlfilJO2zQrJX+267pWjnwtRw6y/QssrUcyh
dTPjNwEjUfcd3aVzofHxsT/80ZV44oNeUs8kOU+XPKM0/uYA53Bj0XmHStRt
Z5ejMUh//mjPXyF6DjRfSyoQ1q7EM9H00gwmAZwvk2K/B+RAZCO3y2f5SvS6
W3QyhCAAFTOio/RzYJNX0uehbZVoxv8z3WGK9NW789k0pHNgdMW0om66An2W
9AX0pwmI7dvayfU3G9SfG2uZNFZgyhF5G6UZsk8l+aRyaNnQ0jWwNvNLBWqr
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
     "]]}, {{}, {}, 
    TagBox[
     {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[2], 
      Dashing[{Small, Small}], Line3DBox[CompressedData["
1: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
uYEQoF/ovdNv2d1vGZDVJvEyBZ27+y3/AYNey9k=
       "]]},
     Annotation[#, "Charting`Private`Tag$216024#1"]& ]}},
  ImageResolution -> 600,
  PlotLegends -> Automatic,
  Axes->True,
  AxesLabel->{
    FormBox["\"x-axis\"", TraditionalForm], 
    FormBox["\"y-axis\"", TraditionalForm], 
    FormBox["\"z-axis\"", TraditionalForm]},
  AxesStyle->Directive[
    GrayLevel[0], 20],
  BoxRatios->{1, 1, 0.4},
  FaceGridsStyle->Automatic,
  ImageSize->Full,
  LabelStyle->Directive[
    GrayLevel[0], 20],
  PlotLabel->FormBox["\"Following a rectangular path\"", TraditionalForm],
  PlotRange->All,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.02]}, {Automatic, Automatic}},
  Ticks->{Automatic, Automatic, Automatic},
  ViewPoint->{-0.2634051540869782, 3.2518460394242887`, 0.8978391062328316},
  ViewVertical->{-0.014719900637866368`, 0.14987487587170814`, 
   0.9885953904948432}]], "Output",
 CellChangeTimes->{
  3.766060768613497*^9, 3.7660608902626305`*^9, 3.7660609583711767`*^9, 
   3.766061024617062*^9, 3.766061107091633*^9, 3.766061216935444*^9, 
   3.7660612873779583`*^9, 3.7661052592050185`*^9, 3.7661053491436653`*^9, {
   3.766105387363161*^9, 3.766105407215598*^9}, {3.76610546245491*^9, 
   3.766105477193885*^9}, 3.7661055757911806`*^9, {3.7661065451827736`*^9, 
   3.766106565083089*^9}, {3.7661072539547276`*^9, 3.7661072686505194`*^9}, 
   3.766107615062677*^9, 3.7661512598329535`*^9, 3.7661567494480352`*^9, 
   3.7662150969278245`*^9, 3.766268116948296*^9, 3.7662717511622906`*^9, 
   3.7662917539127173`*^9, 3.7662918267028427`*^9, 3.766292493394394*^9, {
   3.7662943993299513`*^9, 3.76629444025152*^9}, 3.7662944994896054`*^9, 
   3.7662946160479803`*^9, 
   3.766294835618534*^9},ExpressionUUID->"5bd33cf0-1398-4024-b201-\
658bc6647687"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"elist", " ", "=", " ", 
   RowBox[{"xcontroldat", "-", 
    RowBox[{"xtrackdat", "[", 
     RowBox[{"[", 
      RowBox[{";;", ",", 
       RowBox[{"1", ";;", "3"}]}], "]"}], "]"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"enorm", " ", "=", " ", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"Sqrt", "[", 
      RowBox[{
       RowBox[{"elist", "[", 
        RowBox[{"[", "i", "]"}], "]"}], ".", 
       RowBox[{"elist", "[", 
        RowBox[{"[", "i", "]"}], "]"}]}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", " ", 
       RowBox[{"Length", "[", "elist", "]"}]}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"tempelist", " ", "=", " ", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"time", "[", 
        RowBox[{"[", "i", "]"}], "]"}], ",", " ", 
       RowBox[{"enorm", "[", 
        RowBox[{"[", "i", "]"}], "]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", " ", 
       RowBox[{"Length", "[", "time", "]"}]}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"ListPlot", "[", 
  RowBox[{"tempelist", ",", " ", 
   RowBox[{"PlotLabel", "\[Rule]", "\"\<Error after the settling time\>\""}], 
   ",", 
   RowBox[{"AxesLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "\"\<time(s)\>\"", ",", " ", "\"\<error in the path followed\>\""}], 
     "}"}]}], ",", "  ", 
   RowBox[{"AxesStyle", "->", 
    RowBox[{"Directive", "[", 
     RowBox[{"Black", ",", " ", "20"}], "]"}]}], ",", " ", 
   RowBox[{"LabelStyle", "->", 
    RowBox[{"Directive", "[", 
     RowBox[{"Black", ",", "20"}], "]"}]}], ",", "  ", 
   RowBox[{"PlotStyle", "\[Rule]", "Thick"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.7660257016482387`*^9, 3.7660257020401373`*^9}, {
   3.7660278027438416`*^9, 3.766027809102925*^9}, {3.7660345605964894`*^9, 
   3.766034565322047*^9}, {3.766058082781242*^9, 3.766058084523795*^9}, {
   3.766058240613194*^9, 3.766058241829856*^9}, {3.7660604957356725`*^9, 
   3.766060542805608*^9}, 3.766060785287065*^9, 3.7660609136592293`*^9, {
   3.766105305489316*^9, 3.7661053070694294`*^9}, {3.766105582944087*^9, 
   3.7661056773300195`*^9}, {3.7661063196683316`*^9, 
   3.7661063835187497`*^9}, {3.7661066083153353`*^9, 
   3.7661066132992096`*^9}, {3.766106644538042*^9, 3.7661066506617346`*^9}, {
   3.7661075125999136`*^9, 3.766107516477149*^9}, 3.76626998024146*^9, {
   3.7662945267241945`*^9, 3.7662945416556473`*^9}, {3.7662945878461313`*^9, 
   3.766294588322855*^9}, {3.766294631530106*^9, 3.7662946966927986`*^9}, {
   3.7662948661600456`*^9, 
   3.766294879476426*^9}},ExpressionUUID->"64e07958-0452-4e7f-8228-\
4be36c41af4e"],

Cell[BoxData[
 GraphicsBox[{{}, {{}, 
    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.003666666666666667], 
     Thickness[Large], PointBox[CompressedData["
1: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
1XrUkTwvRnvb4zUPrzmQ58XQPT7p6Po39uR5McY+bnZ9XmZHnv/bnot28jA7
8rwYl/7bLrabZUueF+Nk2NaekwJsyPNi5ImfP6gusCbPfyN72/buuVrW5Plv
OP5cFuPWF+T5b/Cial7M+GpFnv9GQYiPq/tlS/L8Nw6KGi1GRFuQ57/hH3Dv
7KZjFuT5b2y53+l14YM5eS79+auWK0NnWJDnv/FZr9uUyXHm5PlvnD33OnDj
Jgvy/De4icPsB1tbkOe/MS80WKKeaEGe/0bJq+0vv6hZkue/YXl3zqx7LAvy
/Dec/ZIf87ubk+cl8HRfXfKjmkWel2BJi/Ew134s8rwE6ubVB0Z5m5LnJWjW
Ubk7f4MxeV6CgamzzAtUjMjzEnDDiozPuRqS5yWY+GjR+GmuBuR5Ce72/JEQ
5qHPvO/yvES6Sc/OPb56jGy9W4J9NsPV/5upywzpGtAl2M8qNs0drUOel8A8
vUJz4H9a5HkJFlx6rH9Lokmel6DcZYb64zGa5HkJHIyfS5Y7a5DnJYi6sXPC
mHXq5HkpFsdffeZ5XJ08L8UF48AzFhPVyfNSPA4Y/G5wbw3yvFS6vmwTHh6s
QZ6XovDsVG7AMw3yvBTTOyvydi3XJM9LEao6KvDYFk3yvBSvL0Qu9/ugQZ6X
onrlqEmVozXI81JY/XnkwfNQJ89LoX4tQXdw/2nkeSnmpbof9ZusSp6X4qRJ
yq57Y5XJ81I8PdBYs3D+FPK8FG/MN2PWysnkeRnuz3Z3mNo0keZ7Ga4NeHfY
5c0E8r0MFc6nf1y4PZ7mfxmGskasVLs4jrwvg9vL2wYjr4ylPChD9IjOuvL4
MeR/GXSqvW/Fm4+hfCiD/8mNpu2Bo6kPlOHorEERfdeNprwow+6nk85+9BpN
/aAM86ambVhYN4byowyTjq0rLtkwlvpCGR7M7V15Yfw4ypMyxA8c48hKHU/9
oQwDj2nwTyhMonwpw8Ts9ZVeq9SoT5RB0K/J98K+qZQ3ZXhzyvRF+g4t6hdl
CGJtS0wP1qX8KUOzSUHT5Yv61DfK8LPP0Ck75hlRHpVhiZLir9NRRtQ/yqDs
bF20+54p5VMZXOa6R05baUZ9pAy9DgzO0N9lSnkl3f83j5Mv1hlTPylD+jpF
g1HTjCm/ysAr2V+yZrYR9ZUyfI8Mmr/tsQHlWRkar6nsPhSuT/2lDHf4/XeL
9PQp38qwbc8Fj0Pd9KjPlEtfH9+oUKdDeVcO29XFnSU6OtRvysHRMD5xea82
5V85Zs5sP6z5WYv6Tjmu3Gv5mq+oRXlYDqcTwXY9vDSp/5TjkVZeU2euBuVj
OVa81uh9VlOD+lA5MuPWtV/wUae8LMfNmvP9DNOmUT8qR/enhzf9VZ9G+VmO
temb1uednUp9qRyhe5jZxRw1ytNyGJcm5fIWqFF/KofYzSXaJE6V8rUc/905
qvVQU5X6VDkO1hZ1M76mQnlbjuHJIS6GfVSoX5WjR9iGJpODypS/5bB/pHfy
JmcK9a1ybMhXWuLvOYXyuBz94w/oHqqbTP2rHIcCZwZnrJ9M+VyO1IFKLUcy
J1EfK8e6pGNDOYKJlNfl0OfGrdptPpH6WTmussY3RZ+bQPldjkDl3nWvP46n
vlYO9XHHdIwyxlGel2NM9tJpcy+Opf4mvb7L79U8+jaa8r0Cq5YcjXrXfRT1
uQpsfeaQs/ztCMr7Crytn/PBtkyJ+l0FXp7lqPLYSpT/Fdi1713fbXeHU9+r
gEnv+HP2I4aTBxXw+U9n/L6wYdT/KqDyLTAmYOYw8qECfg+1jTqLFKkPVkAp
2YM/Z74ieVGBcYFrVK7XDqV+WIGlaTYRvOSh5EcFPKLPcEMKh1JfrEBVMV/R
pXIo0xX/3hUwyOuMTA8aSveDKnC06afBt2FDab1YgR4dqws1lIfQ/SHp8WmP
2TZ+zWBaP1ZAZOuqalE9iO4XVWDH+6GjFfYOovVkBd7oKqwY+Wsg9c0KrFa0
kAQ1DyCPKmDZ6DDz6MSB1D+l57ft7KUtAUPIpwqYr354D/7DqY9WIH13S0io
3mjyqgILvnEXbPkyjvqpdHvDRxbl6UwgvyrwN7wbM2LsBOqrFTCNjH7FHTSJ
PKvAlz56mlnZytRfK7Fzg/qHW6Jp5FslfolvXY5foEN9thIW3Q7W7ruuT95V
QvfJlfBfcwyo31ZiQ1bMI0dbA/KvEoHGQ+09Mwyo71ZCfeVSrXWJRuRhJTzv
Dik8H2tK/bcSQyzKjTYkscnHSux6w4+489uC+nAlUpZGXtrsZ0leVsJ75Ppu
j50tqR9L31/ny6bnQZbkZyUGTBs0vb8+Q325Eob+QZvVXK3J00p8g/9fg6s2
1J8roXJZKaxsrS35Wgn7kE+rn5+xpT5diZJhFiWDZ9iSt5U4H/3y0rQ5ttSv
K5HHOn7hWYkt+VuJgnDxzMfpdtS3K5E61+2qWqI9eVyJ0ePnHj8+24H6dyVi
3h/zCXdyIJ8rMSngbZhbsz318UqceHL2kk2+PXldCc0ql9srXRyon1di2fLZ
byeOdSS/K2F9+MJ631pH6uuVCPe8nTBzvhN5XgXzj/vf6eg7kedVaPj0JKoj
wZE8r0K1URWv9o4jeV6F2p1KBondncjzKuDyzS2bkpzI8yrcML7UuPiYM3le
hQve7MMWBc7keRUGoPlx2ENn8rwKESm3SqHmTJ5Xwe/zt/X/cZzI8yoouFfE
H4czeV6FVjOH/ueqnMnzKtTEW0xyPS5fH1ShUTQz5V3cdPK8CspiTdXdu6aT
51Xo+yh+/2Tpz8s8r0K5lenMkSedyfMq3OzfOYqzxZk8r4Kau2/L4o3O5HkV
3qQ4Hxlm7EyeV6FjUE1O1Vsn8rwKPyTVTlvUnMjzKriEHI1kP3Ukz/99Ha5x
396RPJce75iKc7PLHMjzKvQPfLAhysOBPK8C47txcXSRPXlehU+xH5dsX2hP
nldhXp3g0PwaO/K8CtMTuv8ecsaOPK/CkbyhWg+n2ZHnVRjsJlK9H2lLnlfD
dW6PqdY6tuR5NTK2aPVhfbQhz6vh7XJLOdnLhjyvRs9RzdPus23I82osrIrb
Ed5qTZ5Xw0xly53evtbkeTUE2+sGTRhoTZ5XI5nzYNivVSDPqzGD8+TO9WqG
PK/G3siBD3ftZ8jzavweo66dWm5FnlfDOlp8/vQgK/K8Gvfjus1mm1iS59Ww
+/18ylA/C/K8GmE3ZoXYiOTrpWrUHTH0W+NhTp5XI8Zu3r0979nkeTXcd6wo
HsJlkefV6LFrSzOjzyLPq3FrVl6c72kz8rwasyMbPg3mm5Ln1VjaM+eszwpT
8rwazhWpmdHRJuR5NbZfSuWc62ZCnlfjDHN9yOo1xuR5NSwNc/SelxiR59WY
tyLeduBmI/K8GpEP+K4FrYbkeTW6961aoOBmSJ5Xo995k0VeqQbkufT8zIvi
ey02IM9rMMXWNH9yXwPyvAa955nbuyTpk+c1cPk77Ui+dH0l87wGLQUKL0Lz
9MjzGhRwXZ4M4eiS5zXY/nz9/qY1uuS59OuPf5yrlXXJ8xp4OuxnOVTqkOc1
8D/Hmbd0rg55XoOqQ+cazby1yfMaXLgbOLYlU4s8r4FDmMfAKQ+0yPMavNMQ
9XSJ1SLPa/DwXKy+/UstWh9K989n9RlFHS26H1SDraNt8yu8NcnzGvzWj/Go
1tYkz2uw0bvabMhOTfK8BiHTVR7Z1muS5zWY9yD5zsueWuR5DZw9ryUX+2qS
5zUI/+ysZKCgSZ7XIGkyJyh5qiZ5XgNWPFNUVqVJntdgX8rWqAfS45F5XoPc
jRyli5+0yPMauNeM6hXN1iLPa9Cp6OYi+SNfj9ag3eh0g8VFLfK8Bp98WjLH
3Ncmz2uwuc0ixXGbDnleC5cY5SWHt+qQ57XYv/zE2Det2uR5Lb51E21d20+H
PK/F5yLNg4N76pLntUhZuP9g6Qw98rwWvpu+tw3qrU+e16LxvVdKbpkeeV6L
2O7ZzksP65HntWi2Er6N+aNHntfCbcYVncxQffK8FvXTVS08lhiQ57VwSjw8
5GmwAXleC59g4+2jdhmQ57VQXbT7845FBuR5LRYFh8a1xRuQ57W4W6ao5OVn
SJ7Xot/X2vYTGkbkeS0C25YYcaYbkee1ULyZbP9fDyPyvBZbZwxf0yH9WuZ5
LZjwhX0bLxiR57X4NXcW94irMXlei9MTXMUdOcbkeS1eDzu9+WuyMXkuPZ+d
yzZk7TUmz2uxjnf+4qobxuR5LdQb75QqmJuQ57VIvB4dKuCZkOe1uDq6MLbJ
3pQ8r4XR4WmJoX1NyfNaeJlXrtJJMiHP67B88PWFa6WvyzyvQ13Kheot70zJ
8zooN97IjVhmRp7XoeD3m6qy/WbkeR02T1L89XK8GXleh579tw1wbTUlz+sw
TnRyV/RCM/K8DjPKl0Sc7Mciz+swrM+M7wanWOR5HVLOFnyw3ckiz+uQl8M1
fd+dRZ7XQbhd0T2Qb0ae12FV4pn+hTtY5HkdLOysMxeMYZPndXDSbPfduJFN
ntdhsM3GM86T2OR5HdIFjaHBkSzyvA4jD/OWzk5kked1cNcf8r50Bps8r8NC
jam7vhSwyfM6nJz2MU6bxybP6zCo1Wt1rxNs8rwOxY/vfYqbyibP62D8OCjn
qyubPK+DiXPA70vlbPK8DpUBG9Q5M8zJ8zqcezV3nb+eOXleh+83fIKCn7LJ
c+n+rlXpF+fJJs+l11Pn+zmrV2zyvA57758Z5sQ2J8/r0BIfcTXogDl5Xo8z
4/tO6tQ1J8/rpefbLU8tlE2e10PyuMDh02k2eV4PRTW1fqJqNnlej7sxEani
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
y/MWjPs0ZITbKF3yvAVv9H8pFzzWIc9bcMv/0QSvaB3yvAVWl4Njkk7pkuct
CPYKSikL0SPPW8B01z28Ul2fPG+Br2WC6gklffK8BQFu6Rt2JemR5y3QXLN5
XtJgffK8BRGZb94oBemT561ILTy2+pyhAXneir3aRvm6Ow3I81ZMOxH5s5+9
AXneitdbrp51U5bfb29FL4+3m3L2yO+3tyLrxifDd+MMyfNWNGbPTH4QZkie
t+Kl/tuRel8MyfNWBKhO1BoqXS/LPG/Fu9qZMXWHDMnzVlT/PaKjJTQkz6Xv
bzPuku9jI/K8FTN+JVh+HW9MnrfiWfuE5j6KxuR5K5IeRyUt/2ZEnreiJ/fP
y60SI/K8FSneobEp343J81YYHxo5TaXOhDxvRbqT7l7lBFPyvBW2ds4aawWm
5HkrbAxTZxeGmJLnrdgX5taRG2ZKnrcioX04s9jXjDxvhcMd0yN5LSzyvBUf
p93KGAtz8rwV5yYk7R1aaE6et+Lxkcx2bqg5ed4KPQ47smWbOXneitMw3u7S
04I8b8VJtbVvcpZZkuetKB+tpzksx4o856BdeGiYXxxD852DVWKvIR8+MeQ7
B/FNcQZHlzM0/zno/nKIRP8CQ95zcOP3vXPdLoPygAODSW+3/t1vTf5zoPZX
6WF8pzXlAwfu8ee66YyxoT4g3b5f2MWKUmvKCw4mbj2t3v7dmvoBB9tOpyo+
nGxD+cFB/fLq0M5YG+oLHBxavH3ASidbyhMOep08ueTDflvqD9L90X2RsdDR
lvKFg/INGVdGDLKlPsHBfKcXLi1GtpQ3HFQETx5e+8qW+oX0+HaN6SxzsKP8
4cD114jvBy7ZUd/gwO3ypPeC7XaURxz4lf71vzLBjvoHB5pjFP+sU7KjfOLg
Ykb22ns77aiPcFA4i5+X3m7HdMXVBg5OdjM1nbfcnvoJB9eG3S9om2/PdMXN
Ng4Cs740hErsqK9w0E0yfdu5BDv6/FD6utFqS9cWO+ovHFzPXTujr5s9fZ7I
gWjzxRnV8fbUZzgY7/Jk24xf9nQ/kgO2ZyzuHrCnfsPB8/zCjguT7On+JAet
Pgb82jH21Hc4WKjEl2Sts6f7lRwsmeh3LPyjPfUfDiRPQxtOFdnT/Uvpz38N
Mqq6bk99iAP9s31jstXtaf3Dwc+J4dcNxHbUjzjImHi4f/g4e1oPcbA+J/Kd
7wZ76kscNGxFz4AL9pSnHPzxv/z2/Gr581TS8dH/6MtD0vMhy1cOBndO7x9w
0476FAdeXL3JVtftKG85uHDp+sjGH/LnrzjIVXBr3tVmR/nLQVBB+yzNcjvq
WxycTff2nX7AjvKYg+D83w8SBsmf1+Jg7fIoyz/VtpTP0uvR+8XJA39tqY9x
YHrqdfLqqXaU1xy8eqQaMXGi/PMTDk7xZ9xt/GZL+c1B6XjtavMFttTXOJjn
vErtbD9bynMO0oQTd/j8lT8PxkGsJKJi+HBbyncukmsTjwoHyz9v4eKSxNy0
8YcN5T0Xr2uTh+9aakP9jot+kTf8P/KsKf+5mL7Qf6HHS2vqe1wsSTkrFEvn
u8wDLkoMVxbH6sufN+Ni+NDEX6MvgHzggjVhWllGJEN9kIvVSj/7RzZZkRdc
LA0Zv34+y4r6IRdJCqveeRyzJD+4MPj4cA5iLagvcrFibY8hO1vNyRMuuB/0
xzwwM6f+yIXSlLOOypfZ5Iv0a/OPNs94LOqTXJx4G3j4g4N8/cjFWYW06jkB
ZtQvufhTmqDtKV0/yPzh4ovjz6qAo6bUN7mI6HXMOmeUKXnExT0LrVHR102o
f3JR8yZohnKbMfnExfIC91num4ypj3JRtr7zvVovuVdc+AVcnjXpnRH1Uy7e
VWzdvXiFEfnFxeJxy0s25RtSX+Vi2ob2wTFzDckzLvbPsT1t2mRA/ZWL6z2V
lHqEGpBvXKgaBhaprDagPsvFpKg16ZZiffKOC5c1i8MnHJL3Wy687HZuY5T1
yT8usgYZPDMq1aO+Kx0vJdPX3b+oRx5y0d+RNzOpU5f6LxdqTi6Tj2vqko/S
69dnqorrRR3qw1xwUid++bpWh7zk4mNFTGwvTx3qx1zs63OO/15Hh/yUvt+T
mO7Jx7WpL0v3b+jEskkCLfKUi1os0Nos0qL+zMXTqXG7tRZok69cKH5mntru
06Y+zcXNo9ZZSb21yVsu9gxz1z2+V4v6NRfr9e+/afbXIn+5eOP+mekwkvdt
LkzeDL8c9UmbPOZi88Dd6ZNvyPs3F1EPBo4I6aFNPnNh4+Axc35/eR+XXt/u
Sgs5udrkNRefds0OfhWrQ/1cOh4Kd3QY1eqQ31wI3J93bF+sQ32di4VH/6ia
SM+PzHMe3m72Zvq36JDnPAgszft87KFHnvPg8OTm9V3S9YnMcx6erHqp8rO/
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
tybP2/BiztSBfU9ak+dtGCqsMA6/ZU2et6H2m2f4mVXyv7/Shnsh/WKvd4A8
b4OddWmnfjjI8za8Kxs76kAFyHPp99ukXVw3Uv75eRvGHYm8rdjDmjxvww/L
4/W8BSDP26Cbb6f/5RVDnrdhUGdqgup9hjxvw75VFt++VzDkeRvuNPUxOtTO
kOfS44n+ovPiHEOet6HnOot5F37I77e3wff+3NHem6zI8zZ4XBli8/yEFXne
htd9W68KpD7LPG/DzMDNb7bftiLP27DHYfCVqDZL8rwNIQ3ek/yXW5LnbXDS
j486Yi7//ek2jEoYUNvsJfe8DQleo7IqL8t/n7oN7j23rLsq/X6Z59Lzo+lv
1cffgjxvQ1zVi9RPOvK/T9OG3w1rFxfPsCDP2zCxpp+1+Ir89zHbcOTB1hOb
AizI8zbMfrZl6+GBFuR5G3b1YNvsOmxOnrfh+f443VFb5b+v2Qb/xQa1LQnm
5HkbzpfnL7fpJ//7N21YbOsauzbfnDxvw/RNlotVHMzJc+n+nzhybcMf+fPh
0uupVxU43kL+93LacOb60iFtr83J8zYo2qtV36o2J8/b0JHme2beKXPyvA11
sbXFBwaZk+dtWLk9edmFcebkeRsKTLpr1j4yJ8/b8NCXc3y7hgV5Lh3PFyPO
ZWvI/x5PG+b2ybdd/MKcPG+DxcNtC/54m5PnbfgZ1evHxAr582pt6KOm3Mvn
pvzv97RB63RVD+vuluR5GybPKFvYlGRBnkvf3/6kxHqhBXnehuHRl3gT9lmQ
523Yzeaaf9azJM/bsLN94I09jZbkeRvYfaNT3ZWsyPM2lCT6bwx5aEmet+HD
tVH/93Tn8VB97wPAZ5+hTSXSIhXpkzAYY5nhPPa9haRNe5FKWtCiVaSStClK
0SZapdKedoX2RVop2ve0zPo7v5fnfP+c1zAz99x7zvuec5/nOXteTWPxb/T6
VB3cV/pZiZ7T8xXfoTK3hsXDqUjv6d+VIaNZPJyKvKq79JrePqDnKjJ2h0qk
OO2BnqvI7hepr64/8UDPVeTY3pTh5ws90XMV8W1U+MybR9BzFYn/r+zcvHKC
nqvI10RN2Rwfgp6ryLieOeNr/3ii5yriuf3l+2fxBD1XEV39yVmv+gF6riKH
OxxY2GE+oOcq4tdZJZgwGdBzFQE71yToAei5ijwn+5sPWwB6riIzpWcnuaQA
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
c5F6/h9XJIEp
      "]]}, {}}, {}, {}, {}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{
    FormBox["\"time(s)\"", TraditionalForm], 
    FormBox["\"error in the path followed\"", TraditionalForm]},
  AxesOrigin->{0, 0},
  AxesStyle->Directive[
    GrayLevel[0], 20],
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  ImageSize->{933., Automatic},
  LabelStyle->Directive[
    GrayLevel[0], 20],
  Method->{"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotLabel->FormBox["\"Error after the settling time\"", TraditionalForm],
  PlotRange->{{0, 3.141}, {0, 2.2555783440726185`*^-8}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.766025705698892*^9, 3.7660258297129927`*^9, 3.766025882408822*^9, 
   3.766025963449514*^9, 3.766026022615116*^9, 3.7660260562106667`*^9, 
   3.766026146654744*^9, 3.766026179255496*^9, {3.766026372547059*^9, 
   3.766026399685108*^9}, 3.766026450197159*^9, 3.766026485812838*^9, 
   3.766026537945943*^9, 3.766026594945011*^9, {3.766027784554059*^9, 
   3.7660278095506563`*^9}, 3.766034448109662*^9, 3.766034566510365*^9, 
   3.766034682344324*^9, 3.766034746325015*^9, 3.7660348062725954`*^9, 
   3.766034899032524*^9, 3.7660350260059447`*^9, 3.766035122743791*^9, 
   3.7660351549452677`*^9, 3.7660352304647408`*^9, 3.766035286089181*^9, 
   3.766035321747698*^9, 3.7660353541161203`*^9, {3.766035466161287*^9, 
   3.766035479623904*^9}, 3.7660356448407125`*^9, 3.7660357201984015`*^9, 
   3.766035874346258*^9, 3.766035915374404*^9, 3.7660361847493734`*^9, {
   3.766036215697937*^9, 3.7660362361331367`*^9}, 3.7660363666361184`*^9, 
   3.76604333712144*^9, 3.766044781915101*^9, 3.766044845177134*^9, 
   3.7660456860345116`*^9, 3.7660459440530353`*^9, 3.766045980424857*^9, 
   3.766046026453247*^9, 3.7660507098709416`*^9, 3.766050838112625*^9, 
   3.766052347720545*^9, 3.766052536246738*^9, 3.766052673787603*^9, 
   3.7660532106466107`*^9, 3.7660535088448153`*^9, 3.766054539866625*^9, 
   3.766054715849888*^9, 3.7660580850408173`*^9, 3.766058188517053*^9, 
   3.76605824226231*^9, 3.76605832425458*^9, 3.7660587475887127`*^9, 
   3.7660599930281963`*^9, 3.7660604126527324`*^9, {3.766060498964181*^9, 
   3.766060543348239*^9}, 3.7660606243522253`*^9, {3.7660607793228903`*^9, 
   3.7660607856500607`*^9}, {3.7660609071582603`*^9, 3.766060914138695*^9}, 
   3.7660609691126633`*^9, 3.7660610268228264`*^9, 3.766061122353565*^9, 
   3.766061219895294*^9, 3.7660612930478644`*^9, 3.766105275013981*^9, 
   3.7661053075321426`*^9, 3.7661055052233324`*^9, {3.7661055787185097`*^9, 
   3.7661055837096515`*^9}, {3.766105638727124*^9, 3.766105679699006*^9}, 
   3.7661063479726677`*^9, 3.7661063859055386`*^9, {3.7661066025022016`*^9, 
   3.7661066205951014`*^9}, 3.7661066519507093`*^9, {3.766107507461436*^9, 
   3.7661075169470615`*^9}, 3.7661512599538865`*^9, 3.7661567495909348`*^9, 
   3.7662150973995547`*^9, 3.7662681170462384`*^9, 3.7662699809640446`*^9, 
   3.766271901741909*^9, 3.766291754094593*^9, 3.766292323882201*^9, 
   3.766292559661594*^9, {3.7662945201459613`*^9, 3.7662945422313166`*^9}, {
   3.7662945894522047`*^9, 3.766294633677875*^9}, {3.7662946709795213`*^9, 
   3.766294697105563*^9}, {3.7662948610189877`*^9, 
   3.7662948805368156`*^9}},ExpressionUUID->"dfc4529b-333a-4c58-9ef4-\
00bfd6fd1769"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{
   RowBox[{"temperror", " ", "=", " ", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"time", "[", 
         RowBox[{"[", "i", "]"}], "]"}], ",", 
        RowBox[{"enorm", "[", 
         RowBox[{"[", "i", "]"}], "]"}]}], "}"}], ",", " ", 
      RowBox[{"{", 
       RowBox[{"i", ",", " ", 
        RowBox[{"Length", "[", "enorm", "]"}]}], "}"}]}], "]"}]}], ";", 
   "\[IndentingNewLine]", 
   RowBox[{"ListPlot", "[", "temperror", "]"}]}], "*)"}]], "Input",
 CellChangeTimes->{{3.765372934177271*^9, 3.7653729522873697`*^9}, {
   3.766024702945984*^9, 3.7660247107536416`*^9}, 3.7660255988855*^9, {
   3.7660258789647956`*^9, 
   3.7660258809796443`*^9}},ExpressionUUID->"5690affb-7264-4a51-993f-\
54474b24d121"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Eigenvalues", "[", 
  RowBox[{"ArrayFlatten", "[", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"ConstantArray", "[", 
        RowBox[{"0", ",", 
         RowBox[{"{", 
          RowBox[{"6", ",", "6"}], "}"}]}], "]"}], ",", 
       RowBox[{"IdentityMatrix", "[", "6", "]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "Kp"}], ",", 
       RowBox[{"-", "Kv"}]}], "}"}]}], "}"}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.766024534774024*^9, 
  3.7660245780458107`*^9}},ExpressionUUID->"195287a6-b30b-4071-a626-\
a5dc88859192"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    RowBox[{"-", "20"}], " ", 
    SqrtBox["5"]}], ",", 
   RowBox[{
    RowBox[{"-", "20"}], " ", 
    SqrtBox["5"]}], ",", 
   RowBox[{
    RowBox[{"-", "20"}], " ", 
    SqrtBox["5"]}], ",", 
   RowBox[{
    RowBox[{"-", "20"}], " ", 
    SqrtBox["5"]}], ",", 
   RowBox[{
    RowBox[{"-", "20"}], " ", 
    SqrtBox["5"]}], ",", 
   RowBox[{
    RowBox[{"-", "20"}], " ", 
    SqrtBox["5"]}], ",", 
   RowBox[{
    RowBox[{"-", "20"}], " ", 
    SqrtBox["5"]}], ",", 
   RowBox[{
    RowBox[{"-", "20"}], " ", 
    SqrtBox["5"]}], ",", 
   RowBox[{
    RowBox[{"-", "20"}], " ", 
    SqrtBox["5"]}], ",", 
   RowBox[{
    RowBox[{"-", "20"}], " ", 
    SqrtBox["5"]}], ",", 
   RowBox[{
    RowBox[{"-", "20"}], " ", 
    SqrtBox["5"]}], ",", 
   RowBox[{
    RowBox[{"-", "20"}], " ", 
    SqrtBox["5"]}]}], "}"}]], "Output",
 CellChangeTimes->{{3.76602455560284*^9, 3.766024578609003*^9}, 
   3.7660247169661956`*^9, 3.7660254508906918`*^9, 3.7660261141975064`*^9, 
   3.766026179407386*^9, 3.766026493248581*^9, 3.7660265486278496`*^9, 
   3.76603489919843*^9, 3.7660357357521772`*^9, 3.766043337346311*^9, 
   3.766044789298549*^9, 3.766050710049346*^9, 3.7660525388191576`*^9, 
   3.7660545399823933`*^9, 3.766058215341923*^9, 3.7660583273266525`*^9, 
   3.766058754493634*^9, 3.7660599959093895`*^9, 3.766060788876377*^9, 
   3.7660609184168367`*^9, 3.76606097228434*^9, 3.7660610319393167`*^9, 
   3.7660611358435144`*^9, 3.7660612963041635`*^9, 3.7661512602137575`*^9, 
   3.7661567497428446`*^9, 3.7662150975734596`*^9, 3.7662681171711655`*^9, 
   3.76629175428549*^9},ExpressionUUID->"cd7ecd26-243e-4fa0-b8fb-\
c568b8dc42e5"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"errorth", " ", "=", " ", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"\[Theta]ddat", "[", 
       RowBox[{"[", 
        RowBox[{";;", ",", "i"}], "]"}], "]"}], "-", 
      RowBox[{"\[Theta]controldat", "[", 
       RowBox[{"[", 
        RowBox[{";;", ",", "i"}], "]"}], "]"}]}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", " ", "6"}], "}"}]}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.76602802363476*^9, 
  3.7660280398394012`*^9}},ExpressionUUID->"871ad308-9e56-4efc-a539-\
108868314e65"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Show", "[", 
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{"ListPlot", "[", 
     RowBox[{
      RowBox[{"errorth", "[", 
       RowBox[{"[", "i", "]"}], "]"}], ",", " ", 
      RowBox[{"PlotRange", "\[Rule]", "All"}]}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"i", ",", " ", "6"}], "}"}]}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.766028043039796*^9, 3.7660280759776926`*^9}, {
  3.766058225383078*^9, 
  3.766058227175681*^9}},ExpressionUUID->"e7833b0b-22ec-4335-ac37-\
e17684ee82f8"],

Cell[BoxData[
 GraphicsBox[{{{}, {{}, 
     {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.004583333333333334],
       AbsoluteThickness[1.6], PointBox[CompressedData["
1:eJw03XtcTPkbB/BxWRsbBiE2zBL6ue0ghHAQYsOgJYRx3dgQQgiDlhAGIcQO
QgghhDBsyHUHIYRBCKHFElp+M8/nc/affb19r885M+ec7zPnnH4aNr73yKIa
jaazq0bj/D/+y28XVSa8Soz9r3b8ByXIY2HgvHOqXZS0RP+gN9tUa5XAdhcC
/5it2k3JXVO69+teqt2V2HYTc89VV+2hRCyu/yrh6Wlap8RdHVmpzE7VNZXQ
nz+umjtataeScfr5rojaqusoWQ0r6QffP0V7Kda0jW5rY1XXU7Ief7Yv8Ffd
QAnzHlxn7mcr3UiJnhSRl7VTtV5xX9Kq6q3+qhsrBQer3Tz1veomSrJed27f
6JN0UyUsbGv+7tMnaG9F8/5wjZyqqpspmqfvxx6eeJxuruTv8E2aeyGNbqHk
b8/Ojaup2kexPp/+rtOMY3RLxXaubeaVzKN0KyVsQYIy8WfVrRXbgRXfjV58
hPZVTKXXjXuam0q3USyjvDe7+6tuqxhrTfrmteMw3U4xP38z0ddVtaLYQ1qc
njThEGxSFHObvKyXWQdZ3l6xtLtV9kQH2tReMZXvHarZm8LyDorl4ir7mWq0
qYOiG7EyqvqyAyzvqIQ1b325cjHa1FHRBrY/mTZtP8v9FHM3fY1K7/ax3E8x
7Jmxsd54WtNJ0YSav/v2KpnlnRTdG8vA1eNpTWfFYulaKefZXpZ3VnQL4kp6
ftjD8i6KcdRvJ5+XpE0Ot3vx+udau1nur+imHy3/pn0Sy/0V69Zu66uN2sXy
rop9drQuedlOlndVLLFLlq89sYPl3RTL4F2DLr5NZHk3RWM9EN+sAa35RdHk
/9Ls3JjtLP9FsS/+/N/YPdtYHqBYlaR7lT5uZXmAoqkZ/WK3H63prthjf4mq
viaB5d0Vpf7AcX1eb2F5D8XysUVu8260qYdi1JtO79+5meU9FUvSuknJZWlT
T0WTXrp+lWmbWG5QTCWuP7zx1AIrBsUYZhnzdxBtcpRX/VTk3oY/YatBsT61
7WqxYiPb91Ksnz75mJZuYPteiqn353rRK+LZ3uGE/Y1/2rie7R31f9nettq+
dWzfW1G2nl7T4+Jatu+tmOqUzVmQF8f2DqcYW8a70VZH/a5v6g3puIbt+yim
hgOvJ0SsZnuHV+bca5+yiu37KNbKAeYfPsSyvaP8edK1W21oTaCiXCzXbObi
lWwfqFgv2v69dn8F2zvKu0z7fl8L2hqomFpWc8tftZztf1WUxwmm0Z/MbP+r
YpqzIuzjUNrkcN0by55vXMb2Dgd9CJo+bynb91U0M9zKDpiwhO0dfmYp3TEk
hu37Kqak73z++W0x2zvseuzTT2GL2L6fYloyuHOsaSHbOzy+3RqXtdFs30/R
NP8rVzmygO0dbjwzVfNwPtsHKaYdB4uU1tKKw4sf+DTo/AfbO9zzW5c686LY
PkjRdNUtTj87j+37K6a/lAtXtbTSX9EUXm1adehctnd4waKg3w/PYXuHK82t
HVuB1gxQND+73x8x2cT2Dt9u02Dwkdls7/C2eUGLV8xie4d98ud/mjyT7Qcq
muvnI/oMj2R7h+f9MKTzgBls73Bi+uU5A6azvcOrIvYcHj6N7YMVzdm2TeMn
R7C9wz6jLjxZNpXtHa7Uq1z3/VPY3uEygedisiez/SDFcc47NbQMrTj8jz57
UZdwtnf4me5txoJJbO+wftzF+1cmsv1gRfP5WoXlHrTicPyd7tvCJrC9w+dX
n316IYztHf5uz0KP+rRmiKIJWbCrTs3xbO/w3Bk/Nf40lu0ddguI+HAnlO0d
XtE+s/K539neqGg8noxoeXwMrHO4oLBH0eOj2Z/DXk3XeJwNgY0OB04p3Szr
N/bvrG/y+fJ2FGxx2Li7/U+VaKvDLkMfDmw/ErY73PbbL8PCR3D8oYpmc/ka
r/cM5/gOBy/qcSx/GMd3uMmCCtEtaaPDF1redVs4lOM7nG319nxg5PgOJ9Sw
Tm9NWx3Wzm57ovUQju/s/9PFpq6DOf4wx/F5rNvLZ8Ec32GlwY7IKwM5vsMj
/kqIOjmA4zvcYNrSzUf7c3yHA3u0nXYyiOM7HPrQuudyP47vcPz/2uXl9OX4
zv4OPrlXnNYMd3zeNOebNPyV4zsc9fli/KBAju9wSrkltlV9OL7D0b/3/ONG
b47vsDn0YbgHbXE4uez8gWN6cXyHc6w5H08YOL7Dwffel6pKa0YoGp318t4P
PTi+w7lTdf5nunN8h71+Ojb2zwCO76z/wHQg6heO73D+1GbJ4d04vsMR9wd+
HdeV4zuc/L8qvpP8Ob7DthcVf5jTheOPVDQGv2BtXGeO77BtUZv3hztxfIdT
yzcZZvfj+M7ykSddytEmh11mD17btSPHd9h4elDGwg4c3+GsI5cDrrbn+A7r
mwy116A1oxzHh4+D2k1WOL7D1mJfDJvbcXyH83scOzKqLcd32NztarsWbTi+
w5b42eMq+HJ8Z/3Q7jc+t+L4Duue7vz+VUuO76zfbcKG5z4c/zdHeZWxTfJb
cHyH80+2HqmhFYeV0w+zqjTn+A4b27h6+zbj+E7v+rPGb94c32F9/4X+65py
fIdN/xQbcqMJx3fYdrJHRXdaE+LY/huUn4Y15vgO2x5ta31Az/Edtj+sUeMH
2uiwJedL+euNOL7DuqzpU+Ibcnxn/QnNXk1owPGd9ePOafrU5/gOm5qubdeu
HscfrTjOwY19m/+P4zusjP1zSQsvju8sH7H1Soe6HN9ZvqZ6fL86HN9he/MW
aybX5vhOD5w3Kt6T4zvbn+l44GItju/0P/H/K0Zrxjj2t9fTiA41Ob7D9sV7
+yz8ieM7bPQIG39Lx/Gd5cF9ohrQJodN403rtDU4vsOaTefK3qjG8Z0+/yF3
qwfHd9avlb1z7o8c/3eHpz+/P6Yqx3fYWiq+wuAqHN9hjfnO3YHuHN9Z/63h
yvDKHN9hZa/lj8mVOL6zvPdGi7kix3f257jAT3Hj+M5y3XTzwwocP9RR3iMi
pRKtc9j0fPadPuU5vtO9+uyPK8fxnfV7Km9ytBzfYc3p/zr70BZn/e/n5XiW
5fhOPwsb8LQ0x3fWr/L32BRXjj/WUX617KalP3B8hzUXsqaFl+L4Tt+9OWdk
SY7vrB832X+oC8d3umXtYb99z/Gddk37bWoJju9sX+rev+bvOL6zvNfwpAPF
Of44h4dvavSgGMd3WDMkv1YFWnGWl2rUomdRju8s/xJTaWURju+0V+ik+xqO
76z/R8OijWmrs/xSpfdu39pifKd/8a134z9YM97hnYd0mwthndPHbH1nfIEV
p29dNxg/w0ano7euMXyCTU5viU79pQC2OD1nUKdeH2Gr0xtjM40fOL7T2x9q
pv/L8cMcnp8XEv8e1jo9ssjec+84H6ebn4z48hbWO32g2/gWtOJ0xvZ2M/6B
DU4PGL7ubD7n6/Q6r6ZV6DCny+8yPXnN+TutfPl36yvY7HRsl7aT8hiP05fG
3wh4CSc7/fTntk1eMD7pL0BT6zlsc7r3zsTquYzX6bn55zyfwfnSX5133k8Z
/wSHt439q8cTxu900UE3J+Qwfqf3DLy84THjd3pAWPdrjxi/0zWDvpWhDU73
br2sz0PG7/S4xUl/2hm/01EfKjx9wPidTos+uu4+43daW+lE8D3G77S5wur6
2YzfaVP4yRJ3Gb/TyuJjr24zfqdd22ntWYzfad0Q/3u3GL/T9g/vcm4y/onO
+fgmfrjB+J2OWPpfOVrndMARc/NMxu903q/FRlxn/E7byn5Ze43xO+36Spd1
lfE7nRmtq06HOR33bOvvNsbvdOqhU6a/Gb/TuSHlfK4wfin/+0DhJcbvtPvZ
OlcuMn6pf+7ZrguM32lT/fGrzjN+pw1/t1iUwfilP+3lhecY/yRnf7XPrTzL
+J22r0rffobxO518ZviZdMbvdOIc37y/GL/TYf88+JE2OB3ROa/PacbvtKmn
NvYU43fall8s28r4pTzUVJ82O20ZO6H4ScbvtP7UtpPHGb+U93y3II3xy3xT
rwYfY/zS37JbbY4yfqd1jzbXO8L4nVbs52qmMv5wh40ma+3DjN9pU36xpocY
v9OWi3W6HWT8TmuvXByTwvid1vy4OvYA45fy3/Tn9jN+pw0ThhWlw6Tcur/T
PsYvjlluTmb8TltXG87sZfxOK/Nzp+5h/FLuOstnN+OX8s7VSiQxfqftbx48
2Mn4xf1mnNnB+J3WtXh1KJHxT3bG33/rge2M32nlnO3oNsbvtOn9zYtbGb+U
L9vxNIHxS3kpjx9og9Oa4et8tjB+caO54zYzfqd1+6YnbWL8Mv6slm8tjF/q
t93bjrZI/6e9/vcn4xfHlni4gfE77VjubItn/NK+aHDEesYv8+2S1Xcd45fy
/5q0X8v4pzj99z/N4xi/00rxdS3WMH7xtBMdVjN+qV/sVb9VjF/KA6xTYhm/
OPH6xpWM32nTopN/r2D8Ut6zTkna5LS1UlK35Yxf+m9XKtbM+KX9vevnlzF+
cb3r05Yyfqk/dW+LJYxfPOBe0RjGL/Uvx9xZxPil/OyEEwsZ/1Sn/62/J5rx
i394kLiA8TttGtt1z3zGL+XXWp/4g/GLX42+FcX4Ub/Up3mMX8ofJNWiw6T8
9D/95jJ+8Q3dqjmMX/w6PcvE+MU7F9akk6U/r565sxi/eMLODTMZv7iyeWgk
4xf3jmw4g/GLH+4pOp3xRzhdd+bTCMYv3tLy7lTGLx4cf2cK4xevvXF/MuMX
LyzyMpzxi5e/Kk4bxX9ObTiJ8Ytn9QmeyPjFHhOXTGD84kZvzoQxfvHIoq50
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
8/ijiAuKhdB+Yq8tjdTnUcRmf/X5rADEt7oSbcB4vf/g8TIQ22+XJx0k1na/
zeNxMOL5MEV9fk1se/lU/f1frJz2V3//R/2YMzw/hIrDWg6kwzDe0Mf8PSwc
PvqY55sI9N/gCM9XkWLj32t4PjOJk9ss4e9jUWLd9SXq+5DE+fOjeX6MQTyJ
k9X3I2E+94w8/8bi83S3I38fixPbL7vzfB2P/t6+Us//GO/xDf4elgAPusXr
hUTMt8M1Xk8kiU0vvPn7WDLqP4tW7//B+L6l+PxqKrZHaAk+35qG7du6J6+P
rGj/uSavn9JR3+1XXl9loP6iu7zf6RLKX9Tj9ZsNn+cGX3h9l4lyr4N8fiIL
1njz+jAbrluN92fZWf/APjgH7jvqNq5Pc+FxuqdwHnwkWX2fG7bH8Tv8Pew9
5jOhLK+vC1D//ke+f64QvhZYGtasl/an5vP6vbhY8fPm9b6L2D4mgesFV5RH
n+b6QivWdZzC9Yib2DhSy/WKO8r3LOB6xkOsCVjJ9Y9ObClq5vrJU2xoZeN6
ywvtQ7zV+//Q/5oJtF6cnDeH6ztv9NexPdeLPuL8CnauN33F+toJXI8qYtuG
RNpPbP70I9e3/mj/Zj7XwwHYHvd7q+87xPZ4tIzr80D03+WM+rwC3DyZDkb/
blHq+l+cmFuZ+YURYm35p3QI9s9iX+YrQsVZK6up77cQh1xsRIcj/nYX1fdd
YHu5JjJ/EonyZDWfY8L8MjvRUdg/ZdzoaHHGjSA6Bn7vzvyRWRy3OpuORTwz
6zBfFYf5NX3J8niM3/46bRH7X+vO+gnwyErMlyWKC+ZsopMQT5nVdDL69+xM
p+DzMmMLnYr9l/E983tp2P4Hy6vvX8F4vdT8cjo+T6t9mU/NEEecNNKXxF5d
vrC+DfsnYQbLM/F5+HMD87lZGO/2JN7fnC1u0LsG79e2i2OvtuP94jnivJ+W
0LkYLzuQzhNHRUXS+dgeyfP4PtP3aF+nJd9/WiAO31GS70ctxHiuffj+VE28
9N/mMF1cnFFsPO0iHjGoP+0qDiz13S/8/ostIf34flY3lP9zje9vdRcbTz/q
we8/+q9Yh+971YlDNxxjuac4/lEv2ksc/E8XuoFYezmC1ovT5iykvcU+b5vR
PmK/g+s4H1+xx38/0Ar6+zOO8/cTu/3YiPbHfP/dx3gDxO5l3GmDOD9vKrdP
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
V6r3/6O/WV7q/f/o78XvtB3xD+3A/MgjzH/ld8yf5GB+Y9T3Mz3F9vt7N+vn
YrwfRtIv0F+3bDpPrD86mO1fY/xfk+h81F+xjn4rti3tqb7PH/EN8KM/YD4u
q+kCxJdZlPmfz2LD5ibq3/sUJ3fQ0F95PDui/v3P7TL/MhfpomJN7wasX1xs
+LKYLiEOC1qrvh9EbP21B11KrGtZhXYVJ+/oTJdB+f/20lr096mALi+2Rz+i
3cTm6+r4lVB+JYx2x/w6qs9fVBWb/vRQ3zeO+H7vSlcXa/PKqe8fR/34E2xf
E/MxnqI9xXpvd9avI1aeTVTfT475PJpJ/7+ns4+pugrj+I0BsYLSRoUunHPC
DFHZDRGMHF6FjBXJi3RTJEKnpsiYu3MXI0JCBCKWpq5Ik12uaQRNM1HCGBlQ
6rUh00Z3aeQfGeYywYjIVdvv8z39+dlzXp7znN/LeZ7zFoM9fow155XT/lt/
qry5tOdIgeRx2PvkGsX77OiX2Kz4YDz6ZTcrfpiAfh3Bii8mIg86L/lC9D2x
U5xMeSORSr8I7j2u+GUK+rxu5rcclHfsqOKlS+mvsFOKp6aRf16nua8b+w+u
Fqdjn8xa8bOUV+pUvDYDbn1e8dzllL/+kjiL9vWY+7tz0C96vjiX+kICxE6L
+58JE6+k/vpp4jzs+86Y6s+nvqxKc384HBQoLqT8lj7pv5b8i78Ur1P+DvEG
eLNLvJH8dcOyXxHPR0exuNji323m/vMS9B8+LN7C8xLwk9iFvUfbxVvJ735c
7MaeD59W/HqbxU2zvxWXwY8+ofTl2LevzNz/QHm9meJK9Pn1jPJXkb5ztbia
98m+3qz/p7172sz6f+wf2i+u53kcrRE3kP8ec//H2+SfbuZPd1Pf+7vEe9Cv
p128j/6IMveFvAuvyBY30t6YbsXr92PP2a+IP0CfDw03UV9SrdhDfzrdYi+8
IMzE/9Gn7TUT/0deliBuof47qeJW2te3SfwJ/Vn9gvgo9si+rvfzU9Ife8mc
Z0d9e6PF7fS3/Slzvh3yXSb95+RvXSw+TX9u8ul70IV+Y+a8vW7aP/SY+Az2
mTNP3MPz63WI+9C3K1z8Df1d2qjv1TneV99MsY/094+b+X/sFRogeT/9syNQ
PID+T3+t9Jeof1W6+DvK+3+9wSD6N38m9sP7T4p/oP3PtYqvYv8La8RD1Pfx
dX2fr/H9nlRl9v9R3uR88c/IJ14U/0J7Gxxm/x/tGbit/+lN6ssoNf9/7HUr
0vz/ac+N3zReGKG98QPiO/R3cK14DHmkX+OXcfTxjGp8NEF5Ly8T38XeT97W
eOof0meeEtuOWPJD5jzLAIttB97TeC7Q4iZHl8aLwRan7AgRh1g8lOjS+PI+
5CcGNX4NtbjioyniB6jvgNlvPAmuqNH4+SHKSzqr8XU4+jSGiR+xuODfHI3n
I9Dv74Ma70+1uHvqsLlvjPLddvE00h96Q/7GdPT1D8kfmYG+BUvEM5FHpWn9
TzTlXw2S/zML/WIuyz+KQW7rlP8Ui7zZK/9qLryvXP5YHOnDc+Wv2ZH7HZqv
iqf+iXT5dwno17LE7P9HXvSg/MGF8MHL8ieT4QXntR9kEdwxIv8zRf1zReun
HNTvSdD+kKXIcxu0HyQNTtqr8w+WwdtjtT8kHfbYg/T/h/9waf1WBuXXeuVv
L4dvJGm+LAue85f89RzYGzcm/x8uuqj7Hpxwsl/3PayE853X5P/DscWKF+TD
43U++f+wbfMXxBsK4bz27+G16o8Z2j+yTjxf8YsNcOGKm/BG+NwVnY9RBLel
KR5SDB++qPVyJfBXUTqvbQt8IU/ncbjgVdWKv2yFj2/XecNu7PvmXfE2+F6P
4jdlpD/r03xgOfJX39J8YAXy1FTFgyr1vO4UV5E+oldcjbwkSvtTapBPiRDX
6XnpUfp60oc7Q7v+A7GnBrI=
       "]]}, {}}, {}, {}, {}, {}}, {{}, {{}, 
     {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.004583333333333334],
       AbsoluteThickness[1.6], PointBox[CompressedData["
1:eJw83XtcTPn/B/BhWxvCsC4hjHsIg5D7QQgtIYQwCH0Jg5DrjnsIszaE2GFd
QuygJYRhQ0sYhNwHoSXkHsJv5v16nd/+s4+n9+f2PufMnPP5nDOnqsMn9B5Z
UKPRdPbQaFz/x3+57RxPG5sTRp5ux39QTK8vHxvTU7W7Yu/Q9o+tetVaxbDz
YB1dEdWlleg5da6tu5NKeyoB+yaHn0xQ7aW4X+yX3HKCap3i8Go3eJNedTUl
71PskBkv/qFrKOapRa713q66lpJ8rtD8LYNUeysJb/QjbxdTXVfxXmdrOfrY
KdpHcb80pVDCGNUNFJ1nhcV5ZVTrFXOXdbsTT5ykGymGmge/lgxX3VjRF1xT
2FhCdRMlZP/wFPeDNtpXSat3xOYZqrqpYr6+7MqNAqqbKdq2L6q96XGCbq4Y
Sg9e02/9cdpPMeq6LGn85BjdQjFGNs672lh1S0Xz/PHVuaYUupViHldp2qxL
R+nWivFehfLfqqhuoxgshX1bTTpCt1VyV37IGX7mMN1OcRyqMOkPL9WKon0a
36PslGTYpCh6r+a27EuHGG+vmOOqFfKtT5vaK1rT8h0llx9kvIOi8y5ydO2r
vxnvoGhyjta8GUxrOir262cyH6ckMe500onC52vTGn/FfKpK+O+rDzDur1g2
hvXsUojWdFJyd916nzN9P+OdFKVcVlx07j7GOyu5uWu3eY2hTZ0Ve+jO+zuf
WBnvoth/67Cw4Sja1EXRxbg96Hf5L8YDFMv9QkbfO3sZD1Ac2/JWv8zZw3hX
xdHbXn7GD7Spq2L63Nzxb5VExrspjnMDy19qv5vxbort7Y1x0/+3i/Huimn4
4jqH1uxk3OnLow1T/k1gPFDRTH1TylKANgUqtmnLg6q128H4L4olvnDfJ3O3
M/6LYit5ftu1f7cx3kPReHvXv1mWNjl9902vm+FbGe+pKD23FD9+4k/GeyqO
NM1PEyrSmiBF13/e+qszt8BKkGIps+LDFcdmlne63oTawd1oW5Bz+6yt1TbZ
wvq9FNPhq9nT6tJKL0VTb8d1e/s/WL+XYrt7Y9aLZptY3xl/81ZX2ncj6/dW
lPvvjT+3iGf93opt3JoZRzptYP3eimba5SOZA9azvtO/TWrQdso61u+jaI4u
GXx0bRzr91GUpl9GVj25lvWd8Q5phTq8XsP6zviwsjtf1aY1wYop0Drqa9hq
1g9WlC7DSrZLiGX9YMXWNKPFkte/s74zXm9ek30KremraC7t8ly+ehXr91Vs
1c5efPvqN9Z3etAz92M9aZvT/xvf9WSSmfX7KZplJbNuVqYVp/vGfjtZcSXr
O/2jxnvEDytY32nvbbd7vIth/f6K6f2xfm1fLmN9p4/5zsjJXcr6/RVNl7pp
ZfKXsL7TN5ThUSVoTYhzf9UqlFE3mvWdvvbc/dkvi1k/RDGNDO8zO2oR6ztd
b9uQ3rsWsv4AxXQ2qn7DRwtY32nzP51vV6NNAxTNxqr7qvxvPus7PXh/zpm/
57H+QMXUcnNOvDutON3us3bCsLms77T2uM7DZmJ9p/s96uBfg9YMUjTpC19e
rvgr6zsdkq5b/2k26zv9w4oBSx7MYn2nW+QP6XZ1JuuHOn1o0tKLM1jf6aCV
/p+uTGd9p58OzQpwRLG+01WeH6j/YRrrD1Y0u9oPGFKaVpzOnr7v95ZTWd/p
07NPRYdPYX2n/+245/PGSNYf4mzviyXh1mTWdzp/94U+lWmT06ee9jsRPon1
nR5wr7P18ETWH6po2l+d+0JLK04vHH243Xgj6zsd8IPt4ZYJrO90279abIwc
z/oGRRNZwtSt1zhY53ROt3FL/CLYntMpnb99qTMWNjhdIaB1l5pj2L7T1/+u
9XPd/8EWp5/U2VjEL5z9uerX73a7x2jY4XTn+Suajh/F/ocpmjM7I9JXj2T/
TkdERvY9Hcb+nZ4RYo3OH8H+nY4/v0rXijY5fWfOw5um4ezf6UmXd0y+MIz9
Ox230OsvHe1wetOQ9T1nGNj/cEXjvvTnpklD2b/TEcO27P11CPt32jJ22aZ+
g9m/0z7Pmm3wC2X/w13HW2LbmoPYv9OmolNreQ1k/654lXlvvQawf1d/bh7d
aoew/xGKJq3UrMst+7N/p6NaBvr278f+nY7r8rbKrL7s32nfYun+O4PZv9OB
Gz71vdeH/Tttmd+jcEXa5nRo81blhvZm/07nbD/Uclcv9h+maIz96jbKD2L/
TnsP7n0kmFacDtlt1I/uyf6djnruW7lRD/bvsnviuUK/sH+n3XW7zjztzv6d
zuzwdfvVbuzfaevF7m7nurL/kYomb+KrGecC2L/TAQMyd2V0Yf+ueKExzbM7
s3+nteWHnnWjTU5He+1xq9uJ/TudeXpEfH9/9u909qW1bZd3ZP9OJ/gqm851
YP+jFOcYa04sQeuc1lc5MWFQe/bvdJylet+9Cvt32hH54t5PtMnlXgHrL7Vl
/07bf+yeuqEN+3faMPRp6uTW7N9ppdX7Ov1bsf/RzvrH/ljYqSX7d1q5VWdc
2xbs32lrsR0z2vuxf1f5Tj6BPZqzf6fNo9rOC2vG/p3WFkw/Ob8p+3e1N3DY
gd2+7N9p07BTBe40Yf/hzvF13TyoNK1z2lLg1aTgxuzfaWvRDV82NGL/Thu3
ld3zTM/+XfW9j7dXaIvTur77n/s1ZP9Oa+K/a7/VZ/+ueMMbUy/5sP//Obe/
veG2xHrs32lDxDvv1XXZv9OWClV+j67D/p125OdPXeTN/l3xB79HrKjN/l3t
/WwvaanF/p02XVvx09Ga7N9Vf/XN1/dqsP8xzvHVaRVVlNY5bflwupNSnf07
rbt2xH12Nfbvivv3nnSyKvt3xSf/06wYbXHa4dezmEHH/p22zShimFyF/Ttt
2rvnYJPK7H+ss/+qc+M1ldi/08pRzeqbFdm/K15/jvfxCuzf5bfGR3vKs39X
+YiEfgme7N/lwjHl9pRj/67ygd9OHC3L/p22Te3z4moZ9h/hjO9opLwvzf6d
tt04H1qFVlxO8nre62f277Qp6+uamFLs32nF63XxSyXZvyv+xeZWnra5vFLT
YIyW/bv662RbtKAE+x/njAd8+t6+OPt3WqOd3N6jGPt3xe+O/PdhUfbv8sQe
XqeLsH9X+bfVUvcXZv+ueJVdPXe7s3+Xq2X22vsT+3eVT9UPO1qI/Y93xkOK
el75kf27fKx6mTdu7N9pTXzRLxVogyt+6tOEwB/Yvyv+1+ZKiwqyf5fdi+w7
W4D9u8ovDb2lpR0u98kKHKZh/xOc5fO95kz83hb9u7xpckb9b7Disu+PZT7m
wwaXq3sdS/8Cm1z+fLXH3s+wxeUFIb02fIJtLs8+H/R7Huxw+dH7u6s/whqj
00l5y7d8gLUuz8j/lPye43HZ487xzHew3uW1gbML0IrL05rdavwWDnJ5a+ic
iDccr8trXpbZ+xo2utymfNDHXI7f5bzC97vQZpefdMxt+4r5uNzh321fXsBW
l+9U73s6h/m5vLT/jA3PYbvLlQuunf2M+bqsy9GP/Q/OdXlO4pUR2cx/oqu/
vkVHP2X+Luc/Gh/5hPm7vGvO6mWPmb/LZv+KiVnM3+Uz4yzXHjF/l6Ny036i
DS67D2rd4SHzd9k3Y9uCB8zf5bjLBy46mL/LPp/K6WiLy6VvFX99j/m7nPlX
5F93mb/LoQHXZ9xh/tJ/3z29bzN/l00voprdYv4uz/r5eM2bzH+SK987P+ky
mb/LQe0e17jB/F3ODPuvyXXm77K2cmLgNebvsmHxv+MzmL/L6X89WHeV+bvs
0zjuwhXm7/KCGqsK0yaXUzpF/XKZ+bsc3fpznJ35u2wJX3fjEvN3OXlIj2UX
mb/L7snzAy8wf5fNuh0V0pm/y3Fj6rw/x/xdzp6z9Pa/zH+y02mh/S6kMX+X
4xZWOXeW+bscbpx++Qzzd9lW8O3D08zfZV2dst9Smb/L2Q+jqtEGl/XbbD3/
Yf4ue1o3LDzF/F3Oa3rkn5PM3+WA5WcL0xaXo3eF9bcxf5eV9WNCTjB/cfL9
EseZv8tBH/dmpDB/l+0DRm8/yvxlvO9WLjjC/CNd5fuuG3+Y+btsXv1uRDLz
d1m7pF7YIeYv5UdcGX+Q+Yuzfp3/N/MX17q9OYn5u2ydtvvfA8xf2t8X/nk/
83dZlzqhCW0WPzRE7mP+LhtmtD9mZf4yniOZxWiby464Ruf3Mn+XbWM/Lt7D
/CX++nCvRObvssVk9t7N/Ke4+vO/UXQX83fZNnXF5wTmLw754d0O5u+yYXS7
vO3MX1yv5k90kMuO9RrdNubvsmVIoQ5bmb/Y/XrEn8xfyic1tmxh/tLe0R/v
bGb+Ej9eQEdbXVZyDo+1MH9x8aWz/2D+4oXXG21i/i6bBh94G8/8xac3nNrA
/Ke6yh8vvGk983dZkzlh4Trm77JpwdCoOOYv5b/0nrqW+Ut8wOM5a5i/y7Yu
u39bzfzF1SvtjWX+Ut/kuPo78xfX2ViQNkv/D160WMX8pf0q06f/xvylfKVs
m5n5S7zqixK0XeovmJS+gvmL92cvWs78pXzXUz1imP80l6+Yqi9j/mJ9hNtS
5i826l5HM3/x/C7/LWb+LmtePn2+iPmLrb3zFjJ/8ehtxWmj1N9YrOEC5i/x
m7kh85m/xDtPXDqP+Uu8bqN/5jJ/iWtHutE2iSc+6GFi/mJlQIdfmb+4VI3X
s5m/+Jhm9yzmH+WyqW7kTOYvHvG/HjOYv7jNWN/pzF9c2KdqFPMXZ+nLTWP+
4nXdK05l/mJDtQZTmL+47q8BkcxfnHlq1GTmLx7wy/JJzF9cYcbJicxf/IdX
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
322o/62w+vwf6lfopD7/h/yKPFef/8P4ClxV5/+of2ciy5/D+B6r79NPR/8l
K3J94SLK7yihvj8f4ymwmeWvYHsMO0RnIK6Zw/LXMb574/l8YybKj3LQt9D+
jd/V9+3Du9T3Od3D+M3TaQfa+2MQ10MeinPPlON6SRbqd61PP8H2KHhXfT8/
4m/i6Gdi7WkPls/B+LvOp1/y+L5G54rtf5yh38CrZtHv0N7XyfQHjC/1HJ2H
9vq34frPZ4zHZyKdj+1TWKG/cfyfWV+zQ/JfrP6964Jia13171m7iXPL3KIL
iYOaP6PdUb/rH3QR1L89Rv17oWLtiw10cZQ/X5jrV1qx/lN/upTYcK8DXfr/
arr/mCqrOI7jTslFEaQRY+bcTYERMwLXCBgzJBJmd0hIKA6BGCKREDkhvdqN
6xDQqLEUY8YIhVojMVJzyYguysgFGhI1fpQwiwFKSiWCwKzteX+eP187v77n
3Ofee86593kO6W/fUnkv4nFck70NFy16SvmXGY7cbp6nvZz2Xzsvr6B8q122
4KwAeSX96wqUfdSfQ7If8fSPyf6UL5mSA4gnvE5ebTi/J1cOpL57A3IQ8b0w
qv2+NaS3BGu/8HnDls5w7SeG0J7vSTmU8snb5XDSP7fIEYx3RIu8lvG1pmk/
M5J06/va/4wi/hv7tX8abXhBU7n2W9cbrn2swjyvm/aGn5M3UP5EimxlvGaD
tX8bhx1B2t+NZ3wWXpAT6M+JUjmR/C97ykmMR/d11bfFcLffuLyVeI7cl1Po
X9pPcir98dwsp5M/t1fxZlB//xE5k+tpldn/LOLtdJjnjVP/tjA5B39jPl9s
J/UVBch5pNvN8y3ycUO6vIv+X6iSdxNv45tyoWHnq/3az95Deu0O2cb4V5r7
3fsZP+egbKf8Mz6qr4j2h6eUfsBwhWeGXMz1kjSj66OE90f8A7mM9tvWKf9h
ro+RdLmc/r/zpPwh41dmV/kK4vvUW/4I33aXj+r1DpSP0b9JX7mK+N3atF9/
HM/6y9XEe7BL13sNruqQaxmPrCH5JO+/mMtyPe3Pbjb3/7lerlwy9/8p/0Oh
uf/P6zdol08xfsPV8mni/9chN1F+wk0+Q/suDr1fz5Feuk4+z/g6NsrfMp53
suVm4nONllsYD8eP+jxp5f3iESs7ST/jIV+kvovm/RDtpE9b5A7i772l3ysu
E89Mrvn7P9fPjrv6POti/IK/l69SX+h3cjftRZ6Teyj/y1tyL/15dlKfl7/y
fsx4T+4j/UurPED/XM3vj98Y/wLz8/0612vMoL4/hulP9jbz/j/yl0yZ3//k
j2s3v/95fX2/lsfo30MfyDeJpzjE/P6nfL1N84Pb9D+5WfOPScZvfJP8D+kF
XvJdXv9LZzX/uUd7fXOaH80wHou85FnyO9M0H5vH0+b87QH986mQF3xhxFe3
RF5o2NKcoPmiC37apvnkYsPDxS2anz5Meo2X/AhOzNV81s1wZMhpzZfdaa9m
VPPpx8lvs8hLqf/nZM3XPQ0X1R/XfN6L/G2jmu97U/98mLzMcG2YQ+uJ5ZR3
L9X95ytwp6/WHxbKd0zq96KVxPdxu9Y3PtjFPL/OD/f4aD3kj/8z10sBhp2v
jGm9tRp/NqTflwJp33ZK67MgvCpP93usIZ69W8z7/6n/3UKt90Jw5T6tB0Mp
/1eB1o/h+OyQ/j8VQf6sa7r/Yy1+I17PL4jEG1O1Po3CzhqtZ6Opb25A93+s
Jz1oROvhWHzfNoc34L0Nen6ZFcfN/o3j8IS7ziOPV301N3ACnvnzd5yIY9N0
nkOS4jvUovU/bgob1PofH6vW+eUpuDdnBKdiv74JnI4DF+v3swx85asZnIk/
Oaj/w2XhrQ16nlo2zm3U8zFycGKHzrPcyfi9NK//2+XhRyu1P5KPxz10XsQu
XOCv/ZTd1PfHE3o+WyHp7a46P30P6Xc2yTa9vlfl/eTvndF+jp3rsSNT+z1F
XG+N4br/5AD590XJxdQ3FSOXYOvrchn1Tb0oH6b8zWnVX46X1i1p/R9aejuX

       "]]}, {}}, {}, {}, {}, {}}, {{}, {{}, 
     {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.004583333333333334],
       AbsoluteThickness[1.6], PointBox[CompressedData["
1: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
zzPt5P6/sLXFern/j3jyp9Bpwj62NnQ63CGazsD4Z3nL/X+Ur3lJ7v8Lq1vL
99lkob3vd9DZiPeDvF5gxfEaZ6dzMN5Vdsj9f5QfXVve/4vPx5FS8v5f1KeT
+fPRvi5Z3v+L/m/8nvkLhfV/XZXv90H9e+X7ot6h/Sf/yP1/pN/+We7/o/5h
m+X+/zYx3u3k8xAuwj4XDsn3QQmr38n3Mbkh/WVP+X4oYc0bV9pd2B4yVL4v
Cvk9H9OecOkOvJ9aI6x9XoJuJKycXiLfJyWsGh9BewvbAi/RPsLmkn1Y3hfl
e02g/RBfmy/M7y+s+ylOvn8K7X9YTwegPv1X+T4qtBc2lPUFIX9ae1qLeBPl
eAWj/FX5vqkQpM8w0KHoz/r7tE7Y1NWV9YWh/E053uHChpry/VIRKB/4lsdP
j+OTJu8/j4RLTJXvu8J4bBlPR2M8uz9jeQPqKzGZjkH7x7R0LMbrUgwdh/IB
e2gj+rf+Jzoe49X9nnxfGsqvmk0nYjyOTaNNwhYXeX0oCf1dE08nw5e+p1PQ
/ult8vkf9D9nsLz+h/HcESyv/yGe6WF0BupLbye//+jf6qM8P2SiP4d96Sz0
t1Qxz0fZsPEjbUX8P72gc1DfgY10LvpXvjKdh/Fp+TvPdzZ8f2bOoPPhF+Po
ArQX1pYuRDzrz8n3+2E8EnvQ74Sti57yfF+Ez8PWE3Qx2j+/nlaZRP4ZQXRJ
YUvJ3fz9cBG2/X6Evy9lkN6hGu0qrDm9h79X5YVNal/aDeW7z+HvWyW46zJe
D1ELq6Yc4u9hVaTnVaPdhZXY1fy9rYH0qW95/cND2ODdmK6N+o4E8PfaE/1p
a+DveV14cC7nAxphXel2dAPE87eB84dGqG92Gq9/NIF/ecb5hhf6c1DOR5qj
P5uncP7ijfo3mDm/aYnxSy7g/Rg+iK9pJOdDrVH+5QfOl3yRXk2+n7Mdym9I
l+/Thxs15/uhOnK8zsnrHXD0Ql7v6IL6R5fk/E5B+dddOf/rjvhconi9IwDe
+JT3u/SC76/h/TCB8GQ/Xu/oC3ct5vw0CNbX4fx1ABz3H98HpYV/2s7nbwfD
Ld7z/fXBcPEIvg9qGBy/T74PCrbEbcD8eyTzP8qDQ+HcnXxeYAzcZWUhrINX
7OXfZxnHz89FXs8Ig2fU5vPNEzF+Ncrx/qdw+OworjcmI3/o33wffQTSM97z
+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
b2Apuf+P9mYs53r6AOJdNUK+vwaOO8j1eSr6E1Wd6/c0tN9W7r8fRX2TujA9
HeeXpYFy/Y/+PJL332fgfDfuHX0a/tpJ/v0BnK/We9B/4nxctjadieOfYaLP
Iv+RGO5fZKH9fSO433Ee9fvL91tk4/xfciN9CfE1m05b0d6JS/RVnN/Wbed+
Sg7i/XkJ919u4HjHlZL31yPelq+Yfhv9ObNLvm8bx6OU/PsF99C/J7+yvA3x
NJ3N/aCHiHdnFe4f5eP8+VdV+gn6s/uovD8X/d2dSj9H+xv6MH8h4lvgw/2p
V2jflC//PiuOv6YU97fe4HgvN8n9f5QvipD7/3D/W3L/H/0bJv9ewSf0/5O8
v7kYTs2gv2I8Xv1Aq5JE/xe70CWFTT8qtIuwklqa+3VlhPVb79CuwrpRnbnf
V17Yfuo9092EDf7RdCVhc08TrRa2jY5n+aqov/t7+fcEhHPbrOP+Yw30r9dl
2kNYUyuJri3skTuR9hRWjY2n6wqrq3fjfqcG/ftfc+6XNkB9W17QjeBy8n0/
TYSLdrrQXsJeA7KYv7lwQWEJpnsLxx47SbcUTj6+l/u9PsLhqRPl/j/KP/id
9kX+v3V0O+Gs0Hry7yljvLYPoTvieDb5Svujvwuuyv1/lC/7E/e/FRyP+bF0
d4zXzjZy/x/jFfmS5XsJW595yv1/uNFxui/iWRIZCAeh/eJ/6QHC6f1f0Vp8
vtouowej/C5/Ohj1H4igh+Hz5V+mDxwibCx7jB6J43G6Xl84VDiwmSs9Bp+f
V2uZXyccktGBHofx/PY9HYbx8u5PT0T/HvSmw3G87r9m/yZjvBb+TEfg+A92
paei/3F/c7z0wpY7K+jpaO+tLx2J8iuPcfxn4fPdrh0dhf6r7vB4zxX2G7iN
jkb9v8vPz3x8nut/4+fPIOzTIppehPbGVaRjEF+9G/z8LsX3VX+KjsXxfb2G
XiHs+lNrOg7He/MRfj9WYfz8dbQR8f7VjV6Lz9/FNnQ84r1cit6A72uHLfz+
JggnjPKmN+H7cvOpfN4E7aefp7eif5P2y+dP4HGT6O34PqyTf18kCceruS+9
C+e7vn/wfJWM8eg3l96Lz2twXfm8Csa7OIrnuwP4fBzZKf9+Bcb/RAk6FfGP
3snzeRrSvcfRR9H+RXl9OB3pSh/6BMp/XSnfd4XxqlaJPo3ynbPl+68Q39VV
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
7+kvyYXwj9nO3ytGfS60hrS9AzQpPuw=
       "]]}, {}}, {}, {}, {}, {}}, {{}, {{}, 
     {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.004583333333333334],
       AbsoluteThickness[1.6], PointBox[CompressedData["
1:eJw83Xl8TNf7B/BBEPuUlCB07EEw9iC4CILQQWhqnaIEKUEQBIPQIGUQhAaD
0CBfgtDYx55ap9ZUQ8eeajBVS6rBb+b5fM6v//T1dtbn3jv3nnPukhojJvb7
trBOp+tWWqfz/B//uTqmTzd163z4fx35D5rVVPLXTynK3pr+dtvTJRco6zVr
vdScxQOUfTRztZxe1mrKvpp+z/yb1XPSaD9NH7sxt/ZKZYPmOD9j2zxNuaam
6z/nplfuLrq2ZlxU4tbExcp1NV3x/6Kn1VH21wwH7p88cXQn3UBz1Ay5/uRL
5QDNunXkvFl/7KAba2bTEp8ikcpGzXqjx/P8N6l0U821+UX1q7OVm2mu+Jii
L4soN9dcrdOvHIr/iW6hOVqW1S0urdxS037RXLuXb6dbabbrCztML6/cWtN1
m9eh3uptdKBmCeg64mMl5TaaY3nd9a1+TKHbasYje/d5faHcTnPuK74zaetW
OkiL+uN14er1ldtrpurtyh3ds4XuoOmufWi7prVyR0370LjvJftmWtNcJnPm
zF60RdN0P75IP3zbxvROmmugadmWb2lLJ8321w83lj7bxPTOmnPjgr3jy9CW
zpph0YqGhVtsZHoXTfuv26iIYRuY3kVz3jwbsz8hmenBmnnM/Kuvj//I9GDN
Et30m7Zv1jO9q2bbfb9gWRPa0lUzJETFv/9uHdO7aVqLA+3mpycxvZtmaR3w
m/+7tUzvrmlRgQ9edKIt3TVL5Nvz16xrmB6iaZN3Vvn14Wqmh2hmx6V9j9rS
uh6arcG434qtSWR6D8289OWEJm9WMb2nZh+QUnpAOG3pqTm7L6jz3YmVTO/l
3r+z60Q2oC29NGeeJaHruhVMD9Xsc8uXyCtFW0I1W7EFK/rOtzK9t6bZa/9z
JX8503trli+2lGv/ehnT+2i6UmMrXHn7A9P7aPagrF++0dG6LzXdqDmm2/oE
pn/p3uHJrcv4L2W6SbO0W5l8v+sSWDNpuj7VujYbt5j53ente2XmJMbDdnf6
oBX9j5/9nuX7ahbb5eEZBYtYvq+mVVldO7kNbemr2b805veLXcjy7vTtWV8e
PBPH8v00e/NaV7eWpzW3i83v/++3C1i+n6Z7qn1KPD6f5ftpltRG3Qb40br+
msXR6K3v3Hks31/TlgV1PPHEwvJuz8k7Uq8/bXfnLx7vGhU/l+XDNN3B75/P
nTKH5d2uUCFyxJjZLB+mWbY3iLw6Mpbl3enf/fZ2ScQslh+gWVbF1R40dSbL
u53yrFaRJTNYfoCmS6jaoff2GJZ3+/zo33QXprP8QE3n+zz26etpLO/2r0Wv
X6xLWwZqliv9d8wYPpXl3emmjX8f2xjN8l9plgU7To1+NIXl3c57O7CLkbZ8
pelc35SqPX8yy7v9bZ9hd36bxPLhmmVt/PPA1rQWrukyQqZUWB/F8m4nvDzd
oTBtd/usdW2NPyaw/Nea7vq8z0+e/o7l3f7sixql90WyvNsNbv+TsWM8y7td
63D2xJ3jWH6Qpru4odY/+8eyvNsVHP7vzkawvNtbyrRs5RzD8m73di2ILEzr
Bms6a8dW4QGjWd7taZE9Dg39luXdfhG6rO+aUSzvtvZm46ObI1l+iKY7Vv9m
az9ac3t8r07lx45gebfHWGxBR79hebdDr/Wb9zmtG6rpVmX1TYs2s7zbkcY+
FfcPZ3m312w7+9v3w1je7YJVtYLHDGX5YZruuHHsv6YhLO/2rW2RtuDBLO/2
zkbnHnQaxPJumw3HI0O+Zvnhmi5sTLvnX4WzvNtz0vZ+HvUVy7utO11uvXUg
y7s96MRu46EBLG/WdCltO638Mww2uB2RdGpGDVpz+0rq6BRzf9jsdpTfkl+3
92P9bmdc2XLqn76wze0qVY3tutN2tx0+abrNJtjp9sb9sXd0tO4bTZfT72Kt
y33YvttRjV4/3Nqb7bs9qm715QtD2b7bl4KHnprUi+27PSS6QvWInmzf7dCg
W10jerB9t3Nzv3JOCmH7bseU+HJtXHe2P0LTJWcOrWTrxvbdDmj6vtyZrmzf
7VGvwpu7gtm+2ynbBraqTVvczv1thGN4F7bvtrPLuCNbOrN9t/3vn96f14nt
u53oVT2mPa0bqemyz0X8kqixfbczT8TdfNSR7budXv7Xzmkd2L7b/lt7j53b
nu27bWq26PehQWzfbUeJ7Cbd27F9t20Hw3Xt2rJ9j6cffBbYhu2Pcp9/7vlY
tUC273bukueJfVuzfbeN99/bxrdi+26bHFWHL2vJ9j35LzeffagF23fbcV2f
ltec7bttKTdgUz3a6XZI8eFlxjVj+9+643/SeM/+pmzf7awT/TQvWnM7XHd5
zmAj23fbHlxo4OQmbN9tbX/bcm0bs323078pt79MI7bvtiNv9dW8hmzfbdf2
j29vNWD7o93xzJlz4mJ9tu+2ZV7V0xf82b7b5hlrN12vx/bddm7p8fZxXbbv
tmvkh/GFaJvbdp9rqXXqsH1P/h6vvupXm+277VhVUO/7Wmx/jLv8zZQLp2uy
fbct1S7/U5zWPOm/Zw3qX4Ptu22tfe7QNgPbd9s+aMS6D1+wfbfNvwdsO1qd
7buta1uvSnw1tu+2IfjqnOF+bD/CXf73OsM7V2X7Hg843ctYhe27bV7bMdu/
Mtt326DTb2joy/bdtkw41yqwEtv35L/7LLhPRbbvqe/wn+O++5ztu627e/LL
1T5sf6x7//nZN5ytwPbd1t1+VfhjebbvtrNyE2MH2uxxRNbthZ+xfU/+L+bu
uaFn+55068RJDWi72/Yjs/aXKcf23bYc+bH39TJsf5y7/TFFm28rzfbd1t2f
92x+KbbvSS/x7afxJdm+x7+1L2QuwfbdtvzuXDDMm+170nO//2JMcbbvtr3/
3KgZxdi+p/6ERhVXF2X7493lN6/cf8iL7butW/j85ZMibN+T3jN/qh9t9rh3
o3++Lsz23dYq+fpuKsT2PeV/3Zv0l47te9KLhwd0pJ2e8jWDKzf/1AHtR7r9
LvHZ6w+wwW3drHI9ThfAmifdkHVww3+w2ZO+4I8jC97DFo9HeT+K/he2ebxs
0YmofNjucU7PR9PewU5PffmX8xa9ZfvfuX3z3jTbG7bvtq6ypebp12zfkx6x
ZeWLf9i+J/3u+wk1aYsn/dCkkcNesX1PembMF1v+Zvsezxk54LmL7Xvy3zp1
qCOtm+BO720s3uwl2/d4fcKdv5+zfY8rzI44nsf2PT75VdO1f7F9jyd3OTzr
Gdv3+H+rEsb/yfY97vyw5ehctu9xn70h45+y/Ylufzo5eOYTtu9xnX9KrHrM
9j3+s9qrjEdsX9JfH/zjIdv3+MflH8vTNo97jJjc5wHb9/jYzRMr7rN9j/c/
XpvjZPtRbges392Y1nucURBd7g/2x+PtU3Ov3IWNHo840vjHHPbP48w7Z6f8
Dps89rnXNPwO++vxsLT/uv8GR3m88sGeztnsv8d3Cv3R/TZs9bhgTPWvbjEe
j9+PKBp1E073OO2PpitvMD6p/1LXY9dhh8e1Rz51XWO8HjfoeCKAdnmc8s2M
qF8Z/yS3cx1njjgYv8d34sLK0gaP4/YdvXqF8YtPtLReZvwex0xcOvQS4/c4
KKht64uM3+PoTaf9LjB+j6Om7y7zC+P3OLvtohJZjN/jlJt3yp1n/B57/dPJ
cI7xe6zbPaDtWcbvcfjn+4aeYfxS3vvt4tOM3+PQwWeOn2L8HlvfnvnvJOOf
7Imn7zaN1nus+93nBzvj99h/4NKTJxi/x0m5d6YdZ/weR7RZ0uYY4/fYsEdf
4ijj9zi127NHhxm/x/mtrZcOMX6P433nnchk/B5ntut97GfG77HmYz17kPF7
7Ds79/YBxu9xdum//8lg/B5nxQVWpp3S31Kh3fczfqm/iGP2PsY/xW1zysyj
exm/x96PvIvQBo9zo5r3TWf8HltDu/few/g91vo+Krqb8Xts/GX1xTTG77Fj
xLMNuxi/x7aFS2N3Mn4pP8gwZgfjl/o/GIemMn6PDZayw35i/OKRpcZuZ/we
mzqcnr2N8Ut7gYWSUxi/x+l1fzy9lfF7rL8T+noL44/2tP9sXSNa73G6pdzE
zYzfY1OlgZk2xu+xvXjZErTmsXn6yZMbGb/HzpxNczcwfo8NXWJCkxm/5G+7
oe6PjF/SSy8stZ7xS/rH6e+TGL+0t3Djm7WM32NLyU4f1jB+8fpPZWmHtN9y
s/9qxi/1rb/WM5HxS33VT0xfxfinerxj4e6VjN9j3Td78lYwfo/No/4x0kaP
LaGVZlsZv8fa4skpyxm/OMo6dBnjl/qqf1fjB8Yv5b9e/XIp4xeva/zLEsYv
/ckP2rOY8Ut9y1Zsjmf8Ul/3gE3fM37Jv+bx9kWMX+r77b/MhYxf0qtuvRHH
+CU9Nu3fBYx/mqf+iyfq0XqPdXFth81n/B7bt9XaMI/xS/qGyw8tjF/Sl/Rq
RpskfdEN/VzGLz5b6cJsxi9um2yNZfziC+tGzWL84iBz8EzGL87e02QG4xdv
flA3hvGLDTv9pzN+cYu5LaYxfvHE4z2nMn7xnZnjohn/dI/Ty6yawvjFtXaf
mcz4xeXOf5zE+MVDTmq0JvbyWRrF+MWWbkcmMn6xdeCECYxfXLpwo+8Yv3ja
qHfjGb/YOfvSOMYvDvx511jGL15UsCaC8YujTy8fw/jFw5atGs34xdVDk79l
/OJLw3eNYvwxHkf8dG4k4xf73XeNYPzi1Dq1aKM4ePjAbxi/uFjmMjPjF5uz
fxrO+MUxt/oMY/zi2n4FQxi/OKNOymDGL7auGjiI8YtTZtX9mvGL9bv14Yxf
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
uuE5z68WscHbxfWEeLG5bxnaivSXTRpx/yP+S114vrahvmYhPJ+nIv18P3X+
R3rxsfW5/+HS33N9wi7Wzf2J148sbL+fz9fl/kf7tf7iekU2+ne7GO1EfKXL
1Ob+Z3oprme40J9Sfrxe5SO9Y2+uZ+gWyfb/cbmB+19sWfEV1zf0SN/btBr3
v1grXLgq9z88o3Fl7n+xrslvlbj/Ye81vJ4Gor4AJ6+3Gvz+Mq/PIXBfh577
H/25srEs9z+8bznXP8ywV9uS3P9wjfvFuP/RfkQB1z9i4AId1z8s8HHjezge
HnjsLdcj4Bc7/oaT4CvNHsE22Dj5KJwK566+zvUKeOMGjocy4W6f53L9An7Z
l+OvLNi1mOM5B1xsNNcDshFfUjzHi0642wvO73ORv1AKx5suuJKlNJwPb3rA
8arue/HXbTme9YZjZ3F+pxfb19ynfcWWMw85HjYg/WENjqf9xdqQhxzPG1Gf
/0fOBwJRvmQW5wsa0i99pENQ3zs1/zCJzceecL4SDnfuyvmRGflXGji/ikD7
nbrTUXD4SDpGbJgVyPmaBV5j4/wuXmz7y6Xmf6j/0g+cHyahPv0c2oZ47u+n
U+Hqpzi/TEd8pmDORzPhtZMbwna03+0MnSV2upbTDqT3eEVnI/7gFo24/+GK
hxpz/6P9UruacP+jPttOOh/9PxtJ6+I9TvcrYuT+F5svH6T1YueJyKbc//C2
o7RBbHmyhvYXG2rMp42o35hHB8LndzTj/he7indvzv2P9m+NoU3iqKR6dLjY
Wqs+bRYbT+6mI1D/p/EtuP9R353HdAzSw2/RFvT/u6V0POKbtpO2wjFdW3L/
i02F39I2sVa5Syvuf6R/WZxOh2eeYv5MsS5Vx3S7WP/HdjoL/f2ufWvuf7E9
8is6G+kl3zO/E/3/kEXnor+f1WJ+F/ZHoyw6H/EXbRPI/b9YfKA67S021kpn
fr3YcH897Yv03BLMbxBbwjbT/vCHh7RRrC+zng5Ee00CaE1sf9eCDhHbAvfQ
JtjQqA33P/pTqD1tRvl/LzN/BHx6Ih2F/m5bRceInUvLsLxFbD40ho6Hfwqm
rWivoZ3lk1DfqJm0TWwasI9OhXO+YPl09P9DHzoTvv2B+e3YXl2n0lliR1hP
2oHtdSiBzkZ6GbV9nWLddeVcpM+fQLvQ30Mutf/R/h93ad0SKV/JoPa/2HJr
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
72ujvuUL+fzUBJQfnMr5UxTyF13O+dVk2Dyb869olN+bQk9D+rH+fF4/BvWd
rMTnv2bCN3ry/kAs8vs95vxvDurzUd/3tSB9ejg9H25Zn/PHOMYTwPnmIpTf
2I7z0Xj8/jo56CVoP/wynYDt8+oWvQz5L83j/NaK+tut5/x3Jc4HTZdwfpyI
36//b/QalO+wi05Cf5beotej/MPdnG8nI/3yBc7HN6K9uEWcv9vw+1+zlN6C
/l/4kk5B/+PT6O0o//0Orgekwl32c71gJ9r7qj7XE9JQ/695TN+NeL4/rb4P
jf4O+or598GFx3J9IgPlT/Tg+sVB1J+uvs+UifZLlqAPI//zUvRR5Ldfo48z
/aH6+1k8Hy/i+skp5B84hD6D/BeeM/85tFfQgOlZ4qjqpbkec4HHRzx9Sewo
v5++gvT+sbRDbJrcj76G/Zu4nL4hNv5ejutDt5C+OJrORvsNle9g+6U0oHPE
6UlN6XvI75tDO7G/q+dzfeoB6vfVq+dx0f8/99BPUN/lHer5XGy/0UPoZ6hv
+U90HvKfVM8Dv0D6iY1q/Q7b42Abrg++Qv6in3E98TXyv/rA9Ldi60f1vHM+
yn9TnfnfI/5Hi7heWYD8aaO53vkR9Xd6z/VR3WaJb+M2rq8WFltqqu/DeImt
lb3oYmKtxjTaWxxyysz12pLizM5NuB5cWpw77yJdVuwf94bWi2NWH6bLi/N3
/UD7oPzf5+mKYnuz4Vy/9hWbr5Th+ngVcdJFC+0H56j19OrI37ENbRCb5ujp
moj3Q3+6tlhnyKPrivXHEtTfOxBHlFN/v6EB6lv9Cx2A/vaOpBsj/j+7q7+P
gO1ffxXdDPV1qM/7CS3Ehv6ZdCtxoPY3HYj6Gv5MtxVnrQqlg8ThPg3oDuL4
A5NpDW6dT3fG/ngcoe6HoP+LZtPdxFHB9dT9EWyP5wdZvifKF6xR90sQX6Ns
ug+2z5luLG/C/h6wmu4n9l3yPR2G7X/Zjx4oTg/ezfrCUV//RHoQ4jnooIeg
/+8bsvwwHL9LhtJmHO97m9MjxM4VR1h+FNpvrLbnaOTfUZGOENu6edHjxN6p
Tu7PSPw+flpIT0D/ZhWlo3C8DV7N42uyODu3Ix2N+h/8w+N9Gn4P2jp1fwfx
9a9Dz0R8HdL4e4nF8V6oJz0H7df6wN+rBfHeV38Pcr44NSqMjkP6mHP8vS/C
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
       "]]}, {}}, {}, {}, {}, {}}, {{}, {{}, 
     {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.004583333333333334],
       AbsoluteThickness[1.6], PointBox[CompressedData["
1:eJw83XtcTPn/B/BBCCGE3MdlCWHcQzhsCGHYEMIg5PIlhBAGIYRBS+6DEBs7
6xrrMmgJIbS0hEGIDcOGEH4z79fr/PaffTx9ru/PmTnn8/mcc6aaIyf3G11Q
o9F0ddNonP/Hf/aOthfNTAmj/+rIf1BsUYtK+U1R7arYtjTqNuL/7a6ELZ/w
8usY1R5K2Lejyo9+qj0Vr2fX6ndrpbqqEvbvh0/mMqq1SnTTtn1SnyXTtRTz
+87v5xxWXUcxTAtdPGCO6rqKUvlHl0/tVXspScU6JL35eoFuoER/7d/zwlHV
3oqSeT733QTVjRXt2sXn3lRXrVMsV8uP/OnGebqpEtSo1m+fI1U3U0zJi8qm
eKlurqQdNtV8fusc3UIJ+ngpa+cc1S0V24Cf+3arrbqVotwfmFDhipVurWRf
PHSzd5hqH0Xn9/6wVwXVbRTlxbZif8w8S7dV7HMnNKl64QzdTtFuntvjVSnV
vorm5OqaE4acptsr+iHzer1IOEV3UNKuHj1u/vQn3VFx71K05O1uqhUlbPbL
2kc2noSNimKPeBYS/voE0zspBsu7Bh1/po2dFM3Ig5XabU5iemdFWX0ifPmH
40zvrLi/qfa/nv1ozc+KXbdrYtwfx5j+s2LyqDIkuhyt8VOszcrZGkccZbqf
onVdYN7y6AjTuyj2Y6ERj7rTRoctEX8UPH6Y6V0Ve5xvy9L1aGNXxVTT53SJ
TYeY3k3R9/nlR35p2thNsaWPv/ss+g+m+yu6sQcmX3Khjf6KftGBUTsWWZje
XbGFPXgypTBt7K5o48ftmuDxO9N7KOZv11Nv1j7I9B6KMqLO8hJtDjC9p6L5
VLWlW2Ai03sqSvKisX+F/8b0AEVTr0z9epv3Mz1AsXZ8XVl7aR/Teyk2c4ut
W/MSmN5LUWKL565oQmt6K5ry08ffmbCX6Q7nrgsbe2AP0/somi5BJ7xydzO9
j2I7EDKgkEJr9Iq1ju3GI1M8rOgVTelGvnue72J+R/rR3P4dOtFWvaJd93bV
avNOlu+raK+Yai1woZW+inK6Q70vE3ewfF9Fs+T8lsf/mFm+r2J2z5hdvSet
6acYG++f12TBdpbvp2jWRNlDw7exfD/F+qDs1uOTt7K8w+8n1no1dQvL/6IY
G7Wbc2PuZpb/RVF8bCVbmzax/C+K5tuUU/Z9G1ne4UVZ71KvxLF8oKKpUzlx
y/sNLO/w2ddLmtakjYGK8UTsxaED1rO8w9VHDctd8yvL91eURaZPKbdjWb6/
orEsyvu9Cm3sr1ifLFs2b9w6lu+vGMfujSt+ei3LD1CMO7IfNKhAKwMU5afE
h8fC17D8AEWz8P2bJRkmlnd4QEDz8E60ZqCiuT6ryx/DVrO8w+V3l6zut4rl
HXZt9elZs5UsP1AxasrYzjWIYfkgRfNgXI+JDVewfJBi/Cdl0I4Wy1ne4S++
N6t3XcbyDicvLhM/PJrlBymaHn+We29cyvKDFOP9/SFX9y1heUf6rJyauf8s
ZnlH+pTluU3L0JrBiuZuxxIBfaJYfrDjeFYsXyJ2Ecs70td38G3zaCHLO9Kr
RtTYqaM1QxRNg9CrZaMXsPwQxfjk6ZFBz4ws70iPizrU1Z+2Orz3+av+I+az
fLCiqTq88CHfeSzv8Ll+g7rXmsvyDlcb6XmxTCTLO7z46Pv04nNYfqiiaRdW
7KeSs1ne4f8FPh7rOYvlHTZ0DOzrHcHyDmeVXrTBfybLD1M0ZXakvJ84g+Ud
HlogsdrG6Szv8L6Vt9JTw1neYe2m93eK0prhiiZk2sWs7tNY3mHf4j+sa6ey
vMPjTrfSPZnC8g6vTMvKa01rDIpm91P903VhsNZhF5PbtH8nsz6He09Zverk
JNjg8LY6RY/E/o/1O1z51eoFsybCZofHu0yKC53A9hzuUfvTlhHjYZvDrRpG
tgoZx/ZHKJr9Ac1Lh4WyfYevu9dKjxrL9h1u0LdYy51j2L7DrXz7Zl0azfYd
zjz33/oPIWzf4ZAFoS4NaavDwaPWPR87iu07XOfwH59/G8n2RyqaDn7d8j+O
YPsOX4l2+92fVhxOXPcg3Wxg+w4n1+03+vtwtu+wXz1r9UvD2L7DEXuujN08
lO07bH6a//fsYLbvcO6q5QVHD2H7oxRN/tfGywcNZvsOu14oVTJoENt32HrN
3NgQxPYdDqyx7tcpA9m+w3XmJ/67YgDbd9is/+PBwf5s3+FMjb7KvUC277B/
uOvAkrQmxDE+e927+v/C9h32neRrXt6P7TtsuJpTI70v23c46/vnBXVoo8NW
86bFc/Rs32HX49sy/ujD9h322bLrv4jebN/h0HsFs3v2YvujFY1xxrYuDQLY
vsNJaUPM5XqyfYfjzuavLtqD7TscUVpjKdyd7Tuc1mrh9pL+bN9hXZNKBWp0
Y/sOJxw/NbtNV7bvsCPX0eAubH+MorEfqD4s2o/tO6xtu6H2qZ/ZvsOmtwOT
PnVm+w6HPV9wsy1tdDijwtu6izuxfWf6N89pdxS27/TVx1Mb0zaHzY/PXK3U
ke2PddQ/v0HVp+3ZvsP23FXDknzZvsO63ndqbGzH9h1WRo17F9WW7TvzD4kY
O6cN23fY/U2tKpE+bN/pKXH7lrRm+876vq08tKkV2w911FdXe+94S7bvsGV8
mZQHLdi+w9oKoXXdaIPD9n8r7ercnO07y/cc/dbYjO07XfrImYtN2b6zvkWb
L5WjbU433ndhrI7tj3OMx+RXD6KasH2HtVdPuHdrzPYd1gwtv7N8I7bvsPXn
ohXtDdm+w4YPWZ//bsD2neVvxd6/WJ/tO/OHBenPe7F9h41Jxe2X6rH98Y7y
A+cMuFuX7TtsWxVe2/4T23dY2Rf0pQxtcKaHPVvgW4ftO6zZ3zZkcm2270x/
9bT3/lps31n/yg3vc2qyfYfNfyUXbE1rJjj6Y/qzZbSW7TusmM4vs9Zg+870
vokZc6uzfYetFt3f3aqxfad/al2gelW27yzf7ubTH5XZvjM93LPY60ps35n+
qmKBZ55sf6Kj/x/3Dn9Rke07/Xrvqf8qsH2HjSmtjxSjDQ4rd1Kfe5Vn+878
qa8+6T3YvsPWcVdXLSjH9p35X9oGnCzL9p31/VXjx5cybP9/Dn/s3OZnWuv0
6ion1rqzfadveYy/VZrtO6wZcv9aTCm270x/a6gYWJLtO10t+696bmzfmf9A
xNCiJdi+04M6jHlfjO1Pcrj1jYnZrmzfYePIhIIvi7J9p9+uPP1fEbbvzD95
eGtX2uj01g8l6xZm+878ad+fBLiwfWd62KUhkYXYvtNZ1WoeKcj2Jzvcrt+j
/wqwfad3F+najlYmO8+PX4su17B9Z3qpo0fP/uiA9p2+0vxNxHfY7HS3SrqO
32Cr040XfiqTD9ucnnzmL/sXWBPmcE6Zmvc/w+5OH5gWm5YHa52+7ft72idY
5/S/VQvf/wgrTvcf1PjtB1jv9K35l9xog9NjXaY0z4XDnM54cH3kf+y/01VW
Rm96D5ucLli7+713jMfp1rXO1KQtTi/ptDHMzviczjxYfeVbOM3p4kmWrm8Y
r9MxM4aWfA3bna7cfLvtX8Y/xeF+HT6cfcX4nfb9NWv/S8bv9LaXH83ZjN/p
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
xbb+e9X1lNiiy+N6Kkiclt9dXV8hf59tPF+GirXBeep6S2wfO5iOECv3o3j+
NSL/HX1jHn/Ef7+Cuh7D+Mx50pDHH/3vdo7nezPKjzjO9VoCyscf8OLxR/8a
R3H9loTxCemqrt+Q7leR15MUuIRHHR5/5G/Viuu5DNTf34frORviic/l9Skb
6ckNa/D4w03+4votT6yp5VqFx3+JlP99YyUe/yWIbxWvl+5iTf9LXF95Ir1F
NtdTWvjQmNI8/sjf9pobjz+8ZExxHn/kDxrA9ZWC9Mn/cT3lD0/d+4nXf7hQ
up3Xf7ju2ldcX8GJ/bk+CoU1XbdwvQW/mfyU83/YPJ3rAyMcG8H1QTR8twnn
cyY4YS3XA3Hwujmcv5oRz4yUYnAC0nsml4QtSN+7ujScBHcd5w5bkf9GvbJw
Co5H/08ecBrSm1ypCGcgfX10Jdgmtj4rWhnORvqbU7Qd6X1fVIXz4DMFtbBm
qdOGUsNrwq7w0h+0u9gcUbIW7In0HUZai/QOZ2vDXmJbsX4/wTrknzWrLuwj
Nt5NoRWxdtlJ2h/lPfrXg/ViTaWjXnAQ6rO2bAAbkL7WoyEcivqWlqfD0J5r
MToCXpxBG8VKsQGN4Gg4/1hj2IT6O/3cBI5D+Q+FaDP6Y/SgE5AeWErH44/+
zEunkxDf4vFNefxR/46FdIrYvrs3nSbWtZ5EZ8DNijXj8Uf5+yl0NvpvaN2c
xx/p07V0nth06QXza6KdNveuxXRXeNMV2l1srDu9BY+/2P70EK0V2/ZNo72Q
P7sLrRNr+26mfZD+oGtLHn+x5kMa7Y/6rt+j9WJDrQV0kNg9cRxtQPnwO3Qo
0lNnt+LxR3vn79MR6E/SYdoo1v2lp6ORXqY/bYLjb9JxiN9tVGsef7G+SSyd
gPFr3Im2oH+hz1g+SWytUZjpVpQ3L6FTxMr0z3Qayq//RGeILYFqfhviu9Se
zhaneYbTdvT/5Bs6D+P5uY0Pj/8yqa9mUdpVHPa/aOZ3F9u/BdGeYmuXbbRW
7O6rlvcSazN/onVis+Ey8/uI0871ohX4WmvaX2w8tpDWi205aXSQWHl4jjYg
/4ZudCj6P0093mHo//176vEX67vUZH4j+vdQ7U804inoQZvQXu5y9fjDg1rQ
ZrHuRSc6AfW1UT9/FqSHL1CPv9hwoDZtRXvJm/j5TUH50oPpNB6f/9EZyP/n
atqGeLdOobPFmqFf+H2zI/7Cc+k81L+kN61ZLuO/ahjtCm8bQ7uLTU/qqt9/
sSFrJ88PWrExsxXtJTYbPGidWGuvRPuIw04VphXU1/g3no/8kf9hXVovto1O
5fkvCPX/dpA2iDXt4+lQ9KfmdDoM9V9xpSPElnEreT42inWunehosXv5mrQJ
8f9RiI4TWzPnqOd/9O/TOl4vEsSK/TivJxb0Z7yOTkL+5zZvHn/EqzHSKajf
N53XpzTkr2Ln9S4D+d81om2If/9v9Xn84dVdaDvG68QFXj/z0J8RRWnNCmnv
TXNeb13huVG8HruLzZfyeT33FGs/zKW1YuPtrDo8/mJbej1aJ1b2jOP8wAfp
385z/qCINe0b0/5of9FGzj/0YsPRD5yvBKG9MV1oA+p/17QGjz9c4Uk1Hn/U
9+sGzn8ikH5RX4XHH/WVKM35UjTseceTxx++t5rzrzi4R6MKPP7of9YFztcS
kH44vByPP9rb3ZfzuyS4b8cyPP7I/+gt54cpqO/wezcef/jQJ84vM+AXs4ry
+MMzYrnfmY36Iszq/i9cOYf7z3nI7zqe+92aGPGtCR+4/w+HlHvH/X/YvS33
1z3hAGMW9/9h/wncr/SCrd0vcP8Pnlqf+48+cEIu728o8KSVvP/hD9d4+47z
f/hZCPcPg+CvnX9w/i82lqjG+zOhSD/UsRAcBie3535hBNx+E9cfRpRfUoHr
k2j4Vij3E03IvyKY65s4pHd5T5vFSu583k9KQP4/Mrk+siB/3u/cj0xC+qBm
6v0rpFe8S6eIrdVe02lwm195/ywD7R2sxf1KG8r/ncf1WzbSE9txfWeHwxfR
ecg/fKG6/lsp9W8cxvWhq9g4pwLv/7nD3TO4nvSE94/kelMr1s4ZTHuJNZuG
0zqxOTOH9kH6wzu8/6iIlW1mrmf9kV42i9ajfLuTdBDaj0inDSg/YQHXx6HI
X20y189hyP+PB9fXEYj3Vk3aiPStL5g/Gi5ei+kmse3mKzpObLDc4PrdjPzV
unJ9n4DxGFRDvV+L8veymT8J/QvpznQr+l+/LvcLUpD+ay6dhvoGNuf+QgbG
x+sp023I//w8nY30oT2Y3470YjruV+TBMfdozSrpf+oD2lWseM+g3cXWTbNo
T7hSHe6HaJF/QWFvHn+xrYuR1sFle9A+Ym2ujeUVsWZTaab7I3/tv2m92OAZ
z/2YIPS30nPaAEfMp0ORv0wDOgw+spiOQP2fBnO/x4jyY4txPyga+ZNL0ibE
t34p88ehfIsBtBnljffpBLH5zSGWt4h11Stz/ykJ9W3+qu7/o76ASXQK2g+I
ptMwPmd+ZvkM1D/4A20TmxbO5P5Xtlh/bQltR/4MXzoP4+/uTWtWO+0ecpB2
FRvS1nJ/zV2sexLC/ThPsVH/p/p8BDxnCe0lNo/oRetgHzPtI9Yfmq4+P4H6
+47ifqC/OCzzDa2HTz6ig8SmhjG0AfXV2EaHor5C7bn/GCbWfqrE/ckIlK9y
mjYi3iK36Wix9d9ZtAn2/YWOE2uWJNFm1Dd2DvdHE8SWJd7cP7VgfM+PoZMw
HgGVaSv6//Aiy6egfNcPdJo47fBW5s9AfLuDuV9rw/gbztLZYnuASb3/I7Y1
1NJ56O8bD3X/1yT5v62nXcTa5IHq/SCxe7lHtJtYfy+DdhcbNo6kPcSa+jVo
T7H59Hi6KurfVoH701rkb/IHXQftnbxFe4nDqo+nvcW2E59Ynw71b3Bheguk
V1pO+4jT/qrL/XFfsW77OFpB//9XjfYTW+NNLO+P9uuOogPQ3n9/0nrkb9SX
5QNhvz/oINQ/IoYORvq6byxvwHhM2kaHIN3lEh2K9osHsPxEsXHHeToM+a+l
0OFIT+tFR6B99yusLxLtNTtLGzE+C+oxfxQ+D/576WiMV/JtOgb1ucymTThe
CU9YXyzGP3cnHSc22R7RW1B+TH+WN6P+PpvoeJRvEkInIH6XqyyfiPL9etEW
pFesRh9Be76udBLGY+J5fl5OIX8JHW1F/MfX8fOfjP5UqUKnoPyYJH7/UsXK
dX86Df3ZeYzf13SM71NPOgPHx7KJ54tMjO/lNur9W/Qn4g7PV1n4ft0IpLPh
/NM8v+Wg/Wx/2o7yAS50LtpbeZnn1zzkTxxP52N81j1Wn39bI+mbx9EuYs2b
n2hXcdrIz7weuCF9/CH1+iDWNWpHeyB91xleTzzF1rOhdFWk72tEa+G22bye
1RHbDs+jvVD/URfaW2xs1IXXRx3qb3aI198WcD8t7SM2PBnB678v2qs0n/ML
BfHHnuB8xA/tD1XnN/7Ib97K+U+A2PzvZ86v9Mj/sQkdiP59ncr5WBDSrz7j
fC9YrD05hTag/uv/cn4YgvSBHehQlD+1gvPPiag/7bs6v0W8j1bR4UjvVomO
QPylojg/jkR9Ex9y/mxEPKMD6CiMx/sbnJ9Ho/zOAXQM+tfwOufzJtQ3zoeO
RX969uF6IQ7xVfXlemIL6q+rq8bvP9IL1uH6Ix7lL1Tk+iQB6cdL8nmMRMTX
5RPXPxbk/+0e71cdQXrIVa6XklC+kLq+OoX8S97yfpYV6ZaXXJ8lo/ziS2X5
/YfbW7ieS0X/PS5xvZeG8sEF6HR4b/1S/P7DWf+U4Pcf9XUwFuP3H+64rSi/
/8j/w4/r02x4xO9cv+Ygf+MgrnftSG8fxvVwLny22Vc+7wNP3cP1cz4c34jP
I2rWov7jXG+7wK9y+HyQK+zlxueJ3OCUhjf5fBBsikiGPWD3MUe4XwAfeZoJ
V4VDb7/k/gEcWIPPS9WBr/Ti/oMXPLlZLuwNf8nn83s6sXGZN/c3WiC9RX0+
L+eDdJ8E2hdutID7Iwr8/Qf3T/zg3zpxv8Uf9f2yrQQcgHRbF+7P6OF5e+lA
5G97sBQcJLZe/sD7fcFipWIQ94MMcJkHdAgcYKdD4YefuZ80Ee3N0HP/KQzt
+dfk/cBwtJfTmftbEXDN4tz/ioQX1aSNKN/QxP2yKLGt00zur0WLtVeiuT8X
Iza303J/z4Ty8cfpWKQP/JOOQ/n107hfuAV+1437jWbEU3c99yvjUb7SKO5/
JqC/10pxfzQRvleYtmB87uyjj6A/T6ZxPzYJ+ZuN5P7tKbRfP0C9/ya23DHT
yWJDt9Xq/Tix/eR1OhXtTU3g/nQaxsvtOvez08W6ZkncL89AfblFuT+fifQ9
L5huE4e9q8j0LLHp4Bt1Px/ld1Xl/Ygcjm8Z3l+xI76XI+lcsXtUSzoP8Y3r
T+ejv23rt4E162Q8do9oC7uI7RtGtYNdkT4liXYTK+lzaXexMXcZ7SHW7ejn
C3uKw/5e3h6uivwppg6wVmw+/JSug/J9N9JeYk14DO0ttu5TOsI6cZC1lcLv
vzj74zHaB/1PyqR9Uf+8g7SC8o830n5i1y/PaX/kXxbeid9/sefUt7Re7NXf
vTO//2JD2X+YHiROe3KUDkb6xlzagPGOmMnyIeKkQ//SoRivOUV/5vcf8ZdI
YXoY4ju5ng5Hf10v0hHilLa+LB+J8fm+lzaK4xqfoaPgBTPpaI6vDx2D8rsG
0iYcvztq+Vgcr/Qafvz+iy0Tm9BbML4+T5jfLM5LX0/Ho71l8XQCPm8bv9CJ
iGdZb9ZnESfMHkAfEesnF6KTxL6LEln+FPp/LoG2Ir1EDp0sji/clOVTcHyn
6uhUccSUDOZPE4cvVccrXRy6ZSSdIY7+sobOFJ8ac5G24fjGnaKzxKnxBjpb
7LL3E49nDj4vI27RdtRf8zWdi+/b7tIsnyfOeP2V6fk4vt+20JpYp00ujWkX
cerWz/x8uoq9Zv2g3cRp30sxv7s45Kid6R7i9G2raU+xblhVuqo4Ie8Ov19a
8ZFl5+g6YotW/f56ifPfLKW9xVnj6tA6sSZ+KM8HLcT2xmaeL3zEPttdaV9x
Xr+xPB8pYmuhTTxf+aH9Ber5zl9sznnA82OAOOhwMVovji7XhufTQLH/svE8
3waJI65s5/k7WKyMusP7vwaM/+aSdIg4O7W7+jyDOKzFal4vJopd32byehOG
eOc2psNR/8KFvD5FoP8V7/H6FSlOKd+aNoq1ORt5fYxCffmfeX8zGu1fOcXr
aQyOZ9Zi3s80YfzvD+f1N1bsvrQbr99xcMGKvF+5BeM74RLvP5rhI/M5H4jH
52v8GN5/TED/34Rx/pAo1rv05PzCgv6My+L85AjaW7iY9w+TkH++Op85JbaZ
Anm/0Co2dvLj/CcZ3ryM9wNTEF/wXd7/S0V/vmSX5/cf+WeYef8vHeOpecT5
WwaOR8gwzv8yUV/kUc4nbSh/yY/vF2Th8zizcxF+/9l+R85Xc+CWxb7xfR6U
v9n3PzgX6dO+cX6dB7//h8+/5cO+K27x/t+v4oLl+D6BCzx6yGvO/8XGuhf4
fL8b0ue95/rBHen9p3O94YH0nGCuTzzhe6O4vqkKn+vL+21asdL/K11HbI1I
5vODXmJtmbVcX3mj/NYiXK/pkN53DNdzLVC+XzTtI7aV0nH95ys2/9WK60VF
bHgay/tnfsi/6AHXm/5ob/ltOgDtLejC9ake9mjE9WwgHG7k+jcI8WUP5fo4
WBxWrittQH/HT6dDMJ5Re7jeDkX5ruO5fp+I9JG31fW/WO/TjvsD4eK01kXU
+10of/o3OhLpT9dx/8GI/oZlcv8iCv2504/7H9Fi98hpdAzqK9mbNqE/ayZy
PyUW/TlqUe+XiC0HpnP/ZgviH6U+n2sWeza+Q8djvFfeoxPE2Y1Wcb8oEfmf
7uV+kwX9n7uY+1VH4B2H6CSxzud/9Cm077+GtuJ4Nx/M/bFkxNt8APfTUsRx
D1/QqRi/TpfpNMRfz0ini5Nm3KAzxD6xidzPy0T+zf///gbiS1HvP2SJTReN
dLY4o/QEOgfp4RO5v2hH+uOp3K/MFUeUV/fP8/D5HmDh8+P5iO/7VD5vrlkv
/b3dgHYR6078YH5XscvLJnxe3U2cc9TC593dxakvV/B5eg9xZuOqfF7fU+y9
4xFdVVyn3hVaK9bHq+9T1BGHnHDj+wFe6E/sVL5P4C02duvD96l1Ys9DuXzf
ugXaH3itJ7//iK/eEdpXXDWqA62gvns1aD+xdddw2h/p/rvoAHFw/eW0Hv3/
4koHimOTZ7E/QWh/4Sf2NxjxfZlDGzB+3b/w/YsQcdSo8XSo2PYgnfFPFHtV
CqTDUH+JHI5XuDgtPJqOEPuUL0tHioMaRnG8jeLcT0XoKByfqlf5PkU0xuOv
JDpGbH+0jjaJ3fN0dKz4yMcEfh7ikF6hF70F45PfiDaLIwdXo+PFcUMf8/2L
BLFmQyidiPgPv+TnzyJO7xVDH0H+nl3pJBzv7p/5+T0l9ju/Un3/QhyhK0kn
i7XnvNT3MfD5+9Sb34dUccrqubw/kSbO+2jm9y0dLnWY9xcyxEqbS/x+ZuJ4
7sjh/QMbjkeBGnSW2NypH7/f2RgP77nq918c/XUXzyd2fD4z7qj7//g8BlWi
88QW+0h1/x+fj8QEdf9/g9Om+895PnXZgP7XpV3F7mdDeP51E1t77eD52R3p
66zcj/cQawr34fnfU6y//I7Xh6piy7D56vMDYnvta7z+1BGHBf3g9ckL9bUb
xP1wb7HueUFez3RwpVReH1uItdVbcz/bR2y72ZHXV1/Up93A/WZFbK69TL3+
i5VK4zk/8Ed9uzScPwQgfVMo94P1GI8+/+P8JRD1P27E54+C4FQt318MhkdO
5fzJAM+5zeehQuAOlzk/C4WzmvL5rIlo7+U47neGiY1F+3J+GA4vP835YwR8
bgXfR4hE+W/1uZ9oRPp/z7ifGIXxaJ/O59+i4c4nub8Yg/KjC3H/0MR43Tm/
jhWnXenG+Xic2PDXST7/twXjN7UB5+9mfD56J9Dx+DysaKfO/5H/9mKuFxLR
3zVzuJ6woP7/9eV64wjyvxxDJyF9WXuuT06hv7+25XrGivhCFa5/ktGfDx/p
FHFckVLq/p/YJ7Wy+ny+OKXMX3Q62jvylOuvDHFoxEOuzzLRflJrdf8P9bmV
p7PwfVyjp7PF2TktuR7MEbv+15frRTvqD/1B5+LzfuoTnYfxmpZG54uTjH24
HtXEyXhlDuR61UXsc6Ib17Ou4rgVq2g3sefozrQ78n/xpz3EpslFuD72FIde
KcH1dFWxpek+Wiu2Xl5C1xGnHG5Me4nDHs2ivVHfsSFcr+vQ/sLmXM+3QP4G
Y2gf9GfDJ+b3RfvBl2lFbN/xC/P7ibXdmnO/wB/9m5tEB4hdf55P68UZk7+x
fCA8pQzTg8ReG610MPr7Rzj3KwxiY4c1dAjii3elQ8W22P0sP1Hsfv8rHYbx
Wrif+cPFWQNduT8SIdY9T2Z6JPLvqU0bxdm2gnQU8hsi6GjEU1jD+mLEhriC
tAnj820C88eKgza9YP/ikP/TD3oLxj9/BvObkd7wBB2P+AsMpxPE5hlq/IkY
vx7BtEWcZF1PH0H/X+fQSTieRe7Rp2DfNrQV42ndxOOXjPJT5tMpOH5lT9Op
8P4MOg3xZk2j01G/IYmfrwyM76VudKY4+ksP2ibWr5lEZyEeFz86G9+3Hbv4
+c9B/LF5/H7ZcXwqHKZzEc/4k3Qevg87fqfzMZ6HfqY1G512XRXD76+L2P1Q
EfX7LzZevsfzg5s4bN912h35K66iPcQGY676vog4o3APuqpYP+c5z0dasc+C
M3QdsaWyifYSp+TXoL3FQdNn8HyoE0dfy+b5sgXyH4pT3zcSp10cSfuKzddL
0QraW23k+dkP/S/6RH0fQWyf/z86QByXXkN9PwHjt/EWz/+BiOe2QX1fAf1b
cZXXk2DUP7czbRDb/jnC/bYQjO/GwnQo+n+zPa9XE8Xa5e25/xYmtj6oz+tb
OOL72lp93w31NxzL62Uk0ids5v02I3wpidfXKLFm2hnux0XD/13m9TgG+cs9
4X6cCfHsLUDHon/Pa6r3/8RKDUW9/qM/TUZwfmBG/1tGcr8uHvmvruB8IgGf
v7k+3K9LhGPncL/OgvJrcni/8wgcHMz9uyTk7xXN+cwpxLNkGec7VrRXdD/3
75KRfqMW50cpqK/YP3xePxX1pfTgfl4a8pfezfu/6Ug/EcP9vAy4YSPeX86E
n93m/WgbykdGcz6XBVf25fun2bDLdd4Pz6Er8vl7O+zZ6jb3/2DL/45z/w9O
OHaV9//h9JGcb2o2iRcf5+99uMCPW/H3N1zhX5dw/uomNv7pzfd13ZE+sC7n
ux5IPz2c+32eSJ/Sg88/VEV6yWV8vl6L9J+H8nmJOnBice73ecEP7nC+7Q2H
fFH3/+Cxyzg/byG2DijL5z98kH4xiPaFX8Wo+3/wb7+q83/0r+oS7u/5i5W6
87heCED9vy+n9fC8Qur+H+qrvoXPuwSJtSMGqft/qP+AJ/f3DGLbkI50CPK7
69T9P7Fh9w56IvqzJpbrmzCUz1J/7ysc6Z/+oyPQ3tfb6vM/6G9XG21E/Skr
uZ8YhfqWruT6KlpsDu/C9VcM6ms9gDYh3acKHYv6Zo6i42CDwvXcFvQvtQGf
jzIj3l9X0vHwWD2dgPzzdXQi0iucVt+vR/3ND3L9eATxlTbwea0kpAeNpE8h
fWkh2or+Z6u/35KM/Cuy6RSMR8MrXK+moj8F6nE9m4bjHfo309ORf/sqOgP5
/b7QmXDX+yxvQ392RPP5tCy0X2URnQ2vd6VzUH9pF9qO+my/07nI/3s01995
GK+Ip3Q+ys9eTGs2S/x3qtEuYtvrcbSr2Ghqy/W9G/JXf0a7izVrH6jrf5Sv
24f2FFsX1KerIn+V07RWbEjvqj7/J7ZnhavP/4n1LdXn373FSpGCtA4eUYlu
gfr+nEX7oD/jr9O+iKdoKq2ILRPU5w39UL74UNof9QdspgPQ/2s/aD38tAn3
RwLF7qO/Mz0I9R0/RAejP9GnaAPKtyrP8iHisOfj1N+zQP7j4+mJqP/PSnSY
2LTnX9YXjnheVGd6BOq7M5+ORPz/HKKNqO/yIjoK/amno6NxvKerz2vGoL5t
82iTOG39bTpWrHucQcfBLkvpLTiez3rRZrQXM4OOR36bWl8Cxt+/OPejEtGf
gEdMtyA9I5o+ItY23k0nYTxyJrH8KfTXVf19ESvyP7mt7v/j81dogbr/j/5d
mqfu/2O8/6yt7v/DWw3q/j/G02rh/lwG+rc/mft5mejP5Sfq8/uId1oA9w+z
kP+i+vx0Nsbrp550DtKPh6u/74L231zmfmQuPm+3XLifmSeOeNya+6H5iP9r
Ge6narZI/nqBtIvY/0xt2lVsGVSRdhMnKGtpd7F55EJ1/18cajZxP9hTnNSv
v7r/Lw46p+73a8XGJT3V/X/0Z7Ab7bUF41Oe9kZ9A9T8Onj7OLqFOO+CL+0j
1mb8w/74Iv3FIlpB/4/7037iuH4VaH9x9rFbjC9AbP1tivr7VGL9r8XoQLHt
6DmOTxDa67ORDha7r59KG8T2w43pELHmzmUer1DUd3MaPRHHJySIDsPxOD2C
Dkd6qyF0BOqLqUZHYjzNJ/n5MKL9KZF0FPq3YxYdjeMfsoKOwXhumU2bkH6+
ER2L9tLN3D+PE5uu+tJb0P4j9X6TGcffvwodj+Pf+DT32xNQfqcrnYj2/xnF
z7sF47+vDH0E41X9vfr8P+pfqL6vcQr5K/nQVvT3x0Lu1ycjPa4gnYLxKZDO
72sqvOocnSZWgo10Osbjzhv1fR30558AOhP1Wz/zfGBD+/++pbMwPs9fqPv/
KN9uE50DNyug3v/D8dJF8v5ArjhtUE86D5/XzAA6H+M5riWt2Sr5K93g+cpF
bHncinYVm/+6xvObm9iU9RvtjvyFdtAeYs3gCbQn0n97w/NrVXFY0VG0Vmyd
WoauI9YOylXfJ0P6qLu0t9jYdan6fplYP6MA3QLtJy7n+d4H+Sf3on3RfnpT
WkF7qS60H9pL3Mnrhz/6v1lLB4htDazq9R/j4WuiA8W6SZPV6z/q69VUvf5j
PCcv5fzHgP65b+Z8KwTpG7+o7zOifwu30BPFhnHt1fcbEe/rLZxPhqN/g09y
vhmB+ou95Hw2EvkLBtJGtJdjU+//I3+3IXQ02teYOd+OQfv/XuR83oT0Sq50
LOJdMkGd/8P+/3A9sQXlY/7/9xORrgnj+iMejkng+iQB9ee85nonEekbfWkL
4n27guujI6i/399cbyWhfPcq9CmUf3yW6zMrxuOG+j5CMtLd13H9lwInFeTz
H6nwlvV8/yANbtOV68l0uO4lrkczUP+GfK5XM8XKw2p8v8CG9BERXO9mYfxX
D+N6OBuu+5br5xzkr7Pald9/uOVAvh+QC+9uzvV5HjylEtfz+bDhIX+fU7NN
fO4Gf1/LBV41l7+n5QorbX7HfoIbPDL/CX8fAG4b/xr2gPU+/H0tT3h98zw+
/y82PvqP+x1apK/25/2qOuyPH39/1Qv5k725v+INx13g/Swd8l+5yP2YFmJl
/1bu3/jAtwZzv8cX+X/7wee5FLjNCu4P+YmtUYt5v8sfTn3N/aUA1Ne8Evej
9OjPgAzuVwUif/oY7mcFIX+fZXSwWHu3Hfe/DGLzT0e5PxaC/mQM435aKNJ/
mcn9t4nw8KN0GPLr7tLhYtuUdO7fRSB/oWXc74tEf0111d+/Qv+u59BRYsPI
x3Q022vI/cUYxJc9R33+D14UyP3KWNRf2qD+XopY57Ga3oL+xoTTZuTXnKHj
xfq/Yrh/moDybrO535qI/PVcuF9rgbfnM/2IOC3gGZ2E+hoFM/8psd3elfu/
VsT/p5b7ycnInztZ/T0ejGd6OzpVHLaqo/r7PGJ3/yw6HePnrf7eUAbi/XkF
978z0d9NG9Tfb0L719TfH8oSWxZHqr/nJDZ96cr99Rx8fq414/68HfFGJdC5
6H9SOJ2H/Bo1fz6O5+o16vP/2yWeHlPV5//FysD26vP/SHeboD7/L9bOKao+
/y/WLcpieQ+xPiuM6Z5iq98vvJ9RFeV/zaa14rS8K3QdsXuymt9LbCozjPZG
fWeL836LTmx4cle9/4fya+upz/+iP80vMd1XbH8zWH3+F/mHxqr3/5C+v7d6
/w/922pX7/8h3ivv1ft/Yot+NB2I+hIqq/f/UF+FOer9P7HRq5F6/w/jUWWt
ev9PbG7QXb3/h/pcD6j3/xBv2Er1/h/SRxVW7/+h/qiNdATi335Mvf8Hh+jU
+3/o/6KdrC8K6dt+o6PRXkQ95o9Be/oVtAn9PTxMvf+H43XlsHr/D/G36are
/8P4ZU6kzaivdwYdj/ZWqPcLE9C/NmvU+38YrzsPebwsKF9kPX0E7Z2/TCeh
vFs59f4fynf/zHQrylvUz0Myxu+Yev8uBf1dt4pOFdtGnqbTUN/3u3S6WBOx
QL3/h/pKXuX3IRP9c+1C2/B9e+tNZ+HzFt2Vzkb/7Gp6Dlxgj3r/D/kb2NXv
P/ozbLH6/cfxcA9Tv/84XrtC1e+/WdovXI0uKNa1j1CfB0B6q9s8HxURG17N
pl2RXm0wXVxsq+RNu4lNF4/zfFhKrPUpTruL9fVm8/xZFvm/1KM9xGk13/F8
XUFsydqq/h4Z0ueWpiuL3Z+N4/m+KvLPfMnrQXWxtcEaWov+9+1I10J88er7
XnXEYV7q8/J1kX+HmdcrL6Tf+YlugPRlkbweeqM+027ev2ssNk7ZyeunTqzp
OZ/X12YYn67jef1tgfynxvP+XSvkzwzn9dwH9Teaxft3bcXmiCm8/vsi/7dQ
zg86oH/TBnN+oWA87iq8X9cZ5U/X43zED/Wfr875SlfkP+LN+Yw/6o9ry/lP
D7hf++o8X6L/7VI4f+oNP5/I+ZUe+RvO5HysHzzhPp+vD0R/O/7gfG4A0les
5P24INTX6gzng4PhKmX5/mYwHHSB99+GwYEl1L8fgPqueH7H/HQk/EcLPk8f
AidXscFjYGvEesyPQ+H4on/D4+H0P7LgifCFyby/Ngkuoef7umHoz+5yhTuI
p8KNxnJ+Hw4vLsrny2bAm27z+fgIuEJR3h+bjePTU8vn3yPh+GW8/zUPztjG
9YoR5bvpuJ5ZiP6tyuL9sCiM/6p03u9agvwDHvH59mh8Xmo/4fpqOb7/J6qr
74sj/8px9Cp8nnwjuH4zob0PJbj+W4v63k3k+jAWbl2U68n1yL+wiLq+RP2Z
0+hNiG93knq/CeXf6Lme3Yb84yarv9/Mz9teeifijYmh4/F9bNaM6+k9qG/F
Tq63E5D/ZU2u3/cj/h/q/ZZElK93jj6I/DeO0hb0p+4W7gccwvl3wRruFxxB
/2wtuP9wDPEtHK7ub6N+N/X+w0mUL9OZPoXzo4u6n34G9Y1ax/0OK/LfLMH9
k/PIX/YH05PRXsJf9EXEt/sLnYLz7R31932u4HxeoDf3c1IxXkYTfR31JQeq
f68J9RWuT9/C+TR8AZ2O+q414X7SHY7vCfX5eozf1HP0PaQ3HE9nov2hs+iH
yN9gEPe3bIh36mXuhz3B9eJsc/V5XIzPukLc33uO+tZ8V//eAo7nZ/X3eV6h
/5PV9Bye36K5n/gG4/XSyv1KO47fmBTuf74XB82cwP3UXLHn86H0R/Tf10vd
3xd7Ff0f/QX1V+qp7vfj+1ZhGveXvyOet+O5X63ZIfEMuUkXFOu77qBdxK5Z
I+kiYmulXbQrys8L5X55cbEhdDj3393ECTcr8vnzUmJ7k59pd7GlxXvmLysO
DfmD9hD7m/6lKyC9QyzLe4q1DYP4PHxlcXR/9Xn5qmJdfipdHfGNDlH/fgH6
l1iHriVO62ag6yD+t1/pumLbCTOfz/dC/Jve0Q3EpitW2hvx6v3oxuIwjyK0
Tpzk14luJjbOvka3QP+39+X7Aq3EKZdn0j7ijFI16bYYzzLrWd4X/ak+gO4A
34iiFXFegfd0Z4xf5+6szw/t/9yJ7srPx1Xm9xfH7WtL98B49MjjeAXg87Kl
HNN7o38hg2m9WPN9Ad0P47FWTweyvousbwDib+pDB+F4zPzAz8Ng5H/3nQ5G
/sm1mX+Y2LOEagPaC73F/CNxvO3t6RDkv2rh528M6i/Xjw4Ve+0vTY/H5/WI
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
16K9D1Hq78mg/9+f8Hm39ej/8YZcf8chf0QyvQn1d1pLb0F6ywH0NvTn7BPa
LHbfs47r+51i/VB1/zweXhZP70H9i35Vn0/n928YvR++bVR/rwb5G5fmfsNB
9CfjvPr7NTh+b9pyf+IQ8k9vr/6eDY/nJ+Y/hvov/EcniU0rxjL/SRyf85W4
/3EK/f93N30G4zf6LG1F+vlw+jzG402A+jw8+tvBTF9E/X92V5+Ph6s+p6+g
P6srcb8mFccv9G+mX0f/961Un58Xh734k74ltrv0Z/l09K9yPn0H7fn04P5Q
Bj9fFeh74rQBx9Tf20F/Pp2iHyL+8R3U39+B175U9/9R/qNefR4X6QVa0M8x
PnUvqb/Pg/7U20O/Qn+2FlOf10X7O/+g32A8izfhfpgd5f9tRL9H/N/Uv7ea
i/HxmE1/hCecpPPElrMDWf4LxtfnOZ0v1r0vyP2474hnxnama+Ilng5t6YJi
Y8ovtIvYfuMhXURs+DJT/XuxcJ1DdHGxbY26/+cmtn7JZvlSyL/frv59WeRf
voP5y4rDLv6m/j0BsfJ2JfcfK4jNPvdpT5T/dQFdGe21K0FXRXpEJ7o66n/s
x/1NLfIf3sf9z1pi3bnr3B+tA9erzP3Tuhivf24x3Uts+jGcboD29u+jvcWh
H4azfGOx5dfy6t/Hhs076WboXxP1+f8W4oiP6u/btEJ/4vTq39NG/vJT6LbI
n/yG9hVHR67k/nEHsc/d77QiThvtxv3nzhjvDPX9BT/4xkK6K8Z//nb173Xj
8/LOneV7IP+5Ter7Evj8FP6P7i329H6lvj+B/p1dS/cTazf3Vd+nQHvBk+kB
4rgLD9W/By52bW/g/vpg9KfJfjoYx6vdGnoY+qNTf6/IgOP1Mov1jRQnZd+h
Q3B8C76gx6C/dzPVvzcu1ryMpcdjPOs0pCeKU8re4XhNwvjv2EKH4fM3bxw9
FZ8XbS11/x/j1eM0j+cM9P9wf3X/H+X/Lq7u/yP+P++q+//4PGzcqe7/o3+7
flHf/0B95+/y87oQn6cq9egoHI+5V/j9WILv789b6Gix/mNfejnKLz2h/r0I
lO/0gd+/VUg/O5E24fh0bk2vxXg/raz+PQl8niKu8nywHsercAM6DuPfbRbP
H5swHk1L0FvgwAyeb7Yh/+TdtBnfv7s+9E7Uf2U1z6/xGM8DH3h+34P08xvo
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
H+5e3/U/yuBN9A==
       "]]}, {}}, {}, {}, {}, {}}, {{}, {{}, 
     {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.004583333333333334],
       AbsoluteThickness[1.6], PointBox[CompressedData["
1:eJw83XtcTPn/B/BBCCE2hDAIIYQQwkGIbZl1DWEQcs9liQ2DEMK4x7Z2EELL
LCH3+VqXEAYtIQxCaBmElvCbeb9e57f/7OPpc31/zsw5n8/nnDPVHDG596jC
Go2mq5tG4/w//rN3iCkzvXKc7e8O/AclZsnM3INvVLsqwSFXjOnvVbsryrgO
Hc//q9pDUR78t2X+A9WeStTIKZut51V7KQW3uvw0c5dqraK5cPqi73zVtRRT
p1kPfuur2luJ8L5xbWQt1XUVexH/YpVfnaF9lNTeYw922a+6gRKcsm3SuMmq
fRX3uHpp3xqqbqxoh0XenPL0f7SfEj80MLlBguqmir5L0bexOtXNFO2UW62f
FlbdXAk9WWrR6oMW2l9x37Zs650RqlsoaeeCVhUpp7qlosn5dvyP6NN0K8XU
s3axvH9O0QGKfrt+8JTGqlsrpi+T60YvPkm3UXT1X0+LfHCCbqtYq06eva2l
6kDFOPh99WGrjtPtFNsfS8bn5hyj2yv61luKL+usuoNiaj9yx5Q/jtKKogup
NvJ2QSpsUBRDZELjl4NpTUfFMPerNuPEEaZ3VLRFrNZjNWhNJ8V4tPOO0zGH
md5JMT95XUOTe4jpnRW/l6u8N/SjDZ0V48pKbeP/l8L0IMX0PuhqZT/aEKRo
vk8c3XDrQaZ3USIfTbfd9aANXRR738ytzZcfYHpXxX3wmrT2LrShq2L4Iz+0
iOEvpndT/Fp5RSz+ZmZ6N8VcZ0rny/NoTbCiO63beLOImh6sKG+eaTtU2M/0
7orh7OH/BvvsY3p3Re9nv5Wv/Mn0Hoqpe71VZYYlM72Hot0/4/naBXuZ/qNi
uXT6/Jy9e5j+o6LEtx5x+s5upocophIdxvYoTRtCFO2Lp43Ldk1i+k+K5fjj
KwULdzH9J0Wz9NuPhS7sZHpPxbI28niJsrShp6LY0gcUDtvB9F6K/tvMbbf+
TGR6L0XTd+CcKS60RqeYih3oeHLYdljRKbahmbe2n97G/DpFqx18oYw3bXGk
Xy7R53ncVpb/WdGPshkqfjax/M+KzW91k0XjacPPiuX11a4BZ/5g+Z8Vw3yj
T+yhLSzfW7EM/23GZfPvLO/w/tJHbx5MYPneimFW7Lapp35j+d6KZvH9OrOt
m1m+j2LpcXPRiRebWL6PYqh/c6RbSdrQR9HkDboW2DSe5fsoSuD/etcctpHl
+yqG9i5fV6zdwPJ9FUv1RRMGXF3P8n0VpW3NO73L0pa+iuZTZpX+/dexfD/F
UHmGudX2tSzv8Hvz+asf1rB8P8Xi+zDw/U+0xZF+6VzSnL2rWb6/oizIHtSt
DK04/PDs8AYzjCzfX9EsuFKxyPlVLN9fMdSMuarbvZLlByia81HGj+tXsPwA
xTDh+tJ9y+NY3uHywZP9ly1neUf+9wFzu6xexvKhiuavRb+aTEtZ3uGM4n8V
TY1leYfdtLktby9h+VDF8Fub6E9fF7P8QEUz80sjN19acXi+R7e2wxex/EDF
8O3kwpDfY1je4SFZ5UrYFrL8IEWTfGp52/q0Mkgx9Gr9fn/UApZ3+D97cvOr
81nekd+sm72+Pq0ZrGguD522Y5mB5R2eUKzIuMfzWN7h+i0ONjo2l+Uddl/9
sl3CHJYPUzSBcyp3iY1meYdtiTXtc35leYcP3Qt+HT2b5R1u/rTh25hZLD9E
0Vx/+Ffy+iiWd7jIne+39s1keYcHdxvvY53B8g6feTZh8H+/sPxQRTNu0zrf
BrTisBIXPWjEdJZ3+HCbEzu2TmN5h9cU3LM+n8rywxTNr9nBJn9acfj37sF3
l0xheacnvur6KJLlHf7hbBGzQmv0jvGY2vjMj5NhrcNxu5N61pzE+hy+EVV6
e6GJsN7hlIGe+tzxrN/hs4fX1H80DjY53Pd+u50Px7I9h4tlnpz3PAK2OTxj
Y8yI/DFsf7gj/7iTX8vRWoftowOK+I9m+w77bh1Qb+gotu/w6EkFWmM423c4
ofq03RdHsn2HPevoo0vSFocDLu0f0HsE23f47LiYL6bhbH+EoulxxrvBRz3b
d3hP1Ve7fqYVh9N3j5sxehjbd/rk7tAWQ9m+w5aS35eVHcL2HQ5dOW9H3mC2
77Du+JXO2YPYvsMeb7+6PBjI9kc6zk97Zi5/FMr2HU7Ly4x+PYDtO3ziim2+
C613OMjYr2vt/mzf4cypOVE9+rF9h6d/rXp5Vl+277Axvulbcx+273D0lPLb
3vRm++GO/pxssbEFrXVYebY0bsHPbN/hzKxw5ZaO7TscMGXyND/a4HBketXr
NXuxfYethzZdfP0T23c4Z9K2oRdC2L7T7eJq7f2R7Y9yfN8Or927qQfbd1j3
6OTaNd3ZvsM5Gw5GrQ9m+w7nZ2z/srUb23dYCar7vyNd2b7TTSpPudWF7Tvs
Wmf54a9BbN/Z3oMNHRrRmtGKJl7/88nwzmzfYcPCnU+2d2L7Dpvdu4192ZHt
O2wbu6J4AG1wOKfqqNlxCtt32C9/lOZaB7bvsKli54Or27N9hzU1rq3Vt2P7
YxSNfkepRm0D2b7D1uTupWu2ZfsOW17kXijXhu078w/ekOfWmu07bH+wuFH5
ALbv9Iyd5Wq2YvsOG7f+1bl1S7bvsKngfMSgFmw/wnH8ivo2iPFn+w5bSm30
P9yc7TtsHvC4pb0Z23fYlP37k6a0wWHtgqn22U3ZvjO9XMUKl/3YvrP8+rZu
tWibw4b95+p+b8z2xzryL3uScb4R23dY0d/etdmX7Tusn/XdZ3ZDtu/M79I9
O7wB23dY+88f4wbVZ/sOG75o+wzyYfsOW454BITXY/sOa/J8jsysy/bHOdJD
L0xZV4ftO2w4VKX0MW+273SDA01zarN9h5WSwcur0waHte8upIXVYvtONwpN
2FaT7Ts92Ov4Gy3bd9Y34mJWZ1oz3uFyG2e2q8H2nQ5820BTne07rAyb3uea
F9t3pp8c98ueqmzf6bJ/V15dhe07rFkacnVBZbbv9O0NdeZ5sn2HLU9eHFpU
ie1PcKQvr115Q0W277DlxOvc/RXYvjN92ecbNzzYvsOGVmWmfPuB7TvTP9+c
3Iw2Oaw0n/HrpPJs3+kHVYIOlGP7zvzZreZ8dWf7Ex3tNXmc1YvWTnSm92zZ
uyzbd7pUoaflyrB9hw1XRnR84Mb2nX57Kv1wKbbvzO81r/RvJdm+0y4rVy4r
wfad+T+fehDjyvYnOdJTyq5eWpztO2xoU6NdfDG270x/vXGuuSjbd3pr0Q/X
Xdi+00pK54IibN9ZPnhFuSa0xZmene06rjDbl/r1t5MLsf3JDg9/1+iThu2L
zZZgWnFYc6PTik7f26N9p1d5vdd8gw1Ob7vUML0ANjm9fNWh7V9gi9OLb/2w
5DNsczok7+ov/8GaSIeLv5o2OR92dzrVd920T7DW6X09z83/CPs53ee7adMH
WHF6c8dzx/JgndMPa2dkv2d/nR4xclolOtLpfmVCer9j/53+uLzk+rew0ekg
09CHdsbjdKlBn/1os9OFl9X74Q3jc3q25cL1f2Gr0w2Un37PZbxOh6zx/+UV
bHfaNuJ76EvGP8XhNVX9g18wfqf7LxnaKYfxOx31qEy354zfac/Vd/o9Y/xO
RywdMOkp43d686E6xmzG7/Td9OxjTxi/0wtiWr9+zPidnuCWXp82Ot3Y3m3i
I8bvdFzxIak2xu903aWnStIWp9Omd0p7wPidtpaKir3P+J02LV7dL4vxO53/
X4km9xj/VOfx7jzK4y7jdzrD2KjoHcbvdFbR15pMxu902KzmxW8zfqfN01ZW
usX4nU5quL7pP4zf6diop30zGL/Twf7e828yfml/1KdDNxi/04bNRd9fZ/yS
3/CpFW12OmDOrBgr43c6bdls8zXG73TkwQ+jrjJ+6c/9Oz5XGL/kv5iQf5nx
T3Mez98PZ1xi/E5bGieeuMj4nVZ0L/anMX6nk/LK77vA+J328Th0+Dzjdzoq
PfziOcbvtL740adnGb/Ttjs/lqIN0n7G8dZ/M36nI3v+GXmG8Tud9tel/f9j
/E6HHrN8tDB+p+1F2nehrU67r3/e4jTjl/5f9n1zkvGLFx4/dILxT3f6eeml
xxm/05G9UiOOMX6njXVa9z3K+J3WuX7okcr4ndZuGRFyhPFL/mc9Qg8zfnGF
HZMOMX6n/VqeWJnC+J22Ftl25CDjd1rz4FnOAcbvtL3Ov7Vos+Qft37UX4xf
nPNxv5nxS/3rWxSibU4bxu47sI/xS7y7zk35k/H/4jwe+entkxm/09oDNyrt
ZfxOW1bt/7Kb8TutJPZ5lcT4nTZMCHm+i/GL/2v7eifjd9r059hvOxi/tHf7
l0q0QfL/eaF1IuOX/KX8Rm1n/E7rXSM2bWP80r/BxW9tZfzSvw+Lq9BWyV/r
0mgT43daE5M8/Q/GL+78pv4Wxj/D2X6ba7kJjN9pzZ7oE78xfqctI67Eb2b8
kv7ppWET45fysaemxzN+p5WE19M2Mn7xleZzNjB+yW9dbVzP+KX+We771jF+
qf9cTMZaxi/lN58oQpsl/48FbdcwfvGZltGrGb+4ictZI+OX+hJu/EDbxW9W
/LOS8c909id9o3EF43da0/z0wDjGL+lTTjdZzvjFfs3LLWP8kn9GnGYp4xd3
mPptCeMX169VnI6U8ltuV1zM+MWDhzVexPglf5/yvWMYv6TvWzB/IeOX9BbX
UxcwfknfU+XDfMYvfjQjgLaJ3RcvNjB+KX/xwPF5jD/K6Zz+v8xl/OJ9vi3n
MH7x4iYu0YxfPKNc9mzGL67+6vosxi9OjroQxfjFo5v/PZPxi/voLs9g/GJj
kce/MH7x6q+FaZN4VLf60xk/6m/fbxrjF68fHjeV8YtPfr46hfGLb37wpO3i
pv+MjmT8s5w+v376ZMYvzl7YeBLjF1uP/TeB8YvHxV8bz/jF+8olj2P84k7z
145l/GKlxrIIxi/eHLliDOMX38iIH834Uf63PaMYvzh57rlwxi9uc+bFSMYv
Dv5UkbaKS6aFjGD84qjay4czfrF76Rt6xj/b6ehVWtpd7DPo1VDGj/Tb24Yw
fnFewegwxi/uu7zVYMYvTv3sMYjxi01/fQtl/GLF/+0Axi8O25fbn/GLc37N
68f4xenvXGmz2PNR7b6MX6xrHtSH8Yvt+sm9Gb846uaunxk/+rf4mY7x/+q0
Ja4B7S7O/DWvJ+MXp0Um/sT4xTrTkBDGL44sWe9Hxi+OTf3enfGL48MfBDN+
1P/hYjfGL7aGnO/K+MWee853YfzipNBrQYxfnFrzZWfGj/JzS9JWsXFo406M
X+x3ZERHxi92/Xerwvijpf8zr3Vg/GLbz5HtGb/YpKnSjvGLzSG32jJ+sd68
pQ3jF9u9prZm/ChfbkAA4xdb7Uorxi/W/hXYkvGLLUc6tGD8Yo3LT/6MH+0f
O9Kc8aO+MldoK+q73pm2oT8vcmk7+lNnIa2ZI/Fr3Fm/u9i0JJvpWrHdz5fp
fmLNyd60Atecyfw6uFuzZoxfbNCWa8r4xZaVoX6MX6yYnzdi/Ej/7tWA8aM/
aR/qMX7kb3q2LuMX2ww16zB+sf7W77UZP8o32lWL8Yu1XktrMv65kr9VEy3j
FyubBlRn/PCQ816MX6wpsr4K4xdbmk7yZPyw3r0S44eHZ1dk/HC9VrQB9Xmc
oI1iw9FhtAn5386mzXCjNbQF5fvWp63wgsMejB/Oe16e8aP+b4fLMf55El+C
qzvjF2usZlfGLzYUmIswfqT/0KQw44e/Lv7eDvHDb65+hvXw35Py4Ug4Zmce
bIC9Jr2BjXDLgS9hE3y251PYDPt2zYQtcOqANNgKR277G7bB8S8ssB02mM/B
GoPY/Jr5XWH7uzOwO5zUiPk9YaUR29PC2Rvvwz6w+90s2A/ue+ARHAB3nfoY
VuDH1ZkeDEcfonWw203WFwoHnb/D8WX7x2/AEbDm0WyON2wode+kOApu3PUJ
bIBfKjlwLPy0+lvYCKdOeg/Hw9Vu0yb4RHIenAS/6fgBNsMDT9GpsPf/PsEW
+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
fegZjncEjs+1KfQExHNIvf8Sif5NHEFPF2dWHUJHiSPX1qajUX7uCu6fGxDP
isp0DPobUpGOFSvV29Bx6G+oF21EeUMcP2/r4AH3ud8eD9820Ak43n9NpU34
fJwdTSei/Sdl6ST0f8po7s8nYzxqpavP/2O8q82nU1D+6Gg6FeXrtqRPoD9n
jqvP/yP/8nL0WXy+ymzm9zMN8UZModORfn+kuv8vtrWoT2egveJb1fd1UH+2
K52FeEucVH+/DfkrpNLZ6N/9FDoH37cGk+hcfN+GP1Dv/yG/xwg6D8f3Vis6
H5+nlPZ0AdL9GtGa38Xbr/J85SI2dFR/f9dVbP3xAc9/bmL93r/V38sVu1tO
0x4oP2817Yn8/3rRXsg/f5P6/phYF6j+/pM3+vNHW9oH6V71aF/6ofp+mdj+
Tk/7i/2KqL8XFSC2XDtJB6I/H/bSijiyWSwdhPbfNKKDkX7oAK8nIUifPIjW
oT6bP90X8VepQYeKbe8y1Os/0rcXV6//YuVzPc4vwuHxm9X3GeFC/egJKN+n
DB2J+nPncX41HfGuTOJ8LkqsvZXN+WI0yjcdQxuQXq8cHSPWaHao9/9Rf+n/
OB+OQ3+uq/NlI9q7NZvz73UYn3Zf1Pdl0d7MpXQC0v/9ov5+Itrr1JlORH01
Y7h+SEL75odcnyRjvPN0tBnlq57heiYF8eyqQaciffF4rpdOoP/v1PcZLMgf
7k6fRX/HXOd6LQ39uT2fz3Oko3xQU67vrMh/8SnXgxlwvSXq+9pw5aJcX2ah
P1dncf1pQ32vS3F9mg3fv8r1bQ7KZ/zG+1W5KL+zKtfDdsa/h+vnPOQv2ZDr
7Xw4oi/X4wXwsaa8n6XZIo79m79v7AI3b8f1vqtYMyuA+wNucPQd7h+4w2d3
P+fzP/DUBfx9AE9Ys4a/H+wFx3zk/TAtHH/rXz7/D08vxP0QH/jIHf7egS+c
3Iy/b+uH/r525X6LP9J//Mrn9wOQ3imN+zeBSF90jfs7itjyqDj3f4LgT4X5
vH0w/Lgh949C4O8fuL+kEyu5Xbgf1Rf1/xXG/apQtF/EQoeh/KIK3N/SI73B
Me5/hcPBodwvixDr/wvl/toEsan8VjoSHnidno7+7DrJ/bkosS24G/fzouF2
J9X9P7TXfzb3B2PQP7eFdKxY++0fOg79mV+a+41GeJv6PP46lLeV5H5mPOqv
PplOwPj805s2weef0YmIp+po7p8mof5JVbnfmiw23nRXf19LrGv2A52C/EnF
6VTUV/NX+gTi6dCf+78WjFf7Wtw/Pov8P09Vf49LbD0ZQqej/d8G0lb0v2K+
+vy/OLKMTX3+H/mtS7n/nSV2n7BF/f0e+Gk4nS22z9ukPv+PeLaHqc//I159
e/X5f9TvkqLe/xOb+65U7/+hvOtg9fl/sd9N9feTNH9IfQHq70G5iG0b1fsN
rmJ3Za16/09s9emo3v8TayY1pD3E9itH1ft/YuNJ9f0AL7F2aRP1/h/y765O
e6P9PUfV+39iU9Vr6v0/saHX/9//E+u7h6j3/xDPmO3q/T/Ut6QPHSj2G5+v
3v9D/a/aqvf/xJbcz+r9P47HNvX+H9pz+Uu9/4fyk1rQfcXKLLV8KMZHP0q9
/4f6omrw/pxebE5ZSYdjfIv2oyMwXj9fUu//YbzMR9X7f4j3aTvmn476zt1X
7/+hf0ZXPh8dDS9Yw3QD/K8HHYP25zaiYzFevVLpOIx/7YaszyiOvF2aXofx
CZrK/PHozzi1/gTU3yKENmG85l+kE5F+sBDrS4IHbGN6Mto7+ZXxmzGebc7R
KUhf48b8qRifD2PpE+h/z+G0BeW3X2P5s+j/pDZ0GurrX4tOx/FoN4a24vNi
3UBn4Puyphedifi7q5/HLKQPbEDbUP5UXTob+RuG0jk4Pst607nwsNv8/Nrx
/ZpQn85D/8Ou8PuSj3hd1O9PAcbz8ENaY5L+uO2gC4v9thWnXWDrWH6fi4nN
52qp5wexcVsVuqRYqVNEPV/AxX7j+aWM2HbFrv6+nNhSZixdHv253ID2EGuy
3eiKqG+V+ntunvCmILqKODLvD/V+I9yqAV1dbLj9XL3/iPqH/EnXEmtb91Dv
R6L+2Qd5fq+L/p+uRvtgfKLMvJ40QDxLh9G+qO9xcbqxWDdoBa9HfqhviJ3X
t2Zob7yN9xP9xfp0Dd1SbPJpyetjAPq/bgDvL7ZB+YU6Xk8DUf5xIO8ntkf+
2wG8Xivo7/OOvJ53Qv3de/L+YRDSp/fj9b8r6p8SyvlDMOqvGsb5RQ/E66vj
/cIQpBcJ4HykJ8b/ZF3OV3ToT6fGnO/0RvrR33h/sC/a++Mgn0/qj/yu4/h8
fig/P//x974GIf/Fs5yfhSH/CfX3vYYi/70FvP+nR7p+Aed/I+CfX3C+GM7x
OsT55Gj0z3+t+nwW0gf9zvdLx8EhbzhfnQBv/ML7eZNgcz7nv5Fw3yX8fa2p
8OYynE9Ph5fV4/NlM+CELR/gKDjsNp9Hm43+Pczi+8LRSK/5O59nmwv7l1V/
/wr5YzZz/bAAbujB9UUM8o9+z/XIYqR/e8H1SyzSm97l+mYZfCeG6584jHex
7lwfreT4R3L9ZET+xcv4/vgaHu/aXK+tg6PS6Q34PHV5TsejvvljuN7bDFff
z/VhAvr7Wl1fbsHnM2qMev8J9e1Nobfh8z9WdSLq2xXB9e1OfF+73+P6Nwn1
XRnM9fMe+E59rr+T0f71GvQ+pD9tSJtR/+pqXL8fQH8uqPc3UhD/7jzuDxxG
/uaD1d8TQn82/EAfQ/lGP9EncH7uFMj9iFM4vw7/TltwPmo4h/sdZ8TWpNn0
WbT3LoQ+j/q+LKXT0L91/tx/uYT8l5/S6Tj/jmvC/ZuraG/4N/XvG6C+i1n0
DcTzRd3/yUB/Hr2mbyG931z1+XqM5/sV9F3Uf0OhszD+bqH0A/Q3V92ft+F4
r/+T+2GP4UGVuV+Xjc/nxH/pZ+jPWDudg/Y7bKJfiu3uGu4H5sKHlnN/8TXa
t/7N/Uw7rh8TL3P/9B3G7+h97q/m4XiuvUR/RPk2EXQ+0jX59Gdx6qJ76n4/
+tfIhfvV38Q+Db7Smq3Sv8ajuf9dWJxZuw3tIrZlfWf+YuII385MdxVr9qj7
+yXFui7q7/W7iV0tJ+kyYp9KubQ72ru9hS4v1m8dTnvAZ9T0iuLQG935fLyn
WJurPk9fRRwVvZL2Els06t8vqC72XOOt/v0C9C/9OeurhfIf6zDdW5yU9Tdd
V2y9oP69BB/Ec/8k3UAcP3EV7Ss26yvQjcWRQ+6o7y+IA+ZVZHoz9Hdiovo+
A8a7WQO+b9BSrBTprb7fgPKFvjJ/G+Q/Mo0OFBvatqDbYzw9RqnvP4jzW9yk
O4lz+jdk/UFi917edFeM/4T96vsRGM8nNegeOP5tHzC+ELEp4z+6J473NoX5
dYi3RwTdm/G2Ut+ngGP/ZPn+GN+vNehQcWzgfR6/QRjfcs/oMIzPjhLMPxTj
F+uqvn8hNh46wvwjxGlLaqvvYyB/3AZ+/kZjvEa0oiPw+a+Tx8//OHHqgkR6
AsZrWkN6EsoP2qj+fQp8/7qWpqfi8/ViDb9v01G+ZA16BvrjvYP3i6JwPHNq
0LPR/62b1Ps9+PztrkbPRf76/dX7P/COX3j+WYDve7s43n+JwfHM2MTz1WKx
X90DvJ8Si/4OeMTz2zK0F1GDjsPnLziM58OVKF9tBc+XRrR3Vr3/sQaftx65
PB+vQ/0769Eb0J8XY3j+jsfx67KH5/fNqD9GvV4k4PPXugW9BfW9m8zrjQnp
g7bwerYN6WFW9X402itcid6J883Cl+rv/cEPt/B6vQfxWMvzep6Mz8eu4Zwf
7MPn/cVVzh/M8IYVnF8cQH36JZx/pKC++n04fzmM9NZXOL9JRfmjfpz/HMPx
vH+D+9kn8HnRpHJ+dYrft5Lc37bg+Jz7k88vnYFn7+Z87iw8y8z96fOob9ts
zgfTkL66GvenL6H+V+v5+zjpiL9BPTde/5Hf+z/OT61I/3Ux95tvwJMm8Pdq
MuB5x/h+6S24dwD3nzPhgu4Z8F048dN9Pm8Hz8nh/PsB3LQ837ew0bf5/uxj
uNsYzuez4YOn+HzfM/T/7BGuD3KQXrQj38d4ifgNZbieyEX+hHP0a3jkF64/
7Mi/3oPPL77D+OYncT85D/VfNnP/+CPKX9xH5yP9cSLXQ5/Z3wbcTy6Af6nI
9dU3fD72enD9pdkm9UUE0IXFpop1aBexLesmXUysbR2g/l60WH8rnuu/kmLl
fhuuD93ElrKl6TLIf8ONdhdrFryhy6P9IwO5/vRA/g2zuD6tCF87THuiPxnD
6Crw+/W0F+q/u5vr3eqI95sL18datHf9H7oW+v/zKdobLhZJ10V9Hu9oH8SX
04Lr8Qbw/iiu133hGx/pxmJbuz9oP9RXfg7dDOlFenI/wF+smzKA+wUtkX7t
IR2A+hu8oduI7Sf304Fia52TdHvEM7ST+vwz6juSS3dC/sfq79kEiSMH1aO7
Iv/WZ+rvtYuN+39geg+x9s4OOgTln7fgfkpP5P8QRusQf8Mf6N6oP/sJy/dF
f3waM72/2PD2NB0qNo+vz/2dQWL3LlXoMIzf4JPMPxT96b+X1qO9KqWZfwTq
P76GDkd/21ylRyP/2FXq7zOg/7H+9DixZU0negLaSzTTk8T2OC/17xOI/Wze
9FSx6dEZ5p+O/g+bTc9Afc2301Gor0sZlp8NG/vQ0fBDH3ou/M9hljegv5ZY
eoFYiVXbjxFbg9T+Lha772pOx2I8fB8w/zLUHxJJxyF9xBB6Jfrf8HfaiPZa
3aPXwL5n6XViY676/sAGlJ/4lccvHu1d92L6ZqTr1eOXgPY9C7G/W8Smz2XV
v98g1rRIZv5tYr+nHelE5C/cj94p1s1/SCdh/LrMY3170N+//6aTOZ6/0vvE
+gkFLG9Gf4+o43cA/bkXyPwp8IyL9GG0f6OS+vdExNqIbKYfE5urqPeLTqA/
XUvRpxDPvTq0BeUnq/07I3b/9wB9Vmzdupg+j/Hx0dBpyJ+/gv2/hPpq/kKn
I/4S6vG+ivH63yn171sgvp/UvxdzA/HdrkxnoHy59Tzet8S2NQPV+2tof9YI
+i7idZ2pvm+H+r0G0A8wPkufq38/B945iH6M+i4VprMxXkPV8+MzxNfoNZ0D
j7xGv0R/V06kc+FTj3j+fS3WB0+j7WKrWxv6Hfq7vxqdh/E6/JTXg4/ozzk/
Oh9e5sPrx2f0Z7Yfr0cF8J5Z3B/+hv40fMvrl2a7jGfEKLowrNnN/WIXsea3
Q7x+FhNrT53k9dUVnveQ1+uSYsu7irQbyi/rw/3jMmJ9yxj1+i82bdjO+UN5
lO9g4fzCQ2w4cJ/7xxXRXsonzkc8Wb4cXQX1l23G+Y4Xym87yf3k6nDJJpwf
acWKPo7342sh/dcUzq+80Z/2Fu4v10X+gsfcX/ZB+spu3F9uAE/5l/M7X8Qf
N5/PEzSGW4zifNEPvtWC88lmcNGa/P0Xf3jrVf4+YUu4+Bj+/dkAuIsf3y9p
AxeawvlsIBwYwucr2sPeQ7j/rMD6S8cwf+4ERz3j35cOgicM4u/BdIXHZfP3
YILhUy34fEgP+IfCfD8kBDaV4Xy/J1xxFH/vRYfxrruJz6f0Zn8vcL+6L9Jn
3eX+dH+4Sj73p0Mx3sbmfP9jEBwYzfVKGByWQw/F8Wu9kfvXerTXbxDXOyOQ
v+4T7leHo729Pfn8z2jkH3qe66cIpD/Rcn01DuUXjKEnIL3raK7HJuH71WyL
+v4GPs9zcrh+m4rPc9G/1d9zQfr6j/QM1D88V/19F3zeh4/m81Kz4WqLuF6M
Rn0B97menIv2h9/letOA/GNqcT26APGFf2J6DMr3acb0xSi/pb76fBjGc2oM
17fLkN5hO/e341C+UCmuh1ci/09WphsR355L9Brk/xjH/OvgHVlcX29A/Ksq
cX87HvWF7qQ3I57ESXQCP6+N6C2or5hZ/f0ZsbH6NK7vt4l1EVW4H5CI+irM
pHfy+zCKThK711SfF9yD+tv9SCej/Pkb9D5xZOJc7j+Y8flIsNMHxOaeqlPg
sbvpwxiv1tvV37dBezZ37m8cQ//qHadPiO1x6n74KdR3sj9tQf8flaLPoPyl
x+rz8LCmKdPPI//BG+rz8WLraXU/5hLiUTbS6Yi/aB/6Ko7foFK0FfmvtaBv
IP8fF+gMtP9lNPd/bqG9kWY6E+P5+lf6LuKbWE39vW3kv1yTfoD0Cwnq72/g
+JdTuP/0GMf/61b1eVzU3yKGfob+DqmsPp+L+k99Yn0vMT4v+qnP68KBH+nX
OH4LJ3L/y476M8bR75Ae/J3589Dfgcfoj/h+Zar15aM/GnU/7TOO9yP19/0L
8P1o3oT+hvF3ucr8mkQZb//xdGGxYeUC2kWsBBdn+WJi+95N6t+LFUdusNIl
xZasBbSb2JbiRpcRG2v+QLujvQ0n6PJiXcMT6t8TQH1N13O/saJYe/cB7Yn2
LUvoKoineAXaS+y+I5iuLnZc57ifqUV8XTZxv7MW8tc7yP1Qb7HV6MH90rqo
v/NhpvugfMdudAP0x30l7Yv6mm1m+cbi4EbR3I/1E0fVc+H+bTOxqV992l/s
2e0N87fEeFQ9RAeIUzdl0G3Erp49WT4Q9cc8p9sjnsb9uJ+sIH/sCLoT+pdR
hQ5CvD89YPmuOF6xn+lgHI/0CObvAf/5Wn1fQhywO4j72z2RfihQ/fveGJ/j
OczfG+M3dA/dF/G7pdH9xRF2f5YPRfkxB+lB6H/ZAjpMHJqRTQ/F53f/Elov
jj3agR6B+kc0p8PFOQPU/o/G5/l4W/XvjaO9bx/Zv3EY3x9X0xNQ/+cO9CSM
9yP197Iikf+/OxzPqfh8VthATxfnl29BzxCn9bmuvt+B8XJdRs9Geo9B6v4/
+jdf/fvTc8V+FY+p+/8of/Wtuv+P8bGrn+cYpAe+5fdjMT6fkWl0LI7npYX0
Mnx/97xV/14E6itoTq9E+p9/8ftoRHm7+v7GGqTXH6/+PQn011CT3oDPX9nF
PD/EI33YPZ4/NuP7cWUanYDzzYtu9Bbkz6lKm9DeqkM8321DfJrydCJ8eA7P
tzvR35r11L/3Ijb3/sDz/x58HssfoJMxfsdb0vtwvmgbz+ubGfEsrU4fQHv7
s3h9TcHnbdE++jC+j3eH06no/6eH6vUf9a3prV7/Mf5jP3G+cArjUzRdff8N
8dROpM+gPUNv+izSTdfV+/+Ib/xg9f4/xvNKZfoSXPAf51Pp6J/vVfoqxuOI
Ot+yoj3dW87HbiD+9U3oDKT7n+f9lltInzKPzkR6iBt9F/2N7cL5Yhby1xjF
+eQD5F95hvNNG75vYUPpx/CnQur7uMj/4zTOb5+hvjZJnP/mIL3NU86PX+L4
TBtC5+J4N/rG+fRr1P95HW2HC3/m/Pwdyme1pvNQPkj9+2Uf0d6cWnQ+8i85
x/n/Z9TXsA9dgPJjU7he+Ib8QcVozQ7JnzOD64/CYu354rSLWIlW1yvFxJZm
1WlXsf6ZgeubkmLDmDSuf9xg219cL5VBe4MPcj3ljvr9D/B5oPJIr7WZ96M8
kH55KtdjFZF+OITPF3kivamW67cqSD9m5/rOC+3b07j+q478//7F9aIWjtzF
+1m1YPtc3s/yRn3uvlxv1kV9ZRLV3ydA+s1APk/VAI7qyvcvfGH9YP6eaWOU
n3GL71/4IT3pBt+/aIb0B894P8wf6SU7fsX6uiWc90X9e4rw8Eq8P9YGXtSZ
98cC4ZYPHsPtYePay7ACa6r9jv2ATnBEs4twED8fEfx7kV3hl8W5nxAMVy3B
9zV6wNNP8e8xhMA/JnN/oif8cD1/v1YH9+vD/Y3eiH9DGPc/+sJtgrk/0p/j
d5R/bzMU5f+3ne9zDMLn83xJ3m8LQ/4Dp7n/MhTp0wtzv0aP9Io53M8ZgeOf
don348KRv2JJ7v+MRrp7Ed6fi0B65Yq8/zaOn985fF5xArzXh/tPk9BekomO
hHvdoKeKbYsrcP9qOtor+SP3t2bg+9l1rvp+B8rH1eJ+2Wy0t7A+HY3+/a8f
PRf5B7blfpsB6TdWcz9uAdq3/am+D4L8GWW5n7cYvmVX3w+B44OZvkxsKhbB
/cE4pM9J5/7hSjg0lfuLRvS3yjV6DdK/7qDXob7zrbk/uQH9rbtM/Xu8OP/E
PeF+52bU93EJ90MT4G0D6C2wbxfahPqvqO+XbBPbT3Th/mui2Jr1gN6J9p66
cH83Cf35+ybT94gj9z+hk1FfwiTm3yc2n1f//rsZ8Rq30geQPyyeThEb1w2j
D4t1+UY6Fe397s/97WPo75Js+gTiG9GE++mncHwDvzDdIna/oP7+0hnEc6YW
859F/ts36fNw97Hq/j/KX1bvf1xC+fRGdDriMVahryK93SraivTRHXg/4wbq
n51MZ+DzPnYFfQvj0aIpnYn4P6jl7yL+gMt0FnxtHJ8/f4Dx/5ao/v10jH9m
f/oxPh+nXehspJdtST9D/z9donMQ/8cefN79JfrzKET9vS60t+YB879G/xfs
UH+/C/nN7+l3Yr9GC1k+D+153qY/Ip78rXQ+6qvkQ3/G+SKxDF0A15lMf8N4
F3tJa3Y6rTteQn3+X2yqs1P9eyBiv2P+6vP/YuVya/X5f3Fk1T/U5//F+tL5
6vP/qL/cI7qM2HZTfb/IHfXPVt8XKC+25NZQ3ydC+h+/0hVRf26S+n4R0v2H
0VXE9tY3OJ5eaG/Tarq62BxyjNYivdZ3uhb6W0H9PUNv+ONSui7yN1U/Hz5o
P/IeP28NkH9hEab7oj+d69GNxVpbHvP7IX+xcXQzsSHkI78f/hiPfvfpluh/
WD4dIDa2/EC3EWuabaYDxe5dXen2YuuGJH6fFRy/+HV0J3hlPB2E8c6eSHdF
+39/4PkiGOnPx9E90P7GKnQI2hurUe//I7+/ev9Nh/Hcs4nujXjfllfv/+Pz
aF3P82d/1PdzCB2K/m6uRQ9CvK9e8vwbhvpNC+mh+Pya83m+16O/rSrRI3B8
Qufy+hCO/nz9zuvLaByfj4PoCPhuJK9H41Bf0Wm8Xk1A+z1/5/VsEtIH/Mvr
YSTi8+5IT0V9E2aov+cGH13K6+sMlF/4B6+/Uai/61lev2djfD+9Vd/3hBdV
p+cinn87cz5gQH2bx3A+sQD5ty7mfCMG47ViPecji1G+oC1/DzYW/hjO+2nL
YOsp3k+Lgw3NOD9aifp2D+f8yYj4RrXjfGsN0me7c362Dq7oz/tpG2Cvs5zf
xaP/hh2c/22GB24ryes/6u+Vxue3tvD4NOH9MxN8ez3nq9vgqZ84n02E15bg
31PYCXtGPoST4ICR5zGf3gOHmPj+RjI8pjP/XsI+eFse/z66Ge6V/AU+gP6G
e3A9kAI/2sX7Y4eR/9affJ4uFX6h/n7xMYzPLS8+f3cC479cfT7vFPLfK871
kAVucY5//+AMym8dyPXVWbR/7BZ9Hn54neuxNHhhS67nLuH7M9yH68F0fD7D
R3O9eBWfr3vPaCv863f6BvpbaQfXnxmof4gr17O30L9/NnL9m4n81TZzvXwX
7Y+/SGeh/Yl36Qdor/YRrr9tcJjC9fxjtFf6CNf72SjfbzT3A55hvFr/pP4+
F/qzeib9Ev0pYeR+Qy6+3+0acn/iNdr7MJ77G3bkjz5Kv4NvT6XzUD7tGv0R
57eMlerfc0b7nqHcf/mM9IfX6ALEk3uW/ob2//md1uyS8gNy6cJiv9Qd6t8D
FUduGMz9pGJiax8T7So2DBpPlxQbA/vQbmJ7mzN0GdR/Zr76+yEor6vA/a/y
KH++Ju0hNg+8yfwV4Rb/19O5x0R1RGEcFA1BJRTRWkJwQylBgoiCyOKCKC3R
1RBEXIFQRAW6JRWRoKISgoi4ETWilFokur5wbUWRIBZfQapbImSlTZNSJGRj
fABRfG8IGjSZ7zv++cvMnDlzZu6dme/eO/c/OV9EsVP0Oub3VmzWzKDe5qNY
c7KY7Iv6fk4ia9CeNx9Z3g/ljd8w3R/+zGojB6D+kQzqf4FoT2clOUixPXU+
ORjpb+X89xDFiY2N5FD43xpGPXIe4jXBjXpnOOwd2EP9NEJx26qvqbdGwv8E
O9OjYL+6iqyDv8vlvJ0YxMPrKvXfWMVGWyr15SXwN+iS6P+ozymXene84qJj
G8lLFY+Mn03WI3+1nrxCceaZHtH/FVv27+L78Inwb3cvOUlx4OoWcrLijtRs
sgH9U6Elp8D+7TByGvzxnktOV9zzq3yfkoH6OptF/0d8vVJE/0c8tDNF/8d4
sbuI/q/46DZ5XmFEe5rPi/6PdLdvRf9XPJA6wPjmwX9HJzkf/jXI85UCxL9k
UPR/xPPNNdH/MV6KVsn7/+hvzZjo/7iez8vzomLFpgfuzF+i2LXUl1yq2GPu
c+YvQ/sflpPLcf03hpIr4O90T7IJ48niQd6H/tC+l/Oi4E/2JvJB5K+p4/OF
Q7i+LC84Pg+j/GMTuRrxCF5MrkF/Levl+D6K9MIQci36q+F7+d806mto4vOC
44hfrI5sRnltD6+/U0hvW0M+g+sx5zSfB9Sjfq38r90Czoki/wYe/6fo/2j/
c4Po/0jf3C36P+L7QiP6P8ZHu1H0f/h/qIv3zxa0z3k5+Q+M5+9svF9fQ3t8
Fsn/bhDP/3/h/f0WxlPdsHz/B3/WJJDbUd/EHznf3GH5BZy/rEgPd6a+3gF/
M//i/HcP9mv2c/7sQjz3LuD8akM8LnRx/u2GPat8j/kP8p/z5/z+L9jt8/yP
9n9h5/qgBzxuC9cPvah/ynXqz33gy6Iv96P+rmiuX+zg31dSP36I/Gc11I8f
gd/7Uh9+An+sq6n/DqD+UXfqu0NIX3iA5+E+A4dl8X2oYfCmlfy+4SV41DEE
fs3x96wZ68u34KAh/r/LAXbc5/cLI+DAuzxPeBT+RNdyffsBbCvj/2rH0F7D
bK6fnSwq3aDn+TbjFLftfMz1tws4oZP66ETwwUrqoa6KnbZ4cX3vBnu5cdQ/
J4NvxnF/4K44ttxK9oC9E6+of3oqzqxdxv2Gl2L79kHydOS3fSnv/yF9Q6i8
/wd/xprIPuAC+T+FL+zvkP/VauDfvUGyn2Lz38Nkf8Wa5N3cLwXAnruB+6lA
1L+rgxwEewX15GD42y3vN4bAnjWG+7VQlK+bxP3cPNg/tZ4cDn8iA8gRyJ/n
R46E/bAr5CjkL87iflGH+ryPkGOQ3rqIHAt/zTHkJbCXdl++/4c/7T9wPxqP
/pu6mbwU+ftdyXr2v5wPtAJ85QQ5AfaO+HO/m4j+cJlMTkL7CuT7jWTUV28m
G2Avbw7zp4DX1pHTwNpscjrsOQZZPgPpzh/JmfD/ron518O/vj5yFuKVUknO
QTxPepKNKD8/nJwL+/mtcl477E17R84DvxN7+bCn/0r2/2xPPLkQ9TfdIW9F
esdTchHqL/yJvAP2N04gF8N+g45cgnj2N5JLkb/sBrkM9qoiyOVIn3GZ8apA
PB/oyCbkbzkn+j/qSx+R86LAF+MCbn0CA39SyQ==
       "]]}, {}}, {}, {}, {}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{0, 3142.}, {-8.144742880134004*^-9, 0.1552901386531752}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.766028044230539*^9, 3.7660280768562126`*^9}, 
   3.766034696707825*^9, 3.766034765676282*^9, 3.766034899949999*^9, 
   3.766035183355589*^9, 3.7660352499867487`*^9, 3.7660354850642505`*^9, 
   3.766035737935882*^9, 3.766043341129266*^9, 3.766044791945478*^9, 
   3.766044849695158*^9, 3.76604569764891*^9, 3.766050710372281*^9, 
   3.7660525419142656`*^9, 3.766053422620103*^9, 3.7660545406152525`*^9, {
   3.7660582157117643`*^9, 3.766058227824433*^9}, 3.766058329393216*^9, 
   3.7660587567762923`*^9, 3.7660599979779177`*^9, 3.7660607909994817`*^9, 
   3.766060920507357*^9, 3.766060974226225*^9, 3.7660610337291903`*^9, 
   3.766061136307135*^9, 3.7660612282652493`*^9, 3.7660612980853834`*^9, 
   3.7661052838389177`*^9, 3.7661512605425477`*^9, 3.766156750006694*^9, 
   3.766215097872286*^9, 3.766268117546953*^9, 
   3.7662917546522894`*^9},ExpressionUUID->"8891ff8b-58b0-445e-9d28-\
a3df03ac250e"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Manipulate", "[", 
  RowBox[{
   RowBox[{"Show", "[", 
    RowBox[{
     RowBox[{"plotsrspm", "[", 
      RowBox[{"Inner", "[", 
       RowBox[{"Rule", ",", " ", "q", ",", " ", 
        RowBox[{"qecdat", "[", 
         RowBox[{"[", "i", "]"}], "]"}], ",", " ", "List"}], "]"}], "]"}], 
     ",", " ", 
     RowBox[{"ListPointPlot3D", "[", 
      RowBox[{
       RowBox[{"xcontroldat", "[", 
        RowBox[{"[", 
         RowBox[{"1", ";;", "i"}], "]"}], "]"}], ",", " ", 
       RowBox[{"PlotStyle", "\[Rule]", "Red"}]}], "]"}]}], "]"}], ",", " ", 
   RowBox[{"{", 
    RowBox[{"i", ",", " ", "1", ",", " ", 
     RowBox[{"Length", "[", "xcontroldat", "]"}], ",", " ", "1"}], "}"}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.766061140517271*^9, 
  3.7660611411293287`*^9}},ExpressionUUID->"93f61067-4321-4b3f-b7c5-\
0a5f25b42d90"],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`i$$ = 1, Typeset`show$$ = True, 
    Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{
      Hold[$CellContext`i$$], 1, 3142, 1}}, Typeset`size$$ = {
    360., {177., 183.}}, Typeset`update$$ = 0, Typeset`initDone$$, 
    Typeset`skipInitDone$$ = True, $CellContext`i$65001$$ = 0}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, "Variables" :> {$CellContext`i$$ = 1}, 
      "ControllerVariables" :> {
        Hold[$CellContext`i$$, $CellContext`i$65001$$, 0]}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> Show[
        $CellContext`plotsrspm[
         Inner[Rule, $CellContext`q, 
          Part[$CellContext`qecdat, $CellContext`i$$], List]], 
        ListPointPlot3D[
         Part[$CellContext`xcontroldat, 
          Span[1, $CellContext`i$$]], PlotStyle -> Red]], 
      "Specifications" :> {{$CellContext`i$$, 1, 3142, 1}}, "Options" :> {}, 
      "DefaultOptions" :> {}],
     ImageSizeCache->{411., {224., 230.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{3.7660355118637543`*^9, 3.7660433413741045`*^9, 
  3.766050710403535*^9, 3.7660545407155123`*^9, 3.766058232157397*^9, 
  3.7660583309520807`*^9, 3.766060795126086*^9, 3.766060922309141*^9, 
  3.766060976163658*^9, 3.7660610349771805`*^9, 3.76606114158819*^9, 
  3.7660612297299967`*^9, 3.7660613000394793`*^9, 3.766151260669496*^9, 
  3.766156750044693*^9, 3.766215097941246*^9, 3.7662681176029205`*^9, 
  3.7662719504990506`*^9, 
  3.766291754699249*^9},ExpressionUUID->"a7ebcb19-fd92-423f-adb3-\
8b8f51c126cb"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"qecdat", "//", "Dimensions"}]], "Input",
 CellChangeTimes->{{3.7662682696283484`*^9, 
  3.7662682704158955`*^9}},ExpressionUUID->"bcf030b0-0c8e-40d0-a5e9-\
b9d3cb9fe280"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"3142", ",", "24"}], "}"}]], "Output",
 CellChangeTimes->{3.766268270796688*^9, 3.7662719841004024`*^9, 
  3.76629175492412*^9},ExpressionUUID->"734de298-069e-4e89-8965-78e47cb1d48d"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{
   RowBox[{"frames", " ", "=", " ", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"Export", "[", 
       RowBox[{
        RowBox[{"\"\<liss\>\"", "<>", 
         RowBox[{"ToString", "[", 
          RowBox[{"j", "/", "10"}], "]"}], "<>", "\"\<.jpeg\>\""}], ",", " ", 
        RowBox[{"Show", "[", 
         RowBox[{
          RowBox[{"plotsrspm", "[", 
           RowBox[{"Inner", "[", 
            RowBox[{"Rule", ",", " ", "q", ",", " ", 
             RowBox[{"qecdat", "[", 
              RowBox[{"[", "i", "]"}], "]"}], ",", " ", "List"}], "]"}], 
           "]"}], ",", " ", 
          RowBox[{"ListPointPlot3D", "[", 
           RowBox[{
            RowBox[{"xcontroldat", "[", 
             RowBox[{"[", 
              RowBox[{"1", ";;", "i"}], "]"}], "]"}], ",", " ", 
            RowBox[{"PlotStyle", "\[Rule]", "Red"}]}], "]"}]}], "]"}]}], 
       "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"j", ",", " ", "10", ",", " ", "3142", ",", " ", "10"}], 
       "}"}]}], "]"}]}], ";"}], "*)"}]], "Input",
 CellChangeTimes->{{3.7662353770763025`*^9, 3.7662353926853666`*^9}, {
  3.766235708021014*^9, 3.76623571862794*^9}, {3.7662358193216944`*^9, 
  3.766235825355238*^9}, {3.766235897094021*^9, 3.7662358972029552`*^9}, {
  3.7662360595153217`*^9, 3.7662360631382465`*^9}, {3.7662360936497765`*^9, 
  3.7662361103542123`*^9}, {3.76623641565493*^9, 3.766236452599745*^9}, {
  3.766236705365884*^9, 3.7662367060484915`*^9}, {3.766238272875763*^9, 
  3.766238273612338*^9}, {3.766238321199094*^9, 3.766238343703231*^9}, {
  3.76623840400272*^9, 3.766238404138639*^9}, {3.7662682560491304`*^9, 
  3.7662683026914325`*^9}, {3.766268359099123*^9, 3.7662683903882093`*^9}, {
  3.7662719797138996`*^9, 
  3.766272004890482*^9}},ExpressionUUID->"fa4a2d98-2024-489e-87aa-\
9041e072cc71"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{"Table", "[", 
   RowBox[{"t", ",", " ", 
    RowBox[{"{", 
     RowBox[{"t", ",", " ", "10", ",", " ", "3142", ",", " ", "10"}], "}"}]}],
    "]"}], "*)"}]], "Input",
 CellChangeTimes->{{3.766268304780222*^9, 3.766268317133159*^9}, {
  3.7662683528677115`*^9, 3.7662683531055703`*^9}, {3.7662719901359277`*^9, 
  3.766271991243294*^9}},ExpressionUUID->"8f339b48-fd2e-4e01-9295-\
78ddeae9cc8d"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "10", ",", "20", ",", "30", ",", "40", ",", "50", ",", "60", ",", "70", ",",
    "80", ",", "90", ",", "100", ",", "110", ",", "120", ",", "130", ",", 
   "140", ",", "150", ",", "160", ",", "170", ",", "180", ",", "190", ",", 
   "200", ",", "210", ",", "220", ",", "230", ",", "240", ",", "250", ",", 
   "260", ",", "270", ",", "280", ",", "290", ",", "300", ",", "310", ",", 
   "320", ",", "330", ",", "340", ",", "350", ",", "360", ",", "370", ",", 
   "380", ",", "390", ",", "400", ",", "410", ",", "420", ",", "430", ",", 
   "440", ",", "450", ",", "460", ",", "470", ",", "480", ",", "490", ",", 
   "500", ",", "510", ",", "520", ",", "530", ",", "540", ",", "550", ",", 
   "560", ",", "570", ",", "580", ",", "590", ",", "600", ",", "610", ",", 
   "620", ",", "630", ",", "640", ",", "650", ",", "660", ",", "670", ",", 
   "680", ",", "690", ",", "700", ",", "710", ",", "720", ",", "730", ",", 
   "740", ",", "750", ",", "760", ",", "770", ",", "780", ",", "790", ",", 
   "800", ",", "810", ",", "820", ",", "830", ",", "840", ",", "850", ",", 
   "860", ",", "870", ",", "880", ",", "890", ",", "900", ",", "910", ",", 
   "920", ",", "930", ",", "940", ",", "950", ",", "960", ",", "970", ",", 
   "980", ",", "990", ",", "1000", ",", "1010", ",", "1020", ",", "1030", ",",
    "1040", ",", "1050", ",", "1060", ",", "1070", ",", "1080", ",", "1090", 
   ",", "1100", ",", "1110", ",", "1120", ",", "1130", ",", "1140", ",", 
   "1150", ",", "1160", ",", "1170", ",", "1180", ",", "1190", ",", "1200", 
   ",", "1210", ",", "1220", ",", "1230", ",", "1240", ",", "1250", ",", 
   "1260", ",", "1270", ",", "1280", ",", "1290", ",", "1300", ",", "1310", 
   ",", "1320", ",", "1330", ",", "1340", ",", "1350", ",", "1360", ",", 
   "1370", ",", "1380", ",", "1390", ",", "1400", ",", "1410", ",", "1420", 
   ",", "1430", ",", "1440", ",", "1450", ",", "1460", ",", "1470", ",", 
   "1480", ",", "1490", ",", "1500", ",", "1510", ",", "1520", ",", "1530", 
   ",", "1540", ",", "1550", ",", "1560", ",", "1570", ",", "1580", ",", 
   "1590", ",", "1600", ",", "1610", ",", "1620", ",", "1630", ",", "1640", 
   ",", "1650", ",", "1660", ",", "1670", ",", "1680", ",", "1690", ",", 
   "1700", ",", "1710", ",", "1720", ",", "1730", ",", "1740", ",", "1750", 
   ",", "1760", ",", "1770", ",", "1780", ",", "1790", ",", "1800", ",", 
   "1810", ",", "1820", ",", "1830", ",", "1840", ",", "1850", ",", "1860", 
   ",", "1870", ",", "1880", ",", "1890", ",", "1900", ",", "1910", ",", 
   "1920", ",", "1930", ",", "1940", ",", "1950", ",", "1960", ",", "1970", 
   ",", "1980", ",", "1990", ",", "2000", ",", "2010", ",", "2020", ",", 
   "2030", ",", "2040", ",", "2050", ",", "2060", ",", "2070", ",", "2080", 
   ",", "2090", ",", "2100", ",", "2110", ",", "2120", ",", "2130", ",", 
   "2140", ",", "2150", ",", "2160", ",", "2170", ",", "2180", ",", "2190", 
   ",", "2200", ",", "2210", ",", "2220", ",", "2230", ",", "2240", ",", 
   "2250", ",", "2260", ",", "2270", ",", "2280", ",", "2290", ",", "2300", 
   ",", "2310", ",", "2320", ",", "2330", ",", "2340", ",", "2350", ",", 
   "2360", ",", "2370", ",", "2380", ",", "2390", ",", "2400", ",", "2410", 
   ",", "2420", ",", "2430", ",", "2440", ",", "2450", ",", "2460", ",", 
   "2470", ",", "2480", ",", "2490", ",", "2500", ",", "2510", ",", "2520", 
   ",", "2530", ",", "2540", ",", "2550", ",", "2560", ",", "2570", ",", 
   "2580", ",", "2590", ",", "2600", ",", "2610", ",", "2620", ",", "2630", 
   ",", "2640", ",", "2650", ",", "2660", ",", "2670", ",", "2680", ",", 
   "2690", ",", "2700", ",", "2710", ",", "2720", ",", "2730", ",", "2740", 
   ",", "2750", ",", "2760", ",", "2770", ",", "2780", ",", "2790", ",", 
   "2800", ",", "2810", ",", "2820", ",", "2830", ",", "2840", ",", "2850", 
   ",", "2860", ",", "2870", ",", "2880", ",", "2890", ",", "2900", ",", 
   "2910", ",", "2920", ",", "2930", ",", "2940", ",", "2950", ",", "2960", 
   ",", "2970", ",", "2980", ",", "2990", ",", "3000", ",", "3010", ",", 
   "3020", ",", "3030", ",", "3040", ",", "3050", ",", "3060", ",", "3070", 
   ",", "3080", ",", "3090", ",", "3100", ",", "3110", ",", "3120", ",", 
   "3130", ",", "3140"}], "}"}]], "Output",
 CellChangeTimes->{{3.766268312752658*^9, 3.766268317414012*^9}, 
   3.766268353585278*^9, 
   3.7662719927274456`*^9},ExpressionUUID->"ac534199-b1e9-47b0-8f12-\
93249bfcf207"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{"(*", 
   RowBox[{
   "Writing", " ", "the", " ", "control", " ", "conputation", " ", "and", " ",
     "system", " ", "simulation", " ", "seperately"}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
   "Module", " ", "to", " ", "find", " ", "the", " ", "torque", " ", "at", 
    " ", "the", " ", "sampled", " ", "instant"}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"computecontrol", "[", 
     RowBox[{"qe_", ",", " ", "dqe_", ",", " ", "t_"}], "]"}], ":=", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
       "Mval", ",", " ", "Cval", ",", " ", "Gval", ",", " ", "LHS", ",", 
        "J\[Eta]x\[Phi]val", ",", "J\[Eta]\[Theta]val", ",", 
        "Jx\[Phi]\[Theta]val", ",", "dJ\[Eta]x\[Phi]val", ",", 
        "dJ\[Eta]\[Theta]val", ",", "Jqe\[Theta]val", ",", "dJqe\[Theta]val", 
        ",", "M\[Theta]val", ",", "C\[Theta]val", ",", "G\[Theta]val", ",", 
        " ", "\[Tau]\[Theta]val", ",", "d\[Theta]ival", ",", "\[Theta]ival", 
        ",", "edat", ",", "dedat", ",", "\[Tau]dash", ",", " ", 
        "tempd\[Theta]", ",", "temp\[Theta]"}], "}"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"tempd\[Theta]", " ", "=", " ", 
        RowBox[{"dqe", "[", 
         RowBox[{"[", 
          RowBox[{"19", ";;", "24"}], "]"}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"temp\[Theta]", " ", "=", " ", 
        RowBox[{"qe", "[", 
         RowBox[{"[", 
          RowBox[{"19", ";;", "24"}], "]"}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"(*", 
        RowBox[{
        "Getting", " ", "the", " ", "velocities", " ", "of", " ", "the", " ", 
         "configuration", " ", "space", " ", "variables"}], "*)"}], 
       "\[IndentingNewLine]", 
       RowBox[{"J\[Eta]x\[Phi]val", " ", "=", " ", 
        RowBox[{"cJ\[Eta]x\[Phi]", "@@", "qe"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"J\[Eta]\[Theta]val", " ", "=", " ", 
        RowBox[{"cJ\[Eta]\[Theta]", "@@", "qe"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"Jx\[Phi]\[Theta]val", " ", "=", " ", 
        RowBox[{"-", 
         RowBox[{
          RowBox[{"Inverse", "[", "J\[Eta]x\[Phi]val", "]"}], ".", 
          "J\[Eta]\[Theta]val"}]}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"(*", 
        RowBox[{
        "Compute", " ", "all", " ", "the", " ", "extended", " ", 
         "configuration", " ", "space", " ", "matrices"}], "*)"}], 
       "\[IndentingNewLine]", 
       RowBox[{"Mval", "=", 
        RowBox[{"cMmat", "@@", "qe"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"Cval", "=", 
        RowBox[{"cCmat", "@@", 
         RowBox[{"Join", "[", 
          RowBox[{"qe", ",", " ", "dqe"}], "]"}]}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"Gval", "=", 
        RowBox[{"cGvec", "@@", "qe"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"(*", 
        RowBox[{
        "Computing", " ", "the", " ", "derivative", " ", "of", " ", "the", 
         " ", "Jacobians"}], "*)"}], "\[IndentingNewLine]", 
       RowBox[{"dJ\[Eta]x\[Phi]val", " ", "=", " ", 
        RowBox[{"cdJ\[Eta]x\[Phi]", "@@", 
         RowBox[{"Join", "[", 
          RowBox[{"qe", ",", " ", "dqe"}], "]"}]}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"dJ\[Eta]\[Theta]val", " ", "=", " ", 
        RowBox[{"cdJ\[Eta]\[Theta]", "@@", 
         RowBox[{"Join", "[", 
          RowBox[{"qe", ",", " ", "dqe"}], "]"}]}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"(*", 
        RowBox[{"Map", " ", "of", " ", "the", " ", "matrices"}], "*)"}], 
       "\[IndentingNewLine]", 
       RowBox[{"Jqe\[Theta]val", " ", "=", " ", 
        RowBox[{"ArrayFlatten", "[", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", "Jx\[Phi]\[Theta]val", "}"}], ",", " ", 
           RowBox[{"{", 
            RowBox[{"IdentityMatrix", "[", "6", "]"}], "}"}]}], "}"}], 
         "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"dJqe\[Theta]val", " ", "=", " ", 
        RowBox[{"ArrayFlatten", "[", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"-", 
             RowBox[{
              RowBox[{"Inverse", "[", "J\[Eta]x\[Phi]val", "]"}], ".", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", 
                 RowBox[{"dJ\[Eta]x\[Phi]val", ".", 
                  RowBox[{"Inverse", "[", "J\[Eta]x\[Phi]val", "]"}], ".", 
                  "J\[Eta]\[Theta]val"}]}], "+", "dJ\[Eta]\[Theta]val"}], 
               ")"}]}]}], "}"}], ",", " ", 
           RowBox[{"{", 
            RowBox[{"ConstantArray", "[", 
             RowBox[{"0", ",", 
              RowBox[{"{", 
               RowBox[{"6", ",", "6"}], "}"}]}], "]"}], "}"}]}], "}"}], 
         "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"(*", 
        RowBox[{
        "Map", " ", "the", " ", "matrices", " ", "to", " ", "the", " ", 
         "task", " ", "space"}], "*)"}], "\[IndentingNewLine]", 
       RowBox[{"M\[Theta]val", " ", "=", " ", 
        RowBox[{
         RowBox[{"T", "[", "Jqe\[Theta]val", "]"}], ".", "Mval", ".", 
         "Jqe\[Theta]val"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"C\[Theta]val", " ", "=", " ", 
        RowBox[{
         RowBox[{"T", "[", "Jqe\[Theta]val", "]"}], ".", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"Mval", ".", "dJqe\[Theta]val"}], "+", 
           RowBox[{"Cval", ".", "Jqe\[Theta]val"}]}], ")"}]}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"G\[Theta]val", " ", "=", " ", 
        RowBox[{
         RowBox[{"T", "[", "Jqe\[Theta]val", "]"}], ".", "Gval"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"(*", 
        RowBox[{
        "LHS", " ", "of", " ", "the", " ", "dynamics", " ", "equations"}], 
        "*)"}], "\[IndentingNewLine]", 
       RowBox[{"edat", " ", "=", " ", 
        RowBox[{
         RowBox[{"\[Theta]ref", "[", "t", "]"}], " ", "-", " ", 
         "temp\[Theta]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"dedat", " ", "=", " ", 
        RowBox[{
         RowBox[{"d\[Theta]ref", "[", "t", "]"}], " ", "-", " ", 
         "tempd\[Theta]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"\[Tau]dash", " ", "=", " ", 
        RowBox[{
         RowBox[{"d2\[Theta]ref", "[", "t", "]"}], "+", 
         RowBox[{"Kp", ".", "edat"}], "+", 
         RowBox[{"Kv", ".", "dedat"}]}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"\[Tau]\[Theta]val", " ", "=", " ", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"M\[Theta]val", ".", "\[Tau]dash"}], ")"}], "+", 
         RowBox[{"C\[Theta]val", ".", "tempd\[Theta]"}], "+", 
         "G\[Theta]val"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"Return", "[", "\[Tau]\[Theta]val", "]"}], ";"}]}], 
     "\[IndentingNewLine]", "]"}]}], ";"}], "*)"}]], "Input",
 CellChangeTimes->{{3.7613595454656625`*^9, 3.761359560746158*^9}, {
   3.7613595969757338`*^9, 3.761359754285674*^9}, {3.761360596085878*^9, 
   3.7613606260185304`*^9}, {3.7613606915156937`*^9, 3.761360741591067*^9}, {
   3.7613866295630875`*^9, 3.76138668743645*^9}, 3.7613870287202606`*^9, {
   3.7653601199286175`*^9, 3.7653601532470765`*^9}, {3.765360191410612*^9, 
   3.765360211509615*^9}, {3.765361720600503*^9, 3.765361733378869*^9}, {
   3.7653622138347054`*^9, 3.765362223200425*^9}, {3.7653622622854395`*^9, 
   3.7653624038447714`*^9}, {3.7653624932995915`*^9, 
   3.7653625105256395`*^9}, {3.7653626708248158`*^9, 3.76536273848273*^9}, {
   3.765362957747265*^9, 3.765362958892975*^9}, {3.765363016148657*^9, 
   3.7653630194756856`*^9}, {3.7653630530811357`*^9, 3.765363065229066*^9}, {
   3.7653646390186663`*^9, 3.765364639752338*^9}, {3.766063089871969*^9, 
   3.766063091564474*^9}, {3.76606314106757*^9, 3.7660632159105005`*^9}, {
   3.7660632517972383`*^9, 3.7660632961903014`*^9}, {3.766063326824668*^9, 
   3.7660633275999804`*^9}, {3.7660634195737224`*^9, 3.76606344978262*^9}, {
   3.7660674647567863`*^9, 3.7660674655123205`*^9}, {3.7660681275796137`*^9, 
   3.766068128482855*^9}},ExpressionUUID->"38bbecf1-e9ca-45da-851d-\
98314f53ae02"],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{
   RowBox[{
    RowBox[{"config", " ", "=", " ", 
     RowBox[{"ConstantArray", "[", 
      RowBox[{"0", ",", 
       RowBox[{"{", "24", "}"}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"dconfig", " ", "=", " ", 
     RowBox[{"ConstantArray", "[", 
      RowBox[{"0", ",", 
       RowBox[{"{", "24", "}"}]}], "]"}]}], ";"}]}], "*)"}]], "Input",
 CellChangeTimes->{{3.766066365475206*^9, 
  3.766066375557474*^9}},ExpressionUUID->"57ca8fcc-358b-4ade-84be-\
ba70e633280d"],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"tempx\[Phi]", " ", "=", " ", 
       RowBox[{
        RowBox[{"qeidat", "[", 
         RowBox[{"[", "1", "]"}], "]"}], "[", 
        RowBox[{"[", 
         RowBox[{"1", ";;", "18"}], "]"}], "]"}]}], ";"}], 
     "\[IndentingNewLine]", 
     RowBox[{"systemsim", "[", 
      RowBox[{
       RowBox[{"q_", "?", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"VectorQ", "[", 
           RowBox[{"#", ",", "NumericQ"}], "]"}], "&"}], ")"}]}], ",", 
       RowBox[{"dq_", "?", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"VectorQ", "[", 
           RowBox[{"#", ",", "NumericQ"}], "]"}], "&"}], ")"}]}], ",", " ", 
       "\[Tau]\[Theta]val_"}], "]"}]}], ":=", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
       "bla", ",", " ", "Mval", ",", " ", "Cval", ",", " ", "Gval", ",", " ", 
        "LHS", ",", " ", "dqe", ",", " ", "qe", ",", " ", "J\[Eta]x\[Phi]val",
         ",", "J\[Eta]\[Theta]val", ",", "Jx\[Phi]\[Theta]val", ",", 
        "dJ\[Eta]x\[Phi]val", ",", "dJ\[Eta]\[Theta]val", ",", 
        "Jqe\[Theta]val", ",", "dJqe\[Theta]val", ",", "M\[Theta]val", ",", 
        "C\[Theta]val", ",", "G\[Theta]val", ",", " ", "d\[Theta]ival", ",", 
        "\[Theta]ival", ",", "edat", ",", "dedat", ",", "\[Tau]dash"}], "}"}],
       ",", "\[IndentingNewLine]", 
      RowBox[{"(*", 
       RowBox[{
       "Perform", " ", "FK", " ", "for", " ", "the", " ", "configuration", 
        " ", "and", " ", "task", " ", "space", " ", "variables"}], "*)"}], 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"tempx\[Phi]", " ", "=", " ", 
        RowBox[{"TrackRoot", "[", 
         RowBox[{"q", ",", " ", "tempx\[Phi]"}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"qe", " ", "=", " ", 
        RowBox[{"Join", "[", 
         RowBox[{"tempx\[Phi]", ",", "q"}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"(*", 
        RowBox[{
        "Getting", " ", "the", " ", "velocities", " ", "of", " ", "the", " ", 
         "configuration", " ", "space", " ", "variables"}], "*)"}], 
       "\[IndentingNewLine]", 
       RowBox[{"J\[Eta]x\[Phi]val", " ", "=", " ", 
        RowBox[{"cJ\[Eta]x\[Phi]", "@@", "qe"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"J\[Eta]\[Theta]val", " ", "=", " ", 
        RowBox[{"cJ\[Eta]\[Theta]", "@@", "qe"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"Jx\[Phi]\[Theta]val", " ", "=", " ", 
        RowBox[{"-", 
         RowBox[{
          RowBox[{"Inverse", "[", "J\[Eta]x\[Phi]val", "]"}], ".", 
          "J\[Eta]\[Theta]val"}]}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"dqe", " ", "=", " ", 
        RowBox[{"Join", "[", 
         RowBox[{
          RowBox[{"Jx\[Phi]\[Theta]val", ".", "dq"}], ",", " ", "dq"}], 
         "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"(*", 
        RowBox[{
        "Compute", " ", "all", " ", "the", " ", "extended", " ", 
         "configuration", " ", "space", " ", "matrices"}], "*)"}], 
       "\[IndentingNewLine]", 
       RowBox[{"Mval", "=", 
        RowBox[{"cMmat", "@@", "qe"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"Cval", "=", 
        RowBox[{"cCmat", "@@", 
         RowBox[{"Join", "[", 
          RowBox[{"qe", ",", " ", "dqe"}], "]"}]}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"Gval", "=", 
        RowBox[{"cGvec", "@@", "qe"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"(*", 
        RowBox[{
        "Computing", " ", "the", " ", "derivative", " ", "of", " ", "the", 
         " ", "Jacobians"}], "*)"}], "\[IndentingNewLine]", 
       RowBox[{"dJ\[Eta]x\[Phi]val", " ", "=", " ", 
        RowBox[{"cdJ\[Eta]x\[Phi]", "@@", 
         RowBox[{"Join", "[", 
          RowBox[{"qe", ",", " ", "dqe"}], "]"}]}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"dJ\[Eta]\[Theta]val", " ", "=", " ", 
        RowBox[{"cdJ\[Eta]\[Theta]", "@@", 
         RowBox[{"Join", "[", 
          RowBox[{"qe", ",", " ", "dqe"}], "]"}]}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"(*", 
        RowBox[{"Map", " ", "of", " ", "the", " ", "matrices"}], "*)"}], 
       "\[IndentingNewLine]", 
       RowBox[{"Jqe\[Theta]val", " ", "=", " ", 
        RowBox[{"ArrayFlatten", "[", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", "Jx\[Phi]\[Theta]val", "}"}], ",", " ", 
           RowBox[{"{", 
            RowBox[{"IdentityMatrix", "[", "6", "]"}], "}"}]}], "}"}], 
         "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"dJqe\[Theta]val", " ", "=", " ", 
        RowBox[{"ArrayFlatten", "[", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"-", 
             RowBox[{
              RowBox[{"Inverse", "[", "J\[Eta]x\[Phi]val", "]"}], ".", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", 
                 RowBox[{"dJ\[Eta]x\[Phi]val", ".", 
                  RowBox[{"Inverse", "[", "J\[Eta]x\[Phi]val", "]"}], ".", 
                  "J\[Eta]\[Theta]val"}]}], "+", "dJ\[Eta]\[Theta]val"}], 
               ")"}]}]}], "}"}], ",", " ", 
           RowBox[{"{", 
            RowBox[{"ConstantArray", "[", 
             RowBox[{"0", ",", 
              RowBox[{"{", 
               RowBox[{"6", ",", "6"}], "}"}]}], "]"}], "}"}]}], "}"}], 
         "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"(*", 
        RowBox[{
        "Map", " ", "the", " ", "matrices", " ", "to", " ", "the", " ", 
         "task", " ", "space"}], "*)"}], "\[IndentingNewLine]", 
       RowBox[{"M\[Theta]val", " ", "=", " ", 
        RowBox[{
         RowBox[{"T", "[", "Jqe\[Theta]val", "]"}], ".", "Mval", ".", 
         "Jqe\[Theta]val"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"C\[Theta]val", " ", "=", " ", 
        RowBox[{
         RowBox[{"T", "[", "Jqe\[Theta]val", "]"}], ".", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"Mval", ".", "dJqe\[Theta]val"}], "+", 
           RowBox[{"Cval", ".", "Jqe\[Theta]val"}]}], ")"}]}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"G\[Theta]val", " ", "=", " ", 
        RowBox[{
         RowBox[{"T", "[", "Jqe\[Theta]val", "]"}], ".", "Gval"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"(*", 
        RowBox[{
        "LHS", " ", "of", " ", "the", " ", "dynamics", " ", "equations"}], 
        "*)"}], "\[IndentingNewLine]", 
       RowBox[{"(*", 
        RowBox[{
         RowBox[{"\[Tau]\[Theta]val", " ", "=", " ", 
          RowBox[{"computecontrol", "[", 
           RowBox[{"qe", ",", " ", "dqe", ",", " ", "t"}], "]"}]}], ";"}], 
        "*)"}], "\[IndentingNewLine]", 
       RowBox[{"LHS", " ", "=", " ", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"Inverse", "[", "M\[Theta]val", "]"}], ")"}], ".", 
         RowBox[{"(", 
          RowBox[{"\[Tau]\[Theta]val", "-", 
           RowBox[{"C\[Theta]val", ".", "dq"}], "-", "G\[Theta]val"}], 
          ")"}]}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"(*", 
        RowBox[{
         RowBox[{"AppendTo", "[", 
          RowBox[{"controlinput", ",", " ", "\[Tau]\[Theta]val"}], "]"}], 
         ";"}], "*)"}], "\[IndentingNewLine]", 
       RowBox[{"config", " ", "=", " ", "qe"}], ";", "\[IndentingNewLine]", 
       RowBox[{"dconfig", " ", "=", " ", "qe"}], ";", "\[IndentingNewLine]", 
       RowBox[{"Return", "[", "LHS", "]"}], ";"}]}], "\[IndentingNewLine]", 
     "]"}]}], ";"}], "*)"}]], "Input",
 CellChangeTimes->{{3.74748440757664*^9, 3.747484409507562*^9}, {
   3.747484461677616*^9, 3.7474845482674875`*^9}, {3.747484580327173*^9, 
   3.747484599645011*^9}, {3.7474848161103525`*^9, 3.7474848183136363`*^9}, {
   3.747484853619799*^9, 3.7474848714698343`*^9}, {3.7474849021801157`*^9, 
   3.747484904289808*^9}, {3.7474849682701597`*^9, 3.7474849703898525`*^9}, 
   3.747485067490321*^9, {3.7474858814676027`*^9, 3.747485888809555*^9}, 
   3.747485928463986*^9, {3.747486162078972*^9, 3.7474861680139165`*^9}, {
   3.7474862079841194`*^9, 3.7474862510275145`*^9}, {3.747494313873737*^9, 
   3.747494377109394*^9}, {3.7474957232390165`*^9, 3.747495767668152*^9}, {
   3.74764017577621*^9, 3.7476401832002497`*^9}, {3.7480054810702963`*^9, 
   3.748005546272901*^9}, 3.7480056046499023`*^9, {3.757950439782325*^9, 
   3.757950569326189*^9}, {3.757950623141141*^9, 3.757950709744218*^9}, {
   3.757950755080717*^9, 3.757950774280817*^9}, {3.7579508501169844`*^9, 
   3.757950868096898*^9}, {3.757951002004713*^9, 3.75795100977565*^9}, {
   3.7579512289435077`*^9, 3.7579513288255033`*^9}, {3.757951424558215*^9, 
   3.7579515576140785`*^9}, {3.757951664084346*^9, 3.7579517277402735`*^9}, {
   3.757952357405804*^9, 3.7579523804612427`*^9}, {3.757952608230666*^9, 
   3.757952632743451*^9}, {3.7579526969170275`*^9, 3.7579527179374623`*^9}, {
   3.757952778186175*^9, 3.7579530716083097`*^9}, {3.7579531335043707`*^9, 
   3.75795314602946*^9}, {3.7579538274467583`*^9, 3.757953830240122*^9}, {
   3.75795389012076*^9, 3.7579540595329423`*^9}, {3.7579542879657555`*^9, 
   3.757954328713045*^9}, {3.757954617697354*^9, 3.7579546326152024`*^9}, {
   3.757955528194253*^9, 3.7579555321223373`*^9}, {3.757955575544798*^9, 
   3.7579557198491306`*^9}, {3.7600251382015257`*^9, 3.760025214906492*^9}, {
   3.760025271970461*^9, 3.760025291128994*^9}, {3.760025418433078*^9, 
   3.760025425017371*^9}, {3.7610305882240114`*^9, 3.7610308332628527`*^9}, {
   3.7610315623168178`*^9, 3.7610315735368743`*^9}, {3.7610344205983667`*^9, 
   3.7610344224482164`*^9}, {3.7610476568816824`*^9, 
   3.7610476911578436`*^9}, {3.761047731522089*^9, 3.761047795362996*^9}, {
   3.761047862176386*^9, 3.7610481549305077`*^9}, {3.761048507980896*^9, 
   3.761048552352975*^9}, {3.7610487115161724`*^9, 3.761048712216196*^9}, {
   3.761273663707091*^9, 3.7612736664770637`*^9}, {3.7612749544710035`*^9, 
   3.761275035221036*^9}, {3.7612753542850766`*^9, 3.761275389974563*^9}, {
   3.761276117887458*^9, 3.761276118290227*^9}, {3.7612926181930976`*^9, 
   3.761292634293437*^9}, {3.761299537850651*^9, 3.761299544745693*^9}, {
   3.7612995753741164`*^9, 3.7612996305254903`*^9}, {3.761299945838954*^9, 
   3.761299966734703*^9}, 3.7613582215808496`*^9, 3.7613588583134966`*^9, {
   3.7613996684679284`*^9, 3.7613997169257298`*^9}, {3.761399747406802*^9, 
   3.7613997544427567`*^9}, {3.7613997998830214`*^9, 3.761399848516343*^9}, {
   3.7613999492831306`*^9, 3.761399949723877*^9}, {3.7614000644100666`*^9, 
   3.761400067664218*^9}, {3.7614006866091795`*^9, 3.7614006891717176`*^9}, {
   3.7614007246233664`*^9, 3.7614007248002963`*^9}, {3.761401557671116*^9, 
   3.761401568604863*^9}, {3.761401602159087*^9, 3.761401645651207*^9}, {
   3.7620749521880007`*^9, 3.7620749525007963`*^9}, {3.766023029920142*^9, 
   3.766023044450427*^9}, {3.7660230852606344`*^9, 3.7660231311353235`*^9}, {
   3.766023184039028*^9, 3.7660232035688477`*^9}, {3.766023332506509*^9, 
   3.766023423034616*^9}, {3.7660238469723663`*^9, 3.7660238522653275`*^9}, {
   3.766023904981265*^9, 3.766023928778465*^9}, {3.76602398046716*^9, 
   3.7660239810398116`*^9}, {3.766035786432135*^9, 3.7660357940470734`*^9}, {
   3.7660358454392786`*^9, 3.766035850366873*^9}, {3.766035887709311*^9, 
   3.7660358919692693`*^9}, 3.7660359571799603`*^9, {3.7660457813583813`*^9, 
   3.7660457868163447`*^9}, {3.766045955168825*^9, 3.7660459909515505`*^9}, {
   3.7660506253186755`*^9, 3.7660506319113307`*^9}, {3.766050671697104*^9, 
   3.7660506753993044`*^9}, {3.766050821515624*^9, 3.766050826466549*^9}, {
   3.7660533427457023`*^9, 3.766053364253109*^9}, {3.7660537757559786`*^9, 
   3.766053785303891*^9}, 3.766054394912339*^9, {3.766058796344601*^9, 
   3.7660588091001844`*^9}, 3.766058861257978*^9, {3.7660598294453583`*^9, 
   3.766059899160487*^9}, {3.7660599341146317`*^9, 3.766059978275525*^9}, 
   3.7660608738568506`*^9, {3.766062908358966*^9, 3.766062909562917*^9}, {
   3.7660630242131696`*^9, 3.766063042212515*^9}, 3.7660630991446896`*^9, {
   3.7660633488036594`*^9, 3.766063360573599*^9}, {3.7660642148180895`*^9, 
   3.7660642385082374`*^9}, {3.766066352766679*^9, 
   3.7660663810712166`*^9}},ExpressionUUID->"8883ef85-451e-42c7-8777-\
8a7f3e18bd72"],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{"(*", 
   RowBox[{
   "Control", " ", "is", " ", "computed", " ", "for", " ", "every", " ", 
    "0.1", " ", "s"}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"tsys", " ", "=", " ", "0.001"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{"config", " ", "=", " ", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "0.30769230769230765`"}], ",", 
        RowBox[{"-", "2.8695760407488136`*^-17"}], ",", "0.6666666666666666`",
         ",", 
        RowBox[{"-", "4.298758185320587`*^-19"}], ",", 
        "5.2967228549980035`*^-17", ",", 
        RowBox[{"-", "3.05834777340713`*^-17"}], ",", 
        RowBox[{"-", "0.6468727353940114`"}], ",", 
        RowBox[{"-", "0.7396108756073955`"}], ",", "0.27582767997240515`", 
        ",", "0.275827679972405`", ",", 
        RowBox[{"-", "0.7396108756073954`"}], ",", 
        RowBox[{"-", "0.6468727353940111`"}], ",", "0.5034118398526536`", ",",
         "0.4168936722236682`", ",", 
        RowBox[{"-", "0.08704971895328104`"}], ",", "0.08704971895328126`", 
        ",", 
        RowBox[{"-", "0.4168936722236683`"}], ",", 
        RowBox[{"-", "0.5034118398526536`"}], ",", "0.953774282357119`", ",", 
        "0.9869825161206649`", ",", "0.6954899933969605`", ",", 
        "0.6954899933969606`", ",", "0.9869825161206648`", ",", 
        "0.953774282357119`"}], "}"}]}], ";"}], "\[IndentingNewLine]", "*)"}],
    "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"config", " ", "=", " ", 
     RowBox[{"Join", "[", 
      RowBox[{
       RowBox[{"xtrackdat", "[", 
        RowBox[{"[", "1", "]"}], "]"}], ",", " ", 
       RowBox[{"iksol", "[", 
        RowBox[{"xtrackdat", "[", 
         RowBox[{"[", "1", "]"}], "]"}], "]"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"dconfig", " ", "=", " ", 
     RowBox[{"ConstantArray", "[", 
      RowBox[{"0", ",", " ", 
       RowBox[{"{", "24", "}"}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"tempx\[Phi]", " ", "=", " ", 
     RowBox[{
      RowBox[{"qeidat", "[", 
       RowBox[{"[", "1", "]"}], "]"}], "[", 
      RowBox[{"[", 
       RowBox[{"1", ";;", "18"}], "]"}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"states", " ", "=", " ", 
     RowBox[{"{", "}"}]}], ";"}]}], "*)"}]], "Input",
 CellChangeTimes->{{3.7660637972522335`*^9, 3.766063818841488*^9}, {
   3.766064704285993*^9, 3.7660647090332994`*^9}, {3.766066146752016*^9, 
   3.766066149389259*^9}, {3.766066198283394*^9, 3.7660662022077556`*^9}, {
   3.7660664775856276`*^9, 3.766066477986348*^9}, {3.766066551196191*^9, 
   3.7660665528328266`*^9}, {3.766066647115346*^9, 3.7660666496395397`*^9}, {
   3.766066710804268*^9, 3.7660667208473673`*^9}, {3.766066787428968*^9, 
   3.766066807324747*^9}, {3.7660670024482217`*^9, 3.766067014162648*^9}, {
   3.76606707044648*^9, 3.766067085319992*^9}, 3.766067117066626*^9, {
   3.7660674430588226`*^9, 3.7660674572307444`*^9}, {3.7660675866556606`*^9, 
   3.7660675876429677`*^9}, 3.7660676489378276`*^9, {3.766067713018443*^9, 
   3.7660677197913094`*^9}, 
   3.7660678115656075`*^9},ExpressionUUID->"6f185552-a798-4e2d-a2ea-\
2d5fb1a52e1c"],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{"For", "[", 
   RowBox[{
    RowBox[{"i", "=", "0"}], ",", " ", 
    RowBox[{"i", "\[LessEqual]", "1000"}], ",", " ", 
    RowBox[{"i", "++"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"\[Theta]i", " ", "=", " ", 
      RowBox[{"config", "[", 
       RowBox[{"[", 
        RowBox[{"19", ";;", "24"}], "]"}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"d\[Theta]i", " ", "=", " ", 
      RowBox[{"dconfig", "[", 
       RowBox[{"[", 
        RowBox[{"19", ";;", "24"}], "]"}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"AppendTo", "[", 
      RowBox[{"states", ",", " ", 
       RowBox[{"{", 
        RowBox[{"config", ",", " ", "dconfig"}], "}"}]}], "]"}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"\[Tau]\[Theta]val", " ", "=", " ", 
      RowBox[{"computecontrol", "[", 
       RowBox[{"config", ",", "dconfig", ",", 
        RowBox[{"i", "*", "tsys"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"NDSolve", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{
           RowBox[{"systemsim", "[", 
            RowBox[{
             RowBox[{"q1", "[", "t", "]"}], ",", 
             RowBox[{
              RowBox[{"q1", "'"}], "[", "t", "]"}], ",", "t"}], "]"}], 
           "\[Equal]", 
           RowBox[{
            RowBox[{"q1", "''"}], "[", "t", "]"}]}], ",", 
          RowBox[{
           RowBox[{"q1", "[", "0", "]"}], "\[Equal]", "\[Theta]i"}], ",", 
          RowBox[{
           RowBox[{
            RowBox[{"q1", "'"}], "[", "0", "]"}], "\[Equal]", 
           "d\[Theta]i"}]}], "}"}], ",", "q1", ",", 
        RowBox[{"{", 
         RowBox[{"t", ",", "0", ",", "tsys"}], "}"}]}], "]"}], "[", 
      RowBox[{"[", "1", "]"}], "]"}], ";"}]}], "\[IndentingNewLine]", "]"}], 
  "*)"}]], "Input",
 CellChangeTimes->{{3.766063561129891*^9, 3.7660636579860086`*^9}, {
   3.7660637922018657`*^9, 3.766063820992446*^9}, {3.7660642009188547`*^9, 
   3.766064201699302*^9}, {3.7660642504124975`*^9, 3.7660642590947447`*^9}, {
   3.766064485684069*^9, 3.7660644907661886`*^9}, {3.766064712922717*^9, 
   3.766064825340461*^9}, {3.766066205132303*^9, 3.7660662249616885`*^9}, {
   3.7660662793605714`*^9, 3.7660663126411963`*^9}, {3.766066400200872*^9, 
   3.7660665238644495`*^9}, {3.766066556897209*^9, 3.766066581283789*^9}, {
   3.7660666153354435`*^9, 3.7660666685974545`*^9}, {3.7660667254471216`*^9, 
   3.7660667529497757`*^9}, {3.7660668816037245`*^9, 3.7660668848976884`*^9}, 
   3.766067037811881*^9, {3.7660670752244797`*^9, 3.766067088004874*^9}, 
   3.766067122622368*^9, {3.766067593406528*^9, 3.766067593475561*^9}, 
   3.7660676515126743`*^9, {3.7660677759413347`*^9, 3.766067777453745*^9}, 
   3.766067814722993*^9, {3.766067846753446*^9, 3.7660678494394784`*^9}, {
   3.7660678947356977`*^9, 
   3.766067894874242*^9}},ExpressionUUID->"b0cdabf6-11fc-4acc-94d7-\
52e66d989f7b"],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{
   RowBox[{"bla", " ", "=", " ", 
    RowBox[{"states", "[", 
     RowBox[{"[", 
      RowBox[{";;", ",", "1", ",", ";;"}], "]"}], "]"}]}], ";"}], 
  "*)"}]], "Input",
 CellChangeTimes->{{3.7660672542767754`*^9, 3.7660672960130854`*^9}, 
   3.76606737080516*^9},ExpressionUUID->"04fb598e-8390-437c-9b31-\
34217f0d2913"],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{
   RowBox[{"xvals", " ", "=", " ", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"bla", "[", 
        RowBox[{"[", "i", "]"}], "]"}], "[", 
       RowBox[{"[", 
        RowBox[{"1", ";;", "3"}], "]"}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"i", ",", " ", 
        RowBox[{"Length", "[", "bla", "]"}]}], "}"}]}], "]"}]}], ";"}], 
  "*)"}]], "Input",
 CellChangeTimes->{{3.7660672976870985`*^9, 
  3.7660673310487165`*^9}},ExpressionUUID->"b645f83f-64ab-4c2c-95d4-\
65d6b5b3dcdf"],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{"ListPointPlot3D", "[", "xvals", "]"}], "*)"}]], "Input",
 CellChangeTimes->{{3.7660673333981266`*^9, 3.766067337185259*^9}, {
  3.7660673826706195`*^9, 
  3.766067384360895*^9}},ExpressionUUID->"d2ec8745-1d65-4c02-9597-\
dd77b38bdd36"]
},
WindowSize->{1366, 685},
WindowMargins->{{-8, Automatic}, {Automatic, -8}},
FrontEndVersion->"11.2 for Microsoft Windows (64-bit) (September 10, 2017)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{
 "Info893766311507-6810499"->{
  Cell[60186, 1556, 908, 17, 69, "Print",ExpressionUUID->"611c6a84-d008-4de1-8fcc-323648b55c57",
   CellTags->"Info893766311507-6810499"]}
 }
*)
(*CellTagsIndex
CellTagsIndex->{
 {"Info893766311507-6810499", 1889454, 37994}
 }
*)
(*NotebookFileOutline
Notebook[{
Cell[558, 20, 211, 5, 28, "Input",ExpressionUUID->"92a9b902-e3e9-4881-b566-77b6d7b6d611"],
Cell[CellGroupData[{
Cell[794, 29, 1042, 18, 124, "Input",ExpressionUUID->"06a65a6e-ab8a-4932-8383-567663e564b7",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}],
Cell[1839, 49, 728, 18, 67, "Input",ExpressionUUID->"38b6a305-f7aa-4194-a938-f55d0d8ce82d",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}],
Cell[2570, 69, 4508, 119, 246, "Input",ExpressionUUID->"7bd91fb4-b00c-4d96-a45d-c90fe31931cd",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}],
Cell[7081, 190, 1850, 44, 143, "Input",ExpressionUUID->"d5e0cae4-0357-4de3-88a0-8396c9678c03",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}],
Cell[8934, 236, 1848, 47, 86, "Input",ExpressionUUID->"4a1b36c2-3ff3-4229-a486-20ff7217a218",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}],
Cell[10785, 285, 3332, 91, 219, "Input",ExpressionUUID->"ef841645-0755-44b9-88d8-76f8aa8b25a4",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}],
Cell[14120, 378, 2562, 77, 181, "Input",ExpressionUUID->"1ee31f9d-a8d3-4368-b2e3-96e2b2963128",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}],
Cell[16685, 457, 1332, 37, 86, "Input",ExpressionUUID->"f921a5db-2bbc-44e6-b373-b9dccc258d95",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}],
Cell[18020, 496, 2634, 71, 219, "Input",ExpressionUUID->"d81531fc-353a-452c-9788-dd2886d1efb3",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}],
Cell[20657, 569, 2418, 62, 86, "Input",ExpressionUUID->"9da52488-b30b-448f-a180-a9e43a9cd81f",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}],
Cell[23078, 633, 1427, 30, 67, "Input",ExpressionUUID->"09d72c21-7eab-45e5-9d63-d60476a217ac",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}],
Cell[24508, 665, 2343, 61, 86, "Input",ExpressionUUID->"e574c488-37e1-4272-9dd1-766dc9d25ee5",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}],
Cell[26854, 728, 2000, 48, 67, "Input",ExpressionUUID->"a612bb32-05fe-484c-ba39-27f741dc0f7d",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}],
Cell[28857, 778, 3256, 77, 105, "Input",ExpressionUUID->"55d3129e-9673-4de7-8067-8d3345ea5dcc",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}],
Cell[32116, 857, 4356, 95, 238, "Input",ExpressionUUID->"7746af0b-3c4b-40bd-ac5f-2359bed73e43",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}],
Cell[36475, 954, 1825, 28, 22, "Print",ExpressionUUID->"6de564ea-ccfd-4efa-8717-a0e928490e87",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}],
Cell[38303, 984, 1799, 27, 22, "Print",ExpressionUUID->"9829a61a-b511-4f24-a66d-b1a584c82cb8",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}],
Cell[40105, 1013, 5421, 147, 143, "Input",ExpressionUUID->"6a051558-810b-42df-89b7-122f219f8668",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}],
Cell[45529, 1162, 1947, 52, 86, "Input",ExpressionUUID->"6e589bc6-b69e-4afc-a85e-d2f08128a9bb",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}],
Cell[47479, 1216, 1695, 46, 67, "Input",ExpressionUUID->"ec753bbb-cb88-4647-9159-c5a75b4292e4",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}],
Cell[49177, 1264, 969, 25, 48, "Input",ExpressionUUID->"09c8a8d9-f987-4428-aefa-dc5816c0f77e",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}]
}, Open  ]],
Cell[CellGroupData[{
Cell[50183, 1294, 216, 4, 28, "Input",ExpressionUUID->"b17d7583-69e3-4ab6-bf9e-04ef0036c589"],
Cell[50402, 1300, 455, 11, 32, "Output",ExpressionUUID->"58db2347-485d-45e9-8e49-2e4f86da43a7"]
}, Open  ]],
Cell[50872, 1314, 579, 16, 28, "Input",ExpressionUUID->"ae2a19d2-9c36-4087-8f4b-b93e894ec5d8"],
Cell[51454, 1332, 531, 14, 28, "Input",ExpressionUUID->"d2845782-574e-4e1c-a216-0a5bd9d8c24d"],
Cell[51988, 1348, 473, 13, 28, "Input",ExpressionUUID->"f62905a3-5d18-4f7d-9552-24ea44777d77"],
Cell[52464, 1363, 397, 11, 28, "Input",ExpressionUUID->"e34d5a76-0ba2-435f-9df3-58431b51ff43"],
Cell[52864, 1376, 448, 13, 32, "Input",ExpressionUUID->"67583ddf-193f-4a6e-94e5-be946bc91d2e"],
Cell[CellGroupData[{
Cell[53337, 1393, 416, 10, 28, "Input",ExpressionUUID->"bd984697-db2e-47b8-8a3d-3a89e267f839"],
Cell[53756, 1405, 1992, 55, 100, "Output",ExpressionUUID->"89678549-f50c-48f1-822b-751897f3024e"]
}, Open  ]],
Cell[CellGroupData[{
Cell[55785, 1465, 294, 5, 28, "Input",ExpressionUUID->"d43e423d-4748-4c62-9d4f-e037a4369c75"],
Cell[56082, 1472, 3884, 73, 378, 1650, 36, "CachedBoxData", "BoxData", "Output",ExpressionUUID->"96d5b629-f525-48cc-ac7d-05257bcf9f73"]
}, Open  ]],
Cell[CellGroupData[{
Cell[60003, 1550, 180, 4, 28, "Input",ExpressionUUID->"85a31e1e-5e47-4e53-a854-32478e24c272"],
Cell[60186, 1556, 908, 17, 69, "Print",ExpressionUUID->"611c6a84-d008-4de1-8fcc-323648b55c57",
 CellTags->"Info893766311507-6810499"]
}, Open  ]],
Cell[CellGroupData[{
Cell[61131, 1578, 360, 9, 28, "Input",ExpressionUUID->"9377ddff-38f4-4d58-9b22-ca14582b7ca3"],
Cell[61494, 1589, 426, 9, 21, "Message",ExpressionUUID->"2cffe3fd-dcb4-4900-91b9-a0f0e3bb0778"],
Cell[61923, 1600, 431, 8, 32, "Output",ExpressionUUID->"9030d555-5d43-4a44-9c82-28163116dae1"]
}, Open  ]],
Cell[CellGroupData[{
Cell[62391, 1613, 387, 11, 28, "Input",ExpressionUUID->"b81275da-7b2f-4de0-99c9-d3f5db365dd5"],
Cell[62781, 1626, 436, 9, 23, "Message",ExpressionUUID->"b23e7c48-5615-49fc-ac20-7664051cf886"],
Cell[63220, 1637, 434, 9, 23, "Message",ExpressionUUID->"fd90cd89-ce8d-47a5-bc50-6c98e5dd2c1a"],
Cell[63657, 1648, 238, 6, 46, "Output",ExpressionUUID->"a84ad113-9b4e-46d7-8437-e10646b86ff9"]
}, Open  ]],
Cell[CellGroupData[{
Cell[63932, 1659, 265, 6, 28, "Input",ExpressionUUID->"49ce4038-0e4f-4649-82f7-c7e6ccb0083f"],
Cell[64200, 1667, 436, 9, 23, "Message",ExpressionUUID->"2353c90d-6e9a-45d3-a945-2a33c2b7f4b2"],
Cell[64639, 1678, 144989, 3793, 4720, "Output",ExpressionUUID->"2ffbc8dc-0c1f-413c-ab8b-dd6dde25a743"]
}, Open  ]],
Cell[CellGroupData[{
Cell[209665, 5476, 253, 6, 28, "Input",ExpressionUUID->"afaf83ac-d684-4a32-86b0-2c37bb2335bf"],
Cell[209921, 5484, 13826, 261, 508, "Output",ExpressionUUID->"afdb74e6-bd7c-4aa2-96f3-193e5d18e4c9"]
}, Open  ]],
Cell[CellGroupData[{
Cell[223784, 5750, 257, 6, 28, "Input",ExpressionUUID->"8c0971ec-0ded-4037-9653-fb5a85e802a8"],
Cell[224044, 5758, 434, 9, 23, "Message",ExpressionUUID->"50af4364-4364-4248-a9c6-b41a558cd769"],
Cell[224481, 5769, 144987, 3793, 4720, "Output",ExpressionUUID->"178b042c-f9e2-4d51-9882-baa7e471370d"]
}, Open  ]],
Cell[CellGroupData[{
Cell[369505, 9567, 319, 8, 28, "Input",ExpressionUUID->"0a4c866c-88ff-45d9-b728-47e78121945d"],
Cell[369827, 9577, 455, 10, 21, "Message",ExpressionUUID->"e2a185b3-9f4d-4ef5-8adf-45f996f62b97"]
}, Open  ]],
Cell[CellGroupData[{
Cell[370319, 9592, 418, 8, 28, "Input",ExpressionUUID->"1b92dd8e-a065-414c-9f2a-48f537aa1830"],
Cell[370740, 9602, 1294, 21, 23, "Message",ExpressionUUID->"6e60411f-1ac1-4edb-b735-1ebc5ad35bfb"],
Cell[372037, 9625, 420, 7, 32, "Output",ExpressionUUID->"a4120556-7cdb-4e60-9da2-5320e25f70a2"]
}, Open  ]],
Cell[CellGroupData[{
Cell[372494, 9637, 525, 14, 28, "Input",ExpressionUUID->"b105dff4-dac1-49f7-933f-dd4e9bc63f3e"],
Cell[373022, 9653, 1294, 21, 23, "Message",ExpressionUUID->"211b7a11-206c-4b6d-be53-cf93bc3bd076"],
Cell[374319, 9676, 1294, 21, 23, "Message",ExpressionUUID->"26c8db59-c8e9-4069-8304-d67103ffb20d"],
Cell[375616, 9699, 1297, 21, 23, "Message",ExpressionUUID->"14c82522-abcf-4b20-b597-f682748c9bab"],
Cell[376916, 9722, 425, 9, 21, "Message",ExpressionUUID->"f97a14ae-51d5-42c1-b47d-7f3d9ea4c647"],
Cell[377344, 9733, 108016, 2423, 3725, "Output",ExpressionUUID->"5818d4cf-3a3c-4c8f-91b0-34c1ce265f3c"]
}, Open  ]],
Cell[CellGroupData[{
Cell[485397, 12161, 378, 10, 28, "Input",ExpressionUUID->"487bde77-ca74-463b-a4d3-1fa341fc09b0"],
Cell[485778, 12173, 1297, 21, 23, "Message",ExpressionUUID->"4f042a17-b865-47ff-9ca4-5db19d0ac522"],
Cell[487078, 12196, 1149, 25, 46, "Output",ExpressionUUID->"6fc503b1-ddc4-45be-a23e-6d7c10e13a6c"]
}, Open  ]],
Cell[CellGroupData[{
Cell[488264, 12226, 305, 9, 28, "Input",ExpressionUUID->"3de93e0e-359e-4c0d-8476-d93ef003f0e9"],
Cell[488572, 12237, 1299, 21, 23, "Message",ExpressionUUID->"6efb41ab-5e60-4d4d-a53c-0593528902e3"],
Cell[489874, 12260, 1297, 21, 23, "Message",ExpressionUUID->"4dfa8795-65f8-4711-b03a-d2a931f39ba6"],
Cell[491174, 12283, 8052, 211, 110, "Output",ExpressionUUID->"bf502146-512f-450a-bebc-d6d7041521de"]
}, Open  ]],
Cell[CellGroupData[{
Cell[499263, 12499, 327, 9, 28, "Input",ExpressionUUID->"21fa3dd8-9f6c-4c8b-82ed-ef2a848b3c2f"],
Cell[499593, 12510, 318, 6, 32, "Output",ExpressionUUID->"d33a3d6e-f76a-4eeb-b3cd-cfc19729b7d0"]
}, Open  ]],
Cell[CellGroupData[{
Cell[499948, 12521, 348, 7, 28, "Input",ExpressionUUID->"b7d3b6bb-7beb-4a54-996a-3838e46bfbaa"],
Cell[500299, 12530, 379, 7, 32, "Output",ExpressionUUID->"eee770d3-718e-4634-8e8a-17b79659c326"]
}, Open  ]],
Cell[CellGroupData[{
Cell[500715, 12542, 2485, 61, 67, "Input",ExpressionUUID->"2ac456a9-60d2-43bd-9c60-91230c7bc99f",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}],
Cell[503203, 12605, 3543, 97, 162, "Input",ExpressionUUID->"74a66258-2919-4eb3-8f86-29aca48c171a",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}],
Cell[506749, 12704, 658, 16, 48, "Input",ExpressionUUID->"03cfe517-eb87-41ba-9c38-62d910f4f106",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}],
Cell[507410, 12722, 3146, 84, 181, "Input",ExpressionUUID->"7bbbcaa7-2ecc-4223-87ac-2609d71c6ce7",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}],
Cell[510559, 12808, 2445, 61, 67, "Input",ExpressionUUID->"f9da6d22-dea5-45a4-9c42-254d1956025b",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}],
Cell[513007, 12871, 4613, 116, 124, "Input",ExpressionUUID->"e14d0a5f-4b16-406b-9b71-ca79962f51c9",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}],
Cell[517623, 12989, 2446, 61, 67, "Input",ExpressionUUID->"93ca9e54-2178-45fb-aa6a-4eb498cebaf6",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}],
Cell[520072, 13052, 4710, 117, 124, "Input",ExpressionUUID->"051368ee-a32c-4226-b8f4-7e09ddb96748",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}],
Cell[524785, 13171, 2543, 64, 86, "Input",ExpressionUUID->"ddc6c0f5-b78d-4558-b509-e5817a08dabb",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}],
Cell[527331, 13237, 4528, 114, 124, "Input",ExpressionUUID->"553182a7-9cea-4f47-8882-beec436aeb18",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}],
Cell[531862, 13353, 2335, 59, 67, "Input",ExpressionUUID->"1a448c10-284c-4342-b4ff-a2e7501611d5",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}],
Cell[534200, 13414, 664, 15, 48, "Input",ExpressionUUID->"25d510af-fd79-4515-b93f-ead734a7ae99",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}]
}, Open  ]],
Cell[534879, 13432, 343, 8, 28, "Input",ExpressionUUID->"bac0aeff-af07-4a91-8e7a-c00de184b830"],
Cell[CellGroupData[{
Cell[535247, 13444, 1416, 36, 67, "Input",ExpressionUUID->"fdae6534-3e44-4fb4-a997-7ce294a18158",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}],
Cell[536666, 13482, 1626, 38, 48, "Input",ExpressionUUID->"0ff006fb-4a38-44d2-b11b-6d8b1c4a87fd",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}],
Cell[538295, 13522, 3875, 106, 110, "Input",ExpressionUUID->"246cf1f3-0575-4b1e-958f-a43326e98582",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}],
Cell[542173, 13630, 2428, 61, 67, "Input",ExpressionUUID->"fd711649-12f7-4dc4-9eb8-c7ea29a89ce3",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}],
Cell[544604, 13693, 2152, 59, 48, "Input",ExpressionUUID->"f9a4d8dc-991f-44e7-9780-85f39cf8e4bf",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}],
Cell[546759, 13754, 1195, 30, 48, "Input",ExpressionUUID->"e1f97253-5bb7-4f69-88a4-af74887eb380",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}],
Cell[547957, 13786, 2259, 59, 67, "Input",ExpressionUUID->"8ea14bfb-ae82-40b2-b8cd-8ec71abc322e",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}],
Cell[550219, 13847, 2805, 71, 200, "Input",ExpressionUUID->"222e3285-7f22-446a-8c4d-8ab63ca36f8d",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}],
Cell[553027, 13920, 10107, 240, 371, "Input",ExpressionUUID->"e396b526-809a-4252-b5c5-62072c792aa0",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellID->888286073]
}, Open  ]],
Cell[563149, 14163, 570, 14, 28, "Input",ExpressionUUID->"68f0e04c-a9e5-459c-af7b-524ba1f8f15a"],
Cell[CellGroupData[{
Cell[563744, 14181, 420, 9, 28, "Input",ExpressionUUID->"217269b6-4ee4-4cd7-8e70-5aba54166fda",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}],
Cell[564167, 14192, 665, 17, 48, "Input",ExpressionUUID->"93408f01-e2c8-4188-b00f-cc606f61bf2f",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}]
}, Open  ]],
Cell[CellGroupData[{
Cell[564869, 14214, 245, 5, 28, "Input",ExpressionUUID->"c929c3d2-3507-42bc-be2b-a39b0450c6de"],
Cell[565117, 14221, 454, 9, 22, "Print",ExpressionUUID->"31296d4f-fc77-47cc-934b-8f525f420d03"]
}, Open  ]],
Cell[CellGroupData[{
Cell[565608, 14235, 2799, 67, 86, "Input",ExpressionUUID->"0e7898c7-a53e-429e-8052-10a1595d8ea1",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellID->693982536],
Cell[568410, 14304, 4811, 118, 124, "Input",ExpressionUUID->"c02f5e7f-da15-46fe-b600-423d5d1572a8",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellID->197224171]
}, Open  ]],
Cell[573236, 14425, 536, 14, 32, "Input",ExpressionUUID->"e52215f3-4102-4eee-b889-3338b8d03488"],
Cell[CellGroupData[{
Cell[573797, 14443, 184, 4, 28, "Input",ExpressionUUID->"b3ac6f14-bb5b-4881-a446-eba38b2de380"],
Cell[573984, 14449, 483, 9, 22, "Print",ExpressionUUID->"cb8e04c4-7a82-4b81-bd44-1ae4fec3a615"]
}, Open  ]],
Cell[CellGroupData[{
Cell[574504, 14463, 187, 4, 28, "Input",ExpressionUUID->"b0027fe9-5571-43ca-9fc8-710a9ad485ef"],
Cell[574694, 14469, 276, 5, 32, "Output",ExpressionUUID->"1afdcf3f-f54d-4918-bc86-6b216c511ac3"]
}, Open  ]],
Cell[CellGroupData[{
Cell[575007, 14479, 2820, 67, 86, "Input",ExpressionUUID->"2810c52d-62ef-4315-b520-229bd97503f1",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellID->105466891],
Cell[577830, 14548, 5072, 123, 124, "Input",ExpressionUUID->"676e6b6f-236e-4544-befe-822f5fa6c76d",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 CellID->22203563],
Cell[582905, 14673, 3083, 73, 86, "Input",ExpressionUUID->"74ac1b8e-5243-473a-bd1f-2a87273011d0",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}],
Cell[585991, 14748, 2919, 73, 86, "Input",ExpressionUUID->"738ea7ad-4276-4901-a2bd-23c161b609fa",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}],
Cell[588913, 14823, 2605, 57, 276, "Input",ExpressionUUID->"c3560887-e7f9-4f75-919c-493780290e1c",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}],
Cell[591521, 14882, 397, 8, 28, "Input",ExpressionUUID->"79d8ce91-acfc-4ec2-927b-987b2157947f",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}]
}, Open  ]],
Cell[591933, 14893, 509, 14, 28, "Input",ExpressionUUID->"a57ebd25-20d0-46dc-9be0-536da5c12ab2"],
Cell[CellGroupData[{
Cell[592467, 14911, 10301, 226, 618, "Input",ExpressionUUID->"6f42105c-e9fc-430e-902b-43620046db6a",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}],
Cell[602771, 15139, 874, 18, 48, "Input",ExpressionUUID->"240222c3-201a-45dc-9f67-fa29ff3e22db",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}],
Cell[603648, 15159, 425, 8, 28, "Input",ExpressionUUID->"a34727f9-71f0-49e6-87ed-b01500c37033",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}]
}, Open  ]],
Cell[604088, 15170, 718, 15, 32, "Output",ExpressionUUID->"8f41c5f6-11ad-42ab-a02b-3c6e399df50a"],
Cell[604809, 15187, 2638, 58, 86, "Input",ExpressionUUID->"4defafd0-c05d-4e79-97f1-8dc4bd4a2b64",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}],
Cell[607450, 15247, 22399, 407, 71, "Output",ExpressionUUID->"86bce6ca-aa6b-407f-b206-b6a5351c3956"],
Cell[CellGroupData[{
Cell[629874, 15658, 683, 13, 22, "Print",ExpressionUUID->"90e8e7b6-880b-4174-b85c-0152f06b1f13"],
Cell[630560, 15673, 657, 12, 22, "Print",ExpressionUUID->"5fca3dcf-8603-4819-9898-01fd91094f9c"]
}, Open  ]],
Cell[CellGroupData[{
Cell[631254, 15690, 323, 7, 28, "Input",ExpressionUUID->"82324c37-1ea4-424d-b5eb-b1c29a4f068a",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}],
Cell[631580, 15699, 781, 17, 28, "Input",ExpressionUUID->"bf1220a1-6a05-47b2-bc4f-ff761430dc46",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.}]
}, Open  ]],
Cell[632376, 15719, 231, 5, 28, "Input",ExpressionUUID->"de204513-ad7f-4d28-9295-45afacd250a0"],
Cell[632610, 15726, 3841, 91, 295, "Input",ExpressionUUID->"f76345d3-3112-45c1-814d-9f48927c635d"],
Cell[636454, 15819, 3178, 74, 257, "Input",ExpressionUUID->"eed8f222-605d-483f-83a4-a9d86eaa8b6e"],
Cell[639635, 15895, 1921, 40, 162, "Input",ExpressionUUID->"6f68d697-90ec-4edc-9ccd-e5aa6e836709"],
Cell[641559, 15937, 6048, 137, 485, "Input",ExpressionUUID->"ec0f4811-c668-4326-870f-8ca96fa7160c"],
Cell[647610, 16076, 827, 14, 48, "Input",ExpressionUUID->"17fd3b01-cc7a-4742-94c1-29bdc871081c"],
Cell[CellGroupData[{
Cell[648462, 16094, 5049, 105, 162, "Input",ExpressionUUID->"3c4102e4-dca7-4b2c-9cf6-6e6ac92535aa"],
Cell[653514, 16201, 9509, 165, 449, 2195, 45, "CachedBoxData", "BoxData", "Output",ExpressionUUID->"0234f084-cfe4-47fd-b449-7194ac05d4cc"]
}, Open  ]],
Cell[663038, 16369, 5331, 123, 181, "Input",ExpressionUUID->"b1948d09-9550-4bb1-a30f-adaeef8e13e9"],
Cell[668372, 16494, 1911, 48, 86, "Input",ExpressionUUID->"6dd6ac95-7821-43f1-a0af-3c077c929a28"],
Cell[670286, 16544, 1910, 41, 48, "Input",ExpressionUUID->"5ee0f74f-65b1-4566-abb3-a063a9ad6111"],
Cell[672199, 16587, 274, 7, 28, "Input",ExpressionUUID->"7c992002-940b-4278-a1fc-6fb15090923f"],
Cell[672476, 16596, 867, 22, 48, "Input",ExpressionUUID->"00f75995-b536-4eb4-8aeb-1519e15d01b7"],
Cell[673346, 16620, 268, 7, 28, "Input",ExpressionUUID->"f75ece8d-134d-46e3-add7-c1fd6a9e251c"],
Cell[CellGroupData[{
Cell[673639, 16631, 1364, 29, 67, "Input",ExpressionUUID->"9d1aa19a-a72f-43f5-a9c2-b47991e7ef30"],
Cell[675006, 16662, 1195, 20, 32, "Output",ExpressionUUID->"5267b4f7-4f30-430b-b453-50707773bd11"],
Cell[676204, 16684, 1081, 18, 32, "Output",ExpressionUUID->"403fe135-2f94-49f3-a2eb-123b9642bc57"]
}, Open  ]],
Cell[677300, 16705, 287, 7, 28, "Input",ExpressionUUID->"dd3d7b45-cb4a-40f5-a6f7-67f4b6e5c353"],
Cell[677590, 16714, 689, 19, 28, "Input",ExpressionUUID->"dc8f197a-dae9-4ebf-9d80-193eba5fe73c"],
Cell[678282, 16735, 729, 16, 48, "Input",ExpressionUUID->"8171d244-b115-44df-9631-6d0a7a6b0692"],
Cell[679014, 16753, 652, 16, 31, "Input",ExpressionUUID->"1935f903-1fce-4cd4-899d-aef047283060"],
Cell[CellGroupData[{
Cell[679691, 16773, 4476, 108, 162, "Input",ExpressionUUID->"6f4de4f6-36ad-4b43-bf3c-532a57f2864e"],
Cell[684170, 16883, 80212, 1330, 235, "Output",ExpressionUUID->"7f37e844-fd52-4ef6-8725-c7073176c92a"]
}, Open  ]],
Cell[764397, 18216, 243, 6, 28, "Input",ExpressionUUID->"584b3d93-696d-46d5-ad96-38ca4aaa914e"],
Cell[764643, 18224, 857, 23, 48, "Input",ExpressionUUID->"935dc525-e36d-4b3a-988f-248ad9cba1a5"],
Cell[765503, 18249, 387, 9, 28, "Input",ExpressionUUID->"057a78be-086e-47f0-9810-cd732941c833"],
Cell[CellGroupData[{
Cell[765915, 18262, 1964, 51, 86, "Input",ExpressionUUID->"7cbf0650-a3f4-4360-a1c1-585d1e04f741"],
Cell[CellGroupData[{
Cell[767904, 18317, 1011, 19, 22, "Print",ExpressionUUID->"c9abb919-4e61-40b4-9316-e052d2960a1a"],
Cell[768918, 18338, 979, 18, 22, "Print",ExpressionUUID->"ae063c45-9230-437f-b75a-70c076ace1c0"]
}, Open  ]]
}, Open  ]],
Cell[769924, 18360, 718, 21, 28, "Input",ExpressionUUID->"e584b57f-8d92-4a8a-9522-2209a658c14a"],
Cell[770645, 18383, 391, 8, 28, "Input",ExpressionUUID->"dd9dc9a2-16dd-4df9-84cd-2bfa80606aba"],
Cell[771039, 18393, 617, 12, 48, "Input",ExpressionUUID->"17579a91-9caf-450c-807e-dda5d9e86549"],
Cell[771659, 18407, 280, 7, 28, "Input",ExpressionUUID->"0a975fb9-5e21-468c-85eb-94d2ac8a8137"],
Cell[771942, 18416, 460, 9, 28, "Input",ExpressionUUID->"b25ee0cb-0c61-43fe-bc9b-2a889955e320"],
Cell[772405, 18427, 1758, 44, 67, "Input",ExpressionUUID->"48723449-800d-412c-a079-5db36246558b"],
Cell[774166, 18473, 319, 7, 28, "Input",ExpressionUUID->"ec7147fc-57bb-491e-a7d4-12843ce9abd6"],
Cell[774488, 18482, 589, 17, 28, "Input",ExpressionUUID->"45953ea4-991c-4873-a975-fb547a5c60b0"],
Cell[CellGroupData[{
Cell[775102, 18503, 1063, 25, 67, "Input",ExpressionUUID->"2e089e2d-42a8-45aa-b7c1-7fb31712c9e5"],
Cell[CellGroupData[{
Cell[776190, 18532, 964, 18, 22, "Print",ExpressionUUID->"4de293aa-5d43-4827-a0e5-7758ad2b75b2"],
Cell[777157, 18552, 941, 17, 22, "Print",ExpressionUUID->"9a02be3b-64e6-48c5-8e5e-1ee351fd2daa"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[778147, 18575, 912, 19, 28, "Input",ExpressionUUID->"996466ae-cbbd-415b-8afb-aa0636f562b3"],
Cell[779062, 18596, 261434, 4298, 228, 253318, 4169, "CachedBoxData", "BoxData", "Output",ExpressionUUID->"e2d9ec88-2255-40ed-8a30-0b07a5cf5828"]
}, Open  ]],
Cell[1040511, 22897, 692, 18, 28, "Input",ExpressionUUID->"22bc796a-79d6-4428-99cf-7621047a55dc"],
Cell[1041206, 22917, 234, 5, 28, "Input",ExpressionUUID->"e1c33c18-8af3-4553-9e9f-139f7a0ce3ca"],
Cell[CellGroupData[{
Cell[1041465, 22926, 690, 20, 28, "Input",ExpressionUUID->"62eb6c0f-aeac-4aa9-9073-e697dc8a2239"],
Cell[1042158, 22948, 1812, 27, 32, "Output",ExpressionUUID->"0d65a54d-575e-4b7a-81f3-a623c9f82c37"]
}, Open  ]],
Cell[1043985, 22978, 557, 11, 28, "Input",ExpressionUUID->"0520f858-81ee-439f-9014-e208bf0922f9"],
Cell[1044545, 22991, 560, 11, 28, "Input",ExpressionUUID->"8ecac90b-a425-459b-9b29-d33fdfec131d"],
Cell[1045108, 23004, 1214, 35, 67, "Input",ExpressionUUID->"f2cdaffe-6d7c-4bf1-bb41-27c0910152a6"],
Cell[1046325, 23041, 443, 11, 28, "Input",ExpressionUUID->"7e3f1777-c19b-4cb8-ad1d-d7119d083ec9"],
Cell[1046771, 23054, 11447, 247, 637, "Input",ExpressionUUID->"adf90053-4daf-4c46-853f-f664d5ae45cf"],
Cell[1058221, 23303, 744, 15, 48, "Input",ExpressionUUID->"c1976918-d84b-4e1a-9125-801bca2d6a22"],
Cell[CellGroupData[{
Cell[1058990, 23322, 397, 7, 28, "Input",ExpressionUUID->"5cc421d7-52bc-4fda-b2cb-b5f8a4046d48"],
Cell[1059390, 23331, 2507, 40, 32, "Output",ExpressionUUID->"a47c87cc-bfd8-44d6-83b2-a3a32927e39c"]
}, Open  ]],
Cell[1061912, 23374, 345, 8, 28, "Input",ExpressionUUID->"3a01e35b-54ca-416f-9bab-0ee75eaadaf3"],
Cell[CellGroupData[{
Cell[1062282, 23386, 4989, 87, 86, "Input",ExpressionUUID->"f72aeeb2-9544-4ce1-9566-1f9583b86378"],
Cell[1067274, 23475, 695, 12, 23, "Message",ExpressionUUID->"a46e2f37-a5b6-43a9-ab63-3d31c1d46505"],
Cell[1067972, 23489, 695, 12, 23, "Message",ExpressionUUID->"8f1dd5d0-5650-4aad-99f1-ec65015be967"],
Cell[1068670, 23503, 693, 12, 23, "Message",ExpressionUUID->"14c43b62-1e1b-44bb-9b6a-26ab084bad1b"],
Cell[1069366, 23517, 679, 12, 21, "Message",ExpressionUUID->"92e2e15e-5375-45f6-990e-b31c49c5eeb8"],
Cell[CellGroupData[{
Cell[1070070, 23533, 3230, 47, 22, "Print",ExpressionUUID->"e803df1f-5b4f-4dba-96db-5f66a87d3072"],
Cell[1073303, 23582, 3206, 46, 22, "Print",ExpressionUUID->"e16972d8-019d-48dd-8e21-5f4195b8847c"]
}, Open  ]]
}, Open  ]],
Cell[1076536, 23632, 247, 6, 28, "Input",ExpressionUUID->"81b71122-e6a5-493a-98ad-c691daf9af91"],
Cell[1076786, 23640, 1475, 26, 28, "Input",ExpressionUUID->"0cc9e8c2-2fe9-4de1-9b81-e376c87fbbef"],
Cell[1078264, 23668, 1654, 41, 86, "Input",ExpressionUUID->"b6736086-97aa-4bb9-ae34-7761d82e3b7f"],
Cell[1079921, 23711, 304, 7, 28, "Input",ExpressionUUID->"f5847276-8c97-4133-9599-a446cbe2e21a"],
Cell[1080228, 23720, 991, 30, 48, "Input",ExpressionUUID->"494f7f61-bc03-4eab-b972-2cccedff909a"],
Cell[1081222, 23752, 283, 7, 28, "Input",ExpressionUUID->"95bde097-f325-45e1-b0c8-19bd07f98e0b"],
Cell[CellGroupData[{
Cell[1081530, 23763, 958, 17, 28, "Input",ExpressionUUID->"0e58382e-9548-47d1-8f33-6a14fcecdbf0"],
Cell[1082491, 23782, 99585, 1643, 188, 91551, 1511, "CachedBoxData", "BoxData", "Output",ExpressionUUID->"d87084f5-e083-451d-8ef3-9f7989c74f7d"]
}, Open  ]],
Cell[1182091, 25428, 1700, 35, 28, "Input",ExpressionUUID->"0a5f3280-03b7-4db5-9446-c20e5d4e4b14"],
Cell[1183794, 25465, 364, 10, 28, "Input",ExpressionUUID->"d1a39c15-6f56-4a3c-ab2b-74fd4c4ba1c7"],
Cell[1184161, 25477, 616, 18, 28, "Input",ExpressionUUID->"067643c0-da3e-4158-994e-fa47945ed7d1"],
Cell[1184780, 25497, 563, 17, 28, "Input",ExpressionUUID->"d9e089f8-1a84-4bee-9b51-15fb1aa53e93"],
Cell[CellGroupData[{
Cell[1185368, 25518, 195, 4, 28, "Input",ExpressionUUID->"0e33313c-5d0e-4a69-b9ea-40a238529932"],
Cell[1185566, 25524, 42905, 718, 240, "Output",ExpressionUUID->"ecccf826-dcca-4f7b-a108-f04176492705"]
}, Open  ]],
Cell[1228486, 26245, 258, 6, 28, "Input",ExpressionUUID->"8feb9c32-a73a-4b57-a5e2-4bbb28736764"],
Cell[CellGroupData[{
Cell[1228769, 26255, 267, 7, 28, "Input",ExpressionUUID->"7b9ef626-d0cf-40ef-b900-3d4548faa3df"],
Cell[1229039, 26264, 32788, 552, 217, "Output",ExpressionUUID->"6c3dbdfb-aabb-48b6-9d85-79e251b1dfb6"]
}, Open  ]],
Cell[1261842, 26819, 3168, 74, 257, "Input",ExpressionUUID->"a70240e0-943c-42d1-90d4-660717f70915"],
Cell[1265013, 26895, 365, 8, 28, "Input",ExpressionUUID->"285b2e16-9c1d-400c-b778-794904449dd2"],
Cell[1265381, 26905, 1191, 20, 48, "Input",ExpressionUUID->"8f749eff-84c0-481d-a431-c766dc7cf6e3"],
Cell[1266575, 26927, 266, 7, 28, "Input",ExpressionUUID->"c2c05d2d-b57e-477b-a2a7-e2b3aa92b258"],
Cell[1266844, 26936, 5264, 109, 162, "Input",ExpressionUUID->"fc8581f7-5869-4f23-9d1c-915349a1891b"],
Cell[1272111, 27047, 1923, 48, 86, "Input",ExpressionUUID->"d8acec21-149c-472f-bf29-7dc6dd8553a4"],
Cell[CellGroupData[{
Cell[1274059, 27099, 5316, 122, 181, "Input",ExpressionUUID->"3cf179d8-dfd5-452c-bb9b-2a39d2b9260d"],
Cell[1279378, 27223, 23711, 398, 267, "Output",ExpressionUUID->"5a6621c7-daa6-44e6-9996-630b6d393848"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1303126, 27626, 192, 4, 28, "Input",ExpressionUUID->"af540bde-0553-4a39-94e5-c78da7af5c1e"],
Cell[1303321, 27632, 182, 3, 32, "Output",ExpressionUUID->"98e89004-dcdf-4512-a892-33cd327991b6"]
}, Open  ]],
Cell[1303518, 27638, 1911, 48, 86, "Input",ExpressionUUID->"69023892-35e3-4952-8296-f6e4a411cc70"],
Cell[1305432, 27688, 5683, 157, 257, "Input",ExpressionUUID->"ce77eda9-f1dc-407a-bc15-45adfe6e76b9"],
Cell[1311118, 27847, 1340, 36, 86, "Input",ExpressionUUID->"cfbc787f-5769-4af8-8221-4f4879a07dbe"],
Cell[CellGroupData[{
Cell[1312483, 27887, 386, 10, 28, "Input",ExpressionUUID->"65793013-2910-4075-8563-fd7907e2653a"],
Cell[1312872, 27899, 21193, 356, 303, "Output",ExpressionUUID->"16d8f722-26af-4226-a5b5-7f44c25ca0ce"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1334102, 28260, 2463, 68, 124, "Input",ExpressionUUID->"a019e596-2f25-4045-8e37-17c3fc1795be"],
Cell[CellGroupData[{
Cell[1336590, 28332, 1623, 28, 22, "Print",ExpressionUUID->"cd14d421-42e3-407b-8f5d-fa66dfeafed2"],
Cell[1338216, 28362, 1537, 25, 22, "Print",ExpressionUUID->"d9651254-5bb8-464d-9a12-3d525d45fdfa"]
}, Open  ]]
}, Open  ]],
Cell[1339780, 28391, 2297, 56, 162, "Input",ExpressionUUID->"94f774f4-a219-42f4-99d8-d4ab59d3280d"],
Cell[1342080, 28449, 1780, 37, 67, "Input",ExpressionUUID->"ec39c5e0-bbab-4446-aecd-1143cd3c9d4f"],
Cell[1343863, 28488, 258, 6, 28, "Input",ExpressionUUID->"7d832826-68cf-4e7a-8276-8815d92bc086"],
Cell[1344124, 28496, 12439, 253, 694, "Input",ExpressionUUID->"0661b703-9131-4c3e-9652-f3b422326db1"],
Cell[CellGroupData[{
Cell[1356588, 28753, 5657, 96, 86, "Input",ExpressionUUID->"1876b60c-1a69-4a82-8e43-5b8e0848e1c6"],
Cell[1362248, 28851, 458, 9, 23, "Message",ExpressionUUID->"084adf6f-7490-4799-9887-b2ddb99d5b74"],
Cell[1362709, 28862, 458, 9, 23, "Message",ExpressionUUID->"518ef9d3-66d9-4967-91e1-8fe07c070025"],
Cell[1363170, 28873, 458, 9, 23, "Message",ExpressionUUID->"54a0e8af-679b-4f83-a105-bf9f0bc8990a"],
Cell[1363631, 28884, 442, 9, 21, "Message",ExpressionUUID->"34fcec2a-e8a8-40c6-ab1b-2263fc2c9888"],
Cell[CellGroupData[{
Cell[1364098, 28897, 1445, 25, 22, "Print",ExpressionUUID->"db18f6ec-67bc-43aa-8f1f-7eea89873998"],
Cell[1365546, 28924, 1385, 22, 22, "Print",ExpressionUUID->"fd4b7b51-1b9c-4e6b-817f-cbfe3fbc5ae1"]
}, Open  ]]
}, Open  ]],
Cell[1366958, 28950, 372, 9, 28, "Input",ExpressionUUID->"8a638a08-fae0-4202-86d4-a74b5f8b39ef"],
Cell[CellGroupData[{
Cell[1367355, 28963, 572, 16, 48, "Input",ExpressionUUID->"42f98de6-53ae-4a8d-9c4d-bc9f0f5b97fc"],
Cell[1367930, 28981, 1018, 17, 32, "Output",ExpressionUUID->"92705d92-4eb2-4542-9be9-c8caaebd8f7c"]
}, Open  ]],
Cell[1368963, 29001, 5171, 121, 333, "Input",ExpressionUUID->"052fbad4-1f35-45d7-9b54-a7953021f533"],
Cell[1374137, 29124, 385, 10, 28, "Input",ExpressionUUID->"f541b12a-361b-4d12-816c-d65cbd4c8bcc"],
Cell[CellGroupData[{
Cell[1374547, 29138, 615, 15, 28, "Input",ExpressionUUID->"82dc9ab5-622c-47f6-83bb-ec13cabdc7a0"],
Cell[1375165, 29155, 113621, 1880, 225, "Output",ExpressionUUID->"4fb6ddd0-2d7e-4b5b-8f36-cec9307b4b1e"]
}, Open  ]],
Cell[1488801, 31038, 1773, 31, 48, "Input",ExpressionUUID->"816f3afc-af3d-4274-8154-2d5278b08a78"],
Cell[1490577, 31071, 2569, 69, 124, "Input",ExpressionUUID->"d2137a43-0500-444e-acff-15d2bf21f5ca"],
Cell[CellGroupData[{
Cell[1493171, 31144, 2635, 50, 86, "Input",ExpressionUUID->"8a697d3b-63e4-4c1f-af11-0aa324ce9827"],
Cell[1495809, 31196, 121677, 2009, 803, "Output",ExpressionUUID->"5bd33cf0-1398-4024-b201-658bc6647687"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1617523, 33210, 2718, 67, 105, "Input",ExpressionUUID->"64e07958-0452-4e7f-8228-4be36c41af4e"],
Cell[1620244, 33279, 49682, 827, 565, "Output",ExpressionUUID->"dfc4529b-333a-4c58-9ef4-00bfd6fd1769"]
}, Open  ]],
Cell[1669941, 34109, 800, 21, 48, "Input",ExpressionUUID->"5690affb-7264-4a51-993f-54474b24d121"],
Cell[CellGroupData[{
Cell[1670766, 34134, 615, 18, 28, "Input",ExpressionUUID->"195287a6-b30b-4071-a626-a5dc88859192"],
Cell[1671384, 34154, 1690, 50, 43, "Output",ExpressionUUID->"cd7ecd26-243e-4fa0-b8fb-c568b8dc42e5"]
}, Open  ]],
Cell[1673089, 34207, 560, 16, 28, "Input",ExpressionUUID->"871ad308-9e56-4efc-a539-108868314e65"],
Cell[CellGroupData[{
Cell[1673674, 34227, 523, 14, 28, "Input",ExpressionUUID->"e7833b0b-22ec-4335-ac37-e17684ee82f8"],
Cell[1674200, 34243, 176245, 2905, 235, "Output",ExpressionUUID->"8891ff8b-58b0-445e-9d28-a3df03ac250e"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1850482, 37153, 857, 23, 28, "Input",ExpressionUUID->"93f61067-4321-4b3f-b7c5-0a5f25b42d90"],
Cell[1851342, 37178, 2292, 46, 473, "Output",ExpressionUUID->"a7ebcb19-fd92-423f-adb3-8b8f51c126cb"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1853671, 37229, 194, 4, 28, "Input",ExpressionUUID->"bcf030b0-0c8e-40d0-a5e9-b9d3cb9fe280"],
Cell[1853868, 37235, 222, 4, 32, "Output",ExpressionUUID->"734de298-069e-4e89-8965-78e47cb1d48d"]
}, Open  ]],
Cell[1854105, 37242, 1837, 40, 48, "Input",ExpressionUUID->"fa4a2d98-2024-489e-87aa-9041e072cc71"],
Cell[CellGroupData[{
Cell[1855967, 37286, 434, 10, 28, "Input",ExpressionUUID->"8f339b48-fd2e-4e01-9295-78ddeae9cc8d"],
Cell[1856404, 37298, 4427, 62, 204, "Output",ExpressionUUID->"ac534199-b1e9-47b0-8f12-93249bfcf207"]
}, Open  ]],
Cell[1860846, 37363, 8143, 177, 599, "Input",ExpressionUUID->"38bbecf1-e9ca-45da-851d-98314f53ae02"],
Cell[1868992, 37542, 535, 15, 48, "Input",ExpressionUUID->"57ca8fcc-358b-4ade-84be-ba70e633280d"],
Cell[1869530, 37559, 12229, 242, 637, "Input",ExpressionUUID->"8883ef85-451e-42c7-8777-8a7f3e18bd72"],
Cell[1881762, 37803, 3231, 72, 219, "Input",ExpressionUUID->"6f185552-a798-4e2d-a2ea-2d5fb1a52e1c"],
Cell[1884996, 37877, 2940, 66, 143, "Input",ExpressionUUID->"b0cdabf6-11fc-4acc-94d7-52e66d989f7b"],
Cell[1887939, 37945, 360, 10, 28, "Input",ExpressionUUID->"04fb598e-8390-437c-9b31-34217f0d2913"],
Cell[1888302, 37957, 555, 17, 28, "Input",ExpressionUUID->"b645f83f-64ab-4c2c-95d4-65d6b5b3dcdf"],
Cell[1888860, 37976, 276, 6, 28, "Input",ExpressionUUID->"d2ec8745-1d65-4c02-9597-dd77b38bdd36"]
}
]
*)

